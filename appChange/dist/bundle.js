(() => {
    var __webpack_modules__ = {
            314: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                "use strict";
                __webpack_require__.d(__webpack_exports__, {
                    Z: () => __WEBPACK_DEFAULT_EXPORT__
                });
                var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7147),
                    fs__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__),
                    path__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(1017),
                    path__WEBPACK_IMPORTED_MODULE_1___default = __webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_1__),
                    _api_frida_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(9751),
                    _api_git_repo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(7042),
                    _api_term__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(7903),
                    electron__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(2298),
                    electron__WEBPACK_IMPORTED_MODULE_5___default = __webpack_require__.n(electron__WEBPACK_IMPORTED_MODULE_5__);
                const IS_MACOS = "darwin" === process.platform,
                    [shortcutExternal, shortcutToggleLock, shortcutSaveText] = !0 === IS_MACOS ? ["Ctrl+Cmd+E", "Ctrl+Cmd+D", "Ctrl+Cmd+Q"] : ["Ctrl+Alt+E", "Ctrl+Alt+D", "Ctrl+Alt+Q"],
                    urlMain = "https://github.com/0xDC00/scripts.git",
                    dirMain = path__WEBPACK_IMPORTED_MODULE_1__.resolve("data/scripts"),
                    __WEBPACK_DEFAULT_EXPORT__ = {
                        name: "App",
                        components: {},
                        data: () => ({
                            term: console,
                            message: "",
                            script: "",
                            scriptHolder: "Script, enter your title to filter...",
                            target: "",
                            _target: "",
                            isAttach: 1,
                            isFridaActionDisabled_: !1,
                            isCMD: !1,
                            pname: "",
                            args: "",
                            delay: 0,
                            options: [],
                            opt_ShortcutExternal: !1,
                            opt_ShortcutExternalShow: shortcutExternal,
                            opt_ShortcutExternalLock: shortcutToggleLock,
                            opt_ShortcutSaveText: shortcutSaveText,
                            showExternal: !1,
                            optionNMT: [],
                            opt_nmt: "",
                            opt_deepl: !0,
                            opt_nmtSrc: "ja",
                            opt_nmtDst: "en",
                            opt_showSrc: !0,
                            opt_scripts: 0,
                            opt_runtime: 0,
                            otp_realm: !1,
                            opt_websocket: !1,
                            tabs: [],
                            remoteIP: "",
                            otp_clipboard: !0,
                            otp_wsHost: "127.0.0.1",
                            otp_wsPort: 9001,
                            processes: [],
                            processesLoading: !1
                        }),
                        computed: {
                            isFridaActionDisabled() {
                                return !this.target || !this.script || this.isFridaActionDisabled_
                            },
                            actionString() {
                                return 1 === this.isAttach ? "Attach" : 2 === this.isAttach ? "Run" : "Detach"
                            }
                        },
                        watch: {
                            remoteIP(e, t) {
                                e !== t && this.$refs.picker.setAttribute("fill", "" === e ? "currentColor" : "#00FF00")
                            },
                            opt_ShortcutExternal(e, t) {
                                e !== t && (localStorage.setItem("opt_ShortcutExternal", e), window.ipc.invoke("shortcutExternal", e, this.opt_ShortcutExternalShow, this.opt_ShortcutExternalLock).then((e => {
                                    !0 !== e && this.$nextTick((() => {
                                        this.opt_ShortcutExternal = t
                                    }))
                                })))
                            },
                            opt_ShortcutExternalShow(e, t) {
                                e !== t && localStorage.setItem("opt_ShortcutExternalShow", e)
                            },
                            opt_ShortcutExternalLock(e, t) {
                                e !== t && localStorage.setItem("opt_ShortcutExternalLock", e)
                            },
                            opt_nmt(e, t) {
                                e !== t && localStorage.setItem("opt_nmt", e)
                            },
                            opt_deepl(e, t) {
                                e !== t && localStorage.setItem("opt_deepl", e)
                            },
                            opt_nmtSrc(e, t) {
                                e !== t && localStorage.setItem("opt_nmtSrc", e)
                            },
                            opt_nmtDst(e, t) {
                                e !== t && localStorage.setItem("opt_nmtDst", e)
                            },
                            opt_showSrc(e, t) {
                                e !== t && localStorage.setItem("opt_showSrc", e)
                            },
                            opt_scripts(e, t) {
                                e !== t && localStorage.setItem("opt_scripts", e)
                            },
                            opt_runtime(e, t) {
                                e !== t && localStorage.setItem("opt_runtime", e)
                            },
                            otp_realm(e, t) {
                                e !== t && localStorage.setItem("otp_realm", e)
                            },
                            otp_clipboard(e, t) {
                                e !== t && localStorage.setItem("otp_clipboard", e)
                            },
                            otp_wsHost(e, t) {
                                e !== t && localStorage.setItem("otp_wsHost", e)
                            },
                            otp_wsPort(e, t) {
                                e !== t && localStorage.setItem("otp_wsPort", e)
                            }
                        },
                        created() {
                            const opt_ShortcutExternalShow = localStorage.getItem("opt_ShortcutExternalShow");
                            null !== opt_ShortcutExternalShow && (this.opt_ShortcutExternalShow = opt_ShortcutExternalShow);
                            const opt_ShortcutExternalLock = localStorage.getItem("opt_ShortcutExternalLock");
                            null !== opt_ShortcutExternalLock && (this.opt_ShortcutExternalLock = opt_ShortcutExternalLock);
                            const opt_ShortcutExternal = localStorage.getItem("opt_ShortcutExternal");
                            this.opt_ShortcutExternal = null === opt_ShortcutExternal || JSON.parse(opt_ShortcutExternal);
                            const opt_nmt = localStorage.getItem("opt_nmt");
                            null !== opt_nmt && (this.opt_nmt = opt_nmt);
                            const opt_deepl = localStorage.getItem("opt_deepl");
                            null !== opt_deepl && (this.opt_deepl = JSON.parse(opt_deepl));
                            const opt_nmtSrc = localStorage.getItem("opt_nmtSrc");
                            null !== opt_nmtSrc && (this.opt_nmtSrc = opt_nmtSrc);
                            const opt_nmtDst = localStorage.getItem("opt_nmtDst");
                            null !== opt_nmtDst && (this.opt_nmtDst = opt_nmtDst);
                            const opt_showSrc = localStorage.getItem("opt_showSrc");
                            null !== opt_showSrc && (this.opt_showSrc = JSON.parse(opt_showSrc));
                            const opt_scripts = localStorage.getItem("opt_scripts");
                            null !== opt_scripts && (this.opt_scripts = parseInt(opt_scripts));
                            const opt_runtime = localStorage.getItem("opt_runtime");
                            null !== opt_runtime && (this.opt_runtime = parseInt(opt_runtime));
                            const otp_realm = localStorage.getItem("otp_realm");
                            null !== otp_realm && (this.otp_realm = JSON.parse(otp_realm));
                            const otp_clipboard = localStorage.getItem("otp_clipboard");
                            null !== otp_clipboard && (this.otp_clipboard = JSON.parse(otp_clipboard));
                            const otp_wsHost = localStorage.getItem("otp_wsHost");
                            null !== otp_wsHost && (this.otp_wsHost = otp_wsHost);
                            const otp_wsPort = localStorage.getItem("otp_wsPort");
                            null !== otp_wsPort && (this.otp_wsPort = JSON.parse(otp_wsPort));
                            const _writeText = electron__WEBPACK_IMPORTED_MODULE_5__.clipboard.writeText;
                            this._writeText = _writeText;
                            const _ipc = electron__WEBPACK_IMPORTED_MODULE_5__.ipcRenderer;
                            window.ipc = {
                                send: _ipc.send,
                                invoke: _ipc.invoke,
                                copy: _writeText,
                                showItemInFolder: electron__WEBPACK_IMPORTED_MODULE_5__.shell.showItemInFolder,
                                screenshot: () => _ipc.invoke("screenshot"),
                                screenSnip: (e, t, i, r) => _ipc.invoke("screenSnip", e, t, i, r)
                            }, setImmediate((() => {
                                if (_api_frida_core__WEBPACK_IMPORTED_MODULE_2__.init(this), this.agent = _api_frida_core__WEBPACK_IMPORTED_MODULE_2__, cookieStore.delete = e => window.ipc.invoke("rmCookie", e), cookieStore.set = e => window.ipc.invoke("setCookie", e), "android" !== process.platform) {
                                    const e = dirMain + "/libTranslate.js";
                                    if (!0 === fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(e)) {
                                        const t = require(e),
                                            i = Object.keys(t);
                                        this.optionNMT = i, "" === this.opt_nmt && (this.opt_nmt = i[0]);
                                        let r = t[this.opt_nmt];
                                        globalThis.__translate = r, globalThis.__nmtEngine = t;
                                        for (const l of i) {
                                            const [h, u] = this.opt_nmtDst.split("\0");
                                            t[l].init(this.opt_nmtSrc, h, u)
                                        }
                                        let s = this.otp_clipboard;
                                        const n = localStorage.setItem;
                                        localStorage.setItem = (e, o) => {
                                            if (n.call(localStorage, e, o), "opt_nmtSrc" === e)
                                                for (const e of i) t[e].setSrc(o);
                                            else if ("opt_nmtDst" === e) {
                                                const [e, r] = o.split("\0");
                                                for (const s of i) t[s].setDst(e, r)
                                            } else if ("opt_deepl" === e) window.ipc.copy = !0 === o ? a : !0 === this.otp_clipboard ? _writeText : () => {};
                                            else if ("otp_clipboard" === e) s = o, !0 === o && !1 === this.opt_deepl && (window.ipc.copy = _writeText);
                                            else if ("opt_nmt" === e) {
                                                const [e, i] = this.opt_nmtDst.split("\0");
                                                r = t[o], r.init(this.opt_nmtSrc, e, i), globalThis.__translate = r
                                            }
                                        }, !0 === this.opt_deepl ? window.ipc.copy = a : !1 === s && (window.ipc.copy = () => {});
                                        const o = this;

                                        function a(e, t) {
                                            !0 === s && _writeText.call(electron__WEBPACK_IMPORTED_MODULE_5__.clipboard, e);
                                            let i = "UnknownError";
                                            r.translate(e).then((e => {
                                                o.term.writeln(e), o.term.writeln("-------"), i = e
                                            })).catch((e => {
                                                let t = e.message;
                                                t && (i = t), console.error(t)
                                            })).finally((() => {
                                                !0 === o.opt_websocket && setImmediate((() => {
                                                    globalThis.dispatchEvent(new CustomEvent("translate", {
                                                        bubbles: !1,
                                                        detail: {
                                                            target: o._target,
                                                            id: t,
                                                            text: i
                                                        }
                                                    }))
                                                }))
                                            }))
                                        }
                                        const c = dirMain + "/libWebSocket.js";
                                        if (!0 === fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(c)) {
                                            const d = require("module"),
                                                f = d._load;
                                            d._load = function(e) {
                                                return "ws" === e ? __webpack_require__(8777) : f.apply(this, arguments)
                                            };
                                            try {
                                                require(c)
                                            } catch (p) {
                                                console.error(p)
                                            }
                                            d._load = f
                                        }
                                    } else this.firstRun = !0
                                } else {
                                    window.ipc.showItemInFolder = () => {
                                        this.term.warn("[Unimplemented] showItemInFolder: `" + dirMain + "`")
                                    }, this.optionNMT = ["Google", "DeepL"];
                                    const transPath = dirMain + "/libTranslate.js";
                                    this.optionNMT = eval(fs__WEBPACK_IMPORTED_MODULE_0__.readFileSync(transPath, "utf8")), "" === this.opt_nmt && (this.opt_nmt = this.optionNMT[0] ?? "")
                                }
                            }))
                        },
                        mounted() {
                            setImmediate((() => {
                                this.term = (0, _api_term__WEBPACK_IMPORTED_MODULE_4__.v)("term", !0), this.printInfo(), globalThis._term = this.term, globalThis.__vue = this, _api_git_repo__WEBPACK_IMPORTED_MODULE_3__.LP(this.term), _api_frida_core__WEBPACK_IMPORTED_MODULE_2__.setLog(this.term);
                                var e = this.$watch("opt_websocket", (function t(i, r) {
                                    if (i !== r) {
                                        const s = !0 === i ? "wssStart" : "wssStop";
                                        !0 === globalThis.dispatchEvent(new CustomEvent(s, {
                                            bubbles: !1,
                                            cancelable: !0,
                                            detail: {
                                                host: this.otp_wsHost,
                                                port: this.otp_wsPort
                                            }
                                        })) ? (e(), this.$nextTick((() => {
                                            this.opt_websocket = r, e = this.$watch("opt_websocket", t)
                                        }))) : localStorage.setItem("opt_websocket", i)
                                    }
                                }));
                                const t = localStorage.getItem("opt_websocket");
                                this.opt_websocket = null === t || JSON.parse(t);
                                const i = new URLSearchParams(location.search),
                                    r = Object.fromEntries(i.entries());
                                if (this.loadArgs(r), 0 !== this.opt_scripts) {
                                    const e = Date.now(),
                                        t = "opt_scripts_last";
                                    let i = localStorage.getItem(t);
                                    if (null === i) i = e, localStorage.setItem(t, e);
                                    else if (i = parseInt(i), e - i > this.opt_scripts) return localStorage.setItem(t, e), this.updateRepo(!0)
                                }
                                this.refreshScripts()
                            }));
                            const e = this.$refs.drop1.$refs;
                            e.button.draggable = !0, e.button.ondragstart = this.windowPickerDragStart, e.button.ondragend = this.windowPickerDragEnd, e.button.onmousedown = this.windowPickerDragStart_Right;
                            const t = this.$refs.dropS.$refs.search;
                            t.setAttribute("autocapitalize", "none"), t.addEventListener("drop", this.fileDropJS), t.addEventListener("dragover", (e => {
                                e.preventDefault();
                                const i = t.previousElementSibling;
                                null !== i && (i.style.pointerEvents = "none")
                            }))
                        },
                        methods: {
                            getAllScript() {
                                const e = localStorage.getItem("metadata");
                                if (null !== e) return JSON.parse(e)
                            },
                            refreshScripts(e) {
                                if (!0 === fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(dirMain)) {
                                    if (void 0 === e) {
                                        const e = localStorage.getItem("metadata");
                                        if (null !== e) return void(this.options = JSON.parse(e).filter((e => !1 === e.name.startsWith("lib"))))
                                    }
                                    const t = getAllFiles(dirMain, []);
                                    localStorage.setItem("metadata", JSON.stringify(t)), !0 === this.firstRun ? location.href = location.href : this.options = t.filter((e => !1 === e.name.startsWith("lib")))
                                }
                            },
                            printScriptInfoSelect(e) {
                                this.printScriptInfo(e)
                            },
                            printInfo() {
                                this.term.cols < 74 ? this.term.writeln("\n  💉 [37;1m Agent[0m - Universal script based [9mtext[0m hooker (powered by FRIDA).\n\n  [32;1mUsage[0m -> https://youtu.be/dFfuq2UnKjU?si=Dq0ZzAE-JhsOlf9x\n   1. Pick a running process (drag-n-drop)\n   2. Select a script\n   3. Press Attach button\n\n  Script request: https://github.com/0xDC00/scripts\n  Read more:      https://github.com/0xDC00/agent\n  Discord:        https://discord.gg/sWeFsmJYJc\n  Docs:           https://0xdc00.github.io/docs/\n\n  [33mSupport this project:[0m https://ko-fi.com/0xdc00\n") : this.term.writeln("\n  💉 [37;1m Agent[0m - Universal script-based [9mtext[0m hooker (powered by FRIDA).\n\n  [32;1mUsage[0m -> https://youtu.be/dFfuq2UnKjU?si=Dq0ZzAE-JhsOlf9x\n   1. Pick a running process (drag-n-drop)\n   2. Select a script\n   3. Press Attach button\n\n  [32;1mHow does it work?[0m\n   ┌─────┐    ┌──────┐                  ┌──────────────┐\n   │[37;1mAGENT[0m├───►│Attach├─────────────────►│[37;1mTARGET PROCESS[0m│\n   └─┬─┬─┘    └──┬───┘                  └──────▲───────┘\n     │ │         │                             │Injected (Engine+Script)\n     │ │         │         ┌───────────┐    ┌──┴──┐\n     │ │         └────────►│Load script├───►│Hooks├───┐\n     │ │                   └───────────┘    └─────┘   │\n     │ └──────────────────────────────────────────────┘\n     │                Communication  ┌───────────────────┐    ┌───────────┐\n     └──────────────────────────────►│Clipboard+WebSocket│───►│[37;1mTRANSLATORS[0m│\n                                     └───────────────────┘    └───────────┘\n\n  Script request: https://github.com/0xDC00/scripts\n  Read more:      https://github.com/0xDC00/agent\n  Discord:        https://discord.gg/sWeFsmJYJc\n  Docs:           https://0xdc00.github.io/docs/\n\n  [33mSupport this project:[0m https://ko-fi.com/0xdc00\n")
                            },
                            updateRepo(e) {
                                return _api_git_repo__WEBPACK_IMPORTED_MODULE_3__.S1(urlMain, dirMain).then((t => {
                                    this.term.log("Done.\r\n"), !0 !== t && !0 !== e || this.refreshScripts(!0)
                                }), (e => {
                                    this.term.error(e)
                                }))
                            },
                            cleanRepoHistory() {
                                _api_git_repo__WEBPACK_IMPORTED_MODULE_3__.Ct(urlMain, dirMain).then((() => {
                                    this.term.log("Done.\r\n")
                                }), (e => {
                                    this.term.error(e)
                                }))
                            },
                            copy(e) {
                                if (!e) return;
                                const t = Date.now();
                                setImmediate((() => {
                                    globalThis.dispatchEvent(new CustomEvent("copyText", {
                                        bubbles: !1,
                                        detail: {
                                            target: this._target,
                                            id: t,
                                            text: e
                                        }
                                    }))
                                })), this.term.log(e), window.ipc.copy(e, t), this.term.log("-------");
                                window.ipc.send("copiedText", e);
                            },
                            loadArgs(e) {
                                void 0 !== e.target ? (this.target = e.target, this.isAttach = 2, void 0 !== e.args && (this.args = e.args), void 0 !== e.pname && (this.pname = e.pname), void 0 !== e.delay && !1 === isNaN(e.delay) && (this.delay = parseInt(e.delay))) : void 0 !== e.pname && (this.target = e.pname, this.pname = "", this.isAttach = 1), this.message = this.target, void 0 !== e.script && (this.script = path__WEBPACK_IMPORTED_MODULE_1__.resolve(e.script), void 0 === e.target && void 0 === e.pname || (this.isCMD = !0, this.term.options.scrollback = 300, this.fridaAction()))
                            },
                            windowMinimize() {
                                window.ipc.send("minimize")
                            },
                            windowMaximize() {
                                window.ipc.send("maximize")
                            },
                            windowClose() {
                                window.ipc.send("close")
                            },
                            showOpenDialog: e => window.ipc.invoke("showOpenDialog", e).then((e => e)),
                            printScriptInfo(e) {
                                fs__WEBPACK_IMPORTED_MODULE_0__.readFile(e, "utf8", ((e, t) => {
                                    if (e) return void this.term.error(JSON.stringify(e, null, 2));
                                    const i = "// ==UserScript==";
                                    let r = i;
                                    if (t.startsWith(i)) {
                                        const e = t.indexOf("// ==/UserScript==");
                                        e && (r = t.substring(0, e))
                                    }
                                    this.term.clear(), this.term.log(r)
                                }))
                            },
                            windowPickerDragStart(e) {
                                if (3 !== e.which) {
                                    const t = e.target;
                                    e.dataTransfer.setDragImage(t, t.clientWidth / 2, t.clientHeight / 2)
                                }
                                window.ipc.send("windowPickerDragStart")
                            },
                            windowPickerDragEnd(e) {
                                e.preventDefault(), e.stopImmediatePropagation();
                                const t = this.term;
                                window.ipc.invoke("windowPickerDragEnd").then((async () => {
                                    this.isFridaActionDisabled_ = !1;
                                    try {
                                        const i = IS_MACOS ? e.screenX : Math.floor(e.screenX * window.devicePixelRatio),
                                            r = IS_MACOS ? e.screenY : Math.floor(e.screenY * window.devicePixelRatio),
                                            s = "" !== this.remoteIP;
                                        t.clear();
                                        const n = !0 === s ? await _api_frida_core__WEBPACK_IMPORTED_MODULE_2__.windowInfoRemote(this.remoteIP, i, r) : await _api_frida_core__WEBPACK_IMPORTED_MODULE_2__.windowInfo(i, r);
                                        if (void 0 !== n.title) {
                                            const e = n.title;
                                            this.target = n.pid;
                                            const i = this.target.toString();
                                            this.message = !0 === s ? this.remoteIP + "|:" + i : i + "|" + e, this.isAttach = 1, t.log(`PID:   ${i}\r\nTitle: ${JSON.stringify(e)} `)
                                        } else this.message = !0 === s ? this.remoteIP : "", t.warn("PID:   " + n.pid)
                                    } catch (e) {
                                        t.error(e.message)
                                    }
                                }))
                            },
                            windowPickerDragStart_Right(e) {
                                if (3 !== e.which) return;
                                e.preventDefault(), e.target.style.cursor = "crosshair";
                                const t = this;
                                window.addEventListener("mousemove", (i => {
                                    e.target.style.cursor = "pointer", 3 === i.which && (window.addEventListener("mouseup", t.windowPickerDragEnd, {
                                        once: !0
                                    }), t.windowPickerDragStart(e))
                                }), {
                                    once: !0
                                })
                            },
                            onChangeInputTarget(e) {
                                if (null === e) return;
                                const t = e.match(/^[0-9]+\|/);
                                if (null !== t) this.target = parseInt(t[0]), this.isAttach = 1;
                                else if (null !== e.match(/^\|./)) this.target = e.substring(1), this.isAttach = 1;
                                else if (null !== e.match(/^usb(\|.*)?$/)) this.target = e, this.isAttach = 1;
                                else {
                                    this.target = e;
                                    const t = e.match(/^(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}(?:\:\d{1,5})?)(\|.*)?$/);
                                    null !== t ? (this.isAttach = 1, this.remoteIP = t[1]) : (this.isAttach = 2, this.remoteIP = "")
                                }
                            },
                            onChangeInputKeyUp: function() {
                                let e = null;
                                return function(t) {
                                    const i = this;
                                    clearTimeout(e), e = setTimeout((function() {
                                        i.onChangeInputTarget(t)
                                    }), 150)
                                }
                            }(),
                            fileDropExe(e) {
                                const t = e.dataTransfer.files;
                                e.preventDefault(), 0 !== t.length && (this.target = this.message = t[0].path, this.isAttach = 2)
                            },
                            fileDropJS(e) {
                                const t = e.dataTransfer.files;
                                e.preventDefault(), 0 !== t.length && (this.script = t[0].path, this.printScriptInfo(this.script))
                            },
                            processPicker() {
                                this.$bvModal.show("modal-process-selector"), setImmediate((() => this.refreshProcesses()))
                            },
                            processPickerOnSelected(e) {
                                this.$bvModal.hide("modal-process-selector"), this.target = this.message = e, this.term.clear(), this.term.log("Command:   " + e)
                            },
                            refreshProcesses(e) {
                                if (!0 === e) return this._refreshProcesses();
                                _api_frida_core__WEBPACK_IMPORTED_MODULE_2__.getDevice({
                                    target: this.target,
                                    run: null
                                }).then((e => e.enumerateProcesses({
                                    scope: "metadata"
                                }))).then((e => {
                                    this.processes = e
                                })), setImmediate((() => this._refreshProcesses()))
                            },
                            _refreshProcesses() {
                                this.processesLoading = !0, this.$refs.dropP.$el.querySelector("input[type=search]")?.focus(), _api_frida_core__WEBPACK_IMPORTED_MODULE_2__.getDevice({
                                    target: this.target,
                                    run: null
                                }).then((e => e.enumerateProcesses({
                                    scope: "full"
                                }))).then((e => {
                                    this.processes = e.map((e => {
                                        const t = e.parameters.icons;
                                        if (void 0 === t) return e;
                                        delete e.parameters.icons;
                                        const i = t[0];
                                        return Object.defineProperty(e, "icon", {
                                            configurable: !0,
                                            enumerable: !0,
                                            get() {
                                                const t = i.image;
                                                for (let e = 0; e < t.length; e += 4) {
                                                    const i = t[e];
                                                    t[e] = t[e + 2], t[e + 2] = i
                                                }
                                                const r = electron__WEBPACK_IMPORTED_MODULE_5__.nativeImage.createFromBuffer(Buffer.from(t), {
                                                        width: i.width,
                                                        height: i.height
                                                    }),
                                                    s = URL.createObjectURL(new Blob([r.toPNG()], {
                                                        type: "image/png"
                                                    }));
                                                return delete e.icon, e.icon = s
                                            }
                                        }), e
                                    })), this.processesLoading = !1
                                })).catch((e => {
                                    this.$bvModal.hide("modal-process-selector"), this.term.error(e.message)
                                }))
                            },
                            filePickerExe() {
                                this.showOpenDialog({
                                    properties: ["openFile"],
                                    title: "Target..."
                                }).then((e => {
                                    e && (this.target = this.message = e, this.isAttach = 2)
                                }))
                            },
                            filePickerJS() {
                                this.showOpenDialog({
                                    properties: ["openFile"],
                                    title: "Script...",
                                    filters: [{
                                        name: "JavaScript",
                                        extensions: ["js"]
                                    }, {
                                        name: "All Files",
                                        extensions: ["*"]
                                    }]
                                }).then((e => {
                                    e && (this.script = e, this.printScriptInfo(e))
                                }))
                            },
                            fridaAction: function(e) {
                                let t = null;
                                return function(i) {
                                    if (null === t) {
                                        this.isFridaActionDisabled_ = !0, this.isAttach > 0 && !1 === this.isCMD && this.onChangeInputTarget(this.message);
                                        const r = {
                                            target: this.target,
                                            script: this.script,
                                            args: this.args,
                                            delay: this.delay,
                                            pname: this.pname,
                                            isEmu: this.otp_realm
                                        };
                                        let s;

                                        function n(t) {
                                            this.isFridaActionDisabled_ = !1, this.target = r.target;
                                            const i = Math.abs(this.isAttach);
                                            s === _api_frida_core__WEBPACK_IMPORTED_MODULE_2__.detach ? (this.isAttach = i, !0 === this.isCMD && (this.term.log("> commandLine cleanup"), this.isCMD = !1, this.delay = 0, this.pname = this.args = "")) : (this.isAttach = -i, this._target = this.script), e instanceof Function && e()
                                        }
                                        1 === this.isAttach ? (this.term.log(`Attach:\r\n- ${this.target}\r\n- ${this.script}`), s = _api_frida_core__WEBPACK_IMPORTED_MODULE_2__.attach) : 2 === this.isAttach ? (this.term.log(`Run:\r\n- ${this.target}\r\n- ${this.script}`), s = _api_frida_core__WEBPACK_IMPORTED_MODULE_2__.run, r.target = this.message) : (this.term.log(`Detach:\r\n- ${this.target}\r\n- ${this.script}`), s = _api_frida_core__WEBPACK_IMPORTED_MODULE_2__.detach), !0 === this.isCMD && s === _api_frida_core__WEBPACK_IMPORTED_MODULE_2__.run && this.term.log(JSON.stringify(r, null, 2)), r.attach = void 0 !== i && i.ctrlKey;
                                        let o = null;
                                        s(r).then((e => {
                                            clearTimeout(o), n.call(this, e)
                                        }), (e => {
                                            this.term.error(void 0 !== e.stack ? e.stack : e), this.isFridaActionDisabled_ = !1
                                        })), s === _api_frida_core__WEBPACK_IMPORTED_MODULE_2__.detach && (o = setTimeout((() => {
                                            this.term.log("Timeout!"), _api_frida_core__WEBPACK_IMPORTED_MODULE_2__.detachAll(), n.call(this, null)
                                        }), 3e3))
                                    }
                                    t = setTimeout((() => {
                                        t = null
                                    }), 250)
                                }
                            }(),
                            scriptBrowse() {
                                this.refreshScripts(!0), this.term.log("Done.\r\n")
                            },
                            scriptExplorer() {
                                "" !== this.script && !0 === fs__WEBPACK_IMPORTED_MODULE_0__.existsSync(this.script) ? window.ipc.showItemInFolder(this.script) : window.ipc.showItemInFolder(dirMain)
                            },
                            showTab(e, t) {
                                const i = document.createElement("html");
                                i.innerHTML = e;
                                const r = document.createElement("base");
                                r.href = t ?? dirMain, i.getElementsByTagName("head")[0].appendChild(r), e = i.outerHTML, 0 === this.tabs.length ? this.tabs.push(1) : __vue.$refs.iframe[0].$el.innerHTML = "", this.$nextTick((() => {
                                    const t = this.$refs.iframe[0],
                                        i = document.createElement("iframe");
                                    i.setAttribute("style", "width: 100%; height: 100%; border: 0;"), t.$el.appendChild(i), i.contentWindow.rpc = globalThis.rpc;
                                    const r = i.contentWindow.document;
                                    r.open(), r.write(e), r.close(), globalThis.__ifw = i.contentWindow, t.activate()
                                }))
                            },
                            removeTab() {
                                this.$refs.tab1.activate(), this.tabs.pop()
                            },
                            showPrompt(e, t, i, r) {
                                let s = t;
                                const n = this.$createElement,
                                    o = n("div", [n("span", {
                                        style: "white-space: break-spaces;"
                                    }, e), n("b-form-textarea", {
                                        class: "mt-3",
                                        props: {
                                            placeholder: r,
                                            rows: 1,
                                            "max-rows": 1,
                                            value: t
                                        },
                                        on: {
                                            input: function(e) {
                                                s = e
                                            }
                                        },
                                        hook: {
                                            insert(e) {
                                                setTimeout((function() {
                                                    e.elm.focus()
                                                }), 100)
                                            }
                                        }
                                    })]);
                                this.$bvModal.msgBoxConfirm([o], {
                                    centered: !0
                                }).then((e => {
                                    !0 === e && s !== t && i(s)
                                }))
                            },
                            otpClickWSHostPort() {
                                const e = this.otp_wsHost + ":" + this.otp_wsPort;
                                this.showPrompt("WebSocketServer", e, (e => {
                                    if (0 === e.length) return this.otp_wsHost = "127.0.0.1", void(this.otp_wsPort = 9001);
                                    const [t, i] = e.split(":", 2), r = t.trim(), s = i.trim();
                                    0 !== r.length && (this.otp_wsHost = r), 0 !== s.length && !1 === isNaN(s) && (this.otp_wsPort = parseInt(s)), !0 === this.opt_websocket && !1 === globalThis.dispatchEvent(new CustomEvent("wssStop", {
                                        bubbles: !1,
                                        cancelable: !0
                                    })) && (localStorage.setItem("opt_websocket", !1), !1 === globalThis.dispatchEvent(new CustomEvent("wssStart", {
                                        bubbles: !1,
                                        cancelable: !0,
                                        detail: {
                                            host: this.otp_wsHost,
                                            port: this.otp_wsPort
                                        }
                                    })) && (localStorage.setItem("opt_websocket", !0), window.ipc.send("reloadExternal", this.otp_wsHost, this.otp_wsPort)))
                                }), "127.0.0.1:9001")
                            },
                            opt_ShortcutExternalShow_Click() {
                                const e = this.opt_ShortcutExternalShow;
                                this.showPrompt("ShortcutKey Toggle Visibility", e, (t => {
                                    (t = 0 === t.length ? shortcutExternal : t) !== e && window.ipc.invoke("set_shortcutExternal", t, this.opt_ShortcutExternal).then((e => {
                                        !0 === e && (this.opt_ShortcutExternalShow = t)
                                    }))
                                }), shortcutExternal)
                            },
                            opt_ShortcutExternalLock_Click() {
                                const e = this.opt_ShortcutExternalLock;
                                this.showPrompt("ShortcutKey Toggle lock/unlock Input", e, (t => {
                                    (t = 0 === t.length ? shortcutToggleLock : t) !== e && window.ipc.invoke("set_shortcutToggleLock", t, this.opt_ShortcutExternal).then((e => {
                                        !0 === e && (this.opt_ShortcutExternalLock = t)
                                    }))
                                }), shortcutToggleLock)
                            }
                        }
                    };

                function getAllFiles(e, t) {
                    return fs__WEBPACK_IMPORTED_MODULE_0__.readdirSync(e).forEach((function(i) {
                        const r = path__WEBPACK_IMPORTED_MODULE_1__.resolve(e, i),
                            s = fs__WEBPACK_IMPORTED_MODULE_0__.statSync(r);
                        if (s.isDirectory()) t = getAllFiles(r, t);
                        else if (!0 === i.endsWith(".js")) {
                            const e = path__WEBPACK_IMPORTED_MODULE_1__.parse(i).name.replace(/[-_\.]+/g, " ");
                            t.push({
                                name: e,
                                fullPath: r,
                                time: s.ctimeMs
                            })
                        }
                    })), t
                }
            },
            6177: e => {
                var t;
                self, t = () => (() => {
                    "use strict";
                    var e = {
                            903: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.BaseRenderLayer = void 0;
                                const r = i(274),
                                    s = i(627),
                                    n = i(237),
                                    o = i(860),
                                    a = i(374),
                                    c = i(296),
                                    l = i(345),
                                    h = i(859),
                                    u = i(399),
                                    d = i(855);
                                class f extends h.Disposable {
                                    get canvas() {
                                        return this._canvas
                                    }
                                    get cacheCanvas() {
                                        return this._charAtlas?.pages[0].canvas
                                    }
                                    constructor(e, t, i, s, n, o, a, u, d, f) {
                                        super(), this._terminal = e, this._container = t, this._alpha = n, this._themeService = o, this._bufferService = a, this._optionsService = u, this._decorationService = d, this._coreBrowserService = f, this._deviceCharWidth = 0, this._deviceCharHeight = 0, this._deviceCellWidth = 0, this._deviceCellHeight = 0, this._deviceCharLeft = 0, this._deviceCharTop = 0, this._selectionModel = (0, c.createSelectionRenderModel)(), this._bitmapGenerator = [], this._charAtlasDisposable = this.register(new h.MutableDisposable), this._onAddTextureAtlasCanvas = this.register(new l.EventEmitter), this.onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event, this._cellColorResolver = new r.CellColorResolver(this._terminal, this._optionsService, this._selectionModel, this._decorationService, this._coreBrowserService, this._themeService), this._canvas = this._coreBrowserService.mainDocument.createElement("canvas"), this._canvas.classList.add(`xterm-${i}-layer`), this._canvas.style.zIndex = s.toString(), this._initCanvas(), this._container.appendChild(this._canvas), this._refreshCharAtlas(this._themeService.colors), this.register(this._themeService.onChangeColors((e => {
                                            this._refreshCharAtlas(e), this.reset(), this.handleSelectionChanged(this._selectionModel.selectionStart, this._selectionModel.selectionEnd, this._selectionModel.columnSelectMode)
                                        }))), this.register((0, h.toDisposable)((() => {
                                            this._canvas.remove()
                                        })))
                                    }
                                    _initCanvas() {
                                        this._ctx = (0, a.throwIfFalsy)(this._canvas.getContext("2d", {
                                            alpha: this._alpha
                                        })), this._alpha || this._clearAll()
                                    }
                                    handleBlur() {}
                                    handleFocus() {}
                                    handleCursorMove() {}
                                    handleGridChanged(e, t) {}
                                    handleSelectionChanged(e, t, i = !1) {
                                        this._selectionModel.update(this._terminal._core, e, t, i)
                                    }
                                    _setTransparency(e) {
                                        if (e === this._alpha) return;
                                        const t = this._canvas;
                                        this._alpha = e, this._canvas = this._canvas.cloneNode(), this._initCanvas(), this._container.replaceChild(this._canvas, t), this._refreshCharAtlas(this._themeService.colors), this.handleGridChanged(0, this._bufferService.rows - 1)
                                    }
                                    _refreshCharAtlas(e) {
                                        if (!(this._deviceCharWidth <= 0 && this._deviceCharHeight <= 0)) {
                                            this._charAtlas = (0, s.acquireTextureAtlas)(this._terminal, this._optionsService.rawOptions, e, this._deviceCellWidth, this._deviceCellHeight, this._deviceCharWidth, this._deviceCharHeight, this._coreBrowserService.dpr), this._charAtlasDisposable.value = (0, l.forwardEvent)(this._charAtlas.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas), this._charAtlas.warmUp();
                                            for (let e = 0; e < this._charAtlas.pages.length; e++) this._bitmapGenerator[e] = new p(this._charAtlas.pages[e].canvas)
                                        }
                                    }
                                    resize(e) {
                                        this._deviceCellWidth = e.device.cell.width, this._deviceCellHeight = e.device.cell.height, this._deviceCharWidth = e.device.char.width, this._deviceCharHeight = e.device.char.height, this._deviceCharLeft = e.device.char.left, this._deviceCharTop = e.device.char.top, this._canvas.width = e.device.canvas.width, this._canvas.height = e.device.canvas.height, this._canvas.style.width = `${e.css.canvas.width}px`, this._canvas.style.height = `${e.css.canvas.height}px`, this._alpha || this._clearAll(), this._refreshCharAtlas(this._themeService.colors)
                                    }
                                    clearTextureAtlas() {
                                        this._charAtlas?.clearTexture()
                                    }
                                    _fillCells(e, t, i, r) {
                                        this._ctx.fillRect(e * this._deviceCellWidth, t * this._deviceCellHeight, i * this._deviceCellWidth, r * this._deviceCellHeight)
                                    }
                                    _fillMiddleLineAtCells(e, t, i = 1) {
                                        const r = Math.ceil(.5 * this._deviceCellHeight);
                                        this._ctx.fillRect(e * this._deviceCellWidth, (t + 1) * this._deviceCellHeight - r - this._coreBrowserService.dpr, i * this._deviceCellWidth, this._coreBrowserService.dpr)
                                    }
                                    _fillBottomLineAtCells(e, t, i = 1, r = 0) {
                                        this._ctx.fillRect(e * this._deviceCellWidth, (t + 1) * this._deviceCellHeight + r - this._coreBrowserService.dpr - 1, i * this._deviceCellWidth, this._coreBrowserService.dpr)
                                    }
                                    _curlyUnderlineAtCell(e, t, i = 1) {
                                        this._ctx.save(), this._ctx.beginPath(), this._ctx.strokeStyle = this._ctx.fillStyle;
                                        const r = this._coreBrowserService.dpr;
                                        this._ctx.lineWidth = r;
                                        for (let s = 0; s < i; s++) {
                                            const i = (e + s) * this._deviceCellWidth,
                                                n = (e + s + .5) * this._deviceCellWidth,
                                                o = (e + s + 1) * this._deviceCellWidth,
                                                a = (t + 1) * this._deviceCellHeight - r - 1,
                                                c = a - r,
                                                l = a + r;
                                            this._ctx.moveTo(i, a), this._ctx.bezierCurveTo(i, c, n, c, n, a), this._ctx.bezierCurveTo(n, l, o, l, o, a)
                                        }
                                        this._ctx.stroke(), this._ctx.restore()
                                    }
                                    _dottedUnderlineAtCell(e, t, i = 1) {
                                        this._ctx.save(), this._ctx.beginPath(), this._ctx.strokeStyle = this._ctx.fillStyle;
                                        const r = this._coreBrowserService.dpr;
                                        this._ctx.lineWidth = r, this._ctx.setLineDash([2 * r, r]);
                                        const s = e * this._deviceCellWidth,
                                            n = (t + 1) * this._deviceCellHeight - r - 1;
                                        this._ctx.moveTo(s, n);
                                        for (let t = 0; t < i; t++) {
                                            const r = (e + i + t) * this._deviceCellWidth;
                                            this._ctx.lineTo(r, n)
                                        }
                                        this._ctx.stroke(), this._ctx.closePath(), this._ctx.restore()
                                    }
                                    _dashedUnderlineAtCell(e, t, i = 1) {
                                        this._ctx.save(), this._ctx.beginPath(), this._ctx.strokeStyle = this._ctx.fillStyle;
                                        const r = this._coreBrowserService.dpr;
                                        this._ctx.lineWidth = r, this._ctx.setLineDash([4 * r, 3 * r]);
                                        const s = e * this._deviceCellWidth,
                                            n = (e + i) * this._deviceCellWidth,
                                            o = (t + 1) * this._deviceCellHeight - r - 1;
                                        this._ctx.moveTo(s, o), this._ctx.lineTo(n, o), this._ctx.stroke(), this._ctx.closePath(), this._ctx.restore()
                                    }
                                    _fillLeftLineAtCell(e, t, i) {
                                        this._ctx.fillRect(e * this._deviceCellWidth, t * this._deviceCellHeight, this._coreBrowserService.dpr * i, this._deviceCellHeight)
                                    }
                                    _strokeRectAtCell(e, t, i, r) {
                                        const s = this._coreBrowserService.dpr;
                                        this._ctx.lineWidth = s, this._ctx.strokeRect(e * this._deviceCellWidth + s / 2, t * this._deviceCellHeight + s / 2, i * this._deviceCellWidth - s, r * this._deviceCellHeight - s)
                                    }
                                    _clearAll() {
                                        this._alpha ? this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height) : (this._ctx.fillStyle = this._themeService.colors.background.css, this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height))
                                    }
                                    _clearCells(e, t, i, r) {
                                        this._alpha ? this._ctx.clearRect(e * this._deviceCellWidth, t * this._deviceCellHeight, i * this._deviceCellWidth, r * this._deviceCellHeight) : (this._ctx.fillStyle = this._themeService.colors.background.css, this._ctx.fillRect(e * this._deviceCellWidth, t * this._deviceCellHeight, i * this._deviceCellWidth, r * this._deviceCellHeight))
                                    }
                                    _fillCharTrueColor(e, t, i) {
                                        this._ctx.font = this._getFont(!1, !1), this._ctx.textBaseline = n.TEXT_BASELINE, this._clipRow(i);
                                        let r = !1;
                                        !1 !== this._optionsService.rawOptions.customGlyphs && (r = (0, o.tryDrawCustomChar)(this._ctx, e.getChars(), t * this._deviceCellWidth, i * this._deviceCellHeight, this._deviceCellWidth, this._deviceCellHeight, this._optionsService.rawOptions.fontSize, this._coreBrowserService.dpr)), r || this._ctx.fillText(e.getChars(), t * this._deviceCellWidth + this._deviceCharLeft, i * this._deviceCellHeight + this._deviceCharTop + this._deviceCharHeight)
                                    }
                                    _drawChars(e, t, i) {
                                        const r = e.getChars(),
                                            s = e.getCode(),
                                            n = e.getWidth();
                                        if (this._cellColorResolver.resolve(e, t, this._bufferService.buffer.ydisp + i, this._deviceCellWidth), !this._charAtlas) return;
                                        let o;
                                        if (o = r && r.length > 1 ? this._charAtlas.getRasterizedGlyphCombinedChar(r, this._cellColorResolver.result.bg, this._cellColorResolver.result.fg, this._cellColorResolver.result.ext, !0) : this._charAtlas.getRasterizedGlyph(e.getCode() || d.WHITESPACE_CELL_CODE, this._cellColorResolver.result.bg, this._cellColorResolver.result.fg, this._cellColorResolver.result.ext, !0), !o.size.x || !o.size.y) return;
                                        this._ctx.save(), this._clipRow(i), this._bitmapGenerator[o.texturePage] && this._charAtlas.pages[o.texturePage].canvas !== this._bitmapGenerator[o.texturePage].canvas && (this._bitmapGenerator[o.texturePage]?.bitmap?.close(), delete this._bitmapGenerator[o.texturePage]), this._charAtlas.pages[o.texturePage].version !== this._bitmapGenerator[o.texturePage]?.version && (this._bitmapGenerator[o.texturePage] || (this._bitmapGenerator[o.texturePage] = new p(this._charAtlas.pages[o.texturePage].canvas)), this._bitmapGenerator[o.texturePage].refresh(), this._bitmapGenerator[o.texturePage].version = this._charAtlas.pages[o.texturePage].version);
                                        let c = o.size.x;
                                        this._optionsService.rawOptions.rescaleOverlappingGlyphs && (0, a.allowRescaling)(s, n, o.size.x, this._deviceCellWidth) && (c = this._deviceCellWidth - 1), this._ctx.drawImage(this._bitmapGenerator[o.texturePage]?.bitmap || this._charAtlas.pages[o.texturePage].canvas, o.texturePosition.x, o.texturePosition.y, o.size.x, o.size.y, t * this._deviceCellWidth + this._deviceCharLeft - o.offset.x, i * this._deviceCellHeight + this._deviceCharTop - o.offset.y, c, o.size.y), this._ctx.restore()
                                    }
                                    _clipRow(e) {
                                        this._ctx.beginPath(), this._ctx.rect(0, e * this._deviceCellHeight, this._bufferService.cols * this._deviceCellWidth, this._deviceCellHeight), this._ctx.clip()
                                    }
                                    _getFont(e, t) {
                                        return `${t?"italic":""} ${e?this._optionsService.rawOptions.fontWeightBold:this._optionsService.rawOptions.fontWeight} ${this._optionsService.rawOptions.fontSize*this._coreBrowserService.dpr}px ${this._optionsService.rawOptions.fontFamily}`
                                    }
                                }
                                t.BaseRenderLayer = f;
                                class p {
                                    get bitmap() {
                                        return this._bitmap
                                    }
                                    constructor(e) {
                                        this.canvas = e, this._state = 0, this._commitTimeout = void 0, this._bitmap = void 0, this.version = -1
                                    }
                                    refresh() {
                                        this._bitmap?.close(), this._bitmap = void 0, u.isSafari || (void 0 === this._commitTimeout && (this._commitTimeout = window.setTimeout((() => this._generate()), 100)), 1 === this._state && (this._state = 2))
                                    }
                                    _generate() {
                                        0 === this._state && (this._bitmap?.close(), this._bitmap = void 0, this._state = 1, window.createImageBitmap(this.canvas).then((e => {
                                            2 === this._state ? this.refresh() : this._bitmap = e, this._state = 0
                                        })), this._commitTimeout && (this._commitTimeout = void 0))
                                    }
                                }
                            },
                            949: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CanvasRenderer = void 0;
                                const r = i(627),
                                    s = i(56),
                                    n = i(374),
                                    o = i(345),
                                    a = i(859),
                                    c = i(873),
                                    l = i(43),
                                    h = i(630),
                                    u = i(744);
                                class d extends a.Disposable {
                                    constructor(e, t, i, d, f, p, _, g, v, m, b) {
                                        super(), this._terminal = e, this._screenElement = t, this._bufferService = d, this._charSizeService = f, this._optionsService = p, this._coreBrowserService = v, this._themeService = b, this._observerDisposable = this.register(new a.MutableDisposable), this._onRequestRedraw = this.register(new o.EventEmitter), this.onRequestRedraw = this._onRequestRedraw.event, this._onChangeTextureAtlas = this.register(new o.EventEmitter), this.onChangeTextureAtlas = this._onChangeTextureAtlas.event, this._onAddTextureAtlasCanvas = this.register(new o.EventEmitter), this.onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event;
                                        const w = this._optionsService.rawOptions.allowTransparency;
                                        this._renderLayers = [new u.TextRenderLayer(this._terminal, this._screenElement, 0, w, this._bufferService, this._optionsService, _, m, this._coreBrowserService, b), new h.SelectionRenderLayer(this._terminal, this._screenElement, 1, this._bufferService, this._coreBrowserService, m, this._optionsService, b), new l.LinkRenderLayer(this._terminal, this._screenElement, 2, i, this._bufferService, this._optionsService, m, this._coreBrowserService, b), new c.CursorRenderLayer(this._terminal, this._screenElement, 3, this._onRequestRedraw, this._bufferService, this._optionsService, g, this._coreBrowserService, m, b)];
                                        for (const e of this._renderLayers)(0, o.forwardEvent)(e.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas);
                                        this.dimensions = (0, n.createRenderDimensions)(), this._devicePixelRatio = this._coreBrowserService.dpr, this._updateDimensions(), this._observerDisposable.value = (0, s.observeDevicePixelDimensions)(this._renderLayers[0].canvas, this._coreBrowserService.window, ((e, t) => this._setCanvasDevicePixelDimensions(e, t))), this.register(this._coreBrowserService.onWindowChange((e => {
                                            this._observerDisposable.value = (0, s.observeDevicePixelDimensions)(this._renderLayers[0].canvas, e, ((e, t) => this._setCanvasDevicePixelDimensions(e, t)))
                                        }))), this.register((0, a.toDisposable)((() => {
                                            for (const e of this._renderLayers) e.dispose();
                                            (0, r.removeTerminalFromCache)(this._terminal)
                                        })))
                                    }
                                    get textureAtlas() {
                                        return this._renderLayers[0].cacheCanvas
                                    }
                                    handleDevicePixelRatioChange() {
                                        this._devicePixelRatio !== this._coreBrowserService.dpr && (this._devicePixelRatio = this._coreBrowserService.dpr, this.handleResize(this._bufferService.cols, this._bufferService.rows))
                                    }
                                    handleResize(e, t) {
                                        this._updateDimensions();
                                        for (const e of this._renderLayers) e.resize(this.dimensions);
                                        this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`, this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`
                                    }
                                    handleCharSizeChanged() {
                                        this.handleResize(this._bufferService.cols, this._bufferService.rows)
                                    }
                                    handleBlur() {
                                        this._runOperation((e => e.handleBlur()))
                                    }
                                    handleFocus() {
                                        this._runOperation((e => e.handleFocus()))
                                    }
                                    handleSelectionChanged(e, t, i = !1) {
                                        this._runOperation((r => r.handleSelectionChanged(e, t, i))), this._themeService.colors.selectionForeground && this._onRequestRedraw.fire({
                                            start: 0,
                                            end: this._bufferService.rows - 1
                                        })
                                    }
                                    handleCursorMove() {
                                        this._runOperation((e => e.handleCursorMove()))
                                    }
                                    clear() {
                                        this._runOperation((e => e.reset()))
                                    }
                                    _runOperation(e) {
                                        for (const t of this._renderLayers) e(t)
                                    }
                                    renderRows(e, t) {
                                        for (const i of this._renderLayers) i.handleGridChanged(e, t)
                                    }
                                    clearTextureAtlas() {
                                        for (const e of this._renderLayers) e.clearTextureAtlas()
                                    }
                                    _updateDimensions() {
                                        if (!this._charSizeService.hasValidSize) return;
                                        const e = this._coreBrowserService.dpr;
                                        this.dimensions.device.char.width = Math.floor(this._charSizeService.width * e), this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * e), this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight), this.dimensions.device.char.top = 1 === this._optionsService.rawOptions.lineHeight ? 0 : Math.round((this.dimensions.device.cell.height - this.dimensions.device.char.height) / 2), this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing), this.dimensions.device.char.left = Math.floor(this._optionsService.rawOptions.letterSpacing / 2), this.dimensions.device.canvas.height = this._bufferService.rows * this.dimensions.device.cell.height, this.dimensions.device.canvas.width = this._bufferService.cols * this.dimensions.device.cell.width, this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / e), this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / e), this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows, this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols
                                    }
                                    _setCanvasDevicePixelDimensions(e, t) {
                                        this.dimensions.device.canvas.height = t, this.dimensions.device.canvas.width = e;
                                        for (const e of this._renderLayers) e.resize(this.dimensions);
                                        this._requestRedrawViewport()
                                    }
                                    _requestRedrawViewport() {
                                        this._onRequestRedraw.fire({
                                            start: 0,
                                            end: this._bufferService.rows - 1
                                        })
                                    }
                                }
                                t.CanvasRenderer = d
                            },
                            873: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CursorRenderLayer = void 0;
                                const r = i(457),
                                    s = i(859),
                                    n = i(399),
                                    o = i(782),
                                    a = i(903);
                                class c extends a.BaseRenderLayer {
                                    constructor(e, t, i, r, n, a, c, l, h, u) {
                                        super(e, t, "cursor", i, !0, u, n, a, h, l), this._onRequestRedraw = r, this._coreService = c, this._cursorBlinkStateManager = this.register(new s.MutableDisposable), this._cell = new o.CellData, this._state = {
                                            x: 0,
                                            y: 0,
                                            isFocused: !1,
                                            style: "",
                                            width: 0
                                        }, this._cursorRenderers = {
                                            bar: this._renderBarCursor.bind(this),
                                            block: this._renderBlockCursor.bind(this),
                                            underline: this._renderUnderlineCursor.bind(this),
                                            outline: this._renderOutlineCursor.bind(this)
                                        }, this.register(a.onOptionChange((() => this._handleOptionsChanged()))), this._handleOptionsChanged()
                                    }
                                    resize(e) {
                                        super.resize(e), this._state = {
                                            x: 0,
                                            y: 0,
                                            isFocused: !1,
                                            style: "",
                                            width: 0
                                        }
                                    }
                                    reset() {
                                        this._clearCursor(), this._cursorBlinkStateManager.value?.restartBlinkAnimation(), this._handleOptionsChanged()
                                    }
                                    handleBlur() {
                                        this._cursorBlinkStateManager.value?.pause(), this._onRequestRedraw.fire({
                                            start: this._bufferService.buffer.y,
                                            end: this._bufferService.buffer.y
                                        })
                                    }
                                    handleFocus() {
                                        this._cursorBlinkStateManager.value?.resume(), this._onRequestRedraw.fire({
                                            start: this._bufferService.buffer.y,
                                            end: this._bufferService.buffer.y
                                        })
                                    }
                                    _handleOptionsChanged() {
                                        this._optionsService.rawOptions.cursorBlink ? this._cursorBlinkStateManager.value || (this._cursorBlinkStateManager.value = new r.CursorBlinkStateManager((() => this._render(!0)), this._coreBrowserService)) : this._cursorBlinkStateManager.clear(), this._onRequestRedraw.fire({
                                            start: this._bufferService.buffer.y,
                                            end: this._bufferService.buffer.y
                                        })
                                    }
                                    handleCursorMove() {
                                        this._cursorBlinkStateManager.value?.restartBlinkAnimation()
                                    }
                                    handleGridChanged(e, t) {
                                        !this._cursorBlinkStateManager.value || this._cursorBlinkStateManager.value.isPaused ? this._render(!1) : this._cursorBlinkStateManager.value.restartBlinkAnimation()
                                    }
                                    _render(e) {
                                        if (!this._coreService.isCursorInitialized || this._coreService.isCursorHidden) return void this._clearCursor();
                                        const t = this._bufferService.buffer.ybase + this._bufferService.buffer.y,
                                            i = t - this._bufferService.buffer.ydisp;
                                        if (i < 0 || i >= this._bufferService.rows) return void this._clearCursor();
                                        const r = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1);
                                        if (this._bufferService.buffer.lines.get(t).loadCell(r, this._cell), void 0 !== this._cell.content) {
                                            if (!this._coreBrowserService.isFocused) {
                                                this._clearCursor(), this._ctx.save(), this._ctx.fillStyle = this._themeService.colors.cursor.css;
                                                const e = this._optionsService.rawOptions.cursorStyle,
                                                    t = this._optionsService.rawOptions.cursorInactiveStyle;
                                                return t && "none" !== t && this._cursorRenderers[t](r, i, this._cell), this._ctx.restore(), this._state.x = r, this._state.y = i, this._state.isFocused = !1, this._state.style = e, void(this._state.width = this._cell.getWidth())
                                            }
                                            if (!this._cursorBlinkStateManager.value || this._cursorBlinkStateManager.value.isCursorVisible) {
                                                if (this._state) {
                                                    if (this._state.x === r && this._state.y === i && this._state.isFocused === this._coreBrowserService.isFocused && this._state.style === this._optionsService.rawOptions.cursorStyle && this._state.width === this._cell.getWidth()) return;
                                                    this._clearCursor()
                                                }
                                                this._ctx.save(), this._cursorRenderers[this._optionsService.rawOptions.cursorStyle || "block"](r, i, this._cell), this._ctx.restore(), this._state.x = r, this._state.y = i, this._state.isFocused = !1, this._state.style = this._optionsService.rawOptions.cursorStyle, this._state.width = this._cell.getWidth()
                                            } else this._clearCursor()
                                        }
                                    }
                                    _clearCursor() {
                                        this._state && (n.isFirefox || this._coreBrowserService.dpr < 1 ? this._clearAll() : this._clearCells(this._state.x, this._state.y, this._state.width, 1), this._state = {
                                            x: 0,
                                            y: 0,
                                            isFocused: !1,
                                            style: "",
                                            width: 0
                                        })
                                    }
                                    _renderBarCursor(e, t, i) {
                                        this._ctx.save(), this._ctx.fillStyle = this._themeService.colors.cursor.css, this._fillLeftLineAtCell(e, t, this._optionsService.rawOptions.cursorWidth), this._ctx.restore()
                                    }
                                    _renderBlockCursor(e, t, i) {
                                        this._ctx.save(), this._ctx.fillStyle = this._themeService.colors.cursor.css, this._fillCells(e, t, i.getWidth(), 1), this._ctx.fillStyle = this._themeService.colors.cursorAccent.css, this._fillCharTrueColor(i, e, t), this._ctx.restore()
                                    }
                                    _renderUnderlineCursor(e, t, i) {
                                        this._ctx.save(), this._ctx.fillStyle = this._themeService.colors.cursor.css, this._fillBottomLineAtCells(e, t), this._ctx.restore()
                                    }
                                    _renderOutlineCursor(e, t, i) {
                                        this._ctx.save(), this._ctx.strokeStyle = this._themeService.colors.cursor.css, this._strokeRectAtCell(e, t, i.getWidth(), 1), this._ctx.restore()
                                    }
                                }
                                t.CursorRenderLayer = c
                            },
                            574: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.GridCache = void 0, t.GridCache = class {
                                    constructor() {
                                        this.cache = []
                                    }
                                    resize(e, t) {
                                        for (let i = 0; i < e; i++) {
                                            this.cache.length <= i && this.cache.push([]);
                                            for (let e = this.cache[i].length; e < t; e++) this.cache[i].push(void 0);
                                            this.cache[i].length = t
                                        }
                                        this.cache.length = e
                                    }
                                    clear() {
                                        for (let e = 0; e < this.cache.length; e++)
                                            for (let t = 0; t < this.cache[e].length; t++) this.cache[e][t] = void 0
                                    }
                                }
                            },
                            43: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.LinkRenderLayer = void 0;
                                const r = i(197),
                                    s = i(237),
                                    n = i(903);
                                class o extends n.BaseRenderLayer {
                                    constructor(e, t, i, r, s, n, o, a, c) {
                                        super(e, t, "link", i, !0, c, s, n, o, a), this.register(r.onShowLinkUnderline((e => this._handleShowLinkUnderline(e)))), this.register(r.onHideLinkUnderline((e => this._handleHideLinkUnderline(e))))
                                    }
                                    resize(e) {
                                        super.resize(e), this._state = void 0
                                    }
                                    reset() {
                                        this._clearCurrentLink()
                                    }
                                    _clearCurrentLink() {
                                        if (this._state) {
                                            this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);
                                            const e = this._state.y2 - this._state.y1 - 1;
                                            e > 0 && this._clearCells(0, this._state.y1 + 1, this._state.cols, e), this._clearCells(0, this._state.y2, this._state.x2, 1), this._state = void 0
                                        }
                                    }
                                    _handleShowLinkUnderline(e) {
                                        if (e.fg === s.INVERTED_DEFAULT_COLOR ? this._ctx.fillStyle = this._themeService.colors.background.css : e.fg && (0, r.is256Color)(e.fg) ? this._ctx.fillStyle = this._themeService.colors.ansi[e.fg].css : this._ctx.fillStyle = this._themeService.colors.foreground.css, e.y1 === e.y2) this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);
                                        else {
                                            this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);
                                            for (let t = e.y1 + 1; t < e.y2; t++) this._fillBottomLineAtCells(0, t, e.cols);
                                            this._fillBottomLineAtCells(0, e.y2, e.x2)
                                        }
                                        this._state = e
                                    }
                                    _handleHideLinkUnderline(e) {
                                        this._clearCurrentLink()
                                    }
                                }
                                t.LinkRenderLayer = o
                            },
                            630: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.SelectionRenderLayer = void 0;
                                const r = i(903);
                                class s extends r.BaseRenderLayer {
                                    constructor(e, t, i, r, s, n, o, a) {
                                        super(e, t, "selection", i, !0, a, r, o, n, s), this._clearState()
                                    }
                                    _clearState() {
                                        this._state = {
                                            start: void 0,
                                            end: void 0,
                                            columnSelectMode: void 0,
                                            ydisp: void 0
                                        }
                                    }
                                    resize(e) {
                                        super.resize(e), this._selectionModel.selectionStart && this._selectionModel.selectionEnd && (this._clearState(), this._redrawSelection(this._selectionModel.selectionStart, this._selectionModel.selectionEnd, this._selectionModel.columnSelectMode))
                                    }
                                    reset() {
                                        this._state.start && this._state.end && (this._clearState(), this._clearAll())
                                    }
                                    handleBlur() {
                                        this.reset(), this._redrawSelection(this._selectionModel.selectionStart, this._selectionModel.selectionEnd, this._selectionModel.columnSelectMode)
                                    }
                                    handleFocus() {
                                        this.reset(), this._redrawSelection(this._selectionModel.selectionStart, this._selectionModel.selectionEnd, this._selectionModel.columnSelectMode)
                                    }
                                    handleSelectionChanged(e, t, i) {
                                        super.handleSelectionChanged(e, t, i), this._redrawSelection(e, t, i)
                                    }
                                    _redrawSelection(e, t, i) {
                                        if (!this._didStateChange(e, t, i, this._bufferService.buffer.ydisp)) return;
                                        if (this._clearAll(), !e || !t) return void this._clearState();
                                        const r = e[1] - this._bufferService.buffer.ydisp,
                                            s = t[1] - this._bufferService.buffer.ydisp,
                                            n = Math.max(r, 0),
                                            o = Math.min(s, this._bufferService.rows - 1);
                                        if (n >= this._bufferService.rows || o < 0) this._state.ydisp = this._bufferService.buffer.ydisp;
                                        else {
                                            if (this._ctx.fillStyle = (this._coreBrowserService.isFocused ? this._themeService.colors.selectionBackgroundTransparent : this._themeService.colors.selectionInactiveBackgroundTransparent).css, i) {
                                                const i = e[0],
                                                    r = t[0] - i,
                                                    s = o - n + 1;
                                                this._fillCells(i, n, r, s)
                                            } else {
                                                const i = r === n ? e[0] : 0,
                                                    a = n === s ? t[0] : this._bufferService.cols;
                                                this._fillCells(i, n, a - i, 1);
                                                const c = Math.max(o - n - 1, 0);
                                                if (this._fillCells(0, n + 1, this._bufferService.cols, c), n !== o) {
                                                    const e = s === o ? t[0] : this._bufferService.cols;
                                                    this._fillCells(0, o, e, 1)
                                                }
                                            }
                                            this._state.start = [e[0], e[1]], this._state.end = [t[0], t[1]], this._state.columnSelectMode = i, this._state.ydisp = this._bufferService.buffer.ydisp
                                        }
                                    }
                                    _didStateChange(e, t, i, r) {
                                        return !this._areCoordinatesEqual(e, this._state.start) || !this._areCoordinatesEqual(t, this._state.end) || i !== this._state.columnSelectMode || r !== this._state.ydisp
                                    }
                                    _areCoordinatesEqual(e, t) {
                                        return !(!e || !t) && e[0] === t[0] && e[1] === t[1]
                                    }
                                }
                                t.SelectionRenderLayer = s
                            },
                            744: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.TextRenderLayer = void 0;
                                const r = i(577),
                                    s = i(147),
                                    n = i(782),
                                    o = i(855),
                                    a = i(903),
                                    c = i(574);
                                class l extends a.BaseRenderLayer {
                                    constructor(e, t, i, r, s, o, a, l, h, u) {
                                        super(e, t, "text", i, r, u, s, o, l, h), this._characterJoinerService = a, this._characterWidth = 0, this._characterFont = "", this._characterOverlapCache = {}, this._workCell = new n.CellData, this._state = new c.GridCache, this.register(o.onSpecificOptionChange("allowTransparency", (e => this._setTransparency(e))))
                                    }
                                    resize(e) {
                                        super.resize(e);
                                        const t = this._getFont(!1, !1);
                                        this._characterWidth === e.device.char.width && this._characterFont === t || (this._characterWidth = e.device.char.width, this._characterFont = t, this._characterOverlapCache = {}), this._state.clear(), this._state.resize(this._bufferService.cols, this._bufferService.rows)
                                    }
                                    reset() {
                                        this._state.clear(), this._clearAll()
                                    }
                                    _forEachCell(e, t, i) {
                                        for (let s = e; s <= t; s++) {
                                            const e = s + this._bufferService.buffer.ydisp,
                                                t = this._bufferService.buffer.lines.get(e),
                                                n = this._characterJoinerService.getJoinedCharacters(e);
                                            for (let e = 0; e < this._bufferService.cols; e++) {
                                                t.loadCell(e, this._workCell);
                                                let a = this._workCell,
                                                    c = !1,
                                                    l = e;
                                                if (0 !== a.getWidth()) {
                                                    if (n.length > 0 && e === n[0][0]) {
                                                        c = !0;
                                                        const e = n.shift();
                                                        a = new r.JoinedCellData(this._workCell, t.translateToString(!0, e[0], e[1]), e[1] - e[0]), l = e[1] - 1
                                                    }!c && this._isOverlapping(a) && l < t.length - 1 && t.getCodePoint(l + 1) === o.NULL_CELL_CODE && (a.content &= -12582913, a.content |= 2 << 22), i(a, e, s), e = l
                                                }
                                            }
                                        }
                                    }
                                    _drawBackground(e, t) {
                                        const i = this._ctx,
                                            r = this._bufferService.cols;
                                        let n = 0,
                                            o = 0,
                                            a = null;
                                        i.save(), this._forEachCell(e, t, ((e, t, c) => {
                                            let l = null;
                                            e.isInverse() ? l = e.isFgDefault() ? this._themeService.colors.foreground.css : e.isFgRGB() ? `rgb(${s.AttributeData.toColorRGB(e.getFgColor()).join(",")})` : this._themeService.colors.ansi[e.getFgColor()].css : e.isBgRGB() ? l = `rgb(${s.AttributeData.toColorRGB(e.getBgColor()).join(",")})` : e.isBgPalette() && (l = this._themeService.colors.ansi[e.getBgColor()].css);
                                            let h = !1;
                                            this._decorationService.forEachDecorationAtCell(t, this._bufferService.buffer.ydisp + c, void 0, (e => {
                                                "top" !== e.options.layer && h || (e.backgroundColorRGB && (l = e.backgroundColorRGB.css), h = "top" === e.options.layer)
                                            })), null === a && (n = t, o = c), c !== o ? (i.fillStyle = a || "", this._fillCells(n, o, r - n, 1), n = t, o = c) : a !== l && (i.fillStyle = a || "", this._fillCells(n, o, t - n, 1), n = t, o = c), a = l
                                        })), null !== a && (i.fillStyle = a, this._fillCells(n, o, r - n, 1)), i.restore()
                                    }
                                    _drawForeground(e, t) {
                                        this._forEachCell(e, t, ((e, t, i) => this._drawChars(e, t, i)))
                                    }
                                    handleGridChanged(e, t) {
                                        0 !== this._state.cache.length && (this._charAtlas && this._charAtlas.beginFrame(), this._clearCells(0, e, this._bufferService.cols, t - e + 1), this._drawBackground(e, t), this._drawForeground(e, t))
                                    }
                                    _isOverlapping(e) {
                                        if (1 !== e.getWidth()) return !1;
                                        if (e.getCode() < 256) return !1;
                                        const t = e.getChars();
                                        if (this._characterOverlapCache.hasOwnProperty(t)) return this._characterOverlapCache[t];
                                        this._ctx.save(), this._ctx.font = this._characterFont;
                                        const i = Math.floor(this._ctx.measureText(t).width) > this._characterWidth;
                                        return this._ctx.restore(), this._characterOverlapCache[t] = i, i
                                    }
                                }
                                t.TextRenderLayer = l
                            },
                            274: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CellColorResolver = void 0;
                                const r = i(855),
                                    s = i(160),
                                    n = i(374);
                                let o, a = 0,
                                    c = 0,
                                    l = !1,
                                    h = !1,
                                    u = !1,
                                    d = 0;
                                t.CellColorResolver = class {
                                    constructor(e, t, i, r, s, n) {
                                        this._terminal = e, this._optionService = t, this._selectionRenderModel = i, this._decorationService = r, this._coreBrowserService = s, this._themeService = n, this.result = {
                                            fg: 0,
                                            bg: 0,
                                            ext: 0
                                        }
                                    }
                                    resolve(e, t, i, f) {
                                        if (this.result.bg = e.bg, this.result.fg = e.fg, this.result.ext = 268435456 & e.bg ? e.extended.ext : 0, c = 0, a = 0, h = !1, l = !1, u = !1, o = this._themeService.colors, d = 0, e.getCode() !== r.NULL_CELL_CODE && 4 === e.extended.underlineStyle) {
                                            const e = Math.max(1, Math.floor(this._optionService.rawOptions.fontSize * this._coreBrowserService.dpr / 15));
                                            d = t * f % (2 * Math.round(e))
                                        }
                                        if (this._decorationService.forEachDecorationAtCell(t, i, "bottom", (e => {
                                                e.backgroundColorRGB && (c = e.backgroundColorRGB.rgba >> 8 & 16777215, h = !0), e.foregroundColorRGB && (a = e.foregroundColorRGB.rgba >> 8 & 16777215, l = !0)
                                            })), u = this._selectionRenderModel.isCellSelected(this._terminal, t, i), u) {
                                            if (67108864 & this.result.fg || 0 != (50331648 & this.result.bg)) {
                                                if (67108864 & this.result.fg) switch (50331648 & this.result.fg) {
                                                    case 16777216:
                                                    case 33554432:
                                                        c = this._themeService.colors.ansi[255 & this.result.fg].rgba;
                                                        break;
                                                    case 50331648:
                                                        c = (16777215 & this.result.fg) << 8 | 255;
                                                        break;
                                                    default:
                                                        c = this._themeService.colors.foreground.rgba
                                                } else switch (50331648 & this.result.bg) {
                                                    case 16777216:
                                                    case 33554432:
                                                        c = this._themeService.colors.ansi[255 & this.result.bg].rgba;
                                                        break;
                                                    case 50331648:
                                                        c = (16777215 & this.result.bg) << 8 | 255
                                                }
                                                c = s.rgba.blend(c, 4294967040 & (this._coreBrowserService.isFocused ? o.selectionBackgroundOpaque : o.selectionInactiveBackgroundOpaque).rgba | 128) >> 8 & 16777215
                                            } else c = (this._coreBrowserService.isFocused ? o.selectionBackgroundOpaque : o.selectionInactiveBackgroundOpaque).rgba >> 8 & 16777215;
                                            if (h = !0, o.selectionForeground && (a = o.selectionForeground.rgba >> 8 & 16777215, l = !0), (0, n.treatGlyphAsBackgroundColor)(e.getCode())) {
                                                if (67108864 & this.result.fg && 0 == (50331648 & this.result.bg)) a = (this._coreBrowserService.isFocused ? o.selectionBackgroundOpaque : o.selectionInactiveBackgroundOpaque).rgba >> 8 & 16777215;
                                                else {
                                                    if (67108864 & this.result.fg) switch (50331648 & this.result.bg) {
                                                        case 16777216:
                                                        case 33554432:
                                                            a = this._themeService.colors.ansi[255 & this.result.bg].rgba;
                                                            break;
                                                        case 50331648:
                                                            a = (16777215 & this.result.bg) << 8 | 255
                                                    } else switch (50331648 & this.result.fg) {
                                                        case 16777216:
                                                        case 33554432:
                                                            a = this._themeService.colors.ansi[255 & this.result.fg].rgba;
                                                            break;
                                                        case 50331648:
                                                            a = (16777215 & this.result.fg) << 8 | 255;
                                                            break;
                                                        default:
                                                            a = this._themeService.colors.foreground.rgba
                                                    }
                                                    a = s.rgba.blend(a, 4294967040 & (this._coreBrowserService.isFocused ? o.selectionBackgroundOpaque : o.selectionInactiveBackgroundOpaque).rgba | 128) >> 8 & 16777215
                                                }
                                                l = !0
                                            }
                                        }
                                        this._decorationService.forEachDecorationAtCell(t, i, "top", (e => {
                                            e.backgroundColorRGB && (c = e.backgroundColorRGB.rgba >> 8 & 16777215, h = !0), e.foregroundColorRGB && (a = e.foregroundColorRGB.rgba >> 8 & 16777215, l = !0)
                                        })), h && (c = u ? -16777216 & e.bg & -134217729 | c | 50331648 : -16777216 & e.bg | c | 50331648), l && (a = -16777216 & e.fg & -67108865 | a | 50331648), 67108864 & this.result.fg && (h && !l && (a = 0 == (50331648 & this.result.bg) ? -134217728 & this.result.fg | 16777215 & o.background.rgba >> 8 | 50331648 : -134217728 & this.result.fg | 67108863 & this.result.bg, l = !0), !h && l && (c = 0 == (50331648 & this.result.fg) ? -67108864 & this.result.bg | 16777215 & o.foreground.rgba >> 8 | 50331648 : -67108864 & this.result.bg | 67108863 & this.result.fg, h = !0)), o = void 0, this.result.bg = h ? c : this.result.bg, this.result.fg = l ? a : this.result.fg, this.result.ext &= 536870911, this.result.ext |= d << 29 & 3758096384
                                    }
                                }
                            },
                            627: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.removeTerminalFromCache = t.acquireTextureAtlas = void 0;
                                const r = i(509),
                                    s = i(197),
                                    n = [];
                                t.acquireTextureAtlas = function(e, t, i, o, a, c, l, h) {
                                    const u = (0, s.generateConfig)(o, a, c, l, t, i, h);
                                    for (let t = 0; t < n.length; t++) {
                                        const i = n[t],
                                            r = i.ownedBy.indexOf(e);
                                        if (r >= 0) {
                                            if ((0, s.configEquals)(i.config, u)) return i.atlas;
                                            1 === i.ownedBy.length ? (i.atlas.dispose(), n.splice(t, 1)) : i.ownedBy.splice(r, 1);
                                            break
                                        }
                                    }
                                    for (let t = 0; t < n.length; t++) {
                                        const i = n[t];
                                        if ((0, s.configEquals)(i.config, u)) return i.ownedBy.push(e), i.atlas
                                    }
                                    const d = e._core,
                                        f = {
                                            atlas: new r.TextureAtlas(document, u, d.unicodeService),
                                            config: u,
                                            ownedBy: [e]
                                        };
                                    return n.push(f), f.atlas
                                }, t.removeTerminalFromCache = function(e) {
                                    for (let t = 0; t < n.length; t++) {
                                        const i = n[t].ownedBy.indexOf(e);
                                        if (-1 !== i) {
                                            1 === n[t].ownedBy.length ? (n[t].atlas.dispose(), n.splice(t, 1)) : n[t].ownedBy.splice(i, 1);
                                            break
                                        }
                                    }
                                }
                            },
                            197: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.is256Color = t.configEquals = t.generateConfig = void 0;
                                const r = i(160);
                                t.generateConfig = function(e, t, i, s, n, o, a) {
                                    const c = {
                                        foreground: o.foreground,
                                        background: o.background,
                                        cursor: r.NULL_COLOR,
                                        cursorAccent: r.NULL_COLOR,
                                        selectionForeground: r.NULL_COLOR,
                                        selectionBackgroundTransparent: r.NULL_COLOR,
                                        selectionBackgroundOpaque: r.NULL_COLOR,
                                        selectionInactiveBackgroundTransparent: r.NULL_COLOR,
                                        selectionInactiveBackgroundOpaque: r.NULL_COLOR,
                                        ansi: o.ansi.slice(),
                                        contrastCache: o.contrastCache,
                                        halfContrastCache: o.halfContrastCache
                                    };
                                    return {
                                        customGlyphs: n.customGlyphs,
                                        devicePixelRatio: a,
                                        letterSpacing: n.letterSpacing,
                                        lineHeight: n.lineHeight,
                                        deviceCellWidth: e,
                                        deviceCellHeight: t,
                                        deviceCharWidth: i,
                                        deviceCharHeight: s,
                                        fontFamily: n.fontFamily,
                                        fontSize: n.fontSize,
                                        fontWeight: n.fontWeight,
                                        fontWeightBold: n.fontWeightBold,
                                        allowTransparency: n.allowTransparency,
                                        drawBoldTextInBrightColors: n.drawBoldTextInBrightColors,
                                        minimumContrastRatio: n.minimumContrastRatio,
                                        colors: c
                                    }
                                }, t.configEquals = function(e, t) {
                                    for (let i = 0; i < e.colors.ansi.length; i++)
                                        if (e.colors.ansi[i].rgba !== t.colors.ansi[i].rgba) return !1;
                                    return e.devicePixelRatio === t.devicePixelRatio && e.customGlyphs === t.customGlyphs && e.lineHeight === t.lineHeight && e.letterSpacing === t.letterSpacing && e.fontFamily === t.fontFamily && e.fontSize === t.fontSize && e.fontWeight === t.fontWeight && e.fontWeightBold === t.fontWeightBold && e.allowTransparency === t.allowTransparency && e.deviceCharWidth === t.deviceCharWidth && e.deviceCharHeight === t.deviceCharHeight && e.drawBoldTextInBrightColors === t.drawBoldTextInBrightColors && e.minimumContrastRatio === t.minimumContrastRatio && e.colors.foreground.rgba === t.colors.foreground.rgba && e.colors.background.rgba === t.colors.background.rgba
                                }, t.is256Color = function(e) {
                                    return 16777216 == (50331648 & e) || 33554432 == (50331648 & e)
                                }
                            },
                            237: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.TEXT_BASELINE = t.DIM_OPACITY = t.INVERTED_DEFAULT_COLOR = void 0;
                                const r = i(399);
                                t.INVERTED_DEFAULT_COLOR = 257, t.DIM_OPACITY = .5, t.TEXT_BASELINE = r.isFirefox || r.isLegacyEdge ? "bottom" : "ideographic"
                            },
                            457: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CursorBlinkStateManager = void 0, t.CursorBlinkStateManager = class {
                                    constructor(e, t) {
                                        this._renderCallback = e, this._coreBrowserService = t, this.isCursorVisible = !0, this._coreBrowserService.isFocused && this._restartInterval()
                                    }
                                    get isPaused() {
                                        return !(this._blinkStartTimeout || this._blinkInterval)
                                    }
                                    dispose() {
                                        this._blinkInterval && (this._coreBrowserService.window.clearInterval(this._blinkInterval), this._blinkInterval = void 0), this._blinkStartTimeout && (this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout), this._blinkStartTimeout = void 0), this._animationFrame && (this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame), this._animationFrame = void 0)
                                    }
                                    restartBlinkAnimation() {
                                        this.isPaused || (this._animationTimeRestarted = Date.now(), this.isCursorVisible = !0, this._animationFrame || (this._animationFrame = this._coreBrowserService.window.requestAnimationFrame((() => {
                                            this._renderCallback(), this._animationFrame = void 0
                                        }))))
                                    }
                                    _restartInterval(e = 600) {
                                        this._blinkInterval && (this._coreBrowserService.window.clearInterval(this._blinkInterval), this._blinkInterval = void 0), this._blinkStartTimeout = this._coreBrowserService.window.setTimeout((() => {
                                            if (this._animationTimeRestarted) {
                                                const e = 600 - (Date.now() - this._animationTimeRestarted);
                                                if (this._animationTimeRestarted = void 0, e > 0) return void this._restartInterval(e)
                                            }
                                            this.isCursorVisible = !1, this._animationFrame = this._coreBrowserService.window.requestAnimationFrame((() => {
                                                this._renderCallback(), this._animationFrame = void 0
                                            })), this._blinkInterval = this._coreBrowserService.window.setInterval((() => {
                                                if (this._animationTimeRestarted) {
                                                    const e = 600 - (Date.now() - this._animationTimeRestarted);
                                                    return this._animationTimeRestarted = void 0, void this._restartInterval(e)
                                                }
                                                this.isCursorVisible = !this.isCursorVisible, this._animationFrame = this._coreBrowserService.window.requestAnimationFrame((() => {
                                                    this._renderCallback(), this._animationFrame = void 0
                                                }))
                                            }), 600)
                                        }), e)
                                    }
                                    pause() {
                                        this.isCursorVisible = !0, this._blinkInterval && (this._coreBrowserService.window.clearInterval(this._blinkInterval), this._blinkInterval = void 0), this._blinkStartTimeout && (this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout), this._blinkStartTimeout = void 0), this._animationFrame && (this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame), this._animationFrame = void 0)
                                    }
                                    resume() {
                                        this.pause(), this._animationTimeRestarted = void 0, this._restartInterval(), this.restartBlinkAnimation()
                                    }
                                }
                            },
                            860: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.tryDrawCustomChar = t.powerlineDefinitions = t.boxDrawingDefinitions = t.blockElementDefinitions = void 0;
                                const r = i(374);
                                t.blockElementDefinitions = {
                                    "▀": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 4
                                    }],
                                    "▁": [{
                                        x: 0,
                                        y: 7,
                                        w: 8,
                                        h: 1
                                    }],
                                    "▂": [{
                                        x: 0,
                                        y: 6,
                                        w: 8,
                                        h: 2
                                    }],
                                    "▃": [{
                                        x: 0,
                                        y: 5,
                                        w: 8,
                                        h: 3
                                    }],
                                    "▄": [{
                                        x: 0,
                                        y: 4,
                                        w: 8,
                                        h: 4
                                    }],
                                    "▅": [{
                                        x: 0,
                                        y: 3,
                                        w: 8,
                                        h: 5
                                    }],
                                    "▆": [{
                                        x: 0,
                                        y: 2,
                                        w: 8,
                                        h: 6
                                    }],
                                    "▇": [{
                                        x: 0,
                                        y: 1,
                                        w: 8,
                                        h: 7
                                    }],
                                    "█": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 8
                                    }],
                                    "▉": [{
                                        x: 0,
                                        y: 0,
                                        w: 7,
                                        h: 8
                                    }],
                                    "▊": [{
                                        x: 0,
                                        y: 0,
                                        w: 6,
                                        h: 8
                                    }],
                                    "▋": [{
                                        x: 0,
                                        y: 0,
                                        w: 5,
                                        h: 8
                                    }],
                                    "▌": [{
                                        x: 0,
                                        y: 0,
                                        w: 4,
                                        h: 8
                                    }],
                                    "▍": [{
                                        x: 0,
                                        y: 0,
                                        w: 3,
                                        h: 8
                                    }],
                                    "▎": [{
                                        x: 0,
                                        y: 0,
                                        w: 2,
                                        h: 8
                                    }],
                                    "▏": [{
                                        x: 0,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "▐": [{
                                        x: 4,
                                        y: 0,
                                        w: 4,
                                        h: 8
                                    }],
                                    "▔": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 1
                                    }],
                                    "▕": [{
                                        x: 7,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "▖": [{
                                        x: 0,
                                        y: 4,
                                        w: 4,
                                        h: 4
                                    }],
                                    "▗": [{
                                        x: 4,
                                        y: 4,
                                        w: 4,
                                        h: 4
                                    }],
                                    "▘": [{
                                        x: 0,
                                        y: 0,
                                        w: 4,
                                        h: 4
                                    }],
                                    "▙": [{
                                        x: 0,
                                        y: 0,
                                        w: 4,
                                        h: 8
                                    }, {
                                        x: 0,
                                        y: 4,
                                        w: 8,
                                        h: 4
                                    }],
                                    "▚": [{
                                        x: 0,
                                        y: 0,
                                        w: 4,
                                        h: 4
                                    }, {
                                        x: 4,
                                        y: 4,
                                        w: 4,
                                        h: 4
                                    }],
                                    "▛": [{
                                        x: 0,
                                        y: 0,
                                        w: 4,
                                        h: 8
                                    }, {
                                        x: 4,
                                        y: 0,
                                        w: 4,
                                        h: 4
                                    }],
                                    "▜": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 4
                                    }, {
                                        x: 4,
                                        y: 0,
                                        w: 4,
                                        h: 8
                                    }],
                                    "▝": [{
                                        x: 4,
                                        y: 0,
                                        w: 4,
                                        h: 4
                                    }],
                                    "▞": [{
                                        x: 4,
                                        y: 0,
                                        w: 4,
                                        h: 4
                                    }, {
                                        x: 0,
                                        y: 4,
                                        w: 4,
                                        h: 4
                                    }],
                                    "▟": [{
                                        x: 4,
                                        y: 0,
                                        w: 4,
                                        h: 8
                                    }, {
                                        x: 0,
                                        y: 4,
                                        w: 8,
                                        h: 4
                                    }],
                                    "🭰": [{
                                        x: 1,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "🭱": [{
                                        x: 2,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "🭲": [{
                                        x: 3,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "🭳": [{
                                        x: 4,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "🭴": [{
                                        x: 5,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "🭵": [{
                                        x: 6,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "🭶": [{
                                        x: 0,
                                        y: 1,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭷": [{
                                        x: 0,
                                        y: 2,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭸": [{
                                        x: 0,
                                        y: 3,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭹": [{
                                        x: 0,
                                        y: 4,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭺": [{
                                        x: 0,
                                        y: 5,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭻": [{
                                        x: 0,
                                        y: 6,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭼": [{
                                        x: 0,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }, {
                                        x: 0,
                                        y: 7,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭽": [{
                                        x: 0,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }, {
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭾": [{
                                        x: 7,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }, {
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭿": [{
                                        x: 7,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }, {
                                        x: 0,
                                        y: 7,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🮀": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 1
                                    }, {
                                        x: 0,
                                        y: 7,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🮁": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 1
                                    }, {
                                        x: 0,
                                        y: 2,
                                        w: 8,
                                        h: 1
                                    }, {
                                        x: 0,
                                        y: 4,
                                        w: 8,
                                        h: 1
                                    }, {
                                        x: 0,
                                        y: 7,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🮂": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 2
                                    }],
                                    "🮃": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 3
                                    }],
                                    "🮄": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 5
                                    }],
                                    "🮅": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 6
                                    }],
                                    "🮆": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 7
                                    }],
                                    "🮇": [{
                                        x: 6,
                                        y: 0,
                                        w: 2,
                                        h: 8
                                    }],
                                    "🮈": [{
                                        x: 5,
                                        y: 0,
                                        w: 3,
                                        h: 8
                                    }],
                                    "🮉": [{
                                        x: 3,
                                        y: 0,
                                        w: 5,
                                        h: 8
                                    }],
                                    "🮊": [{
                                        x: 2,
                                        y: 0,
                                        w: 6,
                                        h: 8
                                    }],
                                    "🮋": [{
                                        x: 1,
                                        y: 0,
                                        w: 7,
                                        h: 8
                                    }],
                                    "🮕": [{
                                        x: 0,
                                        y: 0,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 4,
                                        y: 0,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 2,
                                        y: 2,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 6,
                                        y: 2,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 0,
                                        y: 4,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 4,
                                        y: 4,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 2,
                                        y: 6,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 6,
                                        y: 6,
                                        w: 2,
                                        h: 2
                                    }],
                                    "🮖": [{
                                        x: 2,
                                        y: 0,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 6,
                                        y: 0,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 0,
                                        y: 2,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 4,
                                        y: 2,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 2,
                                        y: 4,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 6,
                                        y: 4,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 0,
                                        y: 6,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 4,
                                        y: 6,
                                        w: 2,
                                        h: 2
                                    }],
                                    "🮗": [{
                                        x: 0,
                                        y: 2,
                                        w: 8,
                                        h: 2
                                    }, {
                                        x: 0,
                                        y: 6,
                                        w: 8,
                                        h: 2
                                    }]
                                };
                                const s = {
                                    "░": [
                                        [1, 0, 0, 0],
                                        [0, 0, 0, 0],
                                        [0, 0, 1, 0],
                                        [0, 0, 0, 0]
                                    ],
                                    "▒": [
                                        [1, 0],
                                        [0, 0],
                                        [0, 1],
                                        [0, 0]
                                    ],
                                    "▓": [
                                        [0, 1],
                                        [1, 1],
                                        [1, 0],
                                        [1, 1]
                                    ]
                                };
                                t.boxDrawingDefinitions = {
                                    "─": {
                                        1: "M0,.5 L1,.5"
                                    },
                                    "━": {
                                        3: "M0,.5 L1,.5"
                                    },
                                    "│": {
                                        1: "M.5,0 L.5,1"
                                    },
                                    "┃": {
                                        3: "M.5,0 L.5,1"
                                    },
                                    "┌": {
                                        1: "M0.5,1 L.5,.5 L1,.5"
                                    },
                                    "┏": {
                                        3: "M0.5,1 L.5,.5 L1,.5"
                                    },
                                    "┐": {
                                        1: "M0,.5 L.5,.5 L.5,1"
                                    },
                                    "┓": {
                                        3: "M0,.5 L.5,.5 L.5,1"
                                    },
                                    "└": {
                                        1: "M.5,0 L.5,.5 L1,.5"
                                    },
                                    "┗": {
                                        3: "M.5,0 L.5,.5 L1,.5"
                                    },
                                    "┘": {
                                        1: "M.5,0 L.5,.5 L0,.5"
                                    },
                                    "┛": {
                                        3: "M.5,0 L.5,.5 L0,.5"
                                    },
                                    "├": {
                                        1: "M.5,0 L.5,1 M.5,.5 L1,.5"
                                    },
                                    "┣": {
                                        3: "M.5,0 L.5,1 M.5,.5 L1,.5"
                                    },
                                    "┤": {
                                        1: "M.5,0 L.5,1 M.5,.5 L0,.5"
                                    },
                                    "┫": {
                                        3: "M.5,0 L.5,1 M.5,.5 L0,.5"
                                    },
                                    "┬": {
                                        1: "M0,.5 L1,.5 M.5,.5 L.5,1"
                                    },
                                    "┳": {
                                        3: "M0,.5 L1,.5 M.5,.5 L.5,1"
                                    },
                                    "┴": {
                                        1: "M0,.5 L1,.5 M.5,.5 L.5,0"
                                    },
                                    "┻": {
                                        3: "M0,.5 L1,.5 M.5,.5 L.5,0"
                                    },
                                    "┼": {
                                        1: "M0,.5 L1,.5 M.5,0 L.5,1"
                                    },
                                    "╋": {
                                        3: "M0,.5 L1,.5 M.5,0 L.5,1"
                                    },
                                    "╴": {
                                        1: "M.5,.5 L0,.5"
                                    },
                                    "╸": {
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "╵": {
                                        1: "M.5,.5 L.5,0"
                                    },
                                    "╹": {
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "╶": {
                                        1: "M.5,.5 L1,.5"
                                    },
                                    "╺": {
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "╷": {
                                        1: "M.5,.5 L.5,1"
                                    },
                                    "╻": {
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "═": {
                                        1: (e, t) => `M0,${.5-t} L1,${.5-t} M0,${.5+t} L1,${.5+t}`
                                    },
                                    "║": {
                                        1: (e, t) => `M${.5-e},0 L${.5-e},1 M${.5+e},0 L${.5+e},1`
                                    },
                                    "╒": {
                                        1: (e, t) => `M.5,1 L.5,${.5-t} L1,${.5-t} M.5,${.5+t} L1,${.5+t}`
                                    },
                                    "╓": {
                                        1: (e, t) => `M${.5-e},1 L${.5-e},.5 L1,.5 M${.5+e},.5 L${.5+e},1`
                                    },
                                    "╔": {
                                        1: (e, t) => `M1,${.5-t} L${.5-e},${.5-t} L${.5-e},1 M1,${.5+t} L${.5+e},${.5+t} L${.5+e},1`
                                    },
                                    "╕": {
                                        1: (e, t) => `M0,${.5-t} L.5,${.5-t} L.5,1 M0,${.5+t} L.5,${.5+t}`
                                    },
                                    "╖": {
                                        1: (e, t) => `M${.5+e},1 L${.5+e},.5 L0,.5 M${.5-e},.5 L${.5-e},1`
                                    },
                                    "╗": {
                                        1: (e, t) => `M0,${.5+t} L${.5-e},${.5+t} L${.5-e},1 M0,${.5-t} L${.5+e},${.5-t} L${.5+e},1`
                                    },
                                    "╘": {
                                        1: (e, t) => `M.5,0 L.5,${.5+t} L1,${.5+t} M.5,${.5-t} L1,${.5-t}`
                                    },
                                    "╙": {
                                        1: (e, t) => `M1,.5 L${.5-e},.5 L${.5-e},0 M${.5+e},.5 L${.5+e},0`
                                    },
                                    "╚": {
                                        1: (e, t) => `M1,${.5-t} L${.5+e},${.5-t} L${.5+e},0 M1,${.5+t} L${.5-e},${.5+t} L${.5-e},0`
                                    },
                                    "╛": {
                                        1: (e, t) => `M0,${.5+t} L.5,${.5+t} L.5,0 M0,${.5-t} L.5,${.5-t}`
                                    },
                                    "╜": {
                                        1: (e, t) => `M0,.5 L${.5+e},.5 L${.5+e},0 M${.5-e},.5 L${.5-e},0`
                                    },
                                    "╝": {
                                        1: (e, t) => `M0,${.5-t} L${.5-e},${.5-t} L${.5-e},0 M0,${.5+t} L${.5+e},${.5+t} L${.5+e},0`
                                    },
                                    "╞": {
                                        1: (e, t) => `M.5,0 L.5,1 M.5,${.5-t} L1,${.5-t} M.5,${.5+t} L1,${.5+t}`
                                    },
                                    "╟": {
                                        1: (e, t) => `M${.5-e},0 L${.5-e},1 M${.5+e},0 L${.5+e},1 M${.5+e},.5 L1,.5`
                                    },
                                    "╠": {
                                        1: (e, t) => `M${.5-e},0 L${.5-e},1 M1,${.5+t} L${.5+e},${.5+t} L${.5+e},1 M1,${.5-t} L${.5+e},${.5-t} L${.5+e},0`
                                    },
                                    "╡": {
                                        1: (e, t) => `M.5,0 L.5,1 M0,${.5-t} L.5,${.5-t} M0,${.5+t} L.5,${.5+t}`
                                    },
                                    "╢": {
                                        1: (e, t) => `M0,.5 L${.5-e},.5 M${.5-e},0 L${.5-e},1 M${.5+e},0 L${.5+e},1`
                                    },
                                    "╣": {
                                        1: (e, t) => `M${.5+e},0 L${.5+e},1 M0,${.5+t} L${.5-e},${.5+t} L${.5-e},1 M0,${.5-t} L${.5-e},${.5-t} L${.5-e},0`
                                    },
                                    "╤": {
                                        1: (e, t) => `M0,${.5-t} L1,${.5-t} M0,${.5+t} L1,${.5+t} M.5,${.5+t} L.5,1`
                                    },
                                    "╥": {
                                        1: (e, t) => `M0,.5 L1,.5 M${.5-e},.5 L${.5-e},1 M${.5+e},.5 L${.5+e},1`
                                    },
                                    "╦": {
                                        1: (e, t) => `M0,${.5-t} L1,${.5-t} M0,${.5+t} L${.5-e},${.5+t} L${.5-e},1 M1,${.5+t} L${.5+e},${.5+t} L${.5+e},1`
                                    },
                                    "╧": {
                                        1: (e, t) => `M.5,0 L.5,${.5-t} M0,${.5-t} L1,${.5-t} M0,${.5+t} L1,${.5+t}`
                                    },
                                    "╨": {
                                        1: (e, t) => `M0,.5 L1,.5 M${.5-e},.5 L${.5-e},0 M${.5+e},.5 L${.5+e},0`
                                    },
                                    "╩": {
                                        1: (e, t) => `M0,${.5+t} L1,${.5+t} M0,${.5-t} L${.5-e},${.5-t} L${.5-e},0 M1,${.5-t} L${.5+e},${.5-t} L${.5+e},0`
                                    },
                                    "╪": {
                                        1: (e, t) => `M.5,0 L.5,1 M0,${.5-t} L1,${.5-t} M0,${.5+t} L1,${.5+t}`
                                    },
                                    "╫": {
                                        1: (e, t) => `M0,.5 L1,.5 M${.5-e},0 L${.5-e},1 M${.5+e},0 L${.5+e},1`
                                    },
                                    "╬": {
                                        1: (e, t) => `M0,${.5+t} L${.5-e},${.5+t} L${.5-e},1 M1,${.5+t} L${.5+e},${.5+t} L${.5+e},1 M0,${.5-t} L${.5-e},${.5-t} L${.5-e},0 M1,${.5-t} L${.5+e},${.5-t} L${.5+e},0`
                                    },
                                    "╱": {
                                        1: "M1,0 L0,1"
                                    },
                                    "╲": {
                                        1: "M0,0 L1,1"
                                    },
                                    "╳": {
                                        1: "M1,0 L0,1 M0,0 L1,1"
                                    },
                                    "╼": {
                                        1: "M.5,.5 L0,.5",
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "╽": {
                                        1: "M.5,.5 L.5,0",
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "╾": {
                                        1: "M.5,.5 L1,.5",
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "╿": {
                                        1: "M.5,.5 L.5,1",
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "┍": {
                                        1: "M.5,.5 L.5,1",
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "┎": {
                                        1: "M.5,.5 L1,.5",
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "┑": {
                                        1: "M.5,.5 L.5,1",
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "┒": {
                                        1: "M.5,.5 L0,.5",
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "┕": {
                                        1: "M.5,.5 L.5,0",
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "┖": {
                                        1: "M.5,.5 L1,.5",
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "┙": {
                                        1: "M.5,.5 L.5,0",
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "┚": {
                                        1: "M.5,.5 L0,.5",
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "┝": {
                                        1: "M.5,0 L.5,1",
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "┞": {
                                        1: "M0.5,1 L.5,.5 L1,.5",
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "┟": {
                                        1: "M.5,0 L.5,.5 L1,.5",
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "┠": {
                                        1: "M.5,.5 L1,.5",
                                        3: "M.5,0 L.5,1"
                                    },
                                    "┡": {
                                        1: "M.5,.5 L.5,1",
                                        3: "M.5,0 L.5,.5 L1,.5"
                                    },
                                    "┢": {
                                        1: "M.5,.5 L.5,0",
                                        3: "M0.5,1 L.5,.5 L1,.5"
                                    },
                                    "┥": {
                                        1: "M.5,0 L.5,1",
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "┦": {
                                        1: "M0,.5 L.5,.5 L.5,1",
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "┧": {
                                        1: "M.5,0 L.5,.5 L0,.5",
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "┨": {
                                        1: "M.5,.5 L0,.5",
                                        3: "M.5,0 L.5,1"
                                    },
                                    "┩": {
                                        1: "M.5,.5 L.5,1",
                                        3: "M.5,0 L.5,.5 L0,.5"
                                    },
                                    "┪": {
                                        1: "M.5,.5 L.5,0",
                                        3: "M0,.5 L.5,.5 L.5,1"
                                    },
                                    "┭": {
                                        1: "M0.5,1 L.5,.5 L1,.5",
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "┮": {
                                        1: "M0,.5 L.5,.5 L.5,1",
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "┯": {
                                        1: "M.5,.5 L.5,1",
                                        3: "M0,.5 L1,.5"
                                    },
                                    "┰": {
                                        1: "M0,.5 L1,.5",
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "┱": {
                                        1: "M.5,.5 L1,.5",
                                        3: "M0,.5 L.5,.5 L.5,1"
                                    },
                                    "┲": {
                                        1: "M.5,.5 L0,.5",
                                        3: "M0.5,1 L.5,.5 L1,.5"
                                    },
                                    "┵": {
                                        1: "M.5,0 L.5,.5 L1,.5",
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "┶": {
                                        1: "M.5,0 L.5,.5 L0,.5",
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "┷": {
                                        1: "M.5,.5 L.5,0",
                                        3: "M0,.5 L1,.5"
                                    },
                                    "┸": {
                                        1: "M0,.5 L1,.5",
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "┹": {
                                        1: "M.5,.5 L1,.5",
                                        3: "M.5,0 L.5,.5 L0,.5"
                                    },
                                    "┺": {
                                        1: "M.5,.5 L0,.5",
                                        3: "M.5,0 L.5,.5 L1,.5"
                                    },
                                    "┽": {
                                        1: "M.5,0 L.5,1 M.5,.5 L1,.5",
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "┾": {
                                        1: "M.5,0 L.5,1 M.5,.5 L0,.5",
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "┿": {
                                        1: "M.5,0 L.5,1",
                                        3: "M0,.5 L1,.5"
                                    },
                                    "╀": {
                                        1: "M0,.5 L1,.5 M.5,.5 L.5,1",
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "╁": {
                                        1: "M.5,.5 L.5,0 M0,.5 L1,.5",
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "╂": {
                                        1: "M0,.5 L1,.5",
                                        3: "M.5,0 L.5,1"
                                    },
                                    "╃": {
                                        1: "M0.5,1 L.5,.5 L1,.5",
                                        3: "M.5,0 L.5,.5 L0,.5"
                                    },
                                    "╄": {
                                        1: "M0,.5 L.5,.5 L.5,1",
                                        3: "M.5,0 L.5,.5 L1,.5"
                                    },
                                    "╅": {
                                        1: "M.5,0 L.5,.5 L1,.5",
                                        3: "M0,.5 L.5,.5 L.5,1"
                                    },
                                    "╆": {
                                        1: "M.5,0 L.5,.5 L0,.5",
                                        3: "M0.5,1 L.5,.5 L1,.5"
                                    },
                                    "╇": {
                                        1: "M.5,.5 L.5,1",
                                        3: "M.5,.5 L.5,0 M0,.5 L1,.5"
                                    },
                                    "╈": {
                                        1: "M.5,.5 L.5,0",
                                        3: "M0,.5 L1,.5 M.5,.5 L.5,1"
                                    },
                                    "╉": {
                                        1: "M.5,.5 L1,.5",
                                        3: "M.5,0 L.5,1 M.5,.5 L0,.5"
                                    },
                                    "╊": {
                                        1: "M.5,.5 L0,.5",
                                        3: "M.5,0 L.5,1 M.5,.5 L1,.5"
                                    },
                                    "╌": {
                                        1: "M.1,.5 L.4,.5 M.6,.5 L.9,.5"
                                    },
                                    "╍": {
                                        3: "M.1,.5 L.4,.5 M.6,.5 L.9,.5"
                                    },
                                    "┄": {
                                        1: "M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5"
                                    },
                                    "┅": {
                                        3: "M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5"
                                    },
                                    "┈": {
                                        1: "M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5"
                                    },
                                    "┉": {
                                        3: "M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5"
                                    },
                                    "╎": {
                                        1: "M.5,.1 L.5,.4 M.5,.6 L.5,.9"
                                    },
                                    "╏": {
                                        3: "M.5,.1 L.5,.4 M.5,.6 L.5,.9"
                                    },
                                    "┆": {
                                        1: "M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333"
                                    },
                                    "┇": {
                                        3: "M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333"
                                    },
                                    "┊": {
                                        1: "M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95"
                                    },
                                    "┋": {
                                        3: "M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95"
                                    },
                                    "╭": {
                                        1: (e, t) => `M.5,1 L.5,${.5+t/.15*.5} C.5,${.5+t/.15*.5},.5,.5,1,.5`
                                    },
                                    "╮": {
                                        1: (e, t) => `M.5,1 L.5,${.5+t/.15*.5} C.5,${.5+t/.15*.5},.5,.5,0,.5`
                                    },
                                    "╯": {
                                        1: (e, t) => `M.5,0 L.5,${.5-t/.15*.5} C.5,${.5-t/.15*.5},.5,.5,0,.5`
                                    },
                                    "╰": {
                                        1: (e, t) => `M.5,0 L.5,${.5-t/.15*.5} C.5,${.5-t/.15*.5},.5,.5,1,.5`
                                    }
                                }, t.powerlineDefinitions = {
                                    "": {
                                        d: "M0,0 L1,.5 L0,1",
                                        type: 0,
                                        rightPadding: 2
                                    },
                                    "": {
                                        d: "M-1,-.5 L1,.5 L-1,1.5",
                                        type: 1,
                                        leftPadding: 1,
                                        rightPadding: 1
                                    },
                                    "": {
                                        d: "M1,0 L0,.5 L1,1",
                                        type: 0,
                                        leftPadding: 2
                                    },
                                    "": {
                                        d: "M2,-.5 L0,.5 L2,1.5",
                                        type: 1,
                                        leftPadding: 1,
                                        rightPadding: 1
                                    },
                                    "": {
                                        d: "M0,0 L0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0",
                                        type: 0,
                                        rightPadding: 1
                                    },
                                    "": {
                                        d: "M.2,1 C.422,1,.8,.826,.78,.5 C.8,.174,0.422,0,.2,0",
                                        type: 1,
                                        rightPadding: 1
                                    },
                                    "": {
                                        d: "M1,0 L1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0",
                                        type: 0,
                                        leftPadding: 1
                                    },
                                    "": {
                                        d: "M.8,1 C0.578,1,0.2,.826,.22,.5 C0.2,0.174,0.578,0,0.8,0",
                                        type: 1,
                                        leftPadding: 1
                                    },
                                    "": {
                                        d: "M-.5,-.5 L1.5,1.5 L-.5,1.5",
                                        type: 0
                                    },
                                    "": {
                                        d: "M-.5,-.5 L1.5,1.5",
                                        type: 1,
                                        leftPadding: 1,
                                        rightPadding: 1
                                    },
                                    "": {
                                        d: "M1.5,-.5 L-.5,1.5 L1.5,1.5",
                                        type: 0
                                    },
                                    "": {
                                        d: "M1.5,-.5 L-.5,1.5 L-.5,-.5",
                                        type: 0
                                    },
                                    "": {
                                        d: "M1.5,-.5 L-.5,1.5",
                                        type: 1,
                                        leftPadding: 1,
                                        rightPadding: 1
                                    },
                                    "": {
                                        d: "M-.5,-.5 L1.5,1.5 L1.5,-.5",
                                        type: 0
                                    }
                                }, t.powerlineDefinitions[""] = t.powerlineDefinitions[""], t.powerlineDefinitions[""] = t.powerlineDefinitions[""], t.tryDrawCustomChar = function(e, i, o, l, h, u, d, f) {
                                    const p = t.blockElementDefinitions[i];
                                    if (p) return function(e, t, i, r, s, n) {
                                        for (let o = 0; o < t.length; o++) {
                                            const a = t[o],
                                                c = s / 8,
                                                l = n / 8;
                                            e.fillRect(i + a.x * c, r + a.y * l, a.w * c, a.h * l)
                                        }
                                    }(e, p, o, l, h, u), !0;
                                    const _ = s[i];
                                    if (_) return function(e, t, i, s, o, a) {
                                        let c = n.get(t);
                                        c || (c = new Map, n.set(t, c));
                                        const l = e.fillStyle;
                                        if ("string" != typeof l) throw new Error(`Unexpected fillStyle type "${l}"`);
                                        let h = c.get(l);
                                        if (!h) {
                                            const i = t[0].length,
                                                s = t.length,
                                                n = e.canvas.ownerDocument.createElement("canvas");
                                            n.width = i, n.height = s;
                                            const o = (0, r.throwIfFalsy)(n.getContext("2d")),
                                                a = new ImageData(i, s);
                                            let u, d, f, p;
                                            if (l.startsWith("#")) u = parseInt(l.slice(1, 3), 16), d = parseInt(l.slice(3, 5), 16), f = parseInt(l.slice(5, 7), 16), p = l.length > 7 && parseInt(l.slice(7, 9), 16) || 1;
                                            else {
                                                if (!l.startsWith("rgba")) throw new Error(`Unexpected fillStyle color format "${l}" when drawing pattern glyph`);
                                                [u, d, f, p] = l.substring(5, l.length - 1).split(",").map((e => parseFloat(e)))
                                            }
                                            for (let e = 0; e < s; e++)
                                                for (let r = 0; r < i; r++) a.data[4 * (e * i + r)] = u, a.data[4 * (e * i + r) + 1] = d, a.data[4 * (e * i + r) + 2] = f, a.data[4 * (e * i + r) + 3] = t[e][r] * (255 * p);
                                            o.putImageData(a, 0, 0), h = (0, r.throwIfFalsy)(e.createPattern(n, null)), c.set(l, h)
                                        }
                                        e.fillStyle = h, e.fillRect(i, s, o, a)
                                    }(e, _, o, l, h, u), !0;
                                    const g = t.boxDrawingDefinitions[i];
                                    if (g) return function(e, t, i, r, s, n, o) {
                                        e.strokeStyle = e.fillStyle;
                                        for (const [l, h] of Object.entries(t)) {
                                            let t;
                                            e.beginPath(), e.lineWidth = o * Number.parseInt(l), t = "function" == typeof h ? h(.15, .15 / n * s) : h;
                                            for (const l of t.split(" ")) {
                                                const t = l[0],
                                                    h = a[t];
                                                if (!h) {
                                                    console.error(`Could not find drawing instructions for "${t}"`);
                                                    continue
                                                }
                                                const u = l.substring(1).split(",");
                                                u[0] && u[1] && h(e, c(u, s, n, i, r, !0, o))
                                            }
                                            e.stroke(), e.closePath()
                                        }
                                    }(e, g, o, l, h, u, f), !0;
                                    const v = t.powerlineDefinitions[i];
                                    return !!v && (function(e, t, i, r, s, n, o, l) {
                                        const h = new Path2D;
                                        h.rect(i, r, s, n), e.clip(h), e.beginPath();
                                        const u = o / 12;
                                        e.lineWidth = l * u;
                                        for (const o of t.d.split(" ")) {
                                            const h = o[0],
                                                d = a[h];
                                            if (!d) {
                                                console.error(`Could not find drawing instructions for "${h}"`);
                                                continue
                                            }
                                            const f = o.substring(1).split(",");
                                            f[0] && f[1] && d(e, c(f, s, n, i, r, !1, l, (t.leftPadding ?? 0) * (u / 2), (t.rightPadding ?? 0) * (u / 2)))
                                        }
                                        1 === t.type ? (e.strokeStyle = e.fillStyle, e.stroke()) : e.fill(), e.closePath()
                                    }(e, v, o, l, h, u, d, f), !0)
                                };
                                const n = new Map;

                                function o(e, t, i = 0) {
                                    return Math.max(Math.min(e, t), i)
                                }
                                const a = {
                                    C: (e, t) => e.bezierCurveTo(t[0], t[1], t[2], t[3], t[4], t[5]),
                                    L: (e, t) => e.lineTo(t[0], t[1]),
                                    M: (e, t) => e.moveTo(t[0], t[1])
                                };

                                function c(e, t, i, r, s, n, a, c = 0, l = 0) {
                                    const h = e.map((e => parseFloat(e) || parseInt(e)));
                                    if (h.length < 2) throw new Error("Too few arguments for instruction");
                                    for (let e = 0; e < h.length; e += 2) h[e] *= t - c * a - l * a, n && 0 !== h[e] && (h[e] = o(Math.round(h[e] + .5) - .5, t, 0)), h[e] += r + c * a;
                                    for (let e = 1; e < h.length; e += 2) h[e] *= i, n && 0 !== h[e] && (h[e] = o(Math.round(h[e] + .5) - .5, i, 0)), h[e] += s;
                                    return h
                                }
                            },
                            56: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.observeDevicePixelDimensions = void 0;
                                const r = i(859);
                                t.observeDevicePixelDimensions = function(e, t, i) {
                                    let s = new t.ResizeObserver((t => {
                                        const r = t.find((t => t.target === e));
                                        if (!r) return;
                                        if (!("devicePixelContentBoxSize" in r)) return s?.disconnect(), void(s = void 0);
                                        const n = r.devicePixelContentBoxSize[0].inlineSize,
                                            o = r.devicePixelContentBoxSize[0].blockSize;
                                        n > 0 && o > 0 && i(n, o)
                                    }));
                                    try {
                                        s.observe(e, {
                                            box: ["device-pixel-content-box"]
                                        })
                                    } catch {
                                        s.disconnect(), s = void 0
                                    }
                                    return (0, r.toDisposable)((() => s?.disconnect()))
                                }
                            },
                            374: (e, t) => {
                                function i(e) {
                                    return 57508 <= e && e <= 57558
                                }

                                function r(e) {
                                    return e >= 128512 && e <= 128591 || e >= 127744 && e <= 128511 || e >= 128640 && e <= 128767 || e >= 9728 && e <= 9983 || e >= 9984 && e <= 10175 || e >= 65024 && e <= 65039 || e >= 129280 && e <= 129535 || e >= 127462 && e <= 127487
                                }
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.computeNextVariantOffset = t.createRenderDimensions = t.treatGlyphAsBackgroundColor = t.allowRescaling = t.isEmoji = t.isRestrictedPowerlineGlyph = t.isPowerlineGlyph = t.throwIfFalsy = void 0, t.throwIfFalsy = function(e) {
                                    if (!e) throw new Error("value must not be falsy");
                                    return e
                                }, t.isPowerlineGlyph = i, t.isRestrictedPowerlineGlyph = function(e) {
                                    return 57520 <= e && e <= 57527
                                }, t.isEmoji = r, t.allowRescaling = function(e, t, s, n) {
                                    return 1 === t && s > Math.ceil(1.5 * n) && void 0 !== e && e > 255 && !r(e) && !i(e) && ! function(e) {
                                        return 57344 <= e && e <= 63743
                                    }(e)
                                }, t.treatGlyphAsBackgroundColor = function(e) {
                                    return i(e) || function(e) {
                                        return 9472 <= e && e <= 9631
                                    }(e)
                                }, t.createRenderDimensions = function() {
                                    return {
                                        css: {
                                            canvas: {
                                                width: 0,
                                                height: 0
                                            },
                                            cell: {
                                                width: 0,
                                                height: 0
                                            }
                                        },
                                        device: {
                                            canvas: {
                                                width: 0,
                                                height: 0
                                            },
                                            cell: {
                                                width: 0,
                                                height: 0
                                            },
                                            char: {
                                                width: 0,
                                                height: 0,
                                                left: 0,
                                                top: 0
                                            }
                                        }
                                    }
                                }, t.computeNextVariantOffset = function(e, t, i = 0) {
                                    return (e - (2 * Math.round(t) - i)) % (2 * Math.round(t))
                                }
                            },
                            296: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.createSelectionRenderModel = void 0;
                                class i {
                                    constructor() {
                                        this.clear()
                                    }
                                    clear() {
                                        this.hasSelection = !1, this.columnSelectMode = !1, this.viewportStartRow = 0, this.viewportEndRow = 0, this.viewportCappedStartRow = 0, this.viewportCappedEndRow = 0, this.startCol = 0, this.endCol = 0, this.selectionStart = void 0, this.selectionEnd = void 0
                                    }
                                    update(e, t, i, r = !1) {
                                        if (this.selectionStart = t, this.selectionEnd = i, !t || !i || t[0] === i[0] && t[1] === i[1]) return void this.clear();
                                        const s = e.buffers.active.ydisp,
                                            n = t[1] - s,
                                            o = i[1] - s,
                                            a = Math.max(n, 0),
                                            c = Math.min(o, e.rows - 1);
                                        a >= e.rows || c < 0 ? this.clear() : (this.hasSelection = !0, this.columnSelectMode = r, this.viewportStartRow = n, this.viewportEndRow = o, this.viewportCappedStartRow = a, this.viewportCappedEndRow = c, this.startCol = t[0], this.endCol = i[0])
                                    }
                                    isCellSelected(e, t, i) {
                                        return !!this.hasSelection && (i -= e.buffer.active.viewportY, this.columnSelectMode ? this.startCol <= this.endCol ? t >= this.startCol && i >= this.viewportCappedStartRow && t < this.endCol && i <= this.viewportCappedEndRow : t < this.startCol && i >= this.viewportCappedStartRow && t >= this.endCol && i <= this.viewportCappedEndRow : i > this.viewportStartRow && i < this.viewportEndRow || this.viewportStartRow === this.viewportEndRow && i === this.viewportStartRow && t >= this.startCol && t < this.endCol || this.viewportStartRow < this.viewportEndRow && i === this.viewportEndRow && t < this.endCol || this.viewportStartRow < this.viewportEndRow && i === this.viewportStartRow && t >= this.startCol)
                                    }
                                }
                                t.createSelectionRenderModel = function() {
                                    return new i
                                }
                            },
                            509: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.TextureAtlas = void 0;
                                const r = i(237),
                                    s = i(860),
                                    n = i(374),
                                    o = i(160),
                                    a = i(345),
                                    c = i(485),
                                    l = i(385),
                                    h = i(147),
                                    u = i(855),
                                    d = {
                                        texturePage: 0,
                                        texturePosition: {
                                            x: 0,
                                            y: 0
                                        },
                                        texturePositionClipSpace: {
                                            x: 0,
                                            y: 0
                                        },
                                        offset: {
                                            x: 0,
                                            y: 0
                                        },
                                        size: {
                                            x: 0,
                                            y: 0
                                        },
                                        sizeClipSpace: {
                                            x: 0,
                                            y: 0
                                        }
                                    };
                                let f;
                                class p {
                                    get pages() {
                                        return this._pages
                                    }
                                    constructor(e, t, i) {
                                        this._document = e, this._config = t, this._unicodeService = i, this._didWarmUp = !1, this._cacheMap = new c.FourKeyMap, this._cacheMapCombined = new c.FourKeyMap, this._pages = [], this._activePages = [], this._workBoundingBox = {
                                            top: 0,
                                            left: 0,
                                            bottom: 0,
                                            right: 0
                                        }, this._workAttributeData = new h.AttributeData, this._textureSize = 512, this._onAddTextureAtlasCanvas = new a.EventEmitter, this.onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event, this._onRemoveTextureAtlasCanvas = new a.EventEmitter, this.onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event, this._requestClearModel = !1, this._createNewPage(), this._tmpCanvas = v(e, 4 * this._config.deviceCellWidth + 4, this._config.deviceCellHeight + 4), this._tmpCtx = (0, n.throwIfFalsy)(this._tmpCanvas.getContext("2d", {
                                            alpha: this._config.allowTransparency,
                                            willReadFrequently: !0
                                        }))
                                    }
                                    dispose() {
                                        for (const e of this.pages) e.canvas.remove();
                                        this._onAddTextureAtlasCanvas.dispose()
                                    }
                                    warmUp() {
                                        this._didWarmUp || (this._doWarmUp(), this._didWarmUp = !0)
                                    }
                                    _doWarmUp() {
                                        const e = new l.IdleTaskQueue;
                                        for (let t = 33; t < 126; t++) e.enqueue((() => {
                                            if (!this._cacheMap.get(t, u.DEFAULT_COLOR, u.DEFAULT_COLOR, u.DEFAULT_EXT)) {
                                                const e = this._drawToCache(t, u.DEFAULT_COLOR, u.DEFAULT_COLOR, u.DEFAULT_EXT);
                                                this._cacheMap.set(t, u.DEFAULT_COLOR, u.DEFAULT_COLOR, u.DEFAULT_EXT, e)
                                            }
                                        }))
                                    }
                                    beginFrame() {
                                        return this._requestClearModel
                                    }
                                    clearTexture() {
                                        if (0 !== this._pages[0].currentRow.x || 0 !== this._pages[0].currentRow.y) {
                                            for (const e of this._pages) e.clear();
                                            this._cacheMap.clear(), this._cacheMapCombined.clear(), this._didWarmUp = !1
                                        }
                                    }
                                    _createNewPage() {
                                        if (p.maxAtlasPages && this._pages.length >= Math.max(4, p.maxAtlasPages)) {
                                            const e = this._pages.filter((e => 2 * e.canvas.width <= (p.maxTextureSize || 4096))).sort(((e, t) => t.canvas.width !== e.canvas.width ? t.canvas.width - e.canvas.width : t.percentageUsed - e.percentageUsed));
                                            let t = -1,
                                                i = 0;
                                            for (let r = 0; r < e.length; r++)
                                                if (e[r].canvas.width !== i) t = r, i = e[r].canvas.width;
                                                else if (r - t == 3) break;
                                            const r = e.slice(t, t + 4),
                                                s = r.map((e => e.glyphs[0].texturePage)).sort(((e, t) => e > t ? 1 : -1)),
                                                n = this.pages.length - r.length,
                                                o = this._mergePages(r, n);
                                            o.version++;
                                            for (let e = s.length - 1; e >= 0; e--) this._deletePage(s[e]);
                                            this.pages.push(o), this._requestClearModel = !0, this._onAddTextureAtlasCanvas.fire(o.canvas)
                                        }
                                        const e = new _(this._document, this._textureSize);
                                        return this._pages.push(e), this._activePages.push(e), this._onAddTextureAtlasCanvas.fire(e.canvas), e
                                    }
                                    _mergePages(e, t) {
                                        const i = 2 * e[0].canvas.width,
                                            r = new _(this._document, i, e);
                                        for (const [s, n] of e.entries()) {
                                            const e = s * n.canvas.width % i,
                                                o = Math.floor(s / 2) * n.canvas.height;
                                            r.ctx.drawImage(n.canvas, e, o);
                                            for (const r of n.glyphs) r.texturePage = t, r.sizeClipSpace.x = r.size.x / i, r.sizeClipSpace.y = r.size.y / i, r.texturePosition.x += e, r.texturePosition.y += o, r.texturePositionClipSpace.x = r.texturePosition.x / i, r.texturePositionClipSpace.y = r.texturePosition.y / i;
                                            this._onRemoveTextureAtlasCanvas.fire(n.canvas);
                                            const a = this._activePages.indexOf(n); - 1 !== a && this._activePages.splice(a, 1)
                                        }
                                        return r
                                    }
                                    _deletePage(e) {
                                        this._pages.splice(e, 1);
                                        for (let t = e; t < this._pages.length; t++) {
                                            const e = this._pages[t];
                                            for (const t of e.glyphs) t.texturePage--;
                                            e.version++
                                        }
                                    }
                                    getRasterizedGlyphCombinedChar(e, t, i, r, s) {
                                        return this._getFromCacheMap(this._cacheMapCombined, e, t, i, r, s)
                                    }
                                    getRasterizedGlyph(e, t, i, r, s) {
                                        return this._getFromCacheMap(this._cacheMap, e, t, i, r, s)
                                    }
                                    _getFromCacheMap(e, t, i, r, s, n = !1) {
                                        return f = e.get(t, i, r, s), f || (f = this._drawToCache(t, i, r, s, n), e.set(t, i, r, s, f)), f
                                    }
                                    _getColorFromAnsiIndex(e) {
                                        if (e >= this._config.colors.ansi.length) throw new Error("No color found for idx " + e);
                                        return this._config.colors.ansi[e]
                                    }
                                    _getBackgroundColor(e, t, i, r) {
                                        if (this._config.allowTransparency) return o.NULL_COLOR;
                                        let s;
                                        switch (e) {
                                            case 16777216:
                                            case 33554432:
                                                s = this._getColorFromAnsiIndex(t);
                                                break;
                                            case 50331648:
                                                const e = h.AttributeData.toColorRGB(t);
                                                s = o.channels.toColor(e[0], e[1], e[2]);
                                                break;
                                            default:
                                                s = i ? o.color.opaque(this._config.colors.foreground) : this._config.colors.background
                                        }
                                        return s
                                    }
                                    _getForegroundColor(e, t, i, s, n, a, c, l, u, d) {
                                        const f = this._getMinimumContrastColor(e, t, i, s, n, a, c, u, l, d);
                                        if (f) return f;
                                        let p;
                                        switch (n) {
                                            case 16777216:
                                            case 33554432:
                                                this._config.drawBoldTextInBrightColors && u && a < 8 && (a += 8), p = this._getColorFromAnsiIndex(a);
                                                break;
                                            case 50331648:
                                                const e = h.AttributeData.toColorRGB(a);
                                                p = o.channels.toColor(e[0], e[1], e[2]);
                                                break;
                                            default:
                                                p = c ? this._config.colors.background : this._config.colors.foreground
                                        }
                                        return this._config.allowTransparency && (p = o.color.opaque(p)), l && (p = o.color.multiplyOpacity(p, r.DIM_OPACITY)), p
                                    }
                                    _resolveBackgroundRgba(e, t, i) {
                                        switch (e) {
                                            case 16777216:
                                            case 33554432:
                                                return this._getColorFromAnsiIndex(t).rgba;
                                            case 50331648:
                                                return t << 8;
                                            default:
                                                return i ? this._config.colors.foreground.rgba : this._config.colors.background.rgba
                                        }
                                    }
                                    _resolveForegroundRgba(e, t, i, r) {
                                        switch (e) {
                                            case 16777216:
                                            case 33554432:
                                                return this._config.drawBoldTextInBrightColors && r && t < 8 && (t += 8), this._getColorFromAnsiIndex(t).rgba;
                                            case 50331648:
                                                return t << 8;
                                            default:
                                                return i ? this._config.colors.background.rgba : this._config.colors.foreground.rgba
                                        }
                                    }
                                    _getMinimumContrastColor(e, t, i, r, s, n, a, c, l, h) {
                                        if (1 === this._config.minimumContrastRatio || h) return;
                                        const u = this._getContrastCache(l),
                                            d = u.getColor(e, r);
                                        if (void 0 !== d) return d || void 0;
                                        const f = this._resolveBackgroundRgba(t, i, a),
                                            p = this._resolveForegroundRgba(s, n, a, c),
                                            _ = o.rgba.ensureContrastRatio(f, p, this._config.minimumContrastRatio / (l ? 2 : 1));
                                        if (!_) return void u.setColor(e, r, null);
                                        const g = o.channels.toColor(_ >> 24 & 255, _ >> 16 & 255, _ >> 8 & 255);
                                        return u.setColor(e, r, g), g
                                    }
                                    _getContrastCache(e) {
                                        return e ? this._config.colors.halfContrastCache : this._config.colors.contrastCache
                                    }
                                    _drawToCache(e, t, i, o, a = !1) {
                                        const c = "number" == typeof e ? String.fromCharCode(e) : e,
                                            l = Math.min(this._config.deviceCellWidth * Math.max(c.length, 2) + 4, this._textureSize);
                                        this._tmpCanvas.width < l && (this._tmpCanvas.width = l);
                                        const u = Math.min(this._config.deviceCellHeight + 8, this._textureSize);
                                        if (this._tmpCanvas.height < u && (this._tmpCanvas.height = u), this._tmpCtx.save(), this._workAttributeData.fg = i, this._workAttributeData.bg = t, this._workAttributeData.extended.ext = o, this._workAttributeData.isInvisible()) return d;
                                        const f = !!this._workAttributeData.isBold(),
                                            _ = !!this._workAttributeData.isInverse(),
                                            v = !!this._workAttributeData.isDim(),
                                            m = !!this._workAttributeData.isItalic(),
                                            b = !!this._workAttributeData.isUnderline(),
                                            w = !!this._workAttributeData.isStrikethrough(),
                                            y = !!this._workAttributeData.isOverline();
                                        let S = this._workAttributeData.getFgColor(),
                                            C = this._workAttributeData.getFgColorMode(),
                                            x = this._workAttributeData.getBgColor(),
                                            E = this._workAttributeData.getBgColorMode();
                                        if (_) {
                                            const e = S;
                                            S = x, x = e;
                                            const t = C;
                                            C = E, E = t
                                        }
                                        const O = this._getBackgroundColor(E, x, _, v);
                                        this._tmpCtx.globalCompositeOperation = "copy", this._tmpCtx.fillStyle = O.css, this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height), this._tmpCtx.globalCompositeOperation = "source-over";
                                        const k = f ? this._config.fontWeightBold : this._config.fontWeight,
                                            L = m ? "italic" : "";
                                        this._tmpCtx.font = `${L} ${k} ${this._config.fontSize*this._config.devicePixelRatio}px ${this._config.fontFamily}`, this._tmpCtx.textBaseline = r.TEXT_BASELINE;
                                        const D = 1 === c.length && (0, n.isPowerlineGlyph)(c.charCodeAt(0)),
                                            M = 1 === c.length && (0, n.isRestrictedPowerlineGlyph)(c.charCodeAt(0)),
                                            A = this._getForegroundColor(t, E, x, i, C, S, _, v, f, (0, n.treatGlyphAsBackgroundColor)(c.charCodeAt(0)));
                                        this._tmpCtx.fillStyle = A.css;
                                        const R = M ? 0 : 4;
                                        let P = !1;
                                        !1 !== this._config.customGlyphs && (P = (0, s.tryDrawCustomChar)(this._tmpCtx, c, R, R, this._config.deviceCellWidth, this._config.deviceCellHeight, this._config.fontSize, this._config.devicePixelRatio));
                                        let T, B = !D;
                                        if (T = "number" == typeof e ? this._unicodeService.wcwidth(e) : this._unicodeService.getStringCellWidth(e), b) {
                                            this._tmpCtx.save();
                                            const e = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 15)),
                                                t = e % 2 == 1 ? .5 : 0;
                                            if (this._tmpCtx.lineWidth = e, this._workAttributeData.isUnderlineColorDefault()) this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;
                                            else if (this._workAttributeData.isUnderlineColorRGB()) B = !1, this._tmpCtx.strokeStyle = `rgb(${h.AttributeData.toColorRGB(this._workAttributeData.getUnderlineColor()).join(",")})`;
                                            else {
                                                B = !1;
                                                let e = this._workAttributeData.getUnderlineColor();
                                                this._config.drawBoldTextInBrightColors && this._workAttributeData.isBold() && e < 8 && (e += 8), this._tmpCtx.strokeStyle = this._getColorFromAnsiIndex(e).css
                                            }
                                            this._tmpCtx.beginPath();
                                            const i = R,
                                                r = Math.ceil(R + this._config.deviceCharHeight) - t - (a ? 2 * e : 0),
                                                s = r + e,
                                                o = r + 2 * e;
                                            let l = this._workAttributeData.getUnderlineVariantOffset();
                                            for (let a = 0; a < T; a++) {
                                                this._tmpCtx.save();
                                                const c = i + a * this._config.deviceCellWidth,
                                                    h = i + (a + 1) * this._config.deviceCellWidth,
                                                    u = c + this._config.deviceCellWidth / 2;
                                                switch (this._workAttributeData.extended.underlineStyle) {
                                                    case 2:
                                                        this._tmpCtx.moveTo(c, r), this._tmpCtx.lineTo(h, r), this._tmpCtx.moveTo(c, o), this._tmpCtx.lineTo(h, o);
                                                        break;
                                                    case 3:
                                                        const i = e <= 1 ? o : Math.ceil(R + this._config.deviceCharHeight - e / 2) - t,
                                                            a = e <= 1 ? r : Math.ceil(R + this._config.deviceCharHeight + e / 2) - t,
                                                            d = new Path2D;
                                                        d.rect(c, r, this._config.deviceCellWidth, o - r), this._tmpCtx.clip(d), this._tmpCtx.moveTo(c - this._config.deviceCellWidth / 2, s), this._tmpCtx.bezierCurveTo(c - this._config.deviceCellWidth / 2, a, c, a, c, s), this._tmpCtx.bezierCurveTo(c, i, u, i, u, s), this._tmpCtx.bezierCurveTo(u, a, h, a, h, s), this._tmpCtx.bezierCurveTo(h, i, h + this._config.deviceCellWidth / 2, i, h + this._config.deviceCellWidth / 2, s);
                                                        break;
                                                    case 4:
                                                        const f = 0 === l ? 0 : l >= e ? 2 * e - l : e - l;
                                                        0 == !(l >= e) || 0 === f ? (this._tmpCtx.setLineDash([Math.round(e), Math.round(e)]), this._tmpCtx.moveTo(c + f, r), this._tmpCtx.lineTo(h, r)) : (this._tmpCtx.setLineDash([Math.round(e), Math.round(e)]), this._tmpCtx.moveTo(c, r), this._tmpCtx.lineTo(c + f, r), this._tmpCtx.moveTo(c + f + e, r), this._tmpCtx.lineTo(h, r)), l = (0, n.computeNextVariantOffset)(h - c, e, l);
                                                        break;
                                                    case 5:
                                                        const p = .6,
                                                            _ = .3,
                                                            g = h - c,
                                                            v = Math.floor(p * g),
                                                            m = Math.floor(_ * g),
                                                            b = g - v - m;
                                                        this._tmpCtx.setLineDash([v, m, b]), this._tmpCtx.moveTo(c, r), this._tmpCtx.lineTo(h, r);
                                                        break;
                                                    default:
                                                        this._tmpCtx.moveTo(c, r), this._tmpCtx.lineTo(h, r)
                                                }
                                                this._tmpCtx.stroke(), this._tmpCtx.restore()
                                            }
                                            if (this._tmpCtx.restore(), !P && this._config.fontSize >= 12 && !this._config.allowTransparency && " " !== c) {
                                                this._tmpCtx.save(), this._tmpCtx.textBaseline = "alphabetic";
                                                const t = this._tmpCtx.measureText(c);
                                                if (this._tmpCtx.restore(), "actualBoundingBoxDescent" in t && t.actualBoundingBoxDescent > 0) {
                                                    this._tmpCtx.save();
                                                    const t = new Path2D;
                                                    t.rect(i, r - Math.ceil(e / 2), this._config.deviceCellWidth * T, o - r + Math.ceil(e / 2)), this._tmpCtx.clip(t), this._tmpCtx.lineWidth = 3 * this._config.devicePixelRatio, this._tmpCtx.strokeStyle = O.css, this._tmpCtx.strokeText(c, R, R + this._config.deviceCharHeight), this._tmpCtx.restore()
                                                }
                                            }
                                        }
                                        if (y) {
                                            const e = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 15)),
                                                t = e % 2 == 1 ? .5 : 0;
                                            this._tmpCtx.lineWidth = e, this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle, this._tmpCtx.beginPath(), this._tmpCtx.moveTo(R, R + t), this._tmpCtx.lineTo(R + this._config.deviceCharWidth * T, R + t), this._tmpCtx.stroke()
                                        }
                                        if (P || this._tmpCtx.fillText(c, R, R + this._config.deviceCharHeight), "_" === c && !this._config.allowTransparency) {
                                            let e = g(this._tmpCtx.getImageData(R, R, this._config.deviceCellWidth, this._config.deviceCellHeight), O, A, B);
                                            if (e)
                                                for (let t = 1; t <= 5 && (this._tmpCtx.save(), this._tmpCtx.fillStyle = O.css, this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height), this._tmpCtx.restore(), this._tmpCtx.fillText(c, R, R + this._config.deviceCharHeight - t), e = g(this._tmpCtx.getImageData(R, R, this._config.deviceCellWidth, this._config.deviceCellHeight), O, A, B), e); t++);
                                        }
                                        if (w) {
                                            const e = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 10)),
                                                t = this._tmpCtx.lineWidth % 2 == 1 ? .5 : 0;
                                            this._tmpCtx.lineWidth = e, this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle, this._tmpCtx.beginPath(), this._tmpCtx.moveTo(R, R + Math.floor(this._config.deviceCharHeight / 2) - t), this._tmpCtx.lineTo(R + this._config.deviceCharWidth * T, R + Math.floor(this._config.deviceCharHeight / 2) - t), this._tmpCtx.stroke()
                                        }
                                        this._tmpCtx.restore();
                                        const I = this._tmpCtx.getImageData(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);
                                        let $;
                                        if ($ = this._config.allowTransparency ? function(e) {
                                                for (let t = 0; t < e.data.length; t += 4)
                                                    if (e.data[t + 3] > 0) return !1;
                                                return !0
                                            }(I) : g(I, O, A, B), $) return d;
                                        const j = this._findGlyphBoundingBox(I, this._workBoundingBox, l, M, P, R);
                                        let F, N;
                                        for (;;) {
                                            if (0 === this._activePages.length) {
                                                const e = this._createNewPage();
                                                F = e, N = e.currentRow, N.height = j.size.y;
                                                break
                                            }
                                            F = this._activePages[this._activePages.length - 1], N = F.currentRow;
                                            for (const e of this._activePages) j.size.y <= e.currentRow.height && (F = e, N = e.currentRow);
                                            for (let e = this._activePages.length - 1; e >= 0; e--)
                                                for (const t of this._activePages[e].fixedRows) t.height <= N.height && j.size.y <= t.height && (F = this._activePages[e], N = t);
                                            if (N.y + j.size.y >= F.canvas.height || N.height > j.size.y + 2) {
                                                let e = !1;
                                                if (F.currentRow.y + F.currentRow.height + j.size.y >= F.canvas.height) {
                                                    let t;
                                                    for (const e of this._activePages)
                                                        if (e.currentRow.y + e.currentRow.height + j.size.y < e.canvas.height) {
                                                            t = e;
                                                            break
                                                        } if (t) F = t;
                                                    else if (p.maxAtlasPages && this._pages.length >= p.maxAtlasPages && N.y + j.size.y <= F.canvas.height && N.height >= j.size.y && N.x + j.size.x <= F.canvas.width) e = !0;
                                                    else {
                                                        const t = this._createNewPage();
                                                        F = t, N = t.currentRow, N.height = j.size.y, e = !0
                                                    }
                                                }
                                                e || (F.currentRow.height > 0 && F.fixedRows.push(F.currentRow), N = {
                                                    x: 0,
                                                    y: F.currentRow.y + F.currentRow.height,
                                                    height: j.size.y
                                                }, F.fixedRows.push(N), F.currentRow = {
                                                    x: 0,
                                                    y: N.y + N.height,
                                                    height: 0
                                                })
                                            }
                                            if (N.x + j.size.x <= F.canvas.width) break;
                                            N === F.currentRow ? (N.x = 0, N.y += N.height, N.height = 0) : F.fixedRows.splice(F.fixedRows.indexOf(N), 1)
                                        }
                                        return j.texturePage = this._pages.indexOf(F), j.texturePosition.x = N.x, j.texturePosition.y = N.y, j.texturePositionClipSpace.x = N.x / F.canvas.width, j.texturePositionClipSpace.y = N.y / F.canvas.height, j.sizeClipSpace.x /= F.canvas.width, j.sizeClipSpace.y /= F.canvas.height, N.height = Math.max(N.height, j.size.y), N.x += j.size.x, F.ctx.putImageData(I, j.texturePosition.x - this._workBoundingBox.left, j.texturePosition.y - this._workBoundingBox.top, this._workBoundingBox.left, this._workBoundingBox.top, j.size.x, j.size.y), F.addGlyph(j), F.version++, j
                                    }
                                    _findGlyphBoundingBox(e, t, i, r, s, n) {
                                        t.top = 0;
                                        const o = r ? this._config.deviceCellHeight : this._tmpCanvas.height,
                                            a = r ? this._config.deviceCellWidth : i;
                                        let c = !1;
                                        for (let i = 0; i < o; i++) {
                                            for (let r = 0; r < a; r++) {
                                                const s = i * this._tmpCanvas.width * 4 + 4 * r + 3;
                                                if (0 !== e.data[s]) {
                                                    t.top = i, c = !0;
                                                    break
                                                }
                                            }
                                            if (c) break
                                        }
                                        t.left = 0, c = !1;
                                        for (let i = 0; i < n + a; i++) {
                                            for (let r = 0; r < o; r++) {
                                                const s = r * this._tmpCanvas.width * 4 + 4 * i + 3;
                                                if (0 !== e.data[s]) {
                                                    t.left = i, c = !0;
                                                    break
                                                }
                                            }
                                            if (c) break
                                        }
                                        t.right = a, c = !1;
                                        for (let i = n + a - 1; i >= n; i--) {
                                            for (let r = 0; r < o; r++) {
                                                const s = r * this._tmpCanvas.width * 4 + 4 * i + 3;
                                                if (0 !== e.data[s]) {
                                                    t.right = i, c = !0;
                                                    break
                                                }
                                            }
                                            if (c) break
                                        }
                                        t.bottom = o, c = !1;
                                        for (let i = o - 1; i >= 0; i--) {
                                            for (let r = 0; r < a; r++) {
                                                const s = i * this._tmpCanvas.width * 4 + 4 * r + 3;
                                                if (0 !== e.data[s]) {
                                                    t.bottom = i, c = !0;
                                                    break
                                                }
                                            }
                                            if (c) break
                                        }
                                        return {
                                            texturePage: 0,
                                            texturePosition: {
                                                x: 0,
                                                y: 0
                                            },
                                            texturePositionClipSpace: {
                                                x: 0,
                                                y: 0
                                            },
                                            size: {
                                                x: t.right - t.left + 1,
                                                y: t.bottom - t.top + 1
                                            },
                                            sizeClipSpace: {
                                                x: t.right - t.left + 1,
                                                y: t.bottom - t.top + 1
                                            },
                                            offset: {
                                                x: -t.left + n + (r || s ? Math.floor((this._config.deviceCellWidth - this._config.deviceCharWidth) / 2) : 0),
                                                y: -t.top + n + (r || s ? 1 === this._config.lineHeight ? 0 : Math.round((this._config.deviceCellHeight - this._config.deviceCharHeight) / 2) : 0)
                                            }
                                        }
                                    }
                                }
                                t.TextureAtlas = p;
                                class _ {
                                    get percentageUsed() {
                                        return this._usedPixels / (this.canvas.width * this.canvas.height)
                                    }
                                    get glyphs() {
                                        return this._glyphs
                                    }
                                    addGlyph(e) {
                                        this._glyphs.push(e), this._usedPixels += e.size.x * e.size.y
                                    }
                                    constructor(e, t, i) {
                                        if (this._usedPixels = 0, this._glyphs = [], this.version = 0, this.currentRow = {
                                                x: 0,
                                                y: 0,
                                                height: 0
                                            }, this.fixedRows = [], i)
                                            for (const e of i) this._glyphs.push(...e.glyphs), this._usedPixels += e._usedPixels;
                                        this.canvas = v(e, t, t), this.ctx = (0, n.throwIfFalsy)(this.canvas.getContext("2d", {
                                            alpha: !0
                                        }))
                                    }
                                    clear() {
                                        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height), this.currentRow.x = 0, this.currentRow.y = 0, this.currentRow.height = 0, this.fixedRows.length = 0, this.version++
                                    }
                                }

                                function g(e, t, i, r) {
                                    const s = t.rgba >>> 24,
                                        n = t.rgba >>> 16 & 255,
                                        o = t.rgba >>> 8 & 255,
                                        a = i.rgba >>> 24,
                                        c = i.rgba >>> 16 & 255,
                                        l = i.rgba >>> 8 & 255,
                                        h = Math.floor((Math.abs(s - a) + Math.abs(n - c) + Math.abs(o - l)) / 12);
                                    let u = !0;
                                    for (let t = 0; t < e.data.length; t += 4) e.data[t] === s && e.data[t + 1] === n && e.data[t + 2] === o || r && Math.abs(e.data[t] - s) + Math.abs(e.data[t + 1] - n) + Math.abs(e.data[t + 2] - o) < h ? e.data[t + 3] = 0 : u = !1;
                                    return u
                                }

                                function v(e, t, i) {
                                    const r = e.createElement("canvas");
                                    return r.width = t, r.height = i, r
                                }
                            },
                            577: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CharacterJoinerService = t.JoinedCellData = void 0;
                                const n = i(147),
                                    o = i(855),
                                    a = i(782),
                                    c = i(97);
                                class l extends n.AttributeData {
                                    constructor(e, t, i) {
                                        super(), this.content = 0, this.combinedData = "", this.fg = e.fg, this.bg = e.bg, this.combinedData = t, this._width = i
                                    }
                                    isCombined() {
                                        return 2097152
                                    }
                                    getWidth() {
                                        return this._width
                                    }
                                    getChars() {
                                        return this.combinedData
                                    }
                                    getCode() {
                                        return 2097151
                                    }
                                    setFromCharData(e) {
                                        throw new Error("not implemented")
                                    }
                                    getAsCharData() {
                                        return [this.fg, this.getChars(), this.getWidth(), this.getCode()]
                                    }
                                }
                                t.JoinedCellData = l;
                                let h = t.CharacterJoinerService = class e {
                                    constructor(e) {
                                        this._bufferService = e, this._characterJoiners = [], this._nextCharacterJoinerId = 0, this._workCell = new a.CellData
                                    }
                                    register(e) {
                                        const t = {
                                            id: this._nextCharacterJoinerId++,
                                            handler: e
                                        };
                                        return this._characterJoiners.push(t), t.id
                                    }
                                    deregister(e) {
                                        for (let t = 0; t < this._characterJoiners.length; t++)
                                            if (this._characterJoiners[t].id === e) return this._characterJoiners.splice(t, 1), !0;
                                        return !1
                                    }
                                    getJoinedCharacters(e) {
                                        if (0 === this._characterJoiners.length) return [];
                                        const t = this._bufferService.buffer.lines.get(e);
                                        if (!t || 0 === t.length) return [];
                                        const i = [],
                                            r = t.translateToString(!0);
                                        let s = 0,
                                            n = 0,
                                            a = 0,
                                            c = t.getFg(0),
                                            l = t.getBg(0);
                                        for (let e = 0; e < t.getTrimmedLength(); e++)
                                            if (t.loadCell(e, this._workCell), 0 !== this._workCell.getWidth()) {
                                                if (this._workCell.fg !== c || this._workCell.bg !== l) {
                                                    if (e - s > 1) {
                                                        const e = this._getJoinedRanges(r, a, n, t, s);
                                                        for (let t = 0; t < e.length; t++) i.push(e[t])
                                                    }
                                                    s = e, a = n, c = this._workCell.fg, l = this._workCell.bg
                                                }
                                                n += this._workCell.getChars().length || o.WHITESPACE_CELL_CHAR.length
                                            } if (this._bufferService.cols - s > 1) {
                                            const e = this._getJoinedRanges(r, a, n, t, s);
                                            for (let t = 0; t < e.length; t++) i.push(e[t])
                                        }
                                        return i
                                    }
                                    _getJoinedRanges(t, i, r, s, n) {
                                        const o = t.substring(i, r);
                                        let a = [];
                                        try {
                                            a = this._characterJoiners[0].handler(o)
                                        } catch (e) {
                                            console.error(e)
                                        }
                                        for (let t = 1; t < this._characterJoiners.length; t++) try {
                                            const i = this._characterJoiners[t].handler(o);
                                            for (let t = 0; t < i.length; t++) e._mergeRanges(a, i[t])
                                        } catch (e) {
                                            console.error(e)
                                        }
                                        return this._stringRangesToCellRanges(a, s, n), a
                                    }
                                    _stringRangesToCellRanges(e, t, i) {
                                        let r = 0,
                                            s = !1,
                                            n = 0,
                                            a = e[r];
                                        if (a) {
                                            for (let c = i; c < this._bufferService.cols; c++) {
                                                const i = t.getWidth(c),
                                                    l = t.getString(c).length || o.WHITESPACE_CELL_CHAR.length;
                                                if (0 !== i) {
                                                    if (!s && a[0] <= n && (a[0] = c, s = !0), a[1] <= n) {
                                                        if (a[1] = c, a = e[++r], !a) break;
                                                        a[0] <= n ? (a[0] = c, s = !0) : s = !1
                                                    }
                                                    n += l
                                                }
                                            }
                                            a && (a[1] = this._bufferService.cols)
                                        }
                                    }
                                    static _mergeRanges(e, t) {
                                        let i = !1;
                                        for (let r = 0; r < e.length; r++) {
                                            const s = e[r];
                                            if (i) {
                                                if (t[1] <= s[0]) return e[r - 1][1] = t[1], e;
                                                if (t[1] <= s[1]) return e[r - 1][1] = Math.max(t[1], s[1]), e.splice(r, 1), e;
                                                e.splice(r, 1), r--
                                            } else {
                                                if (t[1] <= s[0]) return e.splice(r, 0, t), e;
                                                if (t[1] <= s[1]) return s[0] = Math.min(t[0], s[0]), e;
                                                t[0] < s[1] && (s[0] = Math.min(t[0], s[0]), i = !0)
                                            }
                                        }
                                        return i ? e[e.length - 1][1] = t[1] : e.push(t), e
                                    }
                                };
                                t.CharacterJoinerService = h = r([s(0, c.IBufferService)], h)
                            },
                            160: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.contrastRatio = t.toPaddedHex = t.rgba = t.rgb = t.css = t.color = t.channels = t.NULL_COLOR = void 0;
                                let i = 0,
                                    r = 0,
                                    s = 0,
                                    n = 0;
                                var o, a, c, l, h;

                                function u(e) {
                                    const t = e.toString(16);
                                    return t.length < 2 ? "0" + t : t
                                }

                                function d(e, t) {
                                    return e < t ? (t + .05) / (e + .05) : (e + .05) / (t + .05)
                                }
                                t.NULL_COLOR = {
                                        css: "#00000000",
                                        rgba: 0
                                    },
                                    function(e) {
                                        e.toCss = function(e, t, i, r) {
                                            return void 0 !== r ? `#${u(e)}${u(t)}${u(i)}${u(r)}` : `#${u(e)}${u(t)}${u(i)}`
                                        }, e.toRgba = function(e, t, i, r = 255) {
                                            return (e << 24 | t << 16 | i << 8 | r) >>> 0
                                        }, e.toColor = function(t, i, r, s) {
                                            return {
                                                css: e.toCss(t, i, r, s),
                                                rgba: e.toRgba(t, i, r, s)
                                            }
                                        }
                                    }(o || (t.channels = o = {})),
                                    function(e) {
                                        function t(e, t) {
                                            return n = Math.round(255 * t), [i, r, s] = h.toChannels(e.rgba), {
                                                css: o.toCss(i, r, s, n),
                                                rgba: o.toRgba(i, r, s, n)
                                            }
                                        }
                                        e.blend = function(e, t) {
                                            if (n = (255 & t.rgba) / 255, 1 === n) return {
                                                css: t.css,
                                                rgba: t.rgba
                                            };
                                            const a = t.rgba >> 24 & 255,
                                                c = t.rgba >> 16 & 255,
                                                l = t.rgba >> 8 & 255,
                                                h = e.rgba >> 24 & 255,
                                                u = e.rgba >> 16 & 255,
                                                d = e.rgba >> 8 & 255;
                                            return i = h + Math.round((a - h) * n), r = u + Math.round((c - u) * n), s = d + Math.round((l - d) * n), {
                                                css: o.toCss(i, r, s),
                                                rgba: o.toRgba(i, r, s)
                                            }
                                        }, e.isOpaque = function(e) {
                                            return 255 == (255 & e.rgba)
                                        }, e.ensureContrastRatio = function(e, t, i) {
                                            const r = h.ensureContrastRatio(e.rgba, t.rgba, i);
                                            if (r) return o.toColor(r >> 24 & 255, r >> 16 & 255, r >> 8 & 255)
                                        }, e.opaque = function(e) {
                                            const t = (255 | e.rgba) >>> 0;
                                            return [i, r, s] = h.toChannels(t), {
                                                css: o.toCss(i, r, s),
                                                rgba: t
                                            }
                                        }, e.opacity = t, e.multiplyOpacity = function(e, i) {
                                            return n = 255 & e.rgba, t(e, n * i / 255)
                                        }, e.toColorRGB = function(e) {
                                            return [e.rgba >> 24 & 255, e.rgba >> 16 & 255, e.rgba >> 8 & 255]
                                        }
                                    }(a || (t.color = a = {})),
                                    function(e) {
                                        let t, a;
                                        try {
                                            const e = document.createElement("canvas");
                                            e.width = 1, e.height = 1;
                                            const i = e.getContext("2d", {
                                                willReadFrequently: !0
                                            });
                                            i && (t = i, t.globalCompositeOperation = "copy", a = t.createLinearGradient(0, 0, 1, 1))
                                        } catch {}
                                        e.toColor = function(e) {
                                            if (e.match(/#[\da-f]{3,8}/i)) switch (e.length) {
                                                case 4:
                                                    return i = parseInt(e.slice(1, 2).repeat(2), 16), r = parseInt(e.slice(2, 3).repeat(2), 16), s = parseInt(e.slice(3, 4).repeat(2), 16), o.toColor(i, r, s);
                                                case 5:
                                                    return i = parseInt(e.slice(1, 2).repeat(2), 16), r = parseInt(e.slice(2, 3).repeat(2), 16), s = parseInt(e.slice(3, 4).repeat(2), 16), n = parseInt(e.slice(4, 5).repeat(2), 16), o.toColor(i, r, s, n);
                                                case 7:
                                                    return {
                                                        css: e, rgba: (parseInt(e.slice(1), 16) << 8 | 255) >>> 0
                                                    };
                                                case 9:
                                                    return {
                                                        css: e, rgba: parseInt(e.slice(1), 16) >>> 0
                                                    }
                                            }
                                            const c = e.match(/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(,\s*(0|1|\d?\.(\d+))\s*)?\)/);
                                            if (c) return i = parseInt(c[1]), r = parseInt(c[2]), s = parseInt(c[3]), n = Math.round(255 * (void 0 === c[5] ? 1 : parseFloat(c[5]))), o.toColor(i, r, s, n);
                                            if (!t || !a) throw new Error("css.toColor: Unsupported css format");
                                            if (t.fillStyle = a, t.fillStyle = e, "string" != typeof t.fillStyle) throw new Error("css.toColor: Unsupported css format");
                                            if (t.fillRect(0, 0, 1, 1), [i, r, s, n] = t.getImageData(0, 0, 1, 1).data, 255 !== n) throw new Error("css.toColor: Unsupported css format");
                                            return {
                                                rgba: o.toRgba(i, r, s, n),
                                                css: e
                                            }
                                        }
                                    }(c || (t.css = c = {})),
                                    function(e) {
                                        function t(e, t, i) {
                                            const r = e / 255,
                                                s = t / 255,
                                                n = i / 255;
                                            return .2126 * (r <= .03928 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4)) + .7152 * (s <= .03928 ? s / 12.92 : Math.pow((s + .055) / 1.055, 2.4)) + .0722 * (n <= .03928 ? n / 12.92 : Math.pow((n + .055) / 1.055, 2.4))
                                        }
                                        e.relativeLuminance = function(e) {
                                            return t(e >> 16 & 255, e >> 8 & 255, 255 & e)
                                        }, e.relativeLuminance2 = t
                                    }(l || (t.rgb = l = {})),
                                    function(e) {
                                        function t(e, t, i) {
                                            const r = e >> 24 & 255,
                                                s = e >> 16 & 255,
                                                n = e >> 8 & 255;
                                            let o = t >> 24 & 255,
                                                a = t >> 16 & 255,
                                                c = t >> 8 & 255,
                                                h = d(l.relativeLuminance2(o, a, c), l.relativeLuminance2(r, s, n));
                                            for (; h < i && (o > 0 || a > 0 || c > 0);) o -= Math.max(0, Math.ceil(.1 * o)), a -= Math.max(0, Math.ceil(.1 * a)), c -= Math.max(0, Math.ceil(.1 * c)), h = d(l.relativeLuminance2(o, a, c), l.relativeLuminance2(r, s, n));
                                            return (o << 24 | a << 16 | c << 8 | 255) >>> 0
                                        }

                                        function a(e, t, i) {
                                            const r = e >> 24 & 255,
                                                s = e >> 16 & 255,
                                                n = e >> 8 & 255;
                                            let o = t >> 24 & 255,
                                                a = t >> 16 & 255,
                                                c = t >> 8 & 255,
                                                h = d(l.relativeLuminance2(o, a, c), l.relativeLuminance2(r, s, n));
                                            for (; h < i && (o < 255 || a < 255 || c < 255);) o = Math.min(255, o + Math.ceil(.1 * (255 - o))), a = Math.min(255, a + Math.ceil(.1 * (255 - a))), c = Math.min(255, c + Math.ceil(.1 * (255 - c))), h = d(l.relativeLuminance2(o, a, c), l.relativeLuminance2(r, s, n));
                                            return (o << 24 | a << 16 | c << 8 | 255) >>> 0
                                        }
                                        e.blend = function(e, t) {
                                            if (n = (255 & t) / 255, 1 === n) return t;
                                            const a = t >> 24 & 255,
                                                c = t >> 16 & 255,
                                                l = t >> 8 & 255,
                                                h = e >> 24 & 255,
                                                u = e >> 16 & 255,
                                                d = e >> 8 & 255;
                                            return i = h + Math.round((a - h) * n), r = u + Math.round((c - u) * n), s = d + Math.round((l - d) * n), o.toRgba(i, r, s)
                                        }, e.ensureContrastRatio = function(e, i, r) {
                                            const s = l.relativeLuminance(e >> 8),
                                                n = l.relativeLuminance(i >> 8);
                                            if (d(s, n) < r) {
                                                if (n < s) {
                                                    const n = t(e, i, r),
                                                        o = d(s, l.relativeLuminance(n >> 8));
                                                    if (o < r) {
                                                        const t = a(e, i, r);
                                                        return o > d(s, l.relativeLuminance(t >> 8)) ? n : t
                                                    }
                                                    return n
                                                }
                                                const o = a(e, i, r),
                                                    c = d(s, l.relativeLuminance(o >> 8));
                                                if (c < r) {
                                                    const n = t(e, i, r);
                                                    return c > d(s, l.relativeLuminance(n >> 8)) ? o : n
                                                }
                                                return o
                                            }
                                        }, e.reduceLuminance = t, e.increaseLuminance = a, e.toChannels = function(e) {
                                            return [e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e]
                                        }
                                    }(h || (t.rgba = h = {})), t.toPaddedHex = u, t.contrastRatio = d
                            },
                            345: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.runAndSubscribe = t.forwardEvent = t.EventEmitter = void 0, t.EventEmitter = class {
                                    constructor() {
                                        this._listeners = [], this._disposed = !1
                                    }
                                    get event() {
                                        return this._event || (this._event = e => (this._listeners.push(e), {
                                            dispose: () => {
                                                if (!this._disposed)
                                                    for (let t = 0; t < this._listeners.length; t++)
                                                        if (this._listeners[t] === e) return void this._listeners.splice(t, 1)
                                            }
                                        })), this._event
                                    }
                                    fire(e, t) {
                                        const i = [];
                                        for (let e = 0; e < this._listeners.length; e++) i.push(this._listeners[e]);
                                        for (let r = 0; r < i.length; r++) i[r].call(void 0, e, t)
                                    }
                                    dispose() {
                                        this.clearListeners(), this._disposed = !0
                                    }
                                    clearListeners() {
                                        this._listeners && (this._listeners.length = 0)
                                    }
                                }, t.forwardEvent = function(e, t) {
                                    return e((e => t.fire(e)))
                                }, t.runAndSubscribe = function(e, t) {
                                    return t(void 0), e((e => t(e)))
                                }
                            },
                            859: (e, t) => {
                                function i(e) {
                                    for (const t of e) t.dispose();
                                    e.length = 0
                                }
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.getDisposeArrayDisposable = t.disposeArray = t.toDisposable = t.MutableDisposable = t.Disposable = void 0, t.Disposable = class {
                                    constructor() {
                                        this._disposables = [], this._isDisposed = !1
                                    }
                                    dispose() {
                                        this._isDisposed = !0;
                                        for (const e of this._disposables) e.dispose();
                                        this._disposables.length = 0
                                    }
                                    register(e) {
                                        return this._disposables.push(e), e
                                    }
                                    unregister(e) {
                                        const t = this._disposables.indexOf(e); - 1 !== t && this._disposables.splice(t, 1)
                                    }
                                }, t.MutableDisposable = class {
                                    constructor() {
                                        this._isDisposed = !1
                                    }
                                    get value() {
                                        return this._isDisposed ? void 0 : this._value
                                    }
                                    set value(e) {
                                        this._isDisposed || e === this._value || (this._value?.dispose(), this._value = e)
                                    }
                                    clear() {
                                        this.value = void 0
                                    }
                                    dispose() {
                                        this._isDisposed = !0, this._value?.dispose(), this._value = void 0
                                    }
                                }, t.toDisposable = function(e) {
                                    return {
                                        dispose: e
                                    }
                                }, t.disposeArray = i, t.getDisposeArrayDisposable = function(e) {
                                    return {
                                        dispose: () => i(e)
                                    }
                                }
                            },
                            485: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.FourKeyMap = t.TwoKeyMap = void 0;
                                class i {
                                    constructor() {
                                        this._data = {}
                                    }
                                    set(e, t, i) {
                                        this._data[e] || (this._data[e] = {}), this._data[e][t] = i
                                    }
                                    get(e, t) {
                                        return this._data[e] ? this._data[e][t] : void 0
                                    }
                                    clear() {
                                        this._data = {}
                                    }
                                }
                                t.TwoKeyMap = i, t.FourKeyMap = class {
                                    constructor() {
                                        this._data = new i
                                    }
                                    set(e, t, r, s, n) {
                                        this._data.get(e, t) || this._data.set(e, t, new i), this._data.get(e, t).set(r, s, n)
                                    }
                                    get(e, t, i, r) {
                                        return this._data.get(e, t)?.get(i, r)
                                    }
                                    clear() {
                                        this._data.clear()
                                    }
                                }
                            },
                            399: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.isChromeOS = t.isLinux = t.isWindows = t.isIphone = t.isIpad = t.isMac = t.getSafariVersion = t.isSafari = t.isLegacyEdge = t.isFirefox = t.isNode = void 0, t.isNode = "undefined" != typeof process && "title" in process;
                                const i = t.isNode ? "node" : navigator.userAgent,
                                    r = t.isNode ? "node" : navigator.platform;
                                t.isFirefox = i.includes("Firefox"), t.isLegacyEdge = i.includes("Edge"), t.isSafari = /^((?!chrome|android).)*safari/i.test(i), t.getSafariVersion = function() {
                                    if (!t.isSafari) return 0;
                                    const e = i.match(/Version\/(\d+)/);
                                    return null === e || e.length < 2 ? 0 : parseInt(e[1])
                                }, t.isMac = ["Macintosh", "MacIntel", "MacPPC", "Mac68K"].includes(r), t.isIpad = "iPad" === r, t.isIphone = "iPhone" === r, t.isWindows = ["Windows", "Win16", "Win32", "WinCE"].includes(r), t.isLinux = r.indexOf("Linux") >= 0, t.isChromeOS = /\bCrOS\b/.test(i)
                            },
                            385: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.DebouncedIdleTask = t.IdleTaskQueue = t.PriorityTaskQueue = void 0;
                                const r = i(399);
                                class s {
                                    constructor() {
                                        this._tasks = [], this._i = 0
                                    }
                                    enqueue(e) {
                                        this._tasks.push(e), this._start()
                                    }
                                    flush() {
                                        for (; this._i < this._tasks.length;) this._tasks[this._i]() || this._i++;
                                        this.clear()
                                    }
                                    clear() {
                                        this._idleCallback && (this._cancelCallback(this._idleCallback), this._idleCallback = void 0), this._i = 0, this._tasks.length = 0
                                    }
                                    _start() {
                                        this._idleCallback || (this._idleCallback = this._requestCallback(this._process.bind(this)))
                                    }
                                    _process(e) {
                                        this._idleCallback = void 0;
                                        let t = 0,
                                            i = 0,
                                            r = e.timeRemaining(),
                                            s = 0;
                                        for (; this._i < this._tasks.length;) {
                                            if (t = Date.now(), this._tasks[this._i]() || this._i++, t = Math.max(1, Date.now() - t), i = Math.max(t, i), s = e.timeRemaining(), 1.5 * i > s) return r - t < -20 && console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(r-t))}ms`), void this._start();
                                            r = s
                                        }
                                        this.clear()
                                    }
                                }
                                class n extends s {
                                    _requestCallback(e) {
                                        return setTimeout((() => e(this._createDeadline(16))))
                                    }
                                    _cancelCallback(e) {
                                        clearTimeout(e)
                                    }
                                    _createDeadline(e) {
                                        const t = Date.now() + e;
                                        return {
                                            timeRemaining: () => Math.max(0, t - Date.now())
                                        }
                                    }
                                }
                                t.PriorityTaskQueue = n, t.IdleTaskQueue = !r.isNode && "requestIdleCallback" in window ? class extends s {
                                    _requestCallback(e) {
                                        return requestIdleCallback(e)
                                    }
                                    _cancelCallback(e) {
                                        cancelIdleCallback(e)
                                    }
                                } : n, t.DebouncedIdleTask = class {
                                    constructor() {
                                        this._queue = new t.IdleTaskQueue
                                    }
                                    set(e) {
                                        this._queue.clear(), this._queue.enqueue(e)
                                    }
                                    flush() {
                                        this._queue.flush()
                                    }
                                }
                            },
                            147: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.ExtendedAttrs = t.AttributeData = void 0;
                                class i {
                                    constructor() {
                                        this.fg = 0, this.bg = 0, this.extended = new r
                                    }
                                    static toColorRGB(e) {
                                        return [e >>> 16 & 255, e >>> 8 & 255, 255 & e]
                                    }
                                    static fromColorRGB(e) {
                                        return (255 & e[0]) << 16 | (255 & e[1]) << 8 | 255 & e[2]
                                    }
                                    clone() {
                                        const e = new i;
                                        return e.fg = this.fg, e.bg = this.bg, e.extended = this.extended.clone(), e
                                    }
                                    isInverse() {
                                        return 67108864 & this.fg
                                    }
                                    isBold() {
                                        return 134217728 & this.fg
                                    }
                                    isUnderline() {
                                        return this.hasExtendedAttrs() && 0 !== this.extended.underlineStyle ? 1 : 268435456 & this.fg
                                    }
                                    isBlink() {
                                        return 536870912 & this.fg
                                    }
                                    isInvisible() {
                                        return 1073741824 & this.fg
                                    }
                                    isItalic() {
                                        return 67108864 & this.bg
                                    }
                                    isDim() {
                                        return 134217728 & this.bg
                                    }
                                    isStrikethrough() {
                                        return 2147483648 & this.fg
                                    }
                                    isProtected() {
                                        return 536870912 & this.bg
                                    }
                                    isOverline() {
                                        return 1073741824 & this.bg
                                    }
                                    getFgColorMode() {
                                        return 50331648 & this.fg
                                    }
                                    getBgColorMode() {
                                        return 50331648 & this.bg
                                    }
                                    isFgRGB() {
                                        return 50331648 == (50331648 & this.fg)
                                    }
                                    isBgRGB() {
                                        return 50331648 == (50331648 & this.bg)
                                    }
                                    isFgPalette() {
                                        return 16777216 == (50331648 & this.fg) || 33554432 == (50331648 & this.fg)
                                    }
                                    isBgPalette() {
                                        return 16777216 == (50331648 & this.bg) || 33554432 == (50331648 & this.bg)
                                    }
                                    isFgDefault() {
                                        return 0 == (50331648 & this.fg)
                                    }
                                    isBgDefault() {
                                        return 0 == (50331648 & this.bg)
                                    }
                                    isAttributeDefault() {
                                        return 0 === this.fg && 0 === this.bg
                                    }
                                    getFgColor() {
                                        switch (50331648 & this.fg) {
                                            case 16777216:
                                            case 33554432:
                                                return 255 & this.fg;
                                            case 50331648:
                                                return 16777215 & this.fg;
                                            default:
                                                return -1
                                        }
                                    }
                                    getBgColor() {
                                        switch (50331648 & this.bg) {
                                            case 16777216:
                                            case 33554432:
                                                return 255 & this.bg;
                                            case 50331648:
                                                return 16777215 & this.bg;
                                            default:
                                                return -1
                                        }
                                    }
                                    hasExtendedAttrs() {
                                        return 268435456 & this.bg
                                    }
                                    updateExtended() {
                                        this.extended.isEmpty() ? this.bg &= -268435457 : this.bg |= 268435456
                                    }
                                    getUnderlineColor() {
                                        if (268435456 & this.bg && ~this.extended.underlineColor) switch (50331648 & this.extended.underlineColor) {
                                            case 16777216:
                                            case 33554432:
                                                return 255 & this.extended.underlineColor;
                                            case 50331648:
                                                return 16777215 & this.extended.underlineColor;
                                            default:
                                                return this.getFgColor()
                                        }
                                        return this.getFgColor()
                                    }
                                    getUnderlineColorMode() {
                                        return 268435456 & this.bg && ~this.extended.underlineColor ? 50331648 & this.extended.underlineColor : this.getFgColorMode()
                                    }
                                    isUnderlineColorRGB() {
                                        return 268435456 & this.bg && ~this.extended.underlineColor ? 50331648 == (50331648 & this.extended.underlineColor) : this.isFgRGB()
                                    }
                                    isUnderlineColorPalette() {
                                        return 268435456 & this.bg && ~this.extended.underlineColor ? 16777216 == (50331648 & this.extended.underlineColor) || 33554432 == (50331648 & this.extended.underlineColor) : this.isFgPalette()
                                    }
                                    isUnderlineColorDefault() {
                                        return 268435456 & this.bg && ~this.extended.underlineColor ? 0 == (50331648 & this.extended.underlineColor) : this.isFgDefault()
                                    }
                                    getUnderlineStyle() {
                                        return 268435456 & this.fg ? 268435456 & this.bg ? this.extended.underlineStyle : 1 : 0
                                    }
                                    getUnderlineVariantOffset() {
                                        return this.extended.underlineVariantOffset
                                    }
                                }
                                t.AttributeData = i;
                                class r {
                                    get ext() {
                                        return this._urlId ? -469762049 & this._ext | this.underlineStyle << 26 : this._ext
                                    }
                                    set ext(e) {
                                        this._ext = e
                                    }
                                    get underlineStyle() {
                                        return this._urlId ? 5 : (469762048 & this._ext) >> 26
                                    }
                                    set underlineStyle(e) {
                                        this._ext &= -469762049, this._ext |= e << 26 & 469762048
                                    }
                                    get underlineColor() {
                                        return 67108863 & this._ext
                                    }
                                    set underlineColor(e) {
                                        this._ext &= -67108864, this._ext |= 67108863 & e
                                    }
                                    get urlId() {
                                        return this._urlId
                                    }
                                    set urlId(e) {
                                        this._urlId = e
                                    }
                                    get underlineVariantOffset() {
                                        const e = (3758096384 & this._ext) >> 29;
                                        return e < 0 ? 4294967288 ^ e : e
                                    }
                                    set underlineVariantOffset(e) {
                                        this._ext &= 536870911, this._ext |= e << 29 & 3758096384
                                    }
                                    constructor(e = 0, t = 0) {
                                        this._ext = 0, this._urlId = 0, this._ext = e, this._urlId = t
                                    }
                                    clone() {
                                        return new r(this._ext, this._urlId)
                                    }
                                    isEmpty() {
                                        return 0 === this.underlineStyle && 0 === this._urlId
                                    }
                                }
                                t.ExtendedAttrs = r
                            },
                            782: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CellData = void 0;
                                const r = i(133),
                                    s = i(855),
                                    n = i(147);
                                class o extends n.AttributeData {
                                    constructor() {
                                        super(...arguments), this.content = 0, this.fg = 0, this.bg = 0, this.extended = new n.ExtendedAttrs, this.combinedData = ""
                                    }
                                    static fromCharData(e) {
                                        const t = new o;
                                        return t.setFromCharData(e), t
                                    }
                                    isCombined() {
                                        return 2097152 & this.content
                                    }
                                    getWidth() {
                                        return this.content >> 22
                                    }
                                    getChars() {
                                        return 2097152 & this.content ? this.combinedData : 2097151 & this.content ? (0, r.stringFromCodePoint)(2097151 & this.content) : ""
                                    }
                                    getCode() {
                                        return this.isCombined() ? this.combinedData.charCodeAt(this.combinedData.length - 1) : 2097151 & this.content
                                    }
                                    setFromCharData(e) {
                                        this.fg = e[s.CHAR_DATA_ATTR_INDEX], this.bg = 0;
                                        let t = !1;
                                        if (e[s.CHAR_DATA_CHAR_INDEX].length > 2) t = !0;
                                        else if (2 === e[s.CHAR_DATA_CHAR_INDEX].length) {
                                            const i = e[s.CHAR_DATA_CHAR_INDEX].charCodeAt(0);
                                            if (55296 <= i && i <= 56319) {
                                                const r = e[s.CHAR_DATA_CHAR_INDEX].charCodeAt(1);
                                                56320 <= r && r <= 57343 ? this.content = 1024 * (i - 55296) + r - 56320 + 65536 | e[s.CHAR_DATA_WIDTH_INDEX] << 22 : t = !0
                                            } else t = !0
                                        } else this.content = e[s.CHAR_DATA_CHAR_INDEX].charCodeAt(0) | e[s.CHAR_DATA_WIDTH_INDEX] << 22;
                                        t && (this.combinedData = e[s.CHAR_DATA_CHAR_INDEX], this.content = 2097152 | e[s.CHAR_DATA_WIDTH_INDEX] << 22)
                                    }
                                    getAsCharData() {
                                        return [this.fg, this.getChars(), this.getWidth(), this.getCode()]
                                    }
                                }
                                t.CellData = o
                            },
                            855: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.WHITESPACE_CELL_CODE = t.WHITESPACE_CELL_WIDTH = t.WHITESPACE_CELL_CHAR = t.NULL_CELL_CODE = t.NULL_CELL_WIDTH = t.NULL_CELL_CHAR = t.CHAR_DATA_CODE_INDEX = t.CHAR_DATA_WIDTH_INDEX = t.CHAR_DATA_CHAR_INDEX = t.CHAR_DATA_ATTR_INDEX = t.DEFAULT_EXT = t.DEFAULT_ATTR = t.DEFAULT_COLOR = void 0, t.DEFAULT_COLOR = 0, t.DEFAULT_ATTR = 256 | t.DEFAULT_COLOR << 9, t.DEFAULT_EXT = 0, t.CHAR_DATA_ATTR_INDEX = 0, t.CHAR_DATA_CHAR_INDEX = 1, t.CHAR_DATA_WIDTH_INDEX = 2, t.CHAR_DATA_CODE_INDEX = 3, t.NULL_CELL_CHAR = "", t.NULL_CELL_WIDTH = 1, t.NULL_CELL_CODE = 0, t.WHITESPACE_CELL_CHAR = " ", t.WHITESPACE_CELL_WIDTH = 1, t.WHITESPACE_CELL_CODE = 32
                            },
                            133: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.Utf8ToUtf32 = t.StringToUtf32 = t.utf32ToString = t.stringFromCodePoint = void 0, t.stringFromCodePoint = function(e) {
                                    return e > 65535 ? (e -= 65536, String.fromCharCode(55296 + (e >> 10)) + String.fromCharCode(e % 1024 + 56320)) : String.fromCharCode(e)
                                }, t.utf32ToString = function(e, t = 0, i = e.length) {
                                    let r = "";
                                    for (let s = t; s < i; ++s) {
                                        let t = e[s];
                                        t > 65535 ? (t -= 65536, r += String.fromCharCode(55296 + (t >> 10)) + String.fromCharCode(t % 1024 + 56320)) : r += String.fromCharCode(t)
                                    }
                                    return r
                                }, t.StringToUtf32 = class {
                                    constructor() {
                                        this._interim = 0
                                    }
                                    clear() {
                                        this._interim = 0
                                    }
                                    decode(e, t) {
                                        const i = e.length;
                                        if (!i) return 0;
                                        let r = 0,
                                            s = 0;
                                        if (this._interim) {
                                            const i = e.charCodeAt(s++);
                                            56320 <= i && i <= 57343 ? t[r++] = 1024 * (this._interim - 55296) + i - 56320 + 65536 : (t[r++] = this._interim, t[r++] = i), this._interim = 0
                                        }
                                        for (let n = s; n < i; ++n) {
                                            const s = e.charCodeAt(n);
                                            if (55296 <= s && s <= 56319) {
                                                if (++n >= i) return this._interim = s, r;
                                                const o = e.charCodeAt(n);
                                                56320 <= o && o <= 57343 ? t[r++] = 1024 * (s - 55296) + o - 56320 + 65536 : (t[r++] = s, t[r++] = o)
                                            } else 65279 !== s && (t[r++] = s)
                                        }
                                        return r
                                    }
                                }, t.Utf8ToUtf32 = class {
                                    constructor() {
                                        this.interim = new Uint8Array(3)
                                    }
                                    clear() {
                                        this.interim.fill(0)
                                    }
                                    decode(e, t) {
                                        const i = e.length;
                                        if (!i) return 0;
                                        let r, s, n, o, a = 0,
                                            c = 0,
                                            l = 0;
                                        if (this.interim[0]) {
                                            let r = !1,
                                                s = this.interim[0];
                                            s &= 192 == (224 & s) ? 31 : 224 == (240 & s) ? 15 : 7;
                                            let n, o = 0;
                                            for (;
                                                (n = 63 & this.interim[++o]) && o < 4;) s <<= 6, s |= n;
                                            const c = 192 == (224 & this.interim[0]) ? 2 : 224 == (240 & this.interim[0]) ? 3 : 4,
                                                h = c - o;
                                            for (; l < h;) {
                                                if (l >= i) return 0;
                                                if (n = e[l++], 128 != (192 & n)) {
                                                    l--, r = !0;
                                                    break
                                                }
                                                this.interim[o++] = n, s <<= 6, s |= 63 & n
                                            }
                                            r || (2 === c ? s < 128 ? l-- : t[a++] = s : 3 === c ? s < 2048 || s >= 55296 && s <= 57343 || 65279 === s || (t[a++] = s) : s < 65536 || s > 1114111 || (t[a++] = s)), this.interim.fill(0)
                                        }
                                        const h = i - 4;
                                        let u = l;
                                        for (; u < i;) {
                                            for (; !(!(u < h) || 128 & (r = e[u]) || 128 & (s = e[u + 1]) || 128 & (n = e[u + 2]) || 128 & (o = e[u + 3]));) t[a++] = r, t[a++] = s, t[a++] = n, t[a++] = o, u += 4;
                                            if (r = e[u++], r < 128) t[a++] = r;
                                            else if (192 == (224 & r)) {
                                                if (u >= i) return this.interim[0] = r, a;
                                                if (s = e[u++], 128 != (192 & s)) {
                                                    u--;
                                                    continue
                                                }
                                                if (c = (31 & r) << 6 | 63 & s, c < 128) {
                                                    u--;
                                                    continue
                                                }
                                                t[a++] = c
                                            } else if (224 == (240 & r)) {
                                                if (u >= i) return this.interim[0] = r, a;
                                                if (s = e[u++], 128 != (192 & s)) {
                                                    u--;
                                                    continue
                                                }
                                                if (u >= i) return this.interim[0] = r, this.interim[1] = s, a;
                                                if (n = e[u++], 128 != (192 & n)) {
                                                    u--;
                                                    continue
                                                }
                                                if (c = (15 & r) << 12 | (63 & s) << 6 | 63 & n, c < 2048 || c >= 55296 && c <= 57343 || 65279 === c) continue;
                                                t[a++] = c
                                            } else if (240 == (248 & r)) {
                                                if (u >= i) return this.interim[0] = r, a;
                                                if (s = e[u++], 128 != (192 & s)) {
                                                    u--;
                                                    continue
                                                }
                                                if (u >= i) return this.interim[0] = r, this.interim[1] = s, a;
                                                if (n = e[u++], 128 != (192 & n)) {
                                                    u--;
                                                    continue
                                                }
                                                if (u >= i) return this.interim[0] = r, this.interim[1] = s, this.interim[2] = n, a;
                                                if (o = e[u++], 128 != (192 & o)) {
                                                    u--;
                                                    continue
                                                }
                                                if (c = (7 & r) << 18 | (63 & s) << 12 | (63 & n) << 6 | 63 & o, c < 65536 || c > 1114111) continue;
                                                t[a++] = c
                                            }
                                        }
                                        return a
                                    }
                                }
                            },
                            776: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.traceCall = t.setTraceLogger = t.LogService = void 0;
                                const n = i(859),
                                    o = i(97),
                                    a = {
                                        trace: o.LogLevelEnum.TRACE,
                                        debug: o.LogLevelEnum.DEBUG,
                                        info: o.LogLevelEnum.INFO,
                                        warn: o.LogLevelEnum.WARN,
                                        error: o.LogLevelEnum.ERROR,
                                        off: o.LogLevelEnum.OFF
                                    };
                                let c, l = t.LogService = class extends n.Disposable {
                                    get logLevel() {
                                        return this._logLevel
                                    }
                                    constructor(e) {
                                        super(), this._optionsService = e, this._logLevel = o.LogLevelEnum.OFF, this._updateLogLevel(), this.register(this._optionsService.onSpecificOptionChange("logLevel", (() => this._updateLogLevel()))), c = this
                                    }
                                    _updateLogLevel() {
                                        this._logLevel = a[this._optionsService.rawOptions.logLevel]
                                    }
                                    _evalLazyOptionalParams(e) {
                                        for (let t = 0; t < e.length; t++) "function" == typeof e[t] && (e[t] = e[t]())
                                    }
                                    _log(e, t, i) {
                                        this._evalLazyOptionalParams(i), e.call(console, (this._optionsService.options.logger ? "" : "xterm.js: ") + t, ...i)
                                    }
                                    trace(e, ...t) {
                                        this._logLevel <= o.LogLevelEnum.TRACE && this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, e, t)
                                    }
                                    debug(e, ...t) {
                                        this._logLevel <= o.LogLevelEnum.DEBUG && this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, e, t)
                                    }
                                    info(e, ...t) {
                                        this._logLevel <= o.LogLevelEnum.INFO && this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, e, t)
                                    }
                                    warn(e, ...t) {
                                        this._logLevel <= o.LogLevelEnum.WARN && this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, e, t)
                                    }
                                    error(e, ...t) {
                                        this._logLevel <= o.LogLevelEnum.ERROR && this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, e, t)
                                    }
                                };
                                t.LogService = l = r([s(0, o.IOptionsService)], l), t.setTraceLogger = function(e) {
                                    c = e
                                }, t.traceCall = function(e, t, i) {
                                    if ("function" != typeof i.value) throw new Error("not supported");
                                    const r = i.value;
                                    i.value = function(...e) {
                                        if (c.logLevel !== o.LogLevelEnum.TRACE) return r.apply(this, e);
                                        c.trace(`GlyphRenderer#${r.name}(${e.map((e=>JSON.stringify(e))).join(", ")})`);
                                        const t = r.apply(this, e);
                                        return c.trace(`GlyphRenderer#${r.name} return`, t), t
                                    }
                                }
                            },
                            726: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.createDecorator = t.getServiceDependencies = t.serviceRegistry = void 0;
                                const i = "di$target",
                                    r = "di$dependencies";
                                t.serviceRegistry = new Map, t.getServiceDependencies = function(e) {
                                    return e[r] || []
                                }, t.createDecorator = function(e) {
                                    if (t.serviceRegistry.has(e)) return t.serviceRegistry.get(e);
                                    const s = function(e, t, n) {
                                        if (3 !== arguments.length) throw new Error("@IServiceName-decorator can only be used to decorate a parameter");
                                        ! function(e, t, s) {
                                            t[i] === t ? t[r].push({
                                                id: e,
                                                index: s
                                            }) : (t[r] = [{
                                                id: e,
                                                index: s
                                            }], t[i] = t)
                                        }(s, e, n)
                                    };
                                    return s.toString = () => e, t.serviceRegistry.set(e, s), s
                                }
                            },
                            97: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.IDecorationService = t.IUnicodeService = t.IOscLinkService = t.IOptionsService = t.ILogService = t.LogLevelEnum = t.IInstantiationService = t.ICharsetService = t.ICoreService = t.ICoreMouseService = t.IBufferService = void 0;
                                const r = i(726);
                                var s;
                                t.IBufferService = (0, r.createDecorator)("BufferService"), t.ICoreMouseService = (0, r.createDecorator)("CoreMouseService"), t.ICoreService = (0, r.createDecorator)("CoreService"), t.ICharsetService = (0, r.createDecorator)("CharsetService"), t.IInstantiationService = (0, r.createDecorator)("InstantiationService"),
                                    function(e) {
                                        e[e.TRACE = 0] = "TRACE", e[e.DEBUG = 1] = "DEBUG", e[e.INFO = 2] = "INFO", e[e.WARN = 3] = "WARN", e[e.ERROR = 4] = "ERROR", e[e.OFF = 5] = "OFF"
                                    }(s || (t.LogLevelEnum = s = {})), t.ILogService = (0, r.createDecorator)("LogService"), t.IOptionsService = (0, r.createDecorator)("OptionsService"), t.IOscLinkService = (0, r.createDecorator)("OscLinkService"), t.IUnicodeService = (0, r.createDecorator)("UnicodeService"), t.IDecorationService = (0, r.createDecorator)("DecorationService")
                            }
                        },
                        t = {};

                    function i(r) {
                        var s = t[r];
                        if (void 0 !== s) return s.exports;
                        var n = t[r] = {
                            exports: {}
                        };
                        return e[r].call(n.exports, n, n.exports, i), n.exports
                    }
                    var r = {};
                    return (() => {
                        var e = r;
                        Object.defineProperty(e, "__esModule", {
                            value: !0
                        }), e.CanvasAddon = void 0;
                        const t = i(345),
                            s = i(859),
                            n = i(776),
                            o = i(949);
                        class a extends s.Disposable {
                            constructor() {
                                super(...arguments), this._onChangeTextureAtlas = this.register(new t.EventEmitter), this.onChangeTextureAtlas = this._onChangeTextureAtlas.event, this._onAddTextureAtlasCanvas = this.register(new t.EventEmitter), this.onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event
                            }
                            get textureAtlas() {
                                return this._renderer?.textureAtlas
                            }
                            activate(e) {
                                const i = e._core;
                                if (!e.element) return void this.register(i.onWillOpen((() => this.activate(e))));
                                this._terminal = e;
                                const r = i.coreService,
                                    a = i.optionsService,
                                    c = i.screenElement,
                                    l = i.linkifier,
                                    h = i,
                                    u = h._bufferService,
                                    d = h._renderService,
                                    f = h._characterJoinerService,
                                    p = h._charSizeService,
                                    _ = h._coreBrowserService,
                                    g = h._decorationService,
                                    v = h._logService,
                                    m = h._themeService;
                                (0, n.setTraceLogger)(v), this._renderer = new o.CanvasRenderer(e, c, l, u, p, a, f, r, _, g, m), this.register((0, t.forwardEvent)(this._renderer.onChangeTextureAtlas, this._onChangeTextureAtlas)), this.register((0, t.forwardEvent)(this._renderer.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas)), d.setRenderer(this._renderer), d.handleResize(u.cols, u.rows), this.register((0, s.toDisposable)((() => {
                                    d.setRenderer(this._terminal._core._createRenderer()), d.handleResize(e.cols, e.rows), this._renderer?.dispose(), this._renderer = void 0
                                })))
                            }
                            clearTextureAtlas() {
                                this._renderer?.clearTextureAtlas()
                            }
                        }
                        e.CanvasAddon = a
                    })(), r
                })(), e.exports = t()
            },
            8267: e => {
                var t;
                self, t = () => (() => {
                    "use strict";
                    var e, t = {};
                    return e = t, Object.defineProperty(e, "__esModule", {
                        value: !0
                    }), e.FitAddon = void 0, e.FitAddon = class {
                        activate(e) {
                            this._terminal = e
                        }
                        dispose() {}
                        fit() {
                            const e = this.proposeDimensions();
                            if (!e || !this._terminal || isNaN(e.cols) || isNaN(e.rows)) return;
                            const t = this._terminal._core;
                            this._terminal.rows === e.rows && this._terminal.cols === e.cols || (t._renderService.clear(), this._terminal.resize(e.cols, e.rows))
                        }
                        proposeDimensions() {
                            if (!this._terminal) return;
                            if (!this._terminal.element || !this._terminal.element.parentElement) return;
                            const e = this._terminal._core,
                                t = e._renderService.dimensions;
                            if (0 === t.css.cell.width || 0 === t.css.cell.height) return;
                            const i = 0 === this._terminal.options.scrollback ? 0 : e.viewport.scrollBarWidth,
                                r = window.getComputedStyle(this._terminal.element.parentElement),
                                s = parseInt(r.getPropertyValue("height")),
                                n = Math.max(0, parseInt(r.getPropertyValue("width"))),
                                o = window.getComputedStyle(this._terminal.element),
                                a = s - (parseInt(o.getPropertyValue("padding-top")) + parseInt(o.getPropertyValue("padding-bottom"))),
                                c = n - (parseInt(o.getPropertyValue("padding-right")) + parseInt(o.getPropertyValue("padding-left"))) - i;
                            return {
                                cols: Math.max(2, Math.floor(c / t.css.cell.width)),
                                rows: Math.max(1, Math.floor(a / t.css.cell.height))
                            }
                        }
                    }, t
                })(), e.exports = t()
            },
            4457: e => {
                var t;
                self, t = () => (() => {
                    "use strict";
                    var e = {
                            965: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.GlyphRenderer = void 0;
                                const r = i(374),
                                    s = i(509),
                                    n = i(855),
                                    o = i(859),
                                    a = i(381),
                                    c = 11,
                                    l = c * Float32Array.BYTES_PER_ELEMENT;
                                let h, u = 0,
                                    d = 0,
                                    f = 0;
                                class p extends o.Disposable {
                                    constructor(e, t, i, n) {
                                        super(), this._terminal = e, this._gl = t, this._dimensions = i, this._optionsService = n, this._activeBuffer = 0, this._vertices = {
                                            count: 0,
                                            attributes: new Float32Array(0),
                                            attributesBuffers: [new Float32Array(0), new Float32Array(0)]
                                        };
                                        const c = this._gl;
                                        void 0 === s.TextureAtlas.maxAtlasPages && (s.TextureAtlas.maxAtlasPages = Math.min(32, (0, r.throwIfFalsy)(c.getParameter(c.MAX_TEXTURE_IMAGE_UNITS))), s.TextureAtlas.maxTextureSize = (0, r.throwIfFalsy)(c.getParameter(c.MAX_TEXTURE_SIZE))), this._program = (0, r.throwIfFalsy)((0, a.createProgram)(c, "#version 300 es\nlayout (location = 0) in vec2 a_unitquad;\nlayout (location = 1) in vec2 a_cellpos;\nlayout (location = 2) in vec2 a_offset;\nlayout (location = 3) in vec2 a_size;\nlayout (location = 4) in float a_texpage;\nlayout (location = 5) in vec2 a_texcoord;\nlayout (location = 6) in vec2 a_texsize;\n\nuniform mat4 u_projection;\nuniform vec2 u_resolution;\n\nout vec2 v_texcoord;\nflat out int v_texpage;\n\nvoid main() {\n  vec2 zeroToOne = (a_offset / u_resolution) + a_cellpos + (a_unitquad * a_size);\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_texpage = int(a_texpage);\n  v_texcoord = a_texcoord + a_unitquad * a_texsize;\n}", function(e) {
                                            let t = "";
                                            for (let i = 1; i < e; i++) t += ` else if (v_texpage == ${i}) { outColor = texture(u_texture[${i}], v_texcoord); }`;
                                            return `#version 300 es\nprecision lowp float;\n\nin vec2 v_texcoord;\nflat in int v_texpage;\n\nuniform sampler2D u_texture[${e}];\n\nout vec4 outColor;\n\nvoid main() {\n  if (v_texpage == 0) {\n    outColor = texture(u_texture[0], v_texcoord);\n  } ${t}\n}`
                                        }(s.TextureAtlas.maxAtlasPages))), this.register((0, o.toDisposable)((() => c.deleteProgram(this._program)))), this._projectionLocation = (0, r.throwIfFalsy)(c.getUniformLocation(this._program, "u_projection")), this._resolutionLocation = (0, r.throwIfFalsy)(c.getUniformLocation(this._program, "u_resolution")), this._textureLocation = (0, r.throwIfFalsy)(c.getUniformLocation(this._program, "u_texture")), this._vertexArrayObject = c.createVertexArray(), c.bindVertexArray(this._vertexArrayObject);
                                        const h = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]),
                                            u = c.createBuffer();
                                        this.register((0, o.toDisposable)((() => c.deleteBuffer(u)))), c.bindBuffer(c.ARRAY_BUFFER, u), c.bufferData(c.ARRAY_BUFFER, h, c.STATIC_DRAW), c.enableVertexAttribArray(0), c.vertexAttribPointer(0, 2, this._gl.FLOAT, !1, 0, 0);
                                        const d = new Uint8Array([0, 1, 2, 3]),
                                            f = c.createBuffer();
                                        this.register((0, o.toDisposable)((() => c.deleteBuffer(f)))), c.bindBuffer(c.ELEMENT_ARRAY_BUFFER, f), c.bufferData(c.ELEMENT_ARRAY_BUFFER, d, c.STATIC_DRAW), this._attributesBuffer = (0, r.throwIfFalsy)(c.createBuffer()), this.register((0, o.toDisposable)((() => c.deleteBuffer(this._attributesBuffer)))), c.bindBuffer(c.ARRAY_BUFFER, this._attributesBuffer), c.enableVertexAttribArray(2), c.vertexAttribPointer(2, 2, c.FLOAT, !1, l, 0), c.vertexAttribDivisor(2, 1), c.enableVertexAttribArray(3), c.vertexAttribPointer(3, 2, c.FLOAT, !1, l, 2 * Float32Array.BYTES_PER_ELEMENT), c.vertexAttribDivisor(3, 1), c.enableVertexAttribArray(4), c.vertexAttribPointer(4, 1, c.FLOAT, !1, l, 4 * Float32Array.BYTES_PER_ELEMENT), c.vertexAttribDivisor(4, 1), c.enableVertexAttribArray(5), c.vertexAttribPointer(5, 2, c.FLOAT, !1, l, 5 * Float32Array.BYTES_PER_ELEMENT), c.vertexAttribDivisor(5, 1), c.enableVertexAttribArray(6), c.vertexAttribPointer(6, 2, c.FLOAT, !1, l, 7 * Float32Array.BYTES_PER_ELEMENT), c.vertexAttribDivisor(6, 1), c.enableVertexAttribArray(1), c.vertexAttribPointer(1, 2, c.FLOAT, !1, l, 9 * Float32Array.BYTES_PER_ELEMENT), c.vertexAttribDivisor(1, 1), c.useProgram(this._program);
                                        const p = new Int32Array(s.TextureAtlas.maxAtlasPages);
                                        for (let e = 0; e < s.TextureAtlas.maxAtlasPages; e++) p[e] = e;
                                        c.uniform1iv(this._textureLocation, p), c.uniformMatrix4fv(this._projectionLocation, !1, a.PROJECTION_MATRIX), this._atlasTextures = [];
                                        for (let e = 0; e < s.TextureAtlas.maxAtlasPages; e++) {
                                            const t = new a.GLTexture((0, r.throwIfFalsy)(c.createTexture()));
                                            this.register((0, o.toDisposable)((() => c.deleteTexture(t.texture)))), c.activeTexture(c.TEXTURE0 + e), c.bindTexture(c.TEXTURE_2D, t.texture), c.texParameteri(c.TEXTURE_2D, c.TEXTURE_WRAP_S, c.CLAMP_TO_EDGE), c.texParameteri(c.TEXTURE_2D, c.TEXTURE_WRAP_T, c.CLAMP_TO_EDGE), c.texImage2D(c.TEXTURE_2D, 0, c.RGBA, 1, 1, 0, c.RGBA, c.UNSIGNED_BYTE, new Uint8Array([255, 0, 0, 255])), this._atlasTextures[e] = t
                                        }
                                        c.enable(c.BLEND), c.blendFunc(c.SRC_ALPHA, c.ONE_MINUS_SRC_ALPHA), this.handleResize()
                                    }
                                    beginFrame() {
                                        return !this._atlas || this._atlas.beginFrame()
                                    }
                                    updateCell(e, t, i, r, s, n, o, a, c) {
                                        this._updateCell(this._vertices.attributes, e, t, i, r, s, n, o, a, c)
                                    }
                                    _updateCell(e, t, i, s, o, a, l, p, _, g) {
                                        u = (i * this._terminal.cols + t) * c, s !== n.NULL_CELL_CODE && void 0 !== s ? this._atlas && (h = p && p.length > 1 ? this._atlas.getRasterizedGlyphCombinedChar(p, o, a, l, !1) : this._atlas.getRasterizedGlyph(s, o, a, l, !1), d = Math.floor((this._dimensions.device.cell.width - this._dimensions.device.char.width) / 2), o !== g && h.offset.x > d ? (f = h.offset.x - d, e[u] = -(h.offset.x - f) + this._dimensions.device.char.left, e[u + 1] = -h.offset.y + this._dimensions.device.char.top, e[u + 2] = (h.size.x - f) / this._dimensions.device.canvas.width, e[u + 3] = h.size.y / this._dimensions.device.canvas.height, e[u + 4] = h.texturePage, e[u + 5] = h.texturePositionClipSpace.x + f / this._atlas.pages[h.texturePage].canvas.width, e[u + 6] = h.texturePositionClipSpace.y, e[u + 7] = h.sizeClipSpace.x - f / this._atlas.pages[h.texturePage].canvas.width, e[u + 8] = h.sizeClipSpace.y) : (e[u] = -h.offset.x + this._dimensions.device.char.left, e[u + 1] = -h.offset.y + this._dimensions.device.char.top, e[u + 2] = h.size.x / this._dimensions.device.canvas.width, e[u + 3] = h.size.y / this._dimensions.device.canvas.height, e[u + 4] = h.texturePage, e[u + 5] = h.texturePositionClipSpace.x, e[u + 6] = h.texturePositionClipSpace.y, e[u + 7] = h.sizeClipSpace.x, e[u + 8] = h.sizeClipSpace.y), this._optionsService.rawOptions.rescaleOverlappingGlyphs && (0, r.allowRescaling)(s, _, h.size.x, this._dimensions.device.cell.width) && (e[u + 2] = (this._dimensions.device.cell.width - 1) / this._dimensions.device.canvas.width)) : e.fill(0, u, u + c - 1 - 2)
                                    }
                                    clear() {
                                        const e = this._terminal,
                                            t = e.cols * e.rows * c;
                                        this._vertices.count !== t ? this._vertices.attributes = new Float32Array(t) : this._vertices.attributes.fill(0);
                                        let i = 0;
                                        for (; i < this._vertices.attributesBuffers.length; i++) this._vertices.count !== t ? this._vertices.attributesBuffers[i] = new Float32Array(t) : this._vertices.attributesBuffers[i].fill(0);
                                        this._vertices.count = t, i = 0;
                                        for (let t = 0; t < e.rows; t++)
                                            for (let r = 0; r < e.cols; r++) this._vertices.attributes[i + 9] = r / e.cols, this._vertices.attributes[i + 10] = t / e.rows, i += c
                                    }
                                    handleResize() {
                                        const e = this._gl;
                                        e.useProgram(this._program), e.viewport(0, 0, e.canvas.width, e.canvas.height), e.uniform2f(this._resolutionLocation, e.canvas.width, e.canvas.height), this.clear()
                                    }
                                    render(e) {
                                        if (!this._atlas) return;
                                        const t = this._gl;
                                        t.useProgram(this._program), t.bindVertexArray(this._vertexArrayObject), this._activeBuffer = (this._activeBuffer + 1) % 2;
                                        const i = this._vertices.attributesBuffers[this._activeBuffer];
                                        let r = 0;
                                        for (let t = 0; t < e.lineLengths.length; t++) {
                                            const s = t * this._terminal.cols * c,
                                                n = this._vertices.attributes.subarray(s, s + e.lineLengths[t] * c);
                                            i.set(n, r), r += n.length
                                        }
                                        t.bindBuffer(t.ARRAY_BUFFER, this._attributesBuffer), t.bufferData(t.ARRAY_BUFFER, i.subarray(0, r), t.STREAM_DRAW);
                                        for (let e = 0; e < this._atlas.pages.length; e++) this._atlas.pages[e].version !== this._atlasTextures[e].version && this._bindAtlasPageTexture(t, this._atlas, e);
                                        t.drawElementsInstanced(t.TRIANGLE_STRIP, 4, t.UNSIGNED_BYTE, 0, r / c)
                                    }
                                    setAtlas(e) {
                                        this._atlas = e;
                                        for (const e of this._atlasTextures) e.version = -1
                                    }
                                    _bindAtlasPageTexture(e, t, i) {
                                        e.activeTexture(e.TEXTURE0 + i), e.bindTexture(e.TEXTURE_2D, this._atlasTextures[i].texture), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_S, e.CLAMP_TO_EDGE), e.texParameteri(e.TEXTURE_2D, e.TEXTURE_WRAP_T, e.CLAMP_TO_EDGE), e.texImage2D(e.TEXTURE_2D, 0, e.RGBA, e.RGBA, e.UNSIGNED_BYTE, t.pages[i].canvas), e.generateMipmap(e.TEXTURE_2D), this._atlasTextures[i].version = t.pages[i].version
                                    }
                                    setDimensions(e) {
                                        this._dimensions = e
                                    }
                                }
                                t.GlyphRenderer = p
                            },
                            742: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.RectangleRenderer = void 0;
                                const r = i(374),
                                    s = i(859),
                                    n = i(310),
                                    o = i(381),
                                    a = 8 * Float32Array.BYTES_PER_ELEMENT;
                                class c {
                                    constructor() {
                                        this.attributes = new Float32Array(160), this.count = 0
                                    }
                                }
                                let l = 0,
                                    h = 0,
                                    u = 0,
                                    d = 0,
                                    f = 0,
                                    p = 0,
                                    _ = 0;
                                class g extends s.Disposable {
                                    constructor(e, t, i, n) {
                                        super(), this._terminal = e, this._gl = t, this._dimensions = i, this._themeService = n, this._vertices = new c, this._verticesCursor = new c;
                                        const l = this._gl;
                                        this._program = (0, r.throwIfFalsy)((0, o.createProgram)(l, "#version 300 es\nlayout (location = 0) in vec2 a_position;\nlayout (location = 1) in vec2 a_size;\nlayout (location = 2) in vec4 a_color;\nlayout (location = 3) in vec2 a_unitquad;\n\nuniform mat4 u_projection;\n\nout vec4 v_color;\n\nvoid main() {\n  vec2 zeroToOne = a_position + (a_unitquad * a_size);\n  gl_Position = u_projection * vec4(zeroToOne, 0.0, 1.0);\n  v_color = a_color;\n}", "#version 300 es\nprecision lowp float;\n\nin vec4 v_color;\n\nout vec4 outColor;\n\nvoid main() {\n  outColor = v_color;\n}")), this.register((0, s.toDisposable)((() => l.deleteProgram(this._program)))), this._projectionLocation = (0, r.throwIfFalsy)(l.getUniformLocation(this._program, "u_projection")), this._vertexArrayObject = l.createVertexArray(), l.bindVertexArray(this._vertexArrayObject);
                                        const h = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]),
                                            u = l.createBuffer();
                                        this.register((0, s.toDisposable)((() => l.deleteBuffer(u)))), l.bindBuffer(l.ARRAY_BUFFER, u), l.bufferData(l.ARRAY_BUFFER, h, l.STATIC_DRAW), l.enableVertexAttribArray(3), l.vertexAttribPointer(3, 2, this._gl.FLOAT, !1, 0, 0);
                                        const d = new Uint8Array([0, 1, 2, 3]),
                                            f = l.createBuffer();
                                        this.register((0, s.toDisposable)((() => l.deleteBuffer(f)))), l.bindBuffer(l.ELEMENT_ARRAY_BUFFER, f), l.bufferData(l.ELEMENT_ARRAY_BUFFER, d, l.STATIC_DRAW), this._attributesBuffer = (0, r.throwIfFalsy)(l.createBuffer()), this.register((0, s.toDisposable)((() => l.deleteBuffer(this._attributesBuffer)))), l.bindBuffer(l.ARRAY_BUFFER, this._attributesBuffer), l.enableVertexAttribArray(0), l.vertexAttribPointer(0, 2, l.FLOAT, !1, a, 0), l.vertexAttribDivisor(0, 1), l.enableVertexAttribArray(1), l.vertexAttribPointer(1, 2, l.FLOAT, !1, a, 2 * Float32Array.BYTES_PER_ELEMENT), l.vertexAttribDivisor(1, 1), l.enableVertexAttribArray(2), l.vertexAttribPointer(2, 4, l.FLOAT, !1, a, 4 * Float32Array.BYTES_PER_ELEMENT), l.vertexAttribDivisor(2, 1), this._updateCachedColors(n.colors), this.register(this._themeService.onChangeColors((e => {
                                            this._updateCachedColors(e), this._updateViewportRectangle()
                                        })))
                                    }
                                    renderBackgrounds() {
                                        this._renderVertices(this._vertices)
                                    }
                                    renderCursor() {
                                        this._renderVertices(this._verticesCursor)
                                    }
                                    _renderVertices(e) {
                                        const t = this._gl;
                                        t.useProgram(this._program), t.bindVertexArray(this._vertexArrayObject), t.uniformMatrix4fv(this._projectionLocation, !1, o.PROJECTION_MATRIX), t.bindBuffer(t.ARRAY_BUFFER, this._attributesBuffer), t.bufferData(t.ARRAY_BUFFER, e.attributes, t.DYNAMIC_DRAW), t.drawElementsInstanced(this._gl.TRIANGLE_STRIP, 4, t.UNSIGNED_BYTE, 0, e.count)
                                    }
                                    handleResize() {
                                        this._updateViewportRectangle()
                                    }
                                    setDimensions(e) {
                                        this._dimensions = e
                                    }
                                    _updateCachedColors(e) {
                                        this._bgFloat = this._colorToFloat32Array(e.background), this._cursorFloat = this._colorToFloat32Array(e.cursor)
                                    }
                                    _updateViewportRectangle() {
                                        this._addRectangleFloat(this._vertices.attributes, 0, 0, 0, this._terminal.cols * this._dimensions.device.cell.width, this._terminal.rows * this._dimensions.device.cell.height, this._bgFloat)
                                    }
                                    updateBackgrounds(e) {
                                        const t = this._terminal,
                                            i = this._vertices;
                                        let r, s, o, a, c, l, h, u, d, f, p, _ = 1;
                                        for (r = 0; r < t.rows; r++) {
                                            for (o = -1, a = 0, c = 0, l = !1, s = 0; s < t.cols; s++) h = (r * t.cols + s) * n.RENDER_MODEL_INDICIES_PER_CELL, u = e.cells[h + n.RENDER_MODEL_BG_OFFSET], d = e.cells[h + n.RENDER_MODEL_FG_OFFSET], f = !!(67108864 & d), (u !== a || d !== c && (l || f)) && ((0 !== a || l && 0 !== c) && (p = 8 * _++, this._updateRectangle(i, p, c, a, o, s, r)), o = s, a = u, c = d, l = f);
                                            (0 !== a || l && 0 !== c) && (p = 8 * _++, this._updateRectangle(i, p, c, a, o, t.cols, r))
                                        }
                                        i.count = _
                                    }
                                    updateCursor(e) {
                                        const t = this._verticesCursor,
                                            i = e.cursor;
                                        if (!i || "block" === i.style) return void(t.count = 0);
                                        let r, s = 0;
                                        "bar" !== i.style && "outline" !== i.style || (r = 8 * s++, this._addRectangleFloat(t.attributes, r, i.x * this._dimensions.device.cell.width, i.y * this._dimensions.device.cell.height, "bar" === i.style ? i.dpr * i.cursorWidth : i.dpr, this._dimensions.device.cell.height, this._cursorFloat)), "underline" !== i.style && "outline" !== i.style || (r = 8 * s++, this._addRectangleFloat(t.attributes, r, i.x * this._dimensions.device.cell.width, (i.y + 1) * this._dimensions.device.cell.height - i.dpr, i.width * this._dimensions.device.cell.width, i.dpr, this._cursorFloat)), "outline" === i.style && (r = 8 * s++, this._addRectangleFloat(t.attributes, r, i.x * this._dimensions.device.cell.width, i.y * this._dimensions.device.cell.height, i.width * this._dimensions.device.cell.width, i.dpr, this._cursorFloat), r = 8 * s++, this._addRectangleFloat(t.attributes, r, (i.x + i.width) * this._dimensions.device.cell.width - i.dpr, i.y * this._dimensions.device.cell.height, i.dpr, this._dimensions.device.cell.height, this._cursorFloat)), t.count = s
                                    }
                                    _updateRectangle(e, t, i, r, s, n, a) {
                                        if (67108864 & i) switch (50331648 & i) {
                                            case 16777216:
                                            case 33554432:
                                                l = this._themeService.colors.ansi[255 & i].rgba;
                                                break;
                                            case 50331648:
                                                l = (16777215 & i) << 8;
                                                break;
                                            default:
                                                l = this._themeService.colors.foreground.rgba
                                        } else switch (50331648 & r) {
                                            case 16777216:
                                            case 33554432:
                                                l = this._themeService.colors.ansi[255 & r].rgba;
                                                break;
                                            case 50331648:
                                                l = (16777215 & r) << 8;
                                                break;
                                            default:
                                                l = this._themeService.colors.background.rgba
                                        }
                                        e.attributes.length < t + 4 && (e.attributes = (0, o.expandFloat32Array)(e.attributes, this._terminal.rows * this._terminal.cols * 8)), h = s * this._dimensions.device.cell.width, u = a * this._dimensions.device.cell.height, d = (l >> 24 & 255) / 255, f = (l >> 16 & 255) / 255, p = (l >> 8 & 255) / 255, _ = 1, this._addRectangle(e.attributes, t, h, u, (n - s) * this._dimensions.device.cell.width, this._dimensions.device.cell.height, d, f, p, _)
                                    }
                                    _addRectangle(e, t, i, r, s, n, o, a, c, l) {
                                        e[t] = i / this._dimensions.device.canvas.width, e[t + 1] = r / this._dimensions.device.canvas.height, e[t + 2] = s / this._dimensions.device.canvas.width, e[t + 3] = n / this._dimensions.device.canvas.height, e[t + 4] = o, e[t + 5] = a, e[t + 6] = c, e[t + 7] = l
                                    }
                                    _addRectangleFloat(e, t, i, r, s, n, o) {
                                        e[t] = i / this._dimensions.device.canvas.width, e[t + 1] = r / this._dimensions.device.canvas.height, e[t + 2] = s / this._dimensions.device.canvas.width, e[t + 3] = n / this._dimensions.device.canvas.height, e[t + 4] = o[0], e[t + 5] = o[1], e[t + 6] = o[2], e[t + 7] = o[3]
                                    }
                                    _colorToFloat32Array(e) {
                                        return new Float32Array([(e.rgba >> 24 & 255) / 255, (e.rgba >> 16 & 255) / 255, (e.rgba >> 8 & 255) / 255, (255 & e.rgba) / 255])
                                    }
                                }
                                t.RectangleRenderer = g
                            },
                            310: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.RenderModel = t.COMBINED_CHAR_BIT_MASK = t.RENDER_MODEL_EXT_OFFSET = t.RENDER_MODEL_FG_OFFSET = t.RENDER_MODEL_BG_OFFSET = t.RENDER_MODEL_INDICIES_PER_CELL = void 0;
                                const r = i(296);
                                t.RENDER_MODEL_INDICIES_PER_CELL = 4, t.RENDER_MODEL_BG_OFFSET = 1, t.RENDER_MODEL_FG_OFFSET = 2, t.RENDER_MODEL_EXT_OFFSET = 3, t.COMBINED_CHAR_BIT_MASK = 2147483648, t.RenderModel = class {
                                    constructor() {
                                        this.cells = new Uint32Array(0), this.lineLengths = new Uint32Array(0), this.selection = (0, r.createSelectionRenderModel)()
                                    }
                                    resize(e, i) {
                                        const r = e * i * t.RENDER_MODEL_INDICIES_PER_CELL;
                                        r !== this.cells.length && (this.cells = new Uint32Array(r), this.lineLengths = new Uint32Array(i))
                                    }
                                    clear() {
                                        this.cells.fill(0, 0), this.lineLengths.fill(0, 0)
                                    }
                                }
                            },
                            666: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.JoinedCellData = t.WebglRenderer = void 0;
                                const r = i(820),
                                    s = i(274),
                                    n = i(627),
                                    o = i(457),
                                    a = i(56),
                                    c = i(374),
                                    l = i(345),
                                    h = i(859),
                                    u = i(147),
                                    d = i(782),
                                    f = i(855),
                                    p = i(965),
                                    _ = i(742),
                                    g = i(310),
                                    v = i(733);
                                class m extends h.Disposable {
                                    constructor(e, t, i, o, u, f, p, _, m) {
                                        super(), this._terminal = e, this._characterJoinerService = t, this._charSizeService = i, this._coreBrowserService = o, this._coreService = u, this._decorationService = f, this._optionsService = p, this._themeService = _, this._cursorBlinkStateManager = new h.MutableDisposable, this._charAtlasDisposable = this.register(new h.MutableDisposable), this._observerDisposable = this.register(new h.MutableDisposable), this._model = new g.RenderModel, this._workCell = new d.CellData, this._workCell2 = new d.CellData, this._rectangleRenderer = this.register(new h.MutableDisposable), this._glyphRenderer = this.register(new h.MutableDisposable), this._onChangeTextureAtlas = this.register(new l.EventEmitter), this.onChangeTextureAtlas = this._onChangeTextureAtlas.event, this._onAddTextureAtlasCanvas = this.register(new l.EventEmitter), this.onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event, this._onRemoveTextureAtlasCanvas = this.register(new l.EventEmitter), this.onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event, this._onRequestRedraw = this.register(new l.EventEmitter), this.onRequestRedraw = this._onRequestRedraw.event, this._onContextLoss = this.register(new l.EventEmitter), this.onContextLoss = this._onContextLoss.event, this.register(this._themeService.onChangeColors((() => this._handleColorChange()))), this._cellColorResolver = new s.CellColorResolver(this._terminal, this._optionsService, this._model.selection, this._decorationService, this._coreBrowserService, this._themeService), this._core = this._terminal._core, this._renderLayers = [new v.LinkRenderLayer(this._core.screenElement, 2, this._terminal, this._core.linkifier, this._coreBrowserService, p, this._themeService)], this.dimensions = (0, c.createRenderDimensions)(), this._devicePixelRatio = this._coreBrowserService.dpr, this._updateDimensions(), this._updateCursorBlink(), this.register(p.onOptionChange((() => this._handleOptionsChanged()))), this._canvas = this._coreBrowserService.mainDocument.createElement("canvas");
                                        const b = {
                                            antialias: !1,
                                            depth: !1,
                                            preserveDrawingBuffer: m
                                        };
                                        if (this._gl = this._canvas.getContext("webgl2", b), !this._gl) throw new Error("WebGL2 not supported " + this._gl);
                                        this.register((0, r.addDisposableDomListener)(this._canvas, "webglcontextlost", (e => {
                                            console.log("webglcontextlost event received"), e.preventDefault(), this._contextRestorationTimeout = setTimeout((() => {
                                                this._contextRestorationTimeout = void 0, console.warn("webgl context not restored; firing onContextLoss"), this._onContextLoss.fire(e)
                                            }), 3e3)
                                        }))), this.register((0, r.addDisposableDomListener)(this._canvas, "webglcontextrestored", (e => {
                                            console.warn("webglcontextrestored event received"), clearTimeout(this._contextRestorationTimeout), this._contextRestorationTimeout = void 0, (0, n.removeTerminalFromCache)(this._terminal), this._initializeWebGLState(), this._requestRedrawViewport()
                                        }))), this._observerDisposable.value = (0, a.observeDevicePixelDimensions)(this._canvas, this._coreBrowserService.window, ((e, t) => this._setCanvasDevicePixelDimensions(e, t))), this.register(this._coreBrowserService.onWindowChange((e => {
                                            this._observerDisposable.value = (0, a.observeDevicePixelDimensions)(this._canvas, e, ((e, t) => this._setCanvasDevicePixelDimensions(e, t)))
                                        }))), this._core.screenElement.appendChild(this._canvas), [this._rectangleRenderer.value, this._glyphRenderer.value] = this._initializeWebGLState(), this._isAttached = this._coreBrowserService.window.document.body.contains(this._core.screenElement), this.register((0, h.toDisposable)((() => {
                                            for (const e of this._renderLayers) e.dispose();
                                            this._canvas.parentElement?.removeChild(this._canvas), (0, n.removeTerminalFromCache)(this._terminal)
                                        })))
                                    }
                                    get textureAtlas() {
                                        return this._charAtlas?.pages[0].canvas
                                    }
                                    _handleColorChange() {
                                        this._refreshCharAtlas(), this._clearModel(!0)
                                    }
                                    handleDevicePixelRatioChange() {
                                        this._devicePixelRatio !== this._coreBrowserService.dpr && (this._devicePixelRatio = this._coreBrowserService.dpr, this.handleResize(this._terminal.cols, this._terminal.rows))
                                    }
                                    handleResize(e, t) {
                                        this._updateDimensions(), this._model.resize(this._terminal.cols, this._terminal.rows);
                                        for (const e of this._renderLayers) e.resize(this._terminal, this.dimensions);
                                        this._canvas.width = this.dimensions.device.canvas.width, this._canvas.height = this.dimensions.device.canvas.height, this._canvas.style.width = `${this.dimensions.css.canvas.width}px`, this._canvas.style.height = `${this.dimensions.css.canvas.height}px`, this._core.screenElement.style.width = `${this.dimensions.css.canvas.width}px`, this._core.screenElement.style.height = `${this.dimensions.css.canvas.height}px`, this._rectangleRenderer.value?.setDimensions(this.dimensions), this._rectangleRenderer.value?.handleResize(), this._glyphRenderer.value?.setDimensions(this.dimensions), this._glyphRenderer.value?.handleResize(), this._refreshCharAtlas(), this._clearModel(!1)
                                    }
                                    handleCharSizeChanged() {
                                        this.handleResize(this._terminal.cols, this._terminal.rows)
                                    }
                                    handleBlur() {
                                        for (const e of this._renderLayers) e.handleBlur(this._terminal);
                                        this._cursorBlinkStateManager.value?.pause(), this._requestRedrawViewport()
                                    }
                                    handleFocus() {
                                        for (const e of this._renderLayers) e.handleFocus(this._terminal);
                                        this._cursorBlinkStateManager.value?.resume(), this._requestRedrawViewport()
                                    }
                                    handleSelectionChanged(e, t, i) {
                                        for (const r of this._renderLayers) r.handleSelectionChanged(this._terminal, e, t, i);
                                        this._model.selection.update(this._core, e, t, i), this._requestRedrawViewport()
                                    }
                                    handleCursorMove() {
                                        for (const e of this._renderLayers) e.handleCursorMove(this._terminal);
                                        this._cursorBlinkStateManager.value?.restartBlinkAnimation()
                                    }
                                    _handleOptionsChanged() {
                                        this._updateDimensions(), this._refreshCharAtlas(), this._updateCursorBlink()
                                    }
                                    _initializeWebGLState() {
                                        return this._rectangleRenderer.value = new _.RectangleRenderer(this._terminal, this._gl, this.dimensions, this._themeService), this._glyphRenderer.value = new p.GlyphRenderer(this._terminal, this._gl, this.dimensions, this._optionsService), this.handleCharSizeChanged(), [this._rectangleRenderer.value, this._glyphRenderer.value]
                                    }
                                    _refreshCharAtlas() {
                                        if (this.dimensions.device.char.width <= 0 && this.dimensions.device.char.height <= 0) return void(this._isAttached = !1);
                                        const e = (0, n.acquireTextureAtlas)(this._terminal, this._optionsService.rawOptions, this._themeService.colors, this.dimensions.device.cell.width, this.dimensions.device.cell.height, this.dimensions.device.char.width, this.dimensions.device.char.height, this._coreBrowserService.dpr);
                                        this._charAtlas !== e && (this._onChangeTextureAtlas.fire(e.pages[0].canvas), this._charAtlasDisposable.value = (0, h.getDisposeArrayDisposable)([(0, l.forwardEvent)(e.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas), (0, l.forwardEvent)(e.onRemoveTextureAtlasCanvas, this._onRemoveTextureAtlasCanvas)])), this._charAtlas = e, this._charAtlas.warmUp(), this._glyphRenderer.value?.setAtlas(this._charAtlas)
                                    }
                                    _clearModel(e) {
                                        this._model.clear(), e && this._glyphRenderer.value?.clear()
                                    }
                                    clearTextureAtlas() {
                                        this._charAtlas?.clearTexture(), this._clearModel(!0), this._requestRedrawViewport()
                                    }
                                    clear() {
                                        this._clearModel(!0);
                                        for (const e of this._renderLayers) e.reset(this._terminal);
                                        this._cursorBlinkStateManager.value?.restartBlinkAnimation(), this._updateCursorBlink()
                                    }
                                    registerCharacterJoiner(e) {
                                        return -1
                                    }
                                    deregisterCharacterJoiner(e) {
                                        return !1
                                    }
                                    renderRows(e, t) {
                                        if (!this._isAttached) {
                                            if (!(this._coreBrowserService.window.document.body.contains(this._core.screenElement) && this._charSizeService.width && this._charSizeService.height)) return;
                                            this._updateDimensions(), this._refreshCharAtlas(), this._isAttached = !0
                                        }
                                        for (const i of this._renderLayers) i.handleGridChanged(this._terminal, e, t);
                                        this._glyphRenderer.value && this._rectangleRenderer.value && (this._glyphRenderer.value.beginFrame() ? (this._clearModel(!0), this._updateModel(0, this._terminal.rows - 1)) : this._updateModel(e, t), this._rectangleRenderer.value.renderBackgrounds(), this._glyphRenderer.value.render(this._model), this._cursorBlinkStateManager.value && !this._cursorBlinkStateManager.value.isCursorVisible || this._rectangleRenderer.value.renderCursor())
                                    }
                                    _updateCursorBlink() {
                                        this._terminal.options.cursorBlink ? this._cursorBlinkStateManager.value = new o.CursorBlinkStateManager((() => {
                                            this._requestRedrawCursor()
                                        }), this._coreBrowserService) : this._cursorBlinkStateManager.clear(), this._requestRedrawCursor()
                                    }
                                    _updateModel(e, t) {
                                        const i = this._core;
                                        let r, s, n, o, a, c, l, h, u, d, p, _, v, m, y = this._workCell;
                                        e = w(e, i.rows - 1, 0), t = w(t, i.rows - 1, 0);
                                        const S = this._terminal.buffer.active.baseY + this._terminal.buffer.active.cursorY,
                                            C = S - i.buffer.ydisp,
                                            x = Math.min(this._terminal.buffer.active.cursorX, i.cols - 1);
                                        let E = -1;
                                        const O = this._coreService.isCursorInitialized && !this._coreService.isCursorHidden && (!this._cursorBlinkStateManager.value || this._cursorBlinkStateManager.value.isCursorVisible);
                                        this._model.cursor = void 0;
                                        let k = !1;
                                        for (s = e; s <= t; s++)
                                            for (n = s + i.buffer.ydisp, o = i.buffer.lines.get(n), this._model.lineLengths[s] = 0, a = this._characterJoinerService.getJoinedCharacters(n), v = 0; v < i.cols; v++)
                                                if (r = this._cellColorResolver.result.bg, o.loadCell(v, y), 0 === v && (r = this._cellColorResolver.result.bg), c = !1, l = v, a.length > 0 && v === a[0][0] && (c = !0, h = a.shift(), y = new b(y, o.translateToString(!0, h[0], h[1]), h[1] - h[0]), l = h[1] - 1), u = y.getChars(), d = y.getCode(), _ = (s * i.cols + v) * g.RENDER_MODEL_INDICIES_PER_CELL, this._cellColorResolver.resolve(y, v, n, this.dimensions.device.cell.width), O && n === S && (v === x && (this._model.cursor = {
                                                        x,
                                                        y: C,
                                                        width: y.getWidth(),
                                                        style: this._coreBrowserService.isFocused ? i.options.cursorStyle || "block" : i.options.cursorInactiveStyle,
                                                        cursorWidth: i.options.cursorWidth,
                                                        dpr: this._devicePixelRatio
                                                    }, E = x + y.getWidth() - 1), v >= x && v <= E && (this._coreBrowserService.isFocused && "block" === (i.options.cursorStyle || "block") || !1 === this._coreBrowserService.isFocused && "block" === i.options.cursorInactiveStyle) && (this._cellColorResolver.result.fg = 50331648 | this._themeService.colors.cursorAccent.rgba >> 8 & 16777215, this._cellColorResolver.result.bg = 50331648 | this._themeService.colors.cursor.rgba >> 8 & 16777215)), d !== f.NULL_CELL_CODE && (this._model.lineLengths[s] = v + 1), (this._model.cells[_] !== d || this._model.cells[_ + g.RENDER_MODEL_BG_OFFSET] !== this._cellColorResolver.result.bg || this._model.cells[_ + g.RENDER_MODEL_FG_OFFSET] !== this._cellColorResolver.result.fg || this._model.cells[_ + g.RENDER_MODEL_EXT_OFFSET] !== this._cellColorResolver.result.ext) && (k = !0, u.length > 1 && (d |= g.COMBINED_CHAR_BIT_MASK), this._model.cells[_] = d, this._model.cells[_ + g.RENDER_MODEL_BG_OFFSET] = this._cellColorResolver.result.bg, this._model.cells[_ + g.RENDER_MODEL_FG_OFFSET] = this._cellColorResolver.result.fg, this._model.cells[_ + g.RENDER_MODEL_EXT_OFFSET] = this._cellColorResolver.result.ext, p = y.getWidth(), this._glyphRenderer.value.updateCell(v, s, d, this._cellColorResolver.result.bg, this._cellColorResolver.result.fg, this._cellColorResolver.result.ext, u, p, r), c))
                                                    for (y = this._workCell, v++; v < l; v++) m = (s * i.cols + v) * g.RENDER_MODEL_INDICIES_PER_CELL, this._glyphRenderer.value.updateCell(v, s, f.NULL_CELL_CODE, 0, 0, 0, f.NULL_CELL_CHAR, 0, 0), this._model.cells[m] = f.NULL_CELL_CODE, this._model.cells[m + g.RENDER_MODEL_BG_OFFSET] = this._cellColorResolver.result.bg, this._model.cells[m + g.RENDER_MODEL_FG_OFFSET] = this._cellColorResolver.result.fg, this._model.cells[m + g.RENDER_MODEL_EXT_OFFSET] = this._cellColorResolver.result.ext;
                                        k && this._rectangleRenderer.value.updateBackgrounds(this._model), this._rectangleRenderer.value.updateCursor(this._model)
                                    }
                                    _updateDimensions() {
                                        this._charSizeService.width && this._charSizeService.height && (this.dimensions.device.char.width = Math.floor(this._charSizeService.width * this._devicePixelRatio), this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * this._devicePixelRatio), this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight), this.dimensions.device.char.top = 1 === this._optionsService.rawOptions.lineHeight ? 0 : Math.round((this.dimensions.device.cell.height - this.dimensions.device.char.height) / 2), this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing), this.dimensions.device.char.left = Math.floor(this._optionsService.rawOptions.letterSpacing / 2), this.dimensions.device.canvas.height = this._terminal.rows * this.dimensions.device.cell.height, this.dimensions.device.canvas.width = this._terminal.cols * this.dimensions.device.cell.width, this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / this._devicePixelRatio), this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / this._devicePixelRatio), this.dimensions.css.cell.height = this.dimensions.device.cell.height / this._devicePixelRatio, this.dimensions.css.cell.width = this.dimensions.device.cell.width / this._devicePixelRatio)
                                    }
                                    _setCanvasDevicePixelDimensions(e, t) {
                                        this._canvas.width === e && this._canvas.height === t || (this._canvas.width = e, this._canvas.height = t, this._requestRedrawViewport())
                                    }
                                    _requestRedrawViewport() {
                                        this._onRequestRedraw.fire({
                                            start: 0,
                                            end: this._terminal.rows - 1
                                        })
                                    }
                                    _requestRedrawCursor() {
                                        const e = this._terminal.buffer.active.cursorY;
                                        this._onRequestRedraw.fire({
                                            start: e,
                                            end: e
                                        })
                                    }
                                }
                                t.WebglRenderer = m;
                                class b extends u.AttributeData {
                                    constructor(e, t, i) {
                                        super(), this.content = 0, this.combinedData = "", this.fg = e.fg, this.bg = e.bg, this.combinedData = t, this._width = i
                                    }
                                    isCombined() {
                                        return 2097152
                                    }
                                    getWidth() {
                                        return this._width
                                    }
                                    getChars() {
                                        return this.combinedData
                                    }
                                    getCode() {
                                        return 2097151
                                    }
                                    setFromCharData(e) {
                                        throw new Error("not implemented")
                                    }
                                    getAsCharData() {
                                        return [this.fg, this.getChars(), this.getWidth(), this.getCode()]
                                    }
                                }

                                function w(e, t, i = 0) {
                                    return Math.max(Math.min(e, t), i)
                                }
                                t.JoinedCellData = b
                            },
                            381: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.GLTexture = t.expandFloat32Array = t.createShader = t.createProgram = t.PROJECTION_MATRIX = void 0;
                                const r = i(374);

                                function s(e, t, i) {
                                    const s = (0, r.throwIfFalsy)(e.createShader(t));
                                    if (e.shaderSource(s, i), e.compileShader(s), e.getShaderParameter(s, e.COMPILE_STATUS)) return s;
                                    console.error(e.getShaderInfoLog(s)), e.deleteShader(s)
                                }
                                t.PROJECTION_MATRIX = new Float32Array([2, 0, 0, 0, 0, -2, 0, 0, 0, 0, 1, 0, -1, 1, 0, 1]), t.createProgram = function(e, t, i) {
                                    const n = (0, r.throwIfFalsy)(e.createProgram());
                                    if (e.attachShader(n, (0, r.throwIfFalsy)(s(e, e.VERTEX_SHADER, t))), e.attachShader(n, (0, r.throwIfFalsy)(s(e, e.FRAGMENT_SHADER, i))), e.linkProgram(n), e.getProgramParameter(n, e.LINK_STATUS)) return n;
                                    console.error(e.getProgramInfoLog(n)), e.deleteProgram(n)
                                }, t.createShader = s, t.expandFloat32Array = function(e, t) {
                                    const i = Math.min(2 * e.length, t),
                                        r = new Float32Array(i);
                                    for (let t = 0; t < e.length; t++) r[t] = e[t];
                                    return r
                                }, t.GLTexture = class {
                                    constructor(e) {
                                        this.texture = e, this.version = -1
                                    }
                                }
                            },
                            592: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.BaseRenderLayer = void 0;
                                const r = i(627),
                                    s = i(237),
                                    n = i(374),
                                    o = i(859);
                                class a extends o.Disposable {
                                    constructor(e, t, i, r, s, n, a, c) {
                                        super(), this._container = t, this._alpha = s, this._coreBrowserService = n, this._optionsService = a, this._themeService = c, this._deviceCharWidth = 0, this._deviceCharHeight = 0, this._deviceCellWidth = 0, this._deviceCellHeight = 0, this._deviceCharLeft = 0, this._deviceCharTop = 0, this._canvas = this._coreBrowserService.mainDocument.createElement("canvas"), this._canvas.classList.add(`xterm-${i}-layer`), this._canvas.style.zIndex = r.toString(), this._initCanvas(), this._container.appendChild(this._canvas), this.register(this._themeService.onChangeColors((t => {
                                            this._refreshCharAtlas(e, t), this.reset(e)
                                        }))), this.register((0, o.toDisposable)((() => {
                                            this._canvas.remove()
                                        })))
                                    }
                                    _initCanvas() {
                                        this._ctx = (0, n.throwIfFalsy)(this._canvas.getContext("2d", {
                                            alpha: this._alpha
                                        })), this._alpha || this._clearAll()
                                    }
                                    handleBlur(e) {}
                                    handleFocus(e) {}
                                    handleCursorMove(e) {}
                                    handleGridChanged(e, t, i) {}
                                    handleSelectionChanged(e, t, i, r = !1) {}
                                    _setTransparency(e, t) {
                                        if (t === this._alpha) return;
                                        const i = this._canvas;
                                        this._alpha = t, this._canvas = this._canvas.cloneNode(), this._initCanvas(), this._container.replaceChild(this._canvas, i), this._refreshCharAtlas(e, this._themeService.colors), this.handleGridChanged(e, 0, e.rows - 1)
                                    }
                                    _refreshCharAtlas(e, t) {
                                        this._deviceCharWidth <= 0 && this._deviceCharHeight <= 0 || (this._charAtlas = (0, r.acquireTextureAtlas)(e, this._optionsService.rawOptions, t, this._deviceCellWidth, this._deviceCellHeight, this._deviceCharWidth, this._deviceCharHeight, this._coreBrowserService.dpr), this._charAtlas.warmUp())
                                    }
                                    resize(e, t) {
                                        this._deviceCellWidth = t.device.cell.width, this._deviceCellHeight = t.device.cell.height, this._deviceCharWidth = t.device.char.width, this._deviceCharHeight = t.device.char.height, this._deviceCharLeft = t.device.char.left, this._deviceCharTop = t.device.char.top, this._canvas.width = t.device.canvas.width, this._canvas.height = t.device.canvas.height, this._canvas.style.width = `${t.css.canvas.width}px`, this._canvas.style.height = `${t.css.canvas.height}px`, this._alpha || this._clearAll(), this._refreshCharAtlas(e, this._themeService.colors)
                                    }
                                    _fillBottomLineAtCells(e, t, i = 1) {
                                        this._ctx.fillRect(e * this._deviceCellWidth, (t + 1) * this._deviceCellHeight - this._coreBrowserService.dpr - 1, i * this._deviceCellWidth, this._coreBrowserService.dpr)
                                    }
                                    _clearAll() {
                                        this._alpha ? this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height) : (this._ctx.fillStyle = this._themeService.colors.background.css, this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height))
                                    }
                                    _clearCells(e, t, i, r) {
                                        this._alpha ? this._ctx.clearRect(e * this._deviceCellWidth, t * this._deviceCellHeight, i * this._deviceCellWidth, r * this._deviceCellHeight) : (this._ctx.fillStyle = this._themeService.colors.background.css, this._ctx.fillRect(e * this._deviceCellWidth, t * this._deviceCellHeight, i * this._deviceCellWidth, r * this._deviceCellHeight))
                                    }
                                    _fillCharTrueColor(e, t, i, r) {
                                        this._ctx.font = this._getFont(e, !1, !1), this._ctx.textBaseline = s.TEXT_BASELINE, this._clipCell(i, r, t.getWidth()), this._ctx.fillText(t.getChars(), i * this._deviceCellWidth + this._deviceCharLeft, r * this._deviceCellHeight + this._deviceCharTop + this._deviceCharHeight)
                                    }
                                    _clipCell(e, t, i) {
                                        this._ctx.beginPath(), this._ctx.rect(e * this._deviceCellWidth, t * this._deviceCellHeight, i * this._deviceCellWidth, this._deviceCellHeight), this._ctx.clip()
                                    }
                                    _getFont(e, t, i) {
                                        return `${i?"italic":""} ${t?e.options.fontWeightBold:e.options.fontWeight} ${e.options.fontSize*this._coreBrowserService.dpr}px ${e.options.fontFamily}`
                                    }
                                }
                                t.BaseRenderLayer = a
                            },
                            733: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.LinkRenderLayer = void 0;
                                const r = i(197),
                                    s = i(237),
                                    n = i(592);
                                class o extends n.BaseRenderLayer {
                                    constructor(e, t, i, r, s, n, o) {
                                        super(i, e, "link", t, !0, s, n, o), this.register(r.onShowLinkUnderline((e => this._handleShowLinkUnderline(e)))), this.register(r.onHideLinkUnderline((e => this._handleHideLinkUnderline(e))))
                                    }
                                    resize(e, t) {
                                        super.resize(e, t), this._state = void 0
                                    }
                                    reset(e) {
                                        this._clearCurrentLink()
                                    }
                                    _clearCurrentLink() {
                                        if (this._state) {
                                            this._clearCells(this._state.x1, this._state.y1, this._state.cols - this._state.x1, 1);
                                            const e = this._state.y2 - this._state.y1 - 1;
                                            e > 0 && this._clearCells(0, this._state.y1 + 1, this._state.cols, e), this._clearCells(0, this._state.y2, this._state.x2, 1), this._state = void 0
                                        }
                                    }
                                    _handleShowLinkUnderline(e) {
                                        if (e.fg === s.INVERTED_DEFAULT_COLOR ? this._ctx.fillStyle = this._themeService.colors.background.css : void 0 !== e.fg && (0, r.is256Color)(e.fg) ? this._ctx.fillStyle = this._themeService.colors.ansi[e.fg].css : this._ctx.fillStyle = this._themeService.colors.foreground.css, e.y1 === e.y2) this._fillBottomLineAtCells(e.x1, e.y1, e.x2 - e.x1);
                                        else {
                                            this._fillBottomLineAtCells(e.x1, e.y1, e.cols - e.x1);
                                            for (let t = e.y1 + 1; t < e.y2; t++) this._fillBottomLineAtCells(0, t, e.cols);
                                            this._fillBottomLineAtCells(0, e.y2, e.x2)
                                        }
                                        this._state = e
                                    }
                                    _handleHideLinkUnderline(e) {
                                        this._clearCurrentLink()
                                    }
                                }
                                t.LinkRenderLayer = o
                            },
                            820: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.addDisposableDomListener = void 0, t.addDisposableDomListener = function(e, t, i, r) {
                                    e.addEventListener(t, i, r);
                                    let s = !1;
                                    return {
                                        dispose: () => {
                                            s || (s = !0, e.removeEventListener(t, i, r))
                                        }
                                    }
                                }
                            },
                            274: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CellColorResolver = void 0;
                                const r = i(855),
                                    s = i(160),
                                    n = i(374);
                                let o, a = 0,
                                    c = 0,
                                    l = !1,
                                    h = !1,
                                    u = !1,
                                    d = 0;
                                t.CellColorResolver = class {
                                    constructor(e, t, i, r, s, n) {
                                        this._terminal = e, this._optionService = t, this._selectionRenderModel = i, this._decorationService = r, this._coreBrowserService = s, this._themeService = n, this.result = {
                                            fg: 0,
                                            bg: 0,
                                            ext: 0
                                        }
                                    }
                                    resolve(e, t, i, f) {
                                        if (this.result.bg = e.bg, this.result.fg = e.fg, this.result.ext = 268435456 & e.bg ? e.extended.ext : 0, c = 0, a = 0, h = !1, l = !1, u = !1, o = this._themeService.colors, d = 0, e.getCode() !== r.NULL_CELL_CODE && 4 === e.extended.underlineStyle) {
                                            const e = Math.max(1, Math.floor(this._optionService.rawOptions.fontSize * this._coreBrowserService.dpr / 15));
                                            d = t * f % (2 * Math.round(e))
                                        }
                                        if (this._decorationService.forEachDecorationAtCell(t, i, "bottom", (e => {
                                                e.backgroundColorRGB && (c = e.backgroundColorRGB.rgba >> 8 & 16777215, h = !0), e.foregroundColorRGB && (a = e.foregroundColorRGB.rgba >> 8 & 16777215, l = !0)
                                            })), u = this._selectionRenderModel.isCellSelected(this._terminal, t, i), u) {
                                            if (67108864 & this.result.fg || 0 != (50331648 & this.result.bg)) {
                                                if (67108864 & this.result.fg) switch (50331648 & this.result.fg) {
                                                    case 16777216:
                                                    case 33554432:
                                                        c = this._themeService.colors.ansi[255 & this.result.fg].rgba;
                                                        break;
                                                    case 50331648:
                                                        c = (16777215 & this.result.fg) << 8 | 255;
                                                        break;
                                                    default:
                                                        c = this._themeService.colors.foreground.rgba
                                                } else switch (50331648 & this.result.bg) {
                                                    case 16777216:
                                                    case 33554432:
                                                        c = this._themeService.colors.ansi[255 & this.result.bg].rgba;
                                                        break;
                                                    case 50331648:
                                                        c = (16777215 & this.result.bg) << 8 | 255
                                                }
                                                c = s.rgba.blend(c, 4294967040 & (this._coreBrowserService.isFocused ? o.selectionBackgroundOpaque : o.selectionInactiveBackgroundOpaque).rgba | 128) >> 8 & 16777215
                                            } else c = (this._coreBrowserService.isFocused ? o.selectionBackgroundOpaque : o.selectionInactiveBackgroundOpaque).rgba >> 8 & 16777215;
                                            if (h = !0, o.selectionForeground && (a = o.selectionForeground.rgba >> 8 & 16777215, l = !0), (0, n.treatGlyphAsBackgroundColor)(e.getCode())) {
                                                if (67108864 & this.result.fg && 0 == (50331648 & this.result.bg)) a = (this._coreBrowserService.isFocused ? o.selectionBackgroundOpaque : o.selectionInactiveBackgroundOpaque).rgba >> 8 & 16777215;
                                                else {
                                                    if (67108864 & this.result.fg) switch (50331648 & this.result.bg) {
                                                        case 16777216:
                                                        case 33554432:
                                                            a = this._themeService.colors.ansi[255 & this.result.bg].rgba;
                                                            break;
                                                        case 50331648:
                                                            a = (16777215 & this.result.bg) << 8 | 255
                                                    } else switch (50331648 & this.result.fg) {
                                                        case 16777216:
                                                        case 33554432:
                                                            a = this._themeService.colors.ansi[255 & this.result.fg].rgba;
                                                            break;
                                                        case 50331648:
                                                            a = (16777215 & this.result.fg) << 8 | 255;
                                                            break;
                                                        default:
                                                            a = this._themeService.colors.foreground.rgba
                                                    }
                                                    a = s.rgba.blend(a, 4294967040 & (this._coreBrowserService.isFocused ? o.selectionBackgroundOpaque : o.selectionInactiveBackgroundOpaque).rgba | 128) >> 8 & 16777215
                                                }
                                                l = !0
                                            }
                                        }
                                        this._decorationService.forEachDecorationAtCell(t, i, "top", (e => {
                                            e.backgroundColorRGB && (c = e.backgroundColorRGB.rgba >> 8 & 16777215, h = !0), e.foregroundColorRGB && (a = e.foregroundColorRGB.rgba >> 8 & 16777215, l = !0)
                                        })), h && (c = u ? -16777216 & e.bg & -134217729 | c | 50331648 : -16777216 & e.bg | c | 50331648), l && (a = -16777216 & e.fg & -67108865 | a | 50331648), 67108864 & this.result.fg && (h && !l && (a = 0 == (50331648 & this.result.bg) ? -134217728 & this.result.fg | 16777215 & o.background.rgba >> 8 | 50331648 : -134217728 & this.result.fg | 67108863 & this.result.bg, l = !0), !h && l && (c = 0 == (50331648 & this.result.fg) ? -67108864 & this.result.bg | 16777215 & o.foreground.rgba >> 8 | 50331648 : -67108864 & this.result.bg | 67108863 & this.result.fg, h = !0)), o = void 0, this.result.bg = h ? c : this.result.bg, this.result.fg = l ? a : this.result.fg, this.result.ext &= 536870911, this.result.ext |= d << 29 & 3758096384
                                    }
                                }
                            },
                            627: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.removeTerminalFromCache = t.acquireTextureAtlas = void 0;
                                const r = i(509),
                                    s = i(197),
                                    n = [];
                                t.acquireTextureAtlas = function(e, t, i, o, a, c, l, h) {
                                    const u = (0, s.generateConfig)(o, a, c, l, t, i, h);
                                    for (let t = 0; t < n.length; t++) {
                                        const i = n[t],
                                            r = i.ownedBy.indexOf(e);
                                        if (r >= 0) {
                                            if ((0, s.configEquals)(i.config, u)) return i.atlas;
                                            1 === i.ownedBy.length ? (i.atlas.dispose(), n.splice(t, 1)) : i.ownedBy.splice(r, 1);
                                            break
                                        }
                                    }
                                    for (let t = 0; t < n.length; t++) {
                                        const i = n[t];
                                        if ((0, s.configEquals)(i.config, u)) return i.ownedBy.push(e), i.atlas
                                    }
                                    const d = e._core,
                                        f = {
                                            atlas: new r.TextureAtlas(document, u, d.unicodeService),
                                            config: u,
                                            ownedBy: [e]
                                        };
                                    return n.push(f), f.atlas
                                }, t.removeTerminalFromCache = function(e) {
                                    for (let t = 0; t < n.length; t++) {
                                        const i = n[t].ownedBy.indexOf(e);
                                        if (-1 !== i) {
                                            1 === n[t].ownedBy.length ? (n[t].atlas.dispose(), n.splice(t, 1)) : n[t].ownedBy.splice(i, 1);
                                            break
                                        }
                                    }
                                }
                            },
                            197: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.is256Color = t.configEquals = t.generateConfig = void 0;
                                const r = i(160);
                                t.generateConfig = function(e, t, i, s, n, o, a) {
                                    const c = {
                                        foreground: o.foreground,
                                        background: o.background,
                                        cursor: r.NULL_COLOR,
                                        cursorAccent: r.NULL_COLOR,
                                        selectionForeground: r.NULL_COLOR,
                                        selectionBackgroundTransparent: r.NULL_COLOR,
                                        selectionBackgroundOpaque: r.NULL_COLOR,
                                        selectionInactiveBackgroundTransparent: r.NULL_COLOR,
                                        selectionInactiveBackgroundOpaque: r.NULL_COLOR,
                                        ansi: o.ansi.slice(),
                                        contrastCache: o.contrastCache,
                                        halfContrastCache: o.halfContrastCache
                                    };
                                    return {
                                        customGlyphs: n.customGlyphs,
                                        devicePixelRatio: a,
                                        letterSpacing: n.letterSpacing,
                                        lineHeight: n.lineHeight,
                                        deviceCellWidth: e,
                                        deviceCellHeight: t,
                                        deviceCharWidth: i,
                                        deviceCharHeight: s,
                                        fontFamily: n.fontFamily,
                                        fontSize: n.fontSize,
                                        fontWeight: n.fontWeight,
                                        fontWeightBold: n.fontWeightBold,
                                        allowTransparency: n.allowTransparency,
                                        drawBoldTextInBrightColors: n.drawBoldTextInBrightColors,
                                        minimumContrastRatio: n.minimumContrastRatio,
                                        colors: c
                                    }
                                }, t.configEquals = function(e, t) {
                                    for (let i = 0; i < e.colors.ansi.length; i++)
                                        if (e.colors.ansi[i].rgba !== t.colors.ansi[i].rgba) return !1;
                                    return e.devicePixelRatio === t.devicePixelRatio && e.customGlyphs === t.customGlyphs && e.lineHeight === t.lineHeight && e.letterSpacing === t.letterSpacing && e.fontFamily === t.fontFamily && e.fontSize === t.fontSize && e.fontWeight === t.fontWeight && e.fontWeightBold === t.fontWeightBold && e.allowTransparency === t.allowTransparency && e.deviceCharWidth === t.deviceCharWidth && e.deviceCharHeight === t.deviceCharHeight && e.drawBoldTextInBrightColors === t.drawBoldTextInBrightColors && e.minimumContrastRatio === t.minimumContrastRatio && e.colors.foreground.rgba === t.colors.foreground.rgba && e.colors.background.rgba === t.colors.background.rgba
                                }, t.is256Color = function(e) {
                                    return 16777216 == (50331648 & e) || 33554432 == (50331648 & e)
                                }
                            },
                            237: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.TEXT_BASELINE = t.DIM_OPACITY = t.INVERTED_DEFAULT_COLOR = void 0;
                                const r = i(399);
                                t.INVERTED_DEFAULT_COLOR = 257, t.DIM_OPACITY = .5, t.TEXT_BASELINE = r.isFirefox || r.isLegacyEdge ? "bottom" : "ideographic"
                            },
                            457: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CursorBlinkStateManager = void 0, t.CursorBlinkStateManager = class {
                                    constructor(e, t) {
                                        this._renderCallback = e, this._coreBrowserService = t, this.isCursorVisible = !0, this._coreBrowserService.isFocused && this._restartInterval()
                                    }
                                    get isPaused() {
                                        return !(this._blinkStartTimeout || this._blinkInterval)
                                    }
                                    dispose() {
                                        this._blinkInterval && (this._coreBrowserService.window.clearInterval(this._blinkInterval), this._blinkInterval = void 0), this._blinkStartTimeout && (this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout), this._blinkStartTimeout = void 0), this._animationFrame && (this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame), this._animationFrame = void 0)
                                    }
                                    restartBlinkAnimation() {
                                        this.isPaused || (this._animationTimeRestarted = Date.now(), this.isCursorVisible = !0, this._animationFrame || (this._animationFrame = this._coreBrowserService.window.requestAnimationFrame((() => {
                                            this._renderCallback(), this._animationFrame = void 0
                                        }))))
                                    }
                                    _restartInterval(e = 600) {
                                        this._blinkInterval && (this._coreBrowserService.window.clearInterval(this._blinkInterval), this._blinkInterval = void 0), this._blinkStartTimeout = this._coreBrowserService.window.setTimeout((() => {
                                            if (this._animationTimeRestarted) {
                                                const e = 600 - (Date.now() - this._animationTimeRestarted);
                                                if (this._animationTimeRestarted = void 0, e > 0) return void this._restartInterval(e)
                                            }
                                            this.isCursorVisible = !1, this._animationFrame = this._coreBrowserService.window.requestAnimationFrame((() => {
                                                this._renderCallback(), this._animationFrame = void 0
                                            })), this._blinkInterval = this._coreBrowserService.window.setInterval((() => {
                                                if (this._animationTimeRestarted) {
                                                    const e = 600 - (Date.now() - this._animationTimeRestarted);
                                                    return this._animationTimeRestarted = void 0, void this._restartInterval(e)
                                                }
                                                this.isCursorVisible = !this.isCursorVisible, this._animationFrame = this._coreBrowserService.window.requestAnimationFrame((() => {
                                                    this._renderCallback(), this._animationFrame = void 0
                                                }))
                                            }), 600)
                                        }), e)
                                    }
                                    pause() {
                                        this.isCursorVisible = !0, this._blinkInterval && (this._coreBrowserService.window.clearInterval(this._blinkInterval), this._blinkInterval = void 0), this._blinkStartTimeout && (this._coreBrowserService.window.clearTimeout(this._blinkStartTimeout), this._blinkStartTimeout = void 0), this._animationFrame && (this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame), this._animationFrame = void 0)
                                    }
                                    resume() {
                                        this.pause(), this._animationTimeRestarted = void 0, this._restartInterval(), this.restartBlinkAnimation()
                                    }
                                }
                            },
                            860: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.tryDrawCustomChar = t.powerlineDefinitions = t.boxDrawingDefinitions = t.blockElementDefinitions = void 0;
                                const r = i(374);
                                t.blockElementDefinitions = {
                                    "▀": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 4
                                    }],
                                    "▁": [{
                                        x: 0,
                                        y: 7,
                                        w: 8,
                                        h: 1
                                    }],
                                    "▂": [{
                                        x: 0,
                                        y: 6,
                                        w: 8,
                                        h: 2
                                    }],
                                    "▃": [{
                                        x: 0,
                                        y: 5,
                                        w: 8,
                                        h: 3
                                    }],
                                    "▄": [{
                                        x: 0,
                                        y: 4,
                                        w: 8,
                                        h: 4
                                    }],
                                    "▅": [{
                                        x: 0,
                                        y: 3,
                                        w: 8,
                                        h: 5
                                    }],
                                    "▆": [{
                                        x: 0,
                                        y: 2,
                                        w: 8,
                                        h: 6
                                    }],
                                    "▇": [{
                                        x: 0,
                                        y: 1,
                                        w: 8,
                                        h: 7
                                    }],
                                    "█": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 8
                                    }],
                                    "▉": [{
                                        x: 0,
                                        y: 0,
                                        w: 7,
                                        h: 8
                                    }],
                                    "▊": [{
                                        x: 0,
                                        y: 0,
                                        w: 6,
                                        h: 8
                                    }],
                                    "▋": [{
                                        x: 0,
                                        y: 0,
                                        w: 5,
                                        h: 8
                                    }],
                                    "▌": [{
                                        x: 0,
                                        y: 0,
                                        w: 4,
                                        h: 8
                                    }],
                                    "▍": [{
                                        x: 0,
                                        y: 0,
                                        w: 3,
                                        h: 8
                                    }],
                                    "▎": [{
                                        x: 0,
                                        y: 0,
                                        w: 2,
                                        h: 8
                                    }],
                                    "▏": [{
                                        x: 0,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "▐": [{
                                        x: 4,
                                        y: 0,
                                        w: 4,
                                        h: 8
                                    }],
                                    "▔": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 1
                                    }],
                                    "▕": [{
                                        x: 7,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "▖": [{
                                        x: 0,
                                        y: 4,
                                        w: 4,
                                        h: 4
                                    }],
                                    "▗": [{
                                        x: 4,
                                        y: 4,
                                        w: 4,
                                        h: 4
                                    }],
                                    "▘": [{
                                        x: 0,
                                        y: 0,
                                        w: 4,
                                        h: 4
                                    }],
                                    "▙": [{
                                        x: 0,
                                        y: 0,
                                        w: 4,
                                        h: 8
                                    }, {
                                        x: 0,
                                        y: 4,
                                        w: 8,
                                        h: 4
                                    }],
                                    "▚": [{
                                        x: 0,
                                        y: 0,
                                        w: 4,
                                        h: 4
                                    }, {
                                        x: 4,
                                        y: 4,
                                        w: 4,
                                        h: 4
                                    }],
                                    "▛": [{
                                        x: 0,
                                        y: 0,
                                        w: 4,
                                        h: 8
                                    }, {
                                        x: 4,
                                        y: 0,
                                        w: 4,
                                        h: 4
                                    }],
                                    "▜": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 4
                                    }, {
                                        x: 4,
                                        y: 0,
                                        w: 4,
                                        h: 8
                                    }],
                                    "▝": [{
                                        x: 4,
                                        y: 0,
                                        w: 4,
                                        h: 4
                                    }],
                                    "▞": [{
                                        x: 4,
                                        y: 0,
                                        w: 4,
                                        h: 4
                                    }, {
                                        x: 0,
                                        y: 4,
                                        w: 4,
                                        h: 4
                                    }],
                                    "▟": [{
                                        x: 4,
                                        y: 0,
                                        w: 4,
                                        h: 8
                                    }, {
                                        x: 0,
                                        y: 4,
                                        w: 8,
                                        h: 4
                                    }],
                                    "🭰": [{
                                        x: 1,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "🭱": [{
                                        x: 2,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "🭲": [{
                                        x: 3,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "🭳": [{
                                        x: 4,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "🭴": [{
                                        x: 5,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "🭵": [{
                                        x: 6,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }],
                                    "🭶": [{
                                        x: 0,
                                        y: 1,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭷": [{
                                        x: 0,
                                        y: 2,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭸": [{
                                        x: 0,
                                        y: 3,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭹": [{
                                        x: 0,
                                        y: 4,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭺": [{
                                        x: 0,
                                        y: 5,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭻": [{
                                        x: 0,
                                        y: 6,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭼": [{
                                        x: 0,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }, {
                                        x: 0,
                                        y: 7,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭽": [{
                                        x: 0,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }, {
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭾": [{
                                        x: 7,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }, {
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🭿": [{
                                        x: 7,
                                        y: 0,
                                        w: 1,
                                        h: 8
                                    }, {
                                        x: 0,
                                        y: 7,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🮀": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 1
                                    }, {
                                        x: 0,
                                        y: 7,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🮁": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 1
                                    }, {
                                        x: 0,
                                        y: 2,
                                        w: 8,
                                        h: 1
                                    }, {
                                        x: 0,
                                        y: 4,
                                        w: 8,
                                        h: 1
                                    }, {
                                        x: 0,
                                        y: 7,
                                        w: 8,
                                        h: 1
                                    }],
                                    "🮂": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 2
                                    }],
                                    "🮃": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 3
                                    }],
                                    "🮄": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 5
                                    }],
                                    "🮅": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 6
                                    }],
                                    "🮆": [{
                                        x: 0,
                                        y: 0,
                                        w: 8,
                                        h: 7
                                    }],
                                    "🮇": [{
                                        x: 6,
                                        y: 0,
                                        w: 2,
                                        h: 8
                                    }],
                                    "🮈": [{
                                        x: 5,
                                        y: 0,
                                        w: 3,
                                        h: 8
                                    }],
                                    "🮉": [{
                                        x: 3,
                                        y: 0,
                                        w: 5,
                                        h: 8
                                    }],
                                    "🮊": [{
                                        x: 2,
                                        y: 0,
                                        w: 6,
                                        h: 8
                                    }],
                                    "🮋": [{
                                        x: 1,
                                        y: 0,
                                        w: 7,
                                        h: 8
                                    }],
                                    "🮕": [{
                                        x: 0,
                                        y: 0,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 4,
                                        y: 0,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 2,
                                        y: 2,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 6,
                                        y: 2,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 0,
                                        y: 4,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 4,
                                        y: 4,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 2,
                                        y: 6,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 6,
                                        y: 6,
                                        w: 2,
                                        h: 2
                                    }],
                                    "🮖": [{
                                        x: 2,
                                        y: 0,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 6,
                                        y: 0,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 0,
                                        y: 2,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 4,
                                        y: 2,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 2,
                                        y: 4,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 6,
                                        y: 4,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 0,
                                        y: 6,
                                        w: 2,
                                        h: 2
                                    }, {
                                        x: 4,
                                        y: 6,
                                        w: 2,
                                        h: 2
                                    }],
                                    "🮗": [{
                                        x: 0,
                                        y: 2,
                                        w: 8,
                                        h: 2
                                    }, {
                                        x: 0,
                                        y: 6,
                                        w: 8,
                                        h: 2
                                    }]
                                };
                                const s = {
                                    "░": [
                                        [1, 0, 0, 0],
                                        [0, 0, 0, 0],
                                        [0, 0, 1, 0],
                                        [0, 0, 0, 0]
                                    ],
                                    "▒": [
                                        [1, 0],
                                        [0, 0],
                                        [0, 1],
                                        [0, 0]
                                    ],
                                    "▓": [
                                        [0, 1],
                                        [1, 1],
                                        [1, 0],
                                        [1, 1]
                                    ]
                                };
                                t.boxDrawingDefinitions = {
                                    "─": {
                                        1: "M0,.5 L1,.5"
                                    },
                                    "━": {
                                        3: "M0,.5 L1,.5"
                                    },
                                    "│": {
                                        1: "M.5,0 L.5,1"
                                    },
                                    "┃": {
                                        3: "M.5,0 L.5,1"
                                    },
                                    "┌": {
                                        1: "M0.5,1 L.5,.5 L1,.5"
                                    },
                                    "┏": {
                                        3: "M0.5,1 L.5,.5 L1,.5"
                                    },
                                    "┐": {
                                        1: "M0,.5 L.5,.5 L.5,1"
                                    },
                                    "┓": {
                                        3: "M0,.5 L.5,.5 L.5,1"
                                    },
                                    "└": {
                                        1: "M.5,0 L.5,.5 L1,.5"
                                    },
                                    "┗": {
                                        3: "M.5,0 L.5,.5 L1,.5"
                                    },
                                    "┘": {
                                        1: "M.5,0 L.5,.5 L0,.5"
                                    },
                                    "┛": {
                                        3: "M.5,0 L.5,.5 L0,.5"
                                    },
                                    "├": {
                                        1: "M.5,0 L.5,1 M.5,.5 L1,.5"
                                    },
                                    "┣": {
                                        3: "M.5,0 L.5,1 M.5,.5 L1,.5"
                                    },
                                    "┤": {
                                        1: "M.5,0 L.5,1 M.5,.5 L0,.5"
                                    },
                                    "┫": {
                                        3: "M.5,0 L.5,1 M.5,.5 L0,.5"
                                    },
                                    "┬": {
                                        1: "M0,.5 L1,.5 M.5,.5 L.5,1"
                                    },
                                    "┳": {
                                        3: "M0,.5 L1,.5 M.5,.5 L.5,1"
                                    },
                                    "┴": {
                                        1: "M0,.5 L1,.5 M.5,.5 L.5,0"
                                    },
                                    "┻": {
                                        3: "M0,.5 L1,.5 M.5,.5 L.5,0"
                                    },
                                    "┼": {
                                        1: "M0,.5 L1,.5 M.5,0 L.5,1"
                                    },
                                    "╋": {
                                        3: "M0,.5 L1,.5 M.5,0 L.5,1"
                                    },
                                    "╴": {
                                        1: "M.5,.5 L0,.5"
                                    },
                                    "╸": {
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "╵": {
                                        1: "M.5,.5 L.5,0"
                                    },
                                    "╹": {
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "╶": {
                                        1: "M.5,.5 L1,.5"
                                    },
                                    "╺": {
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "╷": {
                                        1: "M.5,.5 L.5,1"
                                    },
                                    "╻": {
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "═": {
                                        1: (e, t) => `M0,${.5-t} L1,${.5-t} M0,${.5+t} L1,${.5+t}`
                                    },
                                    "║": {
                                        1: (e, t) => `M${.5-e},0 L${.5-e},1 M${.5+e},0 L${.5+e},1`
                                    },
                                    "╒": {
                                        1: (e, t) => `M.5,1 L.5,${.5-t} L1,${.5-t} M.5,${.5+t} L1,${.5+t}`
                                    },
                                    "╓": {
                                        1: (e, t) => `M${.5-e},1 L${.5-e},.5 L1,.5 M${.5+e},.5 L${.5+e},1`
                                    },
                                    "╔": {
                                        1: (e, t) => `M1,${.5-t} L${.5-e},${.5-t} L${.5-e},1 M1,${.5+t} L${.5+e},${.5+t} L${.5+e},1`
                                    },
                                    "╕": {
                                        1: (e, t) => `M0,${.5-t} L.5,${.5-t} L.5,1 M0,${.5+t} L.5,${.5+t}`
                                    },
                                    "╖": {
                                        1: (e, t) => `M${.5+e},1 L${.5+e},.5 L0,.5 M${.5-e},.5 L${.5-e},1`
                                    },
                                    "╗": {
                                        1: (e, t) => `M0,${.5+t} L${.5-e},${.5+t} L${.5-e},1 M0,${.5-t} L${.5+e},${.5-t} L${.5+e},1`
                                    },
                                    "╘": {
                                        1: (e, t) => `M.5,0 L.5,${.5+t} L1,${.5+t} M.5,${.5-t} L1,${.5-t}`
                                    },
                                    "╙": {
                                        1: (e, t) => `M1,.5 L${.5-e},.5 L${.5-e},0 M${.5+e},.5 L${.5+e},0`
                                    },
                                    "╚": {
                                        1: (e, t) => `M1,${.5-t} L${.5+e},${.5-t} L${.5+e},0 M1,${.5+t} L${.5-e},${.5+t} L${.5-e},0`
                                    },
                                    "╛": {
                                        1: (e, t) => `M0,${.5+t} L.5,${.5+t} L.5,0 M0,${.5-t} L.5,${.5-t}`
                                    },
                                    "╜": {
                                        1: (e, t) => `M0,.5 L${.5+e},.5 L${.5+e},0 M${.5-e},.5 L${.5-e},0`
                                    },
                                    "╝": {
                                        1: (e, t) => `M0,${.5-t} L${.5-e},${.5-t} L${.5-e},0 M0,${.5+t} L${.5+e},${.5+t} L${.5+e},0`
                                    },
                                    "╞": {
                                        1: (e, t) => `M.5,0 L.5,1 M.5,${.5-t} L1,${.5-t} M.5,${.5+t} L1,${.5+t}`
                                    },
                                    "╟": {
                                        1: (e, t) => `M${.5-e},0 L${.5-e},1 M${.5+e},0 L${.5+e},1 M${.5+e},.5 L1,.5`
                                    },
                                    "╠": {
                                        1: (e, t) => `M${.5-e},0 L${.5-e},1 M1,${.5+t} L${.5+e},${.5+t} L${.5+e},1 M1,${.5-t} L${.5+e},${.5-t} L${.5+e},0`
                                    },
                                    "╡": {
                                        1: (e, t) => `M.5,0 L.5,1 M0,${.5-t} L.5,${.5-t} M0,${.5+t} L.5,${.5+t}`
                                    },
                                    "╢": {
                                        1: (e, t) => `M0,.5 L${.5-e},.5 M${.5-e},0 L${.5-e},1 M${.5+e},0 L${.5+e},1`
                                    },
                                    "╣": {
                                        1: (e, t) => `M${.5+e},0 L${.5+e},1 M0,${.5+t} L${.5-e},${.5+t} L${.5-e},1 M0,${.5-t} L${.5-e},${.5-t} L${.5-e},0`
                                    },
                                    "╤": {
                                        1: (e, t) => `M0,${.5-t} L1,${.5-t} M0,${.5+t} L1,${.5+t} M.5,${.5+t} L.5,1`
                                    },
                                    "╥": {
                                        1: (e, t) => `M0,.5 L1,.5 M${.5-e},.5 L${.5-e},1 M${.5+e},.5 L${.5+e},1`
                                    },
                                    "╦": {
                                        1: (e, t) => `M0,${.5-t} L1,${.5-t} M0,${.5+t} L${.5-e},${.5+t} L${.5-e},1 M1,${.5+t} L${.5+e},${.5+t} L${.5+e},1`
                                    },
                                    "╧": {
                                        1: (e, t) => `M.5,0 L.5,${.5-t} M0,${.5-t} L1,${.5-t} M0,${.5+t} L1,${.5+t}`
                                    },
                                    "╨": {
                                        1: (e, t) => `M0,.5 L1,.5 M${.5-e},.5 L${.5-e},0 M${.5+e},.5 L${.5+e},0`
                                    },
                                    "╩": {
                                        1: (e, t) => `M0,${.5+t} L1,${.5+t} M0,${.5-t} L${.5-e},${.5-t} L${.5-e},0 M1,${.5-t} L${.5+e},${.5-t} L${.5+e},0`
                                    },
                                    "╪": {
                                        1: (e, t) => `M.5,0 L.5,1 M0,${.5-t} L1,${.5-t} M0,${.5+t} L1,${.5+t}`
                                    },
                                    "╫": {
                                        1: (e, t) => `M0,.5 L1,.5 M${.5-e},0 L${.5-e},1 M${.5+e},0 L${.5+e},1`
                                    },
                                    "╬": {
                                        1: (e, t) => `M0,${.5+t} L${.5-e},${.5+t} L${.5-e},1 M1,${.5+t} L${.5+e},${.5+t} L${.5+e},1 M0,${.5-t} L${.5-e},${.5-t} L${.5-e},0 M1,${.5-t} L${.5+e},${.5-t} L${.5+e},0`
                                    },
                                    "╱": {
                                        1: "M1,0 L0,1"
                                    },
                                    "╲": {
                                        1: "M0,0 L1,1"
                                    },
                                    "╳": {
                                        1: "M1,0 L0,1 M0,0 L1,1"
                                    },
                                    "╼": {
                                        1: "M.5,.5 L0,.5",
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "╽": {
                                        1: "M.5,.5 L.5,0",
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "╾": {
                                        1: "M.5,.5 L1,.5",
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "╿": {
                                        1: "M.5,.5 L.5,1",
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "┍": {
                                        1: "M.5,.5 L.5,1",
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "┎": {
                                        1: "M.5,.5 L1,.5",
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "┑": {
                                        1: "M.5,.5 L.5,1",
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "┒": {
                                        1: "M.5,.5 L0,.5",
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "┕": {
                                        1: "M.5,.5 L.5,0",
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "┖": {
                                        1: "M.5,.5 L1,.5",
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "┙": {
                                        1: "M.5,.5 L.5,0",
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "┚": {
                                        1: "M.5,.5 L0,.5",
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "┝": {
                                        1: "M.5,0 L.5,1",
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "┞": {
                                        1: "M0.5,1 L.5,.5 L1,.5",
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "┟": {
                                        1: "M.5,0 L.5,.5 L1,.5",
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "┠": {
                                        1: "M.5,.5 L1,.5",
                                        3: "M.5,0 L.5,1"
                                    },
                                    "┡": {
                                        1: "M.5,.5 L.5,1",
                                        3: "M.5,0 L.5,.5 L1,.5"
                                    },
                                    "┢": {
                                        1: "M.5,.5 L.5,0",
                                        3: "M0.5,1 L.5,.5 L1,.5"
                                    },
                                    "┥": {
                                        1: "M.5,0 L.5,1",
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "┦": {
                                        1: "M0,.5 L.5,.5 L.5,1",
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "┧": {
                                        1: "M.5,0 L.5,.5 L0,.5",
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "┨": {
                                        1: "M.5,.5 L0,.5",
                                        3: "M.5,0 L.5,1"
                                    },
                                    "┩": {
                                        1: "M.5,.5 L.5,1",
                                        3: "M.5,0 L.5,.5 L0,.5"
                                    },
                                    "┪": {
                                        1: "M.5,.5 L.5,0",
                                        3: "M0,.5 L.5,.5 L.5,1"
                                    },
                                    "┭": {
                                        1: "M0.5,1 L.5,.5 L1,.5",
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "┮": {
                                        1: "M0,.5 L.5,.5 L.5,1",
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "┯": {
                                        1: "M.5,.5 L.5,1",
                                        3: "M0,.5 L1,.5"
                                    },
                                    "┰": {
                                        1: "M0,.5 L1,.5",
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "┱": {
                                        1: "M.5,.5 L1,.5",
                                        3: "M0,.5 L.5,.5 L.5,1"
                                    },
                                    "┲": {
                                        1: "M.5,.5 L0,.5",
                                        3: "M0.5,1 L.5,.5 L1,.5"
                                    },
                                    "┵": {
                                        1: "M.5,0 L.5,.5 L1,.5",
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "┶": {
                                        1: "M.5,0 L.5,.5 L0,.5",
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "┷": {
                                        1: "M.5,.5 L.5,0",
                                        3: "M0,.5 L1,.5"
                                    },
                                    "┸": {
                                        1: "M0,.5 L1,.5",
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "┹": {
                                        1: "M.5,.5 L1,.5",
                                        3: "M.5,0 L.5,.5 L0,.5"
                                    },
                                    "┺": {
                                        1: "M.5,.5 L0,.5",
                                        3: "M.5,0 L.5,.5 L1,.5"
                                    },
                                    "┽": {
                                        1: "M.5,0 L.5,1 M.5,.5 L1,.5",
                                        3: "M.5,.5 L0,.5"
                                    },
                                    "┾": {
                                        1: "M.5,0 L.5,1 M.5,.5 L0,.5",
                                        3: "M.5,.5 L1,.5"
                                    },
                                    "┿": {
                                        1: "M.5,0 L.5,1",
                                        3: "M0,.5 L1,.5"
                                    },
                                    "╀": {
                                        1: "M0,.5 L1,.5 M.5,.5 L.5,1",
                                        3: "M.5,.5 L.5,0"
                                    },
                                    "╁": {
                                        1: "M.5,.5 L.5,0 M0,.5 L1,.5",
                                        3: "M.5,.5 L.5,1"
                                    },
                                    "╂": {
                                        1: "M0,.5 L1,.5",
                                        3: "M.5,0 L.5,1"
                                    },
                                    "╃": {
                                        1: "M0.5,1 L.5,.5 L1,.5",
                                        3: "M.5,0 L.5,.5 L0,.5"
                                    },
                                    "╄": {
                                        1: "M0,.5 L.5,.5 L.5,1",
                                        3: "M.5,0 L.5,.5 L1,.5"
                                    },
                                    "╅": {
                                        1: "M.5,0 L.5,.5 L1,.5",
                                        3: "M0,.5 L.5,.5 L.5,1"
                                    },
                                    "╆": {
                                        1: "M.5,0 L.5,.5 L0,.5",
                                        3: "M0.5,1 L.5,.5 L1,.5"
                                    },
                                    "╇": {
                                        1: "M.5,.5 L.5,1",
                                        3: "M.5,.5 L.5,0 M0,.5 L1,.5"
                                    },
                                    "╈": {
                                        1: "M.5,.5 L.5,0",
                                        3: "M0,.5 L1,.5 M.5,.5 L.5,1"
                                    },
                                    "╉": {
                                        1: "M.5,.5 L1,.5",
                                        3: "M.5,0 L.5,1 M.5,.5 L0,.5"
                                    },
                                    "╊": {
                                        1: "M.5,.5 L0,.5",
                                        3: "M.5,0 L.5,1 M.5,.5 L1,.5"
                                    },
                                    "╌": {
                                        1: "M.1,.5 L.4,.5 M.6,.5 L.9,.5"
                                    },
                                    "╍": {
                                        3: "M.1,.5 L.4,.5 M.6,.5 L.9,.5"
                                    },
                                    "┄": {
                                        1: "M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5"
                                    },
                                    "┅": {
                                        3: "M.0667,.5 L.2667,.5 M.4,.5 L.6,.5 M.7333,.5 L.9333,.5"
                                    },
                                    "┈": {
                                        1: "M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5"
                                    },
                                    "┉": {
                                        3: "M.05,.5 L.2,.5 M.3,.5 L.45,.5 M.55,.5 L.7,.5 M.8,.5 L.95,.5"
                                    },
                                    "╎": {
                                        1: "M.5,.1 L.5,.4 M.5,.6 L.5,.9"
                                    },
                                    "╏": {
                                        3: "M.5,.1 L.5,.4 M.5,.6 L.5,.9"
                                    },
                                    "┆": {
                                        1: "M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333"
                                    },
                                    "┇": {
                                        3: "M.5,.0667 L.5,.2667 M.5,.4 L.5,.6 M.5,.7333 L.5,.9333"
                                    },
                                    "┊": {
                                        1: "M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95"
                                    },
                                    "┋": {
                                        3: "M.5,.05 L.5,.2 M.5,.3 L.5,.45 L.5,.55 M.5,.7 L.5,.95"
                                    },
                                    "╭": {
                                        1: (e, t) => `M.5,1 L.5,${.5+t/.15*.5} C.5,${.5+t/.15*.5},.5,.5,1,.5`
                                    },
                                    "╮": {
                                        1: (e, t) => `M.5,1 L.5,${.5+t/.15*.5} C.5,${.5+t/.15*.5},.5,.5,0,.5`
                                    },
                                    "╯": {
                                        1: (e, t) => `M.5,0 L.5,${.5-t/.15*.5} C.5,${.5-t/.15*.5},.5,.5,0,.5`
                                    },
                                    "╰": {
                                        1: (e, t) => `M.5,0 L.5,${.5-t/.15*.5} C.5,${.5-t/.15*.5},.5,.5,1,.5`
                                    }
                                }, t.powerlineDefinitions = {
                                    "": {
                                        d: "M0,0 L1,.5 L0,1",
                                        type: 0,
                                        rightPadding: 2
                                    },
                                    "": {
                                        d: "M-1,-.5 L1,.5 L-1,1.5",
                                        type: 1,
                                        leftPadding: 1,
                                        rightPadding: 1
                                    },
                                    "": {
                                        d: "M1,0 L0,.5 L1,1",
                                        type: 0,
                                        leftPadding: 2
                                    },
                                    "": {
                                        d: "M2,-.5 L0,.5 L2,1.5",
                                        type: 1,
                                        leftPadding: 1,
                                        rightPadding: 1
                                    },
                                    "": {
                                        d: "M0,0 L0,1 C0.552,1,1,0.776,1,.5 C1,0.224,0.552,0,0,0",
                                        type: 0,
                                        rightPadding: 1
                                    },
                                    "": {
                                        d: "M.2,1 C.422,1,.8,.826,.78,.5 C.8,.174,0.422,0,.2,0",
                                        type: 1,
                                        rightPadding: 1
                                    },
                                    "": {
                                        d: "M1,0 L1,1 C0.448,1,0,0.776,0,.5 C0,0.224,0.448,0,1,0",
                                        type: 0,
                                        leftPadding: 1
                                    },
                                    "": {
                                        d: "M.8,1 C0.578,1,0.2,.826,.22,.5 C0.2,0.174,0.578,0,0.8,0",
                                        type: 1,
                                        leftPadding: 1
                                    },
                                    "": {
                                        d: "M-.5,-.5 L1.5,1.5 L-.5,1.5",
                                        type: 0
                                    },
                                    "": {
                                        d: "M-.5,-.5 L1.5,1.5",
                                        type: 1,
                                        leftPadding: 1,
                                        rightPadding: 1
                                    },
                                    "": {
                                        d: "M1.5,-.5 L-.5,1.5 L1.5,1.5",
                                        type: 0
                                    },
                                    "": {
                                        d: "M1.5,-.5 L-.5,1.5 L-.5,-.5",
                                        type: 0
                                    },
                                    "": {
                                        d: "M1.5,-.5 L-.5,1.5",
                                        type: 1,
                                        leftPadding: 1,
                                        rightPadding: 1
                                    },
                                    "": {
                                        d: "M-.5,-.5 L1.5,1.5 L1.5,-.5",
                                        type: 0
                                    }
                                }, t.powerlineDefinitions[""] = t.powerlineDefinitions[""], t.powerlineDefinitions[""] = t.powerlineDefinitions[""], t.tryDrawCustomChar = function(e, i, o, l, h, u, d, f) {
                                    const p = t.blockElementDefinitions[i];
                                    if (p) return function(e, t, i, r, s, n) {
                                        for (let o = 0; o < t.length; o++) {
                                            const a = t[o],
                                                c = s / 8,
                                                l = n / 8;
                                            e.fillRect(i + a.x * c, r + a.y * l, a.w * c, a.h * l)
                                        }
                                    }(e, p, o, l, h, u), !0;
                                    const _ = s[i];
                                    if (_) return function(e, t, i, s, o, a) {
                                        let c = n.get(t);
                                        c || (c = new Map, n.set(t, c));
                                        const l = e.fillStyle;
                                        if ("string" != typeof l) throw new Error(`Unexpected fillStyle type "${l}"`);
                                        let h = c.get(l);
                                        if (!h) {
                                            const i = t[0].length,
                                                s = t.length,
                                                n = e.canvas.ownerDocument.createElement("canvas");
                                            n.width = i, n.height = s;
                                            const o = (0, r.throwIfFalsy)(n.getContext("2d")),
                                                a = new ImageData(i, s);
                                            let u, d, f, p;
                                            if (l.startsWith("#")) u = parseInt(l.slice(1, 3), 16), d = parseInt(l.slice(3, 5), 16), f = parseInt(l.slice(5, 7), 16), p = l.length > 7 && parseInt(l.slice(7, 9), 16) || 1;
                                            else {
                                                if (!l.startsWith("rgba")) throw new Error(`Unexpected fillStyle color format "${l}" when drawing pattern glyph`);
                                                [u, d, f, p] = l.substring(5, l.length - 1).split(",").map((e => parseFloat(e)))
                                            }
                                            for (let e = 0; e < s; e++)
                                                for (let r = 0; r < i; r++) a.data[4 * (e * i + r)] = u, a.data[4 * (e * i + r) + 1] = d, a.data[4 * (e * i + r) + 2] = f, a.data[4 * (e * i + r) + 3] = t[e][r] * (255 * p);
                                            o.putImageData(a, 0, 0), h = (0, r.throwIfFalsy)(e.createPattern(n, null)), c.set(l, h)
                                        }
                                        e.fillStyle = h, e.fillRect(i, s, o, a)
                                    }(e, _, o, l, h, u), !0;
                                    const g = t.boxDrawingDefinitions[i];
                                    if (g) return function(e, t, i, r, s, n, o) {
                                        e.strokeStyle = e.fillStyle;
                                        for (const [l, h] of Object.entries(t)) {
                                            let t;
                                            e.beginPath(), e.lineWidth = o * Number.parseInt(l), t = "function" == typeof h ? h(.15, .15 / n * s) : h;
                                            for (const l of t.split(" ")) {
                                                const t = l[0],
                                                    h = a[t];
                                                if (!h) {
                                                    console.error(`Could not find drawing instructions for "${t}"`);
                                                    continue
                                                }
                                                const u = l.substring(1).split(",");
                                                u[0] && u[1] && h(e, c(u, s, n, i, r, !0, o))
                                            }
                                            e.stroke(), e.closePath()
                                        }
                                    }(e, g, o, l, h, u, f), !0;
                                    const v = t.powerlineDefinitions[i];
                                    return !!v && (function(e, t, i, r, s, n, o, l) {
                                        const h = new Path2D;
                                        h.rect(i, r, s, n), e.clip(h), e.beginPath();
                                        const u = o / 12;
                                        e.lineWidth = l * u;
                                        for (const o of t.d.split(" ")) {
                                            const h = o[0],
                                                d = a[h];
                                            if (!d) {
                                                console.error(`Could not find drawing instructions for "${h}"`);
                                                continue
                                            }
                                            const f = o.substring(1).split(",");
                                            f[0] && f[1] && d(e, c(f, s, n, i, r, !1, l, (t.leftPadding ?? 0) * (u / 2), (t.rightPadding ?? 0) * (u / 2)))
                                        }
                                        1 === t.type ? (e.strokeStyle = e.fillStyle, e.stroke()) : e.fill(), e.closePath()
                                    }(e, v, o, l, h, u, d, f), !0)
                                };
                                const n = new Map;

                                function o(e, t, i = 0) {
                                    return Math.max(Math.min(e, t), i)
                                }
                                const a = {
                                    C: (e, t) => e.bezierCurveTo(t[0], t[1], t[2], t[3], t[4], t[5]),
                                    L: (e, t) => e.lineTo(t[0], t[1]),
                                    M: (e, t) => e.moveTo(t[0], t[1])
                                };

                                function c(e, t, i, r, s, n, a, c = 0, l = 0) {
                                    const h = e.map((e => parseFloat(e) || parseInt(e)));
                                    if (h.length < 2) throw new Error("Too few arguments for instruction");
                                    for (let e = 0; e < h.length; e += 2) h[e] *= t - c * a - l * a, n && 0 !== h[e] && (h[e] = o(Math.round(h[e] + .5) - .5, t, 0)), h[e] += r + c * a;
                                    for (let e = 1; e < h.length; e += 2) h[e] *= i, n && 0 !== h[e] && (h[e] = o(Math.round(h[e] + .5) - .5, i, 0)), h[e] += s;
                                    return h
                                }
                            },
                            56: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.observeDevicePixelDimensions = void 0;
                                const r = i(859);
                                t.observeDevicePixelDimensions = function(e, t, i) {
                                    let s = new t.ResizeObserver((t => {
                                        const r = t.find((t => t.target === e));
                                        if (!r) return;
                                        if (!("devicePixelContentBoxSize" in r)) return s?.disconnect(), void(s = void 0);
                                        const n = r.devicePixelContentBoxSize[0].inlineSize,
                                            o = r.devicePixelContentBoxSize[0].blockSize;
                                        n > 0 && o > 0 && i(n, o)
                                    }));
                                    try {
                                        s.observe(e, {
                                            box: ["device-pixel-content-box"]
                                        })
                                    } catch {
                                        s.disconnect(), s = void 0
                                    }
                                    return (0, r.toDisposable)((() => s?.disconnect()))
                                }
                            },
                            374: (e, t) => {
                                function i(e) {
                                    return 57508 <= e && e <= 57558
                                }

                                function r(e) {
                                    return e >= 128512 && e <= 128591 || e >= 127744 && e <= 128511 || e >= 128640 && e <= 128767 || e >= 9728 && e <= 9983 || e >= 9984 && e <= 10175 || e >= 65024 && e <= 65039 || e >= 129280 && e <= 129535 || e >= 127462 && e <= 127487
                                }
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.computeNextVariantOffset = t.createRenderDimensions = t.treatGlyphAsBackgroundColor = t.allowRescaling = t.isEmoji = t.isRestrictedPowerlineGlyph = t.isPowerlineGlyph = t.throwIfFalsy = void 0, t.throwIfFalsy = function(e) {
                                    if (!e) throw new Error("value must not be falsy");
                                    return e
                                }, t.isPowerlineGlyph = i, t.isRestrictedPowerlineGlyph = function(e) {
                                    return 57520 <= e && e <= 57527
                                }, t.isEmoji = r, t.allowRescaling = function(e, t, s, n) {
                                    return 1 === t && s > Math.ceil(1.5 * n) && void 0 !== e && e > 255 && !r(e) && !i(e) && ! function(e) {
                                        return 57344 <= e && e <= 63743
                                    }(e)
                                }, t.treatGlyphAsBackgroundColor = function(e) {
                                    return i(e) || function(e) {
                                        return 9472 <= e && e <= 9631
                                    }(e)
                                }, t.createRenderDimensions = function() {
                                    return {
                                        css: {
                                            canvas: {
                                                width: 0,
                                                height: 0
                                            },
                                            cell: {
                                                width: 0,
                                                height: 0
                                            }
                                        },
                                        device: {
                                            canvas: {
                                                width: 0,
                                                height: 0
                                            },
                                            cell: {
                                                width: 0,
                                                height: 0
                                            },
                                            char: {
                                                width: 0,
                                                height: 0,
                                                left: 0,
                                                top: 0
                                            }
                                        }
                                    }
                                }, t.computeNextVariantOffset = function(e, t, i = 0) {
                                    return (e - (2 * Math.round(t) - i)) % (2 * Math.round(t))
                                }
                            },
                            296: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.createSelectionRenderModel = void 0;
                                class i {
                                    constructor() {
                                        this.clear()
                                    }
                                    clear() {
                                        this.hasSelection = !1, this.columnSelectMode = !1, this.viewportStartRow = 0, this.viewportEndRow = 0, this.viewportCappedStartRow = 0, this.viewportCappedEndRow = 0, this.startCol = 0, this.endCol = 0, this.selectionStart = void 0, this.selectionEnd = void 0
                                    }
                                    update(e, t, i, r = !1) {
                                        if (this.selectionStart = t, this.selectionEnd = i, !t || !i || t[0] === i[0] && t[1] === i[1]) return void this.clear();
                                        const s = e.buffers.active.ydisp,
                                            n = t[1] - s,
                                            o = i[1] - s,
                                            a = Math.max(n, 0),
                                            c = Math.min(o, e.rows - 1);
                                        a >= e.rows || c < 0 ? this.clear() : (this.hasSelection = !0, this.columnSelectMode = r, this.viewportStartRow = n, this.viewportEndRow = o, this.viewportCappedStartRow = a, this.viewportCappedEndRow = c, this.startCol = t[0], this.endCol = i[0])
                                    }
                                    isCellSelected(e, t, i) {
                                        return !!this.hasSelection && (i -= e.buffer.active.viewportY, this.columnSelectMode ? this.startCol <= this.endCol ? t >= this.startCol && i >= this.viewportCappedStartRow && t < this.endCol && i <= this.viewportCappedEndRow : t < this.startCol && i >= this.viewportCappedStartRow && t >= this.endCol && i <= this.viewportCappedEndRow : i > this.viewportStartRow && i < this.viewportEndRow || this.viewportStartRow === this.viewportEndRow && i === this.viewportStartRow && t >= this.startCol && t < this.endCol || this.viewportStartRow < this.viewportEndRow && i === this.viewportEndRow && t < this.endCol || this.viewportStartRow < this.viewportEndRow && i === this.viewportStartRow && t >= this.startCol)
                                    }
                                }
                                t.createSelectionRenderModel = function() {
                                    return new i
                                }
                            },
                            509: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.TextureAtlas = void 0;
                                const r = i(237),
                                    s = i(860),
                                    n = i(374),
                                    o = i(160),
                                    a = i(345),
                                    c = i(485),
                                    l = i(385),
                                    h = i(147),
                                    u = i(855),
                                    d = {
                                        texturePage: 0,
                                        texturePosition: {
                                            x: 0,
                                            y: 0
                                        },
                                        texturePositionClipSpace: {
                                            x: 0,
                                            y: 0
                                        },
                                        offset: {
                                            x: 0,
                                            y: 0
                                        },
                                        size: {
                                            x: 0,
                                            y: 0
                                        },
                                        sizeClipSpace: {
                                            x: 0,
                                            y: 0
                                        }
                                    };
                                let f;
                                class p {
                                    get pages() {
                                        return this._pages
                                    }
                                    constructor(e, t, i) {
                                        this._document = e, this._config = t, this._unicodeService = i, this._didWarmUp = !1, this._cacheMap = new c.FourKeyMap, this._cacheMapCombined = new c.FourKeyMap, this._pages = [], this._activePages = [], this._workBoundingBox = {
                                            top: 0,
                                            left: 0,
                                            bottom: 0,
                                            right: 0
                                        }, this._workAttributeData = new h.AttributeData, this._textureSize = 512, this._onAddTextureAtlasCanvas = new a.EventEmitter, this.onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event, this._onRemoveTextureAtlasCanvas = new a.EventEmitter, this.onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event, this._requestClearModel = !1, this._createNewPage(), this._tmpCanvas = v(e, 4 * this._config.deviceCellWidth + 4, this._config.deviceCellHeight + 4), this._tmpCtx = (0, n.throwIfFalsy)(this._tmpCanvas.getContext("2d", {
                                            alpha: this._config.allowTransparency,
                                            willReadFrequently: !0
                                        }))
                                    }
                                    dispose() {
                                        for (const e of this.pages) e.canvas.remove();
                                        this._onAddTextureAtlasCanvas.dispose()
                                    }
                                    warmUp() {
                                        this._didWarmUp || (this._doWarmUp(), this._didWarmUp = !0)
                                    }
                                    _doWarmUp() {
                                        const e = new l.IdleTaskQueue;
                                        for (let t = 33; t < 126; t++) e.enqueue((() => {
                                            if (!this._cacheMap.get(t, u.DEFAULT_COLOR, u.DEFAULT_COLOR, u.DEFAULT_EXT)) {
                                                const e = this._drawToCache(t, u.DEFAULT_COLOR, u.DEFAULT_COLOR, u.DEFAULT_EXT);
                                                this._cacheMap.set(t, u.DEFAULT_COLOR, u.DEFAULT_COLOR, u.DEFAULT_EXT, e)
                                            }
                                        }))
                                    }
                                    beginFrame() {
                                        return this._requestClearModel
                                    }
                                    clearTexture() {
                                        if (0 !== this._pages[0].currentRow.x || 0 !== this._pages[0].currentRow.y) {
                                            for (const e of this._pages) e.clear();
                                            this._cacheMap.clear(), this._cacheMapCombined.clear(), this._didWarmUp = !1
                                        }
                                    }
                                    _createNewPage() {
                                        if (p.maxAtlasPages && this._pages.length >= Math.max(4, p.maxAtlasPages)) {
                                            const e = this._pages.filter((e => 2 * e.canvas.width <= (p.maxTextureSize || 4096))).sort(((e, t) => t.canvas.width !== e.canvas.width ? t.canvas.width - e.canvas.width : t.percentageUsed - e.percentageUsed));
                                            let t = -1,
                                                i = 0;
                                            for (let r = 0; r < e.length; r++)
                                                if (e[r].canvas.width !== i) t = r, i = e[r].canvas.width;
                                                else if (r - t == 3) break;
                                            const r = e.slice(t, t + 4),
                                                s = r.map((e => e.glyphs[0].texturePage)).sort(((e, t) => e > t ? 1 : -1)),
                                                n = this.pages.length - r.length,
                                                o = this._mergePages(r, n);
                                            o.version++;
                                            for (let e = s.length - 1; e >= 0; e--) this._deletePage(s[e]);
                                            this.pages.push(o), this._requestClearModel = !0, this._onAddTextureAtlasCanvas.fire(o.canvas)
                                        }
                                        const e = new _(this._document, this._textureSize);
                                        return this._pages.push(e), this._activePages.push(e), this._onAddTextureAtlasCanvas.fire(e.canvas), e
                                    }
                                    _mergePages(e, t) {
                                        const i = 2 * e[0].canvas.width,
                                            r = new _(this._document, i, e);
                                        for (const [s, n] of e.entries()) {
                                            const e = s * n.canvas.width % i,
                                                o = Math.floor(s / 2) * n.canvas.height;
                                            r.ctx.drawImage(n.canvas, e, o);
                                            for (const r of n.glyphs) r.texturePage = t, r.sizeClipSpace.x = r.size.x / i, r.sizeClipSpace.y = r.size.y / i, r.texturePosition.x += e, r.texturePosition.y += o, r.texturePositionClipSpace.x = r.texturePosition.x / i, r.texturePositionClipSpace.y = r.texturePosition.y / i;
                                            this._onRemoveTextureAtlasCanvas.fire(n.canvas);
                                            const a = this._activePages.indexOf(n); - 1 !== a && this._activePages.splice(a, 1)
                                        }
                                        return r
                                    }
                                    _deletePage(e) {
                                        this._pages.splice(e, 1);
                                        for (let t = e; t < this._pages.length; t++) {
                                            const e = this._pages[t];
                                            for (const t of e.glyphs) t.texturePage--;
                                            e.version++
                                        }
                                    }
                                    getRasterizedGlyphCombinedChar(e, t, i, r, s) {
                                        return this._getFromCacheMap(this._cacheMapCombined, e, t, i, r, s)
                                    }
                                    getRasterizedGlyph(e, t, i, r, s) {
                                        return this._getFromCacheMap(this._cacheMap, e, t, i, r, s)
                                    }
                                    _getFromCacheMap(e, t, i, r, s, n = !1) {
                                        return f = e.get(t, i, r, s), f || (f = this._drawToCache(t, i, r, s, n), e.set(t, i, r, s, f)), f
                                    }
                                    _getColorFromAnsiIndex(e) {
                                        if (e >= this._config.colors.ansi.length) throw new Error("No color found for idx " + e);
                                        return this._config.colors.ansi[e]
                                    }
                                    _getBackgroundColor(e, t, i, r) {
                                        if (this._config.allowTransparency) return o.NULL_COLOR;
                                        let s;
                                        switch (e) {
                                            case 16777216:
                                            case 33554432:
                                                s = this._getColorFromAnsiIndex(t);
                                                break;
                                            case 50331648:
                                                const e = h.AttributeData.toColorRGB(t);
                                                s = o.channels.toColor(e[0], e[1], e[2]);
                                                break;
                                            default:
                                                s = i ? o.color.opaque(this._config.colors.foreground) : this._config.colors.background
                                        }
                                        return s
                                    }
                                    _getForegroundColor(e, t, i, s, n, a, c, l, u, d) {
                                        const f = this._getMinimumContrastColor(e, t, i, s, n, a, c, u, l, d);
                                        if (f) return f;
                                        let p;
                                        switch (n) {
                                            case 16777216:
                                            case 33554432:
                                                this._config.drawBoldTextInBrightColors && u && a < 8 && (a += 8), p = this._getColorFromAnsiIndex(a);
                                                break;
                                            case 50331648:
                                                const e = h.AttributeData.toColorRGB(a);
                                                p = o.channels.toColor(e[0], e[1], e[2]);
                                                break;
                                            default:
                                                p = c ? this._config.colors.background : this._config.colors.foreground
                                        }
                                        return this._config.allowTransparency && (p = o.color.opaque(p)), l && (p = o.color.multiplyOpacity(p, r.DIM_OPACITY)), p
                                    }
                                    _resolveBackgroundRgba(e, t, i) {
                                        switch (e) {
                                            case 16777216:
                                            case 33554432:
                                                return this._getColorFromAnsiIndex(t).rgba;
                                            case 50331648:
                                                return t << 8;
                                            default:
                                                return i ? this._config.colors.foreground.rgba : this._config.colors.background.rgba
                                        }
                                    }
                                    _resolveForegroundRgba(e, t, i, r) {
                                        switch (e) {
                                            case 16777216:
                                            case 33554432:
                                                return this._config.drawBoldTextInBrightColors && r && t < 8 && (t += 8), this._getColorFromAnsiIndex(t).rgba;
                                            case 50331648:
                                                return t << 8;
                                            default:
                                                return i ? this._config.colors.background.rgba : this._config.colors.foreground.rgba
                                        }
                                    }
                                    _getMinimumContrastColor(e, t, i, r, s, n, a, c, l, h) {
                                        if (1 === this._config.minimumContrastRatio || h) return;
                                        const u = this._getContrastCache(l),
                                            d = u.getColor(e, r);
                                        if (void 0 !== d) return d || void 0;
                                        const f = this._resolveBackgroundRgba(t, i, a),
                                            p = this._resolveForegroundRgba(s, n, a, c),
                                            _ = o.rgba.ensureContrastRatio(f, p, this._config.minimumContrastRatio / (l ? 2 : 1));
                                        if (!_) return void u.setColor(e, r, null);
                                        const g = o.channels.toColor(_ >> 24 & 255, _ >> 16 & 255, _ >> 8 & 255);
                                        return u.setColor(e, r, g), g
                                    }
                                    _getContrastCache(e) {
                                        return e ? this._config.colors.halfContrastCache : this._config.colors.contrastCache
                                    }
                                    _drawToCache(e, t, i, o, a = !1) {
                                        const c = "number" == typeof e ? String.fromCharCode(e) : e,
                                            l = Math.min(this._config.deviceCellWidth * Math.max(c.length, 2) + 4, this._textureSize);
                                        this._tmpCanvas.width < l && (this._tmpCanvas.width = l);
                                        const u = Math.min(this._config.deviceCellHeight + 8, this._textureSize);
                                        if (this._tmpCanvas.height < u && (this._tmpCanvas.height = u), this._tmpCtx.save(), this._workAttributeData.fg = i, this._workAttributeData.bg = t, this._workAttributeData.extended.ext = o, this._workAttributeData.isInvisible()) return d;
                                        const f = !!this._workAttributeData.isBold(),
                                            _ = !!this._workAttributeData.isInverse(),
                                            v = !!this._workAttributeData.isDim(),
                                            m = !!this._workAttributeData.isItalic(),
                                            b = !!this._workAttributeData.isUnderline(),
                                            w = !!this._workAttributeData.isStrikethrough(),
                                            y = !!this._workAttributeData.isOverline();
                                        let S = this._workAttributeData.getFgColor(),
                                            C = this._workAttributeData.getFgColorMode(),
                                            x = this._workAttributeData.getBgColor(),
                                            E = this._workAttributeData.getBgColorMode();
                                        if (_) {
                                            const e = S;
                                            S = x, x = e;
                                            const t = C;
                                            C = E, E = t
                                        }
                                        const O = this._getBackgroundColor(E, x, _, v);
                                        this._tmpCtx.globalCompositeOperation = "copy", this._tmpCtx.fillStyle = O.css, this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height), this._tmpCtx.globalCompositeOperation = "source-over";
                                        const k = f ? this._config.fontWeightBold : this._config.fontWeight,
                                            L = m ? "italic" : "";
                                        this._tmpCtx.font = `${L} ${k} ${this._config.fontSize*this._config.devicePixelRatio}px ${this._config.fontFamily}`, this._tmpCtx.textBaseline = r.TEXT_BASELINE;
                                        const D = 1 === c.length && (0, n.isPowerlineGlyph)(c.charCodeAt(0)),
                                            M = 1 === c.length && (0, n.isRestrictedPowerlineGlyph)(c.charCodeAt(0)),
                                            A = this._getForegroundColor(t, E, x, i, C, S, _, v, f, (0, n.treatGlyphAsBackgroundColor)(c.charCodeAt(0)));
                                        this._tmpCtx.fillStyle = A.css;
                                        const R = M ? 0 : 4;
                                        let P = !1;
                                        !1 !== this._config.customGlyphs && (P = (0, s.tryDrawCustomChar)(this._tmpCtx, c, R, R, this._config.deviceCellWidth, this._config.deviceCellHeight, this._config.fontSize, this._config.devicePixelRatio));
                                        let T, B = !D;
                                        if (T = "number" == typeof e ? this._unicodeService.wcwidth(e) : this._unicodeService.getStringCellWidth(e), b) {
                                            this._tmpCtx.save();
                                            const e = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 15)),
                                                t = e % 2 == 1 ? .5 : 0;
                                            if (this._tmpCtx.lineWidth = e, this._workAttributeData.isUnderlineColorDefault()) this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle;
                                            else if (this._workAttributeData.isUnderlineColorRGB()) B = !1, this._tmpCtx.strokeStyle = `rgb(${h.AttributeData.toColorRGB(this._workAttributeData.getUnderlineColor()).join(",")})`;
                                            else {
                                                B = !1;
                                                let e = this._workAttributeData.getUnderlineColor();
                                                this._config.drawBoldTextInBrightColors && this._workAttributeData.isBold() && e < 8 && (e += 8), this._tmpCtx.strokeStyle = this._getColorFromAnsiIndex(e).css
                                            }
                                            this._tmpCtx.beginPath();
                                            const i = R,
                                                r = Math.ceil(R + this._config.deviceCharHeight) - t - (a ? 2 * e : 0),
                                                s = r + e,
                                                o = r + 2 * e;
                                            let l = this._workAttributeData.getUnderlineVariantOffset();
                                            for (let a = 0; a < T; a++) {
                                                this._tmpCtx.save();
                                                const c = i + a * this._config.deviceCellWidth,
                                                    h = i + (a + 1) * this._config.deviceCellWidth,
                                                    u = c + this._config.deviceCellWidth / 2;
                                                switch (this._workAttributeData.extended.underlineStyle) {
                                                    case 2:
                                                        this._tmpCtx.moveTo(c, r), this._tmpCtx.lineTo(h, r), this._tmpCtx.moveTo(c, o), this._tmpCtx.lineTo(h, o);
                                                        break;
                                                    case 3:
                                                        const i = e <= 1 ? o : Math.ceil(R + this._config.deviceCharHeight - e / 2) - t,
                                                            a = e <= 1 ? r : Math.ceil(R + this._config.deviceCharHeight + e / 2) - t,
                                                            d = new Path2D;
                                                        d.rect(c, r, this._config.deviceCellWidth, o - r), this._tmpCtx.clip(d), this._tmpCtx.moveTo(c - this._config.deviceCellWidth / 2, s), this._tmpCtx.bezierCurveTo(c - this._config.deviceCellWidth / 2, a, c, a, c, s), this._tmpCtx.bezierCurveTo(c, i, u, i, u, s), this._tmpCtx.bezierCurveTo(u, a, h, a, h, s), this._tmpCtx.bezierCurveTo(h, i, h + this._config.deviceCellWidth / 2, i, h + this._config.deviceCellWidth / 2, s);
                                                        break;
                                                    case 4:
                                                        const f = 0 === l ? 0 : l >= e ? 2 * e - l : e - l;
                                                        0 == !(l >= e) || 0 === f ? (this._tmpCtx.setLineDash([Math.round(e), Math.round(e)]), this._tmpCtx.moveTo(c + f, r), this._tmpCtx.lineTo(h, r)) : (this._tmpCtx.setLineDash([Math.round(e), Math.round(e)]), this._tmpCtx.moveTo(c, r), this._tmpCtx.lineTo(c + f, r), this._tmpCtx.moveTo(c + f + e, r), this._tmpCtx.lineTo(h, r)), l = (0, n.computeNextVariantOffset)(h - c, e, l);
                                                        break;
                                                    case 5:
                                                        const p = .6,
                                                            _ = .3,
                                                            g = h - c,
                                                            v = Math.floor(p * g),
                                                            m = Math.floor(_ * g),
                                                            b = g - v - m;
                                                        this._tmpCtx.setLineDash([v, m, b]), this._tmpCtx.moveTo(c, r), this._tmpCtx.lineTo(h, r);
                                                        break;
                                                    default:
                                                        this._tmpCtx.moveTo(c, r), this._tmpCtx.lineTo(h, r)
                                                }
                                                this._tmpCtx.stroke(), this._tmpCtx.restore()
                                            }
                                            if (this._tmpCtx.restore(), !P && this._config.fontSize >= 12 && !this._config.allowTransparency && " " !== c) {
                                                this._tmpCtx.save(), this._tmpCtx.textBaseline = "alphabetic";
                                                const t = this._tmpCtx.measureText(c);
                                                if (this._tmpCtx.restore(), "actualBoundingBoxDescent" in t && t.actualBoundingBoxDescent > 0) {
                                                    this._tmpCtx.save();
                                                    const t = new Path2D;
                                                    t.rect(i, r - Math.ceil(e / 2), this._config.deviceCellWidth * T, o - r + Math.ceil(e / 2)), this._tmpCtx.clip(t), this._tmpCtx.lineWidth = 3 * this._config.devicePixelRatio, this._tmpCtx.strokeStyle = O.css, this._tmpCtx.strokeText(c, R, R + this._config.deviceCharHeight), this._tmpCtx.restore()
                                                }
                                            }
                                        }
                                        if (y) {
                                            const e = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 15)),
                                                t = e % 2 == 1 ? .5 : 0;
                                            this._tmpCtx.lineWidth = e, this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle, this._tmpCtx.beginPath(), this._tmpCtx.moveTo(R, R + t), this._tmpCtx.lineTo(R + this._config.deviceCharWidth * T, R + t), this._tmpCtx.stroke()
                                        }
                                        if (P || this._tmpCtx.fillText(c, R, R + this._config.deviceCharHeight), "_" === c && !this._config.allowTransparency) {
                                            let e = g(this._tmpCtx.getImageData(R, R, this._config.deviceCellWidth, this._config.deviceCellHeight), O, A, B);
                                            if (e)
                                                for (let t = 1; t <= 5 && (this._tmpCtx.save(), this._tmpCtx.fillStyle = O.css, this._tmpCtx.fillRect(0, 0, this._tmpCanvas.width, this._tmpCanvas.height), this._tmpCtx.restore(), this._tmpCtx.fillText(c, R, R + this._config.deviceCharHeight - t), e = g(this._tmpCtx.getImageData(R, R, this._config.deviceCellWidth, this._config.deviceCellHeight), O, A, B), e); t++);
                                        }
                                        if (w) {
                                            const e = Math.max(1, Math.floor(this._config.fontSize * this._config.devicePixelRatio / 10)),
                                                t = this._tmpCtx.lineWidth % 2 == 1 ? .5 : 0;
                                            this._tmpCtx.lineWidth = e, this._tmpCtx.strokeStyle = this._tmpCtx.fillStyle, this._tmpCtx.beginPath(), this._tmpCtx.moveTo(R, R + Math.floor(this._config.deviceCharHeight / 2) - t), this._tmpCtx.lineTo(R + this._config.deviceCharWidth * T, R + Math.floor(this._config.deviceCharHeight / 2) - t), this._tmpCtx.stroke()
                                        }
                                        this._tmpCtx.restore();
                                        const I = this._tmpCtx.getImageData(0, 0, this._tmpCanvas.width, this._tmpCanvas.height);
                                        let $;
                                        if ($ = this._config.allowTransparency ? function(e) {
                                                for (let t = 0; t < e.data.length; t += 4)
                                                    if (e.data[t + 3] > 0) return !1;
                                                return !0
                                            }(I) : g(I, O, A, B), $) return d;
                                        const j = this._findGlyphBoundingBox(I, this._workBoundingBox, l, M, P, R);
                                        let F, N;
                                        for (;;) {
                                            if (0 === this._activePages.length) {
                                                const e = this._createNewPage();
                                                F = e, N = e.currentRow, N.height = j.size.y;
                                                break
                                            }
                                            F = this._activePages[this._activePages.length - 1], N = F.currentRow;
                                            for (const e of this._activePages) j.size.y <= e.currentRow.height && (F = e, N = e.currentRow);
                                            for (let e = this._activePages.length - 1; e >= 0; e--)
                                                for (const t of this._activePages[e].fixedRows) t.height <= N.height && j.size.y <= t.height && (F = this._activePages[e], N = t);
                                            if (N.y + j.size.y >= F.canvas.height || N.height > j.size.y + 2) {
                                                let e = !1;
                                                if (F.currentRow.y + F.currentRow.height + j.size.y >= F.canvas.height) {
                                                    let t;
                                                    for (const e of this._activePages)
                                                        if (e.currentRow.y + e.currentRow.height + j.size.y < e.canvas.height) {
                                                            t = e;
                                                            break
                                                        } if (t) F = t;
                                                    else if (p.maxAtlasPages && this._pages.length >= p.maxAtlasPages && N.y + j.size.y <= F.canvas.height && N.height >= j.size.y && N.x + j.size.x <= F.canvas.width) e = !0;
                                                    else {
                                                        const t = this._createNewPage();
                                                        F = t, N = t.currentRow, N.height = j.size.y, e = !0
                                                    }
                                                }
                                                e || (F.currentRow.height > 0 && F.fixedRows.push(F.currentRow), N = {
                                                    x: 0,
                                                    y: F.currentRow.y + F.currentRow.height,
                                                    height: j.size.y
                                                }, F.fixedRows.push(N), F.currentRow = {
                                                    x: 0,
                                                    y: N.y + N.height,
                                                    height: 0
                                                })
                                            }
                                            if (N.x + j.size.x <= F.canvas.width) break;
                                            N === F.currentRow ? (N.x = 0, N.y += N.height, N.height = 0) : F.fixedRows.splice(F.fixedRows.indexOf(N), 1)
                                        }
                                        return j.texturePage = this._pages.indexOf(F), j.texturePosition.x = N.x, j.texturePosition.y = N.y, j.texturePositionClipSpace.x = N.x / F.canvas.width, j.texturePositionClipSpace.y = N.y / F.canvas.height, j.sizeClipSpace.x /= F.canvas.width, j.sizeClipSpace.y /= F.canvas.height, N.height = Math.max(N.height, j.size.y), N.x += j.size.x, F.ctx.putImageData(I, j.texturePosition.x - this._workBoundingBox.left, j.texturePosition.y - this._workBoundingBox.top, this._workBoundingBox.left, this._workBoundingBox.top, j.size.x, j.size.y), F.addGlyph(j), F.version++, j
                                    }
                                    _findGlyphBoundingBox(e, t, i, r, s, n) {
                                        t.top = 0;
                                        const o = r ? this._config.deviceCellHeight : this._tmpCanvas.height,
                                            a = r ? this._config.deviceCellWidth : i;
                                        let c = !1;
                                        for (let i = 0; i < o; i++) {
                                            for (let r = 0; r < a; r++) {
                                                const s = i * this._tmpCanvas.width * 4 + 4 * r + 3;
                                                if (0 !== e.data[s]) {
                                                    t.top = i, c = !0;
                                                    break
                                                }
                                            }
                                            if (c) break
                                        }
                                        t.left = 0, c = !1;
                                        for (let i = 0; i < n + a; i++) {
                                            for (let r = 0; r < o; r++) {
                                                const s = r * this._tmpCanvas.width * 4 + 4 * i + 3;
                                                if (0 !== e.data[s]) {
                                                    t.left = i, c = !0;
                                                    break
                                                }
                                            }
                                            if (c) break
                                        }
                                        t.right = a, c = !1;
                                        for (let i = n + a - 1; i >= n; i--) {
                                            for (let r = 0; r < o; r++) {
                                                const s = r * this._tmpCanvas.width * 4 + 4 * i + 3;
                                                if (0 !== e.data[s]) {
                                                    t.right = i, c = !0;
                                                    break
                                                }
                                            }
                                            if (c) break
                                        }
                                        t.bottom = o, c = !1;
                                        for (let i = o - 1; i >= 0; i--) {
                                            for (let r = 0; r < a; r++) {
                                                const s = i * this._tmpCanvas.width * 4 + 4 * r + 3;
                                                if (0 !== e.data[s]) {
                                                    t.bottom = i, c = !0;
                                                    break
                                                }
                                            }
                                            if (c) break
                                        }
                                        return {
                                            texturePage: 0,
                                            texturePosition: {
                                                x: 0,
                                                y: 0
                                            },
                                            texturePositionClipSpace: {
                                                x: 0,
                                                y: 0
                                            },
                                            size: {
                                                x: t.right - t.left + 1,
                                                y: t.bottom - t.top + 1
                                            },
                                            sizeClipSpace: {
                                                x: t.right - t.left + 1,
                                                y: t.bottom - t.top + 1
                                            },
                                            offset: {
                                                x: -t.left + n + (r || s ? Math.floor((this._config.deviceCellWidth - this._config.deviceCharWidth) / 2) : 0),
                                                y: -t.top + n + (r || s ? 1 === this._config.lineHeight ? 0 : Math.round((this._config.deviceCellHeight - this._config.deviceCharHeight) / 2) : 0)
                                            }
                                        }
                                    }
                                }
                                t.TextureAtlas = p;
                                class _ {
                                    get percentageUsed() {
                                        return this._usedPixels / (this.canvas.width * this.canvas.height)
                                    }
                                    get glyphs() {
                                        return this._glyphs
                                    }
                                    addGlyph(e) {
                                        this._glyphs.push(e), this._usedPixels += e.size.x * e.size.y
                                    }
                                    constructor(e, t, i) {
                                        if (this._usedPixels = 0, this._glyphs = [], this.version = 0, this.currentRow = {
                                                x: 0,
                                                y: 0,
                                                height: 0
                                            }, this.fixedRows = [], i)
                                            for (const e of i) this._glyphs.push(...e.glyphs), this._usedPixels += e._usedPixels;
                                        this.canvas = v(e, t, t), this.ctx = (0, n.throwIfFalsy)(this.canvas.getContext("2d", {
                                            alpha: !0
                                        }))
                                    }
                                    clear() {
                                        this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height), this.currentRow.x = 0, this.currentRow.y = 0, this.currentRow.height = 0, this.fixedRows.length = 0, this.version++
                                    }
                                }

                                function g(e, t, i, r) {
                                    const s = t.rgba >>> 24,
                                        n = t.rgba >>> 16 & 255,
                                        o = t.rgba >>> 8 & 255,
                                        a = i.rgba >>> 24,
                                        c = i.rgba >>> 16 & 255,
                                        l = i.rgba >>> 8 & 255,
                                        h = Math.floor((Math.abs(s - a) + Math.abs(n - c) + Math.abs(o - l)) / 12);
                                    let u = !0;
                                    for (let t = 0; t < e.data.length; t += 4) e.data[t] === s && e.data[t + 1] === n && e.data[t + 2] === o || r && Math.abs(e.data[t] - s) + Math.abs(e.data[t + 1] - n) + Math.abs(e.data[t + 2] - o) < h ? e.data[t + 3] = 0 : u = !1;
                                    return u
                                }

                                function v(e, t, i) {
                                    const r = e.createElement("canvas");
                                    return r.width = t, r.height = i, r
                                }
                            },
                            160: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.contrastRatio = t.toPaddedHex = t.rgba = t.rgb = t.css = t.color = t.channels = t.NULL_COLOR = void 0;
                                let i = 0,
                                    r = 0,
                                    s = 0,
                                    n = 0;
                                var o, a, c, l, h;

                                function u(e) {
                                    const t = e.toString(16);
                                    return t.length < 2 ? "0" + t : t
                                }

                                function d(e, t) {
                                    return e < t ? (t + .05) / (e + .05) : (e + .05) / (t + .05)
                                }
                                t.NULL_COLOR = {
                                        css: "#00000000",
                                        rgba: 0
                                    },
                                    function(e) {
                                        e.toCss = function(e, t, i, r) {
                                            return void 0 !== r ? `#${u(e)}${u(t)}${u(i)}${u(r)}` : `#${u(e)}${u(t)}${u(i)}`
                                        }, e.toRgba = function(e, t, i, r = 255) {
                                            return (e << 24 | t << 16 | i << 8 | r) >>> 0
                                        }, e.toColor = function(t, i, r, s) {
                                            return {
                                                css: e.toCss(t, i, r, s),
                                                rgba: e.toRgba(t, i, r, s)
                                            }
                                        }
                                    }(o || (t.channels = o = {})),
                                    function(e) {
                                        function t(e, t) {
                                            return n = Math.round(255 * t), [i, r, s] = h.toChannels(e.rgba), {
                                                css: o.toCss(i, r, s, n),
                                                rgba: o.toRgba(i, r, s, n)
                                            }
                                        }
                                        e.blend = function(e, t) {
                                            if (n = (255 & t.rgba) / 255, 1 === n) return {
                                                css: t.css,
                                                rgba: t.rgba
                                            };
                                            const a = t.rgba >> 24 & 255,
                                                c = t.rgba >> 16 & 255,
                                                l = t.rgba >> 8 & 255,
                                                h = e.rgba >> 24 & 255,
                                                u = e.rgba >> 16 & 255,
                                                d = e.rgba >> 8 & 255;
                                            return i = h + Math.round((a - h) * n), r = u + Math.round((c - u) * n), s = d + Math.round((l - d) * n), {
                                                css: o.toCss(i, r, s),
                                                rgba: o.toRgba(i, r, s)
                                            }
                                        }, e.isOpaque = function(e) {
                                            return 255 == (255 & e.rgba)
                                        }, e.ensureContrastRatio = function(e, t, i) {
                                            const r = h.ensureContrastRatio(e.rgba, t.rgba, i);
                                            if (r) return o.toColor(r >> 24 & 255, r >> 16 & 255, r >> 8 & 255)
                                        }, e.opaque = function(e) {
                                            const t = (255 | e.rgba) >>> 0;
                                            return [i, r, s] = h.toChannels(t), {
                                                css: o.toCss(i, r, s),
                                                rgba: t
                                            }
                                        }, e.opacity = t, e.multiplyOpacity = function(e, i) {
                                            return n = 255 & e.rgba, t(e, n * i / 255)
                                        }, e.toColorRGB = function(e) {
                                            return [e.rgba >> 24 & 255, e.rgba >> 16 & 255, e.rgba >> 8 & 255]
                                        }
                                    }(a || (t.color = a = {})),
                                    function(e) {
                                        let t, a;
                                        try {
                                            const e = document.createElement("canvas");
                                            e.width = 1, e.height = 1;
                                            const i = e.getContext("2d", {
                                                willReadFrequently: !0
                                            });
                                            i && (t = i, t.globalCompositeOperation = "copy", a = t.createLinearGradient(0, 0, 1, 1))
                                        } catch {}
                                        e.toColor = function(e) {
                                            if (e.match(/#[\da-f]{3,8}/i)) switch (e.length) {
                                                case 4:
                                                    return i = parseInt(e.slice(1, 2).repeat(2), 16), r = parseInt(e.slice(2, 3).repeat(2), 16), s = parseInt(e.slice(3, 4).repeat(2), 16), o.toColor(i, r, s);
                                                case 5:
                                                    return i = parseInt(e.slice(1, 2).repeat(2), 16), r = parseInt(e.slice(2, 3).repeat(2), 16), s = parseInt(e.slice(3, 4).repeat(2), 16), n = parseInt(e.slice(4, 5).repeat(2), 16), o.toColor(i, r, s, n);
                                                case 7:
                                                    return {
                                                        css: e, rgba: (parseInt(e.slice(1), 16) << 8 | 255) >>> 0
                                                    };
                                                case 9:
                                                    return {
                                                        css: e, rgba: parseInt(e.slice(1), 16) >>> 0
                                                    }
                                            }
                                            const c = e.match(/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(,\s*(0|1|\d?\.(\d+))\s*)?\)/);
                                            if (c) return i = parseInt(c[1]), r = parseInt(c[2]), s = parseInt(c[3]), n = Math.round(255 * (void 0 === c[5] ? 1 : parseFloat(c[5]))), o.toColor(i, r, s, n);
                                            if (!t || !a) throw new Error("css.toColor: Unsupported css format");
                                            if (t.fillStyle = a, t.fillStyle = e, "string" != typeof t.fillStyle) throw new Error("css.toColor: Unsupported css format");
                                            if (t.fillRect(0, 0, 1, 1), [i, r, s, n] = t.getImageData(0, 0, 1, 1).data, 255 !== n) throw new Error("css.toColor: Unsupported css format");
                                            return {
                                                rgba: o.toRgba(i, r, s, n),
                                                css: e
                                            }
                                        }
                                    }(c || (t.css = c = {})),
                                    function(e) {
                                        function t(e, t, i) {
                                            const r = e / 255,
                                                s = t / 255,
                                                n = i / 255;
                                            return .2126 * (r <= .03928 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4)) + .7152 * (s <= .03928 ? s / 12.92 : Math.pow((s + .055) / 1.055, 2.4)) + .0722 * (n <= .03928 ? n / 12.92 : Math.pow((n + .055) / 1.055, 2.4))
                                        }
                                        e.relativeLuminance = function(e) {
                                            return t(e >> 16 & 255, e >> 8 & 255, 255 & e)
                                        }, e.relativeLuminance2 = t
                                    }(l || (t.rgb = l = {})),
                                    function(e) {
                                        function t(e, t, i) {
                                            const r = e >> 24 & 255,
                                                s = e >> 16 & 255,
                                                n = e >> 8 & 255;
                                            let o = t >> 24 & 255,
                                                a = t >> 16 & 255,
                                                c = t >> 8 & 255,
                                                h = d(l.relativeLuminance2(o, a, c), l.relativeLuminance2(r, s, n));
                                            for (; h < i && (o > 0 || a > 0 || c > 0);) o -= Math.max(0, Math.ceil(.1 * o)), a -= Math.max(0, Math.ceil(.1 * a)), c -= Math.max(0, Math.ceil(.1 * c)), h = d(l.relativeLuminance2(o, a, c), l.relativeLuminance2(r, s, n));
                                            return (o << 24 | a << 16 | c << 8 | 255) >>> 0
                                        }

                                        function a(e, t, i) {
                                            const r = e >> 24 & 255,
                                                s = e >> 16 & 255,
                                                n = e >> 8 & 255;
                                            let o = t >> 24 & 255,
                                                a = t >> 16 & 255,
                                                c = t >> 8 & 255,
                                                h = d(l.relativeLuminance2(o, a, c), l.relativeLuminance2(r, s, n));
                                            for (; h < i && (o < 255 || a < 255 || c < 255);) o = Math.min(255, o + Math.ceil(.1 * (255 - o))), a = Math.min(255, a + Math.ceil(.1 * (255 - a))), c = Math.min(255, c + Math.ceil(.1 * (255 - c))), h = d(l.relativeLuminance2(o, a, c), l.relativeLuminance2(r, s, n));
                                            return (o << 24 | a << 16 | c << 8 | 255) >>> 0
                                        }
                                        e.blend = function(e, t) {
                                            if (n = (255 & t) / 255, 1 === n) return t;
                                            const a = t >> 24 & 255,
                                                c = t >> 16 & 255,
                                                l = t >> 8 & 255,
                                                h = e >> 24 & 255,
                                                u = e >> 16 & 255,
                                                d = e >> 8 & 255;
                                            return i = h + Math.round((a - h) * n), r = u + Math.round((c - u) * n), s = d + Math.round((l - d) * n), o.toRgba(i, r, s)
                                        }, e.ensureContrastRatio = function(e, i, r) {
                                            const s = l.relativeLuminance(e >> 8),
                                                n = l.relativeLuminance(i >> 8);
                                            if (d(s, n) < r) {
                                                if (n < s) {
                                                    const n = t(e, i, r),
                                                        o = d(s, l.relativeLuminance(n >> 8));
                                                    if (o < r) {
                                                        const t = a(e, i, r);
                                                        return o > d(s, l.relativeLuminance(t >> 8)) ? n : t
                                                    }
                                                    return n
                                                }
                                                const o = a(e, i, r),
                                                    c = d(s, l.relativeLuminance(o >> 8));
                                                if (c < r) {
                                                    const n = t(e, i, r);
                                                    return c > d(s, l.relativeLuminance(n >> 8)) ? o : n
                                                }
                                                return o
                                            }
                                        }, e.reduceLuminance = t, e.increaseLuminance = a, e.toChannels = function(e) {
                                            return [e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e]
                                        }
                                    }(h || (t.rgba = h = {})), t.toPaddedHex = u, t.contrastRatio = d
                            },
                            345: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.runAndSubscribe = t.forwardEvent = t.EventEmitter = void 0, t.EventEmitter = class {
                                    constructor() {
                                        this._listeners = [], this._disposed = !1
                                    }
                                    get event() {
                                        return this._event || (this._event = e => (this._listeners.push(e), {
                                            dispose: () => {
                                                if (!this._disposed)
                                                    for (let t = 0; t < this._listeners.length; t++)
                                                        if (this._listeners[t] === e) return void this._listeners.splice(t, 1)
                                            }
                                        })), this._event
                                    }
                                    fire(e, t) {
                                        const i = [];
                                        for (let e = 0; e < this._listeners.length; e++) i.push(this._listeners[e]);
                                        for (let r = 0; r < i.length; r++) i[r].call(void 0, e, t)
                                    }
                                    dispose() {
                                        this.clearListeners(), this._disposed = !0
                                    }
                                    clearListeners() {
                                        this._listeners && (this._listeners.length = 0)
                                    }
                                }, t.forwardEvent = function(e, t) {
                                    return e((e => t.fire(e)))
                                }, t.runAndSubscribe = function(e, t) {
                                    return t(void 0), e((e => t(e)))
                                }
                            },
                            859: (e, t) => {
                                function i(e) {
                                    for (const t of e) t.dispose();
                                    e.length = 0
                                }
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.getDisposeArrayDisposable = t.disposeArray = t.toDisposable = t.MutableDisposable = t.Disposable = void 0, t.Disposable = class {
                                    constructor() {
                                        this._disposables = [], this._isDisposed = !1
                                    }
                                    dispose() {
                                        this._isDisposed = !0;
                                        for (const e of this._disposables) e.dispose();
                                        this._disposables.length = 0
                                    }
                                    register(e) {
                                        return this._disposables.push(e), e
                                    }
                                    unregister(e) {
                                        const t = this._disposables.indexOf(e); - 1 !== t && this._disposables.splice(t, 1)
                                    }
                                }, t.MutableDisposable = class {
                                    constructor() {
                                        this._isDisposed = !1
                                    }
                                    get value() {
                                        return this._isDisposed ? void 0 : this._value
                                    }
                                    set value(e) {
                                        this._isDisposed || e === this._value || (this._value?.dispose(), this._value = e)
                                    }
                                    clear() {
                                        this.value = void 0
                                    }
                                    dispose() {
                                        this._isDisposed = !0, this._value?.dispose(), this._value = void 0
                                    }
                                }, t.toDisposable = function(e) {
                                    return {
                                        dispose: e
                                    }
                                }, t.disposeArray = i, t.getDisposeArrayDisposable = function(e) {
                                    return {
                                        dispose: () => i(e)
                                    }
                                }
                            },
                            485: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.FourKeyMap = t.TwoKeyMap = void 0;
                                class i {
                                    constructor() {
                                        this._data = {}
                                    }
                                    set(e, t, i) {
                                        this._data[e] || (this._data[e] = {}), this._data[e][t] = i
                                    }
                                    get(e, t) {
                                        return this._data[e] ? this._data[e][t] : void 0
                                    }
                                    clear() {
                                        this._data = {}
                                    }
                                }
                                t.TwoKeyMap = i, t.FourKeyMap = class {
                                    constructor() {
                                        this._data = new i
                                    }
                                    set(e, t, r, s, n) {
                                        this._data.get(e, t) || this._data.set(e, t, new i), this._data.get(e, t).set(r, s, n)
                                    }
                                    get(e, t, i, r) {
                                        return this._data.get(e, t)?.get(i, r)
                                    }
                                    clear() {
                                        this._data.clear()
                                    }
                                }
                            },
                            399: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.isChromeOS = t.isLinux = t.isWindows = t.isIphone = t.isIpad = t.isMac = t.getSafariVersion = t.isSafari = t.isLegacyEdge = t.isFirefox = t.isNode = void 0, t.isNode = "undefined" != typeof process && "title" in process;
                                const i = t.isNode ? "node" : navigator.userAgent,
                                    r = t.isNode ? "node" : navigator.platform;
                                t.isFirefox = i.includes("Firefox"), t.isLegacyEdge = i.includes("Edge"), t.isSafari = /^((?!chrome|android).)*safari/i.test(i), t.getSafariVersion = function() {
                                    if (!t.isSafari) return 0;
                                    const e = i.match(/Version\/(\d+)/);
                                    return null === e || e.length < 2 ? 0 : parseInt(e[1])
                                }, t.isMac = ["Macintosh", "MacIntel", "MacPPC", "Mac68K"].includes(r), t.isIpad = "iPad" === r, t.isIphone = "iPhone" === r, t.isWindows = ["Windows", "Win16", "Win32", "WinCE"].includes(r), t.isLinux = r.indexOf("Linux") >= 0, t.isChromeOS = /\bCrOS\b/.test(i)
                            },
                            385: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.DebouncedIdleTask = t.IdleTaskQueue = t.PriorityTaskQueue = void 0;
                                const r = i(399);
                                class s {
                                    constructor() {
                                        this._tasks = [], this._i = 0
                                    }
                                    enqueue(e) {
                                        this._tasks.push(e), this._start()
                                    }
                                    flush() {
                                        for (; this._i < this._tasks.length;) this._tasks[this._i]() || this._i++;
                                        this.clear()
                                    }
                                    clear() {
                                        this._idleCallback && (this._cancelCallback(this._idleCallback), this._idleCallback = void 0), this._i = 0, this._tasks.length = 0
                                    }
                                    _start() {
                                        this._idleCallback || (this._idleCallback = this._requestCallback(this._process.bind(this)))
                                    }
                                    _process(e) {
                                        this._idleCallback = void 0;
                                        let t = 0,
                                            i = 0,
                                            r = e.timeRemaining(),
                                            s = 0;
                                        for (; this._i < this._tasks.length;) {
                                            if (t = Date.now(), this._tasks[this._i]() || this._i++, t = Math.max(1, Date.now() - t), i = Math.max(t, i), s = e.timeRemaining(), 1.5 * i > s) return r - t < -20 && console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(r-t))}ms`), void this._start();
                                            r = s
                                        }
                                        this.clear()
                                    }
                                }
                                class n extends s {
                                    _requestCallback(e) {
                                        return setTimeout((() => e(this._createDeadline(16))))
                                    }
                                    _cancelCallback(e) {
                                        clearTimeout(e)
                                    }
                                    _createDeadline(e) {
                                        const t = Date.now() + e;
                                        return {
                                            timeRemaining: () => Math.max(0, t - Date.now())
                                        }
                                    }
                                }
                                t.PriorityTaskQueue = n, t.IdleTaskQueue = !r.isNode && "requestIdleCallback" in window ? class extends s {
                                    _requestCallback(e) {
                                        return requestIdleCallback(e)
                                    }
                                    _cancelCallback(e) {
                                        cancelIdleCallback(e)
                                    }
                                } : n, t.DebouncedIdleTask = class {
                                    constructor() {
                                        this._queue = new t.IdleTaskQueue
                                    }
                                    set(e) {
                                        this._queue.clear(), this._queue.enqueue(e)
                                    }
                                    flush() {
                                        this._queue.flush()
                                    }
                                }
                            },
                            147: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.ExtendedAttrs = t.AttributeData = void 0;
                                class i {
                                    constructor() {
                                        this.fg = 0, this.bg = 0, this.extended = new r
                                    }
                                    static toColorRGB(e) {
                                        return [e >>> 16 & 255, e >>> 8 & 255, 255 & e]
                                    }
                                    static fromColorRGB(e) {
                                        return (255 & e[0]) << 16 | (255 & e[1]) << 8 | 255 & e[2]
                                    }
                                    clone() {
                                        const e = new i;
                                        return e.fg = this.fg, e.bg = this.bg, e.extended = this.extended.clone(), e
                                    }
                                    isInverse() {
                                        return 67108864 & this.fg
                                    }
                                    isBold() {
                                        return 134217728 & this.fg
                                    }
                                    isUnderline() {
                                        return this.hasExtendedAttrs() && 0 !== this.extended.underlineStyle ? 1 : 268435456 & this.fg
                                    }
                                    isBlink() {
                                        return 536870912 & this.fg
                                    }
                                    isInvisible() {
                                        return 1073741824 & this.fg
                                    }
                                    isItalic() {
                                        return 67108864 & this.bg
                                    }
                                    isDim() {
                                        return 134217728 & this.bg
                                    }
                                    isStrikethrough() {
                                        return 2147483648 & this.fg
                                    }
                                    isProtected() {
                                        return 536870912 & this.bg
                                    }
                                    isOverline() {
                                        return 1073741824 & this.bg
                                    }
                                    getFgColorMode() {
                                        return 50331648 & this.fg
                                    }
                                    getBgColorMode() {
                                        return 50331648 & this.bg
                                    }
                                    isFgRGB() {
                                        return 50331648 == (50331648 & this.fg)
                                    }
                                    isBgRGB() {
                                        return 50331648 == (50331648 & this.bg)
                                    }
                                    isFgPalette() {
                                        return 16777216 == (50331648 & this.fg) || 33554432 == (50331648 & this.fg)
                                    }
                                    isBgPalette() {
                                        return 16777216 == (50331648 & this.bg) || 33554432 == (50331648 & this.bg)
                                    }
                                    isFgDefault() {
                                        return 0 == (50331648 & this.fg)
                                    }
                                    isBgDefault() {
                                        return 0 == (50331648 & this.bg)
                                    }
                                    isAttributeDefault() {
                                        return 0 === this.fg && 0 === this.bg
                                    }
                                    getFgColor() {
                                        switch (50331648 & this.fg) {
                                            case 16777216:
                                            case 33554432:
                                                return 255 & this.fg;
                                            case 50331648:
                                                return 16777215 & this.fg;
                                            default:
                                                return -1
                                        }
                                    }
                                    getBgColor() {
                                        switch (50331648 & this.bg) {
                                            case 16777216:
                                            case 33554432:
                                                return 255 & this.bg;
                                            case 50331648:
                                                return 16777215 & this.bg;
                                            default:
                                                return -1
                                        }
                                    }
                                    hasExtendedAttrs() {
                                        return 268435456 & this.bg
                                    }
                                    updateExtended() {
                                        this.extended.isEmpty() ? this.bg &= -268435457 : this.bg |= 268435456
                                    }
                                    getUnderlineColor() {
                                        if (268435456 & this.bg && ~this.extended.underlineColor) switch (50331648 & this.extended.underlineColor) {
                                            case 16777216:
                                            case 33554432:
                                                return 255 & this.extended.underlineColor;
                                            case 50331648:
                                                return 16777215 & this.extended.underlineColor;
                                            default:
                                                return this.getFgColor()
                                        }
                                        return this.getFgColor()
                                    }
                                    getUnderlineColorMode() {
                                        return 268435456 & this.bg && ~this.extended.underlineColor ? 50331648 & this.extended.underlineColor : this.getFgColorMode()
                                    }
                                    isUnderlineColorRGB() {
                                        return 268435456 & this.bg && ~this.extended.underlineColor ? 50331648 == (50331648 & this.extended.underlineColor) : this.isFgRGB()
                                    }
                                    isUnderlineColorPalette() {
                                        return 268435456 & this.bg && ~this.extended.underlineColor ? 16777216 == (50331648 & this.extended.underlineColor) || 33554432 == (50331648 & this.extended.underlineColor) : this.isFgPalette()
                                    }
                                    isUnderlineColorDefault() {
                                        return 268435456 & this.bg && ~this.extended.underlineColor ? 0 == (50331648 & this.extended.underlineColor) : this.isFgDefault()
                                    }
                                    getUnderlineStyle() {
                                        return 268435456 & this.fg ? 268435456 & this.bg ? this.extended.underlineStyle : 1 : 0
                                    }
                                    getUnderlineVariantOffset() {
                                        return this.extended.underlineVariantOffset
                                    }
                                }
                                t.AttributeData = i;
                                class r {
                                    get ext() {
                                        return this._urlId ? -469762049 & this._ext | this.underlineStyle << 26 : this._ext
                                    }
                                    set ext(e) {
                                        this._ext = e
                                    }
                                    get underlineStyle() {
                                        return this._urlId ? 5 : (469762048 & this._ext) >> 26
                                    }
                                    set underlineStyle(e) {
                                        this._ext &= -469762049, this._ext |= e << 26 & 469762048
                                    }
                                    get underlineColor() {
                                        return 67108863 & this._ext
                                    }
                                    set underlineColor(e) {
                                        this._ext &= -67108864, this._ext |= 67108863 & e
                                    }
                                    get urlId() {
                                        return this._urlId
                                    }
                                    set urlId(e) {
                                        this._urlId = e
                                    }
                                    get underlineVariantOffset() {
                                        const e = (3758096384 & this._ext) >> 29;
                                        return e < 0 ? 4294967288 ^ e : e
                                    }
                                    set underlineVariantOffset(e) {
                                        this._ext &= 536870911, this._ext |= e << 29 & 3758096384
                                    }
                                    constructor(e = 0, t = 0) {
                                        this._ext = 0, this._urlId = 0, this._ext = e, this._urlId = t
                                    }
                                    clone() {
                                        return new r(this._ext, this._urlId)
                                    }
                                    isEmpty() {
                                        return 0 === this.underlineStyle && 0 === this._urlId
                                    }
                                }
                                t.ExtendedAttrs = r
                            },
                            782: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CellData = void 0;
                                const r = i(133),
                                    s = i(855),
                                    n = i(147);
                                class o extends n.AttributeData {
                                    constructor() {
                                        super(...arguments), this.content = 0, this.fg = 0, this.bg = 0, this.extended = new n.ExtendedAttrs, this.combinedData = ""
                                    }
                                    static fromCharData(e) {
                                        const t = new o;
                                        return t.setFromCharData(e), t
                                    }
                                    isCombined() {
                                        return 2097152 & this.content
                                    }
                                    getWidth() {
                                        return this.content >> 22
                                    }
                                    getChars() {
                                        return 2097152 & this.content ? this.combinedData : 2097151 & this.content ? (0, r.stringFromCodePoint)(2097151 & this.content) : ""
                                    }
                                    getCode() {
                                        return this.isCombined() ? this.combinedData.charCodeAt(this.combinedData.length - 1) : 2097151 & this.content
                                    }
                                    setFromCharData(e) {
                                        this.fg = e[s.CHAR_DATA_ATTR_INDEX], this.bg = 0;
                                        let t = !1;
                                        if (e[s.CHAR_DATA_CHAR_INDEX].length > 2) t = !0;
                                        else if (2 === e[s.CHAR_DATA_CHAR_INDEX].length) {
                                            const i = e[s.CHAR_DATA_CHAR_INDEX].charCodeAt(0);
                                            if (55296 <= i && i <= 56319) {
                                                const r = e[s.CHAR_DATA_CHAR_INDEX].charCodeAt(1);
                                                56320 <= r && r <= 57343 ? this.content = 1024 * (i - 55296) + r - 56320 + 65536 | e[s.CHAR_DATA_WIDTH_INDEX] << 22 : t = !0
                                            } else t = !0
                                        } else this.content = e[s.CHAR_DATA_CHAR_INDEX].charCodeAt(0) | e[s.CHAR_DATA_WIDTH_INDEX] << 22;
                                        t && (this.combinedData = e[s.CHAR_DATA_CHAR_INDEX], this.content = 2097152 | e[s.CHAR_DATA_WIDTH_INDEX] << 22)
                                    }
                                    getAsCharData() {
                                        return [this.fg, this.getChars(), this.getWidth(), this.getCode()]
                                    }
                                }
                                t.CellData = o
                            },
                            855: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.WHITESPACE_CELL_CODE = t.WHITESPACE_CELL_WIDTH = t.WHITESPACE_CELL_CHAR = t.NULL_CELL_CODE = t.NULL_CELL_WIDTH = t.NULL_CELL_CHAR = t.CHAR_DATA_CODE_INDEX = t.CHAR_DATA_WIDTH_INDEX = t.CHAR_DATA_CHAR_INDEX = t.CHAR_DATA_ATTR_INDEX = t.DEFAULT_EXT = t.DEFAULT_ATTR = t.DEFAULT_COLOR = void 0, t.DEFAULT_COLOR = 0, t.DEFAULT_ATTR = 256 | t.DEFAULT_COLOR << 9, t.DEFAULT_EXT = 0, t.CHAR_DATA_ATTR_INDEX = 0, t.CHAR_DATA_CHAR_INDEX = 1, t.CHAR_DATA_WIDTH_INDEX = 2, t.CHAR_DATA_CODE_INDEX = 3, t.NULL_CELL_CHAR = "", t.NULL_CELL_WIDTH = 1, t.NULL_CELL_CODE = 0, t.WHITESPACE_CELL_CHAR = " ", t.WHITESPACE_CELL_WIDTH = 1, t.WHITESPACE_CELL_CODE = 32
                            },
                            133: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.Utf8ToUtf32 = t.StringToUtf32 = t.utf32ToString = t.stringFromCodePoint = void 0, t.stringFromCodePoint = function(e) {
                                    return e > 65535 ? (e -= 65536, String.fromCharCode(55296 + (e >> 10)) + String.fromCharCode(e % 1024 + 56320)) : String.fromCharCode(e)
                                }, t.utf32ToString = function(e, t = 0, i = e.length) {
                                    let r = "";
                                    for (let s = t; s < i; ++s) {
                                        let t = e[s];
                                        t > 65535 ? (t -= 65536, r += String.fromCharCode(55296 + (t >> 10)) + String.fromCharCode(t % 1024 + 56320)) : r += String.fromCharCode(t)
                                    }
                                    return r
                                }, t.StringToUtf32 = class {
                                    constructor() {
                                        this._interim = 0
                                    }
                                    clear() {
                                        this._interim = 0
                                    }
                                    decode(e, t) {
                                        const i = e.length;
                                        if (!i) return 0;
                                        let r = 0,
                                            s = 0;
                                        if (this._interim) {
                                            const i = e.charCodeAt(s++);
                                            56320 <= i && i <= 57343 ? t[r++] = 1024 * (this._interim - 55296) + i - 56320 + 65536 : (t[r++] = this._interim, t[r++] = i), this._interim = 0
                                        }
                                        for (let n = s; n < i; ++n) {
                                            const s = e.charCodeAt(n);
                                            if (55296 <= s && s <= 56319) {
                                                if (++n >= i) return this._interim = s, r;
                                                const o = e.charCodeAt(n);
                                                56320 <= o && o <= 57343 ? t[r++] = 1024 * (s - 55296) + o - 56320 + 65536 : (t[r++] = s, t[r++] = o)
                                            } else 65279 !== s && (t[r++] = s)
                                        }
                                        return r
                                    }
                                }, t.Utf8ToUtf32 = class {
                                    constructor() {
                                        this.interim = new Uint8Array(3)
                                    }
                                    clear() {
                                        this.interim.fill(0)
                                    }
                                    decode(e, t) {
                                        const i = e.length;
                                        if (!i) return 0;
                                        let r, s, n, o, a = 0,
                                            c = 0,
                                            l = 0;
                                        if (this.interim[0]) {
                                            let r = !1,
                                                s = this.interim[0];
                                            s &= 192 == (224 & s) ? 31 : 224 == (240 & s) ? 15 : 7;
                                            let n, o = 0;
                                            for (;
                                                (n = 63 & this.interim[++o]) && o < 4;) s <<= 6, s |= n;
                                            const c = 192 == (224 & this.interim[0]) ? 2 : 224 == (240 & this.interim[0]) ? 3 : 4,
                                                h = c - o;
                                            for (; l < h;) {
                                                if (l >= i) return 0;
                                                if (n = e[l++], 128 != (192 & n)) {
                                                    l--, r = !0;
                                                    break
                                                }
                                                this.interim[o++] = n, s <<= 6, s |= 63 & n
                                            }
                                            r || (2 === c ? s < 128 ? l-- : t[a++] = s : 3 === c ? s < 2048 || s >= 55296 && s <= 57343 || 65279 === s || (t[a++] = s) : s < 65536 || s > 1114111 || (t[a++] = s)), this.interim.fill(0)
                                        }
                                        const h = i - 4;
                                        let u = l;
                                        for (; u < i;) {
                                            for (; !(!(u < h) || 128 & (r = e[u]) || 128 & (s = e[u + 1]) || 128 & (n = e[u + 2]) || 128 & (o = e[u + 3]));) t[a++] = r, t[a++] = s, t[a++] = n, t[a++] = o, u += 4;
                                            if (r = e[u++], r < 128) t[a++] = r;
                                            else if (192 == (224 & r)) {
                                                if (u >= i) return this.interim[0] = r, a;
                                                if (s = e[u++], 128 != (192 & s)) {
                                                    u--;
                                                    continue
                                                }
                                                if (c = (31 & r) << 6 | 63 & s, c < 128) {
                                                    u--;
                                                    continue
                                                }
                                                t[a++] = c
                                            } else if (224 == (240 & r)) {
                                                if (u >= i) return this.interim[0] = r, a;
                                                if (s = e[u++], 128 != (192 & s)) {
                                                    u--;
                                                    continue
                                                }
                                                if (u >= i) return this.interim[0] = r, this.interim[1] = s, a;
                                                if (n = e[u++], 128 != (192 & n)) {
                                                    u--;
                                                    continue
                                                }
                                                if (c = (15 & r) << 12 | (63 & s) << 6 | 63 & n, c < 2048 || c >= 55296 && c <= 57343 || 65279 === c) continue;
                                                t[a++] = c
                                            } else if (240 == (248 & r)) {
                                                if (u >= i) return this.interim[0] = r, a;
                                                if (s = e[u++], 128 != (192 & s)) {
                                                    u--;
                                                    continue
                                                }
                                                if (u >= i) return this.interim[0] = r, this.interim[1] = s, a;
                                                if (n = e[u++], 128 != (192 & n)) {
                                                    u--;
                                                    continue
                                                }
                                                if (u >= i) return this.interim[0] = r, this.interim[1] = s, this.interim[2] = n, a;
                                                if (o = e[u++], 128 != (192 & o)) {
                                                    u--;
                                                    continue
                                                }
                                                if (c = (7 & r) << 18 | (63 & s) << 12 | (63 & n) << 6 | 63 & o, c < 65536 || c > 1114111) continue;
                                                t[a++] = c
                                            }
                                        }
                                        return a
                                    }
                                }
                            },
                            776: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.traceCall = t.setTraceLogger = t.LogService = void 0;
                                const n = i(859),
                                    o = i(97),
                                    a = {
                                        trace: o.LogLevelEnum.TRACE,
                                        debug: o.LogLevelEnum.DEBUG,
                                        info: o.LogLevelEnum.INFO,
                                        warn: o.LogLevelEnum.WARN,
                                        error: o.LogLevelEnum.ERROR,
                                        off: o.LogLevelEnum.OFF
                                    };
                                let c, l = t.LogService = class extends n.Disposable {
                                    get logLevel() {
                                        return this._logLevel
                                    }
                                    constructor(e) {
                                        super(), this._optionsService = e, this._logLevel = o.LogLevelEnum.OFF, this._updateLogLevel(), this.register(this._optionsService.onSpecificOptionChange("logLevel", (() => this._updateLogLevel()))), c = this
                                    }
                                    _updateLogLevel() {
                                        this._logLevel = a[this._optionsService.rawOptions.logLevel]
                                    }
                                    _evalLazyOptionalParams(e) {
                                        for (let t = 0; t < e.length; t++) "function" == typeof e[t] && (e[t] = e[t]())
                                    }
                                    _log(e, t, i) {
                                        this._evalLazyOptionalParams(i), e.call(console, (this._optionsService.options.logger ? "" : "xterm.js: ") + t, ...i)
                                    }
                                    trace(e, ...t) {
                                        this._logLevel <= o.LogLevelEnum.TRACE && this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, e, t)
                                    }
                                    debug(e, ...t) {
                                        this._logLevel <= o.LogLevelEnum.DEBUG && this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, e, t)
                                    }
                                    info(e, ...t) {
                                        this._logLevel <= o.LogLevelEnum.INFO && this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, e, t)
                                    }
                                    warn(e, ...t) {
                                        this._logLevel <= o.LogLevelEnum.WARN && this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, e, t)
                                    }
                                    error(e, ...t) {
                                        this._logLevel <= o.LogLevelEnum.ERROR && this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, e, t)
                                    }
                                };
                                t.LogService = l = r([s(0, o.IOptionsService)], l), t.setTraceLogger = function(e) {
                                    c = e
                                }, t.traceCall = function(e, t, i) {
                                    if ("function" != typeof i.value) throw new Error("not supported");
                                    const r = i.value;
                                    i.value = function(...e) {
                                        if (c.logLevel !== o.LogLevelEnum.TRACE) return r.apply(this, e);
                                        c.trace(`GlyphRenderer#${r.name}(${e.map((e=>JSON.stringify(e))).join(", ")})`);
                                        const t = r.apply(this, e);
                                        return c.trace(`GlyphRenderer#${r.name} return`, t), t
                                    }
                                }
                            },
                            726: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.createDecorator = t.getServiceDependencies = t.serviceRegistry = void 0;
                                const i = "di$target",
                                    r = "di$dependencies";
                                t.serviceRegistry = new Map, t.getServiceDependencies = function(e) {
                                    return e[r] || []
                                }, t.createDecorator = function(e) {
                                    if (t.serviceRegistry.has(e)) return t.serviceRegistry.get(e);
                                    const s = function(e, t, n) {
                                        if (3 !== arguments.length) throw new Error("@IServiceName-decorator can only be used to decorate a parameter");
                                        ! function(e, t, s) {
                                            t[i] === t ? t[r].push({
                                                id: e,
                                                index: s
                                            }) : (t[r] = [{
                                                id: e,
                                                index: s
                                            }], t[i] = t)
                                        }(s, e, n)
                                    };
                                    return s.toString = () => e, t.serviceRegistry.set(e, s), s
                                }
                            },
                            97: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.IDecorationService = t.IUnicodeService = t.IOscLinkService = t.IOptionsService = t.ILogService = t.LogLevelEnum = t.IInstantiationService = t.ICharsetService = t.ICoreService = t.ICoreMouseService = t.IBufferService = void 0;
                                const r = i(726);
                                var s;
                                t.IBufferService = (0, r.createDecorator)("BufferService"), t.ICoreMouseService = (0, r.createDecorator)("CoreMouseService"), t.ICoreService = (0, r.createDecorator)("CoreService"), t.ICharsetService = (0, r.createDecorator)("CharsetService"), t.IInstantiationService = (0, r.createDecorator)("InstantiationService"),
                                    function(e) {
                                        e[e.TRACE = 0] = "TRACE", e[e.DEBUG = 1] = "DEBUG", e[e.INFO = 2] = "INFO", e[e.WARN = 3] = "WARN", e[e.ERROR = 4] = "ERROR", e[e.OFF = 5] = "OFF"
                                    }(s || (t.LogLevelEnum = s = {})), t.ILogService = (0, r.createDecorator)("LogService"), t.IOptionsService = (0, r.createDecorator)("OptionsService"), t.IOscLinkService = (0, r.createDecorator)("OscLinkService"), t.IUnicodeService = (0, r.createDecorator)("UnicodeService"), t.IDecorationService = (0, r.createDecorator)("DecorationService")
                            }
                        },
                        t = {};

                    function i(r) {
                        var s = t[r];
                        if (void 0 !== s) return s.exports;
                        var n = t[r] = {
                            exports: {}
                        };
                        return e[r].call(n.exports, n, n.exports, i), n.exports
                    }
                    var r = {};
                    return (() => {
                        var e = r;
                        Object.defineProperty(e, "__esModule", {
                            value: !0
                        }), e.WebglAddon = void 0;
                        const t = i(345),
                            s = i(859),
                            n = i(399),
                            o = i(666),
                            a = i(776);
                        class c extends s.Disposable {
                            constructor(e) {
                                if (n.isSafari && (0, n.getSafariVersion)() < 16) {
                                    const e = {
                                        antialias: !1,
                                        depth: !1,
                                        preserveDrawingBuffer: !0
                                    };
                                    if (!document.createElement("canvas").getContext("webgl2", e)) throw new Error("Webgl2 is only supported on Safari 16 and above")
                                }
                                super(), this._preserveDrawingBuffer = e, this._onChangeTextureAtlas = this.register(new t.EventEmitter), this.onChangeTextureAtlas = this._onChangeTextureAtlas.event, this._onAddTextureAtlasCanvas = this.register(new t.EventEmitter), this.onAddTextureAtlasCanvas = this._onAddTextureAtlasCanvas.event, this._onRemoveTextureAtlasCanvas = this.register(new t.EventEmitter), this.onRemoveTextureAtlasCanvas = this._onRemoveTextureAtlasCanvas.event, this._onContextLoss = this.register(new t.EventEmitter), this.onContextLoss = this._onContextLoss.event
                            }
                            activate(e) {
                                const i = e._core;
                                if (!e.element) return void this.register(i.onWillOpen((() => this.activate(e))));
                                this._terminal = e;
                                const r = i.coreService,
                                    n = i.optionsService,
                                    c = i,
                                    l = c._renderService,
                                    h = c._characterJoinerService,
                                    u = c._charSizeService,
                                    d = c._coreBrowserService,
                                    f = c._decorationService,
                                    p = c._logService,
                                    _ = c._themeService;
                                (0, a.setTraceLogger)(p), this._renderer = this.register(new o.WebglRenderer(e, h, u, d, r, f, n, _, this._preserveDrawingBuffer)), this.register((0, t.forwardEvent)(this._renderer.onContextLoss, this._onContextLoss)), this.register((0, t.forwardEvent)(this._renderer.onChangeTextureAtlas, this._onChangeTextureAtlas)), this.register((0, t.forwardEvent)(this._renderer.onAddTextureAtlasCanvas, this._onAddTextureAtlasCanvas)), this.register((0, t.forwardEvent)(this._renderer.onRemoveTextureAtlasCanvas, this._onRemoveTextureAtlasCanvas)), l.setRenderer(this._renderer), this.register((0, s.toDisposable)((() => {
                                    const t = this._terminal._core._renderService;
                                    t.setRenderer(this._terminal._core._createRenderer()), t.handleResize(e.cols, e.rows)
                                })))
                            }
                            get textureAtlas() {
                                return this._renderer?.textureAtlas
                            }
                            clearTextureAtlas() {
                                this._renderer?.clearTextureAtlas()
                            }
                        }
                        e.WebglAddon = c
                    })(), r
                })(), e.exports = t()
            },
            4244: e => {
                var t;
                globalThis, t = () => (() => {
                    "use strict";
                    var e = {
                            4567: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.AccessibilityManager = void 0;
                                const n = i(9042),
                                    o = i(9924),
                                    a = i(844),
                                    c = i(4725),
                                    l = i(2585),
                                    h = i(3656);
                                let u = t.AccessibilityManager = class extends a.Disposable {
                                    constructor(e, t, i, r) {
                                        super(), this._terminal = e, this._coreBrowserService = i, this._renderService = r, this._rowColumns = new WeakMap, this._liveRegionLineCount = 0, this._charsToConsume = [], this._charsToAnnounce = "", this._accessibilityContainer = this._coreBrowserService.mainDocument.createElement("div"), this._accessibilityContainer.classList.add("xterm-accessibility"), this._rowContainer = this._coreBrowserService.mainDocument.createElement("div"), this._rowContainer.setAttribute("role", "list"), this._rowContainer.classList.add("xterm-accessibility-tree"), this._rowElements = [];
                                        for (let e = 0; e < this._terminal.rows; e++) this._rowElements[e] = this._createAccessibilityTreeNode(), this._rowContainer.appendChild(this._rowElements[e]);
                                        if (this._topBoundaryFocusListener = e => this._handleBoundaryFocus(e, 0), this._bottomBoundaryFocusListener = e => this._handleBoundaryFocus(e, 1), this._rowElements[0].addEventListener("focus", this._topBoundaryFocusListener), this._rowElements[this._rowElements.length - 1].addEventListener("focus", this._bottomBoundaryFocusListener), this._refreshRowsDimensions(), this._accessibilityContainer.appendChild(this._rowContainer), this._liveRegion = this._coreBrowserService.mainDocument.createElement("div"), this._liveRegion.classList.add("live-region"), this._liveRegion.setAttribute("aria-live", "assertive"), this._accessibilityContainer.appendChild(this._liveRegion), this._liveRegionDebouncer = this.register(new o.TimeBasedDebouncer(this._renderRows.bind(this))), !this._terminal.element) throw new Error("Cannot enable accessibility before Terminal.open");
                                        this._terminal.element.insertAdjacentElement("afterbegin", this._accessibilityContainer), this.register(this._terminal.onResize((e => this._handleResize(e.rows)))), this.register(this._terminal.onRender((e => this._refreshRows(e.start, e.end)))), this.register(this._terminal.onScroll((() => this._refreshRows()))), this.register(this._terminal.onA11yChar((e => this._handleChar(e)))), this.register(this._terminal.onLineFeed((() => this._handleChar("\n")))), this.register(this._terminal.onA11yTab((e => this._handleTab(e)))), this.register(this._terminal.onKey((e => this._handleKey(e.key)))), this.register(this._terminal.onBlur((() => this._clearLiveRegion()))), this.register(this._renderService.onDimensionsChange((() => this._refreshRowsDimensions()))), this.register((0, h.addDisposableDomListener)(document, "selectionchange", (() => this._handleSelectionChange()))), this.register(this._coreBrowserService.onDprChange((() => this._refreshRowsDimensions()))), this._refreshRows(), this.register((0, a.toDisposable)((() => {
                                            this._accessibilityContainer.remove(), this._rowElements.length = 0
                                        })))
                                    }
                                    _handleTab(e) {
                                        for (let t = 0; t < e; t++) this._handleChar(" ")
                                    }
                                    _handleChar(e) {
                                        this._liveRegionLineCount < 21 && (this._charsToConsume.length > 0 ? this._charsToConsume.shift() !== e && (this._charsToAnnounce += e) : this._charsToAnnounce += e, "\n" === e && (this._liveRegionLineCount++, 21 === this._liveRegionLineCount && (this._liveRegion.textContent += n.tooMuchOutput)))
                                    }
                                    _clearLiveRegion() {
                                        this._liveRegion.textContent = "", this._liveRegionLineCount = 0
                                    }
                                    _handleKey(e) {
                                        this._clearLiveRegion(), /\p{Control}/u.test(e) || this._charsToConsume.push(e)
                                    }
                                    _refreshRows(e, t) {
                                        this._liveRegionDebouncer.refresh(e, t, this._terminal.rows)
                                    }
                                    _renderRows(e, t) {
                                        const i = this._terminal.buffer,
                                            r = i.lines.length.toString();
                                        for (let s = e; s <= t; s++) {
                                            const e = [],
                                                t = i.lines.get(i.ydisp + s)?.translateToString(!0, void 0, void 0, e) || "",
                                                n = (i.ydisp + s + 1).toString(),
                                                o = this._rowElements[s];
                                            o && (0 === t.length ? (o.innerText = " ", this._rowColumns.set(o, [0, 1])) : (o.textContent = t, this._rowColumns.set(o, e)), o.setAttribute("aria-posinset", n), o.setAttribute("aria-setsize", r))
                                        }
                                        this._announceCharacters()
                                    }
                                    _announceCharacters() {
                                        0 !== this._charsToAnnounce.length && (this._liveRegion.textContent += this._charsToAnnounce, this._charsToAnnounce = "")
                                    }
                                    _handleBoundaryFocus(e, t) {
                                        const i = e.target,
                                            r = this._rowElements[0 === t ? 1 : this._rowElements.length - 2];
                                        if (i.getAttribute("aria-posinset") === (0 === t ? "1" : `${this._terminal.buffer.lines.length}`)) return;
                                        if (e.relatedTarget !== r) return;
                                        let s, n;
                                        if (0 === t ? (s = i, n = this._rowElements.pop(), this._rowContainer.removeChild(n)) : (s = this._rowElements.shift(), n = i, this._rowContainer.removeChild(s)), s.removeEventListener("focus", this._topBoundaryFocusListener), n.removeEventListener("focus", this._bottomBoundaryFocusListener), 0 === t) {
                                            const e = this._createAccessibilityTreeNode();
                                            this._rowElements.unshift(e), this._rowContainer.insertAdjacentElement("afterbegin", e)
                                        } else {
                                            const e = this._createAccessibilityTreeNode();
                                            this._rowElements.push(e), this._rowContainer.appendChild(e)
                                        }
                                        this._rowElements[0].addEventListener("focus", this._topBoundaryFocusListener), this._rowElements[this._rowElements.length - 1].addEventListener("focus", this._bottomBoundaryFocusListener), this._terminal.scrollLines(0 === t ? -1 : 1), this._rowElements[0 === t ? 1 : this._rowElements.length - 2].focus(), e.preventDefault(), e.stopImmediatePropagation()
                                    }
                                    _handleSelectionChange() {
                                        if (0 === this._rowElements.length) return;
                                        const e = document.getSelection();
                                        if (!e) return;
                                        if (e.isCollapsed) return void(this._rowContainer.contains(e.anchorNode) && this._terminal.clearSelection());
                                        if (!e.anchorNode || !e.focusNode) return void console.error("anchorNode and/or focusNode are null");
                                        let t = {
                                                node: e.anchorNode,
                                                offset: e.anchorOffset
                                            },
                                            i = {
                                                node: e.focusNode,
                                                offset: e.focusOffset
                                            };
                                        if ((t.node.compareDocumentPosition(i.node) & Node.DOCUMENT_POSITION_PRECEDING || t.node === i.node && t.offset > i.offset) && ([t, i] = [i, t]), t.node.compareDocumentPosition(this._rowElements[0]) & (Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_FOLLOWING) && (t = {
                                                node: this._rowElements[0].childNodes[0],
                                                offset: 0
                                            }), !this._rowContainer.contains(t.node)) return;
                                        const r = this._rowElements.slice(-1)[0];
                                        if (i.node.compareDocumentPosition(r) & (Node.DOCUMENT_POSITION_CONTAINED_BY | Node.DOCUMENT_POSITION_PRECEDING) && (i = {
                                                node: r,
                                                offset: r.textContent?.length ?? 0
                                            }), !this._rowContainer.contains(i.node)) return;
                                        const s = ({
                                                node: e,
                                                offset: t
                                            }) => {
                                                const i = e instanceof Text ? e.parentNode : e;
                                                let r = parseInt(i?.getAttribute("aria-posinset"), 10) - 1;
                                                if (isNaN(r)) return console.warn("row is invalid. Race condition?"), null;
                                                const s = this._rowColumns.get(i);
                                                if (!s) return console.warn("columns is null. Race condition?"), null;
                                                let n = t < s.length ? s[t] : s.slice(-1)[0] + 1;
                                                return n >= this._terminal.cols && (++r, n = 0), {
                                                    row: r,
                                                    column: n
                                                }
                                            },
                                            n = s(t),
                                            o = s(i);
                                        if (n && o) {
                                            if (n.row > o.row || n.row === o.row && n.column >= o.column) throw new Error("invalid range");
                                            this._terminal.select(n.column, n.row, (o.row - n.row) * this._terminal.cols - n.column + o.column)
                                        }
                                    }
                                    _handleResize(e) {
                                        this._rowElements[this._rowElements.length - 1].removeEventListener("focus", this._bottomBoundaryFocusListener);
                                        for (let e = this._rowContainer.children.length; e < this._terminal.rows; e++) this._rowElements[e] = this._createAccessibilityTreeNode(), this._rowContainer.appendChild(this._rowElements[e]);
                                        for (; this._rowElements.length > e;) this._rowContainer.removeChild(this._rowElements.pop());
                                        this._rowElements[this._rowElements.length - 1].addEventListener("focus", this._bottomBoundaryFocusListener), this._refreshRowsDimensions()
                                    }
                                    _createAccessibilityTreeNode() {
                                        const e = this._coreBrowserService.mainDocument.createElement("div");
                                        return e.setAttribute("role", "listitem"), e.tabIndex = -1, this._refreshRowDimensions(e), e
                                    }
                                    _refreshRowsDimensions() {
                                        if (this._renderService.dimensions.css.cell.height) {
                                            this._accessibilityContainer.style.width = `${this._renderService.dimensions.css.canvas.width}px`, this._rowElements.length !== this._terminal.rows && this._handleResize(this._terminal.rows);
                                            for (let e = 0; e < this._terminal.rows; e++) this._refreshRowDimensions(this._rowElements[e])
                                        }
                                    }
                                    _refreshRowDimensions(e) {
                                        e.style.height = `${this._renderService.dimensions.css.cell.height}px`
                                    }
                                };
                                t.AccessibilityManager = u = r([s(1, l.IInstantiationService), s(2, c.ICoreBrowserService), s(3, c.IRenderService)], u)
                            },
                            3614: (e, t) => {
                                function i(e) {
                                    return e.replace(/\r?\n/g, "\r")
                                }

                                function r(e, t) {
                                    return t ? "[200~" + e + "[201~" : e
                                }

                                function s(e, t, s, n) {
                                    e = r(e = i(e), s.decPrivateModes.bracketedPasteMode && !0 !== n.rawOptions.ignoreBracketedPasteMode), s.triggerDataEvent(e, !0), t.value = ""
                                }

                                function n(e, t, i) {
                                    const r = i.getBoundingClientRect(),
                                        s = e.clientX - r.left - 10,
                                        n = e.clientY - r.top - 10;
                                    t.style.width = "20px", t.style.height = "20px", t.style.left = `${s}px`, t.style.top = `${n}px`, t.style.zIndex = "1000", t.focus()
                                }
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.rightClickHandler = t.moveTextAreaUnderMouseCursor = t.paste = t.handlePasteEvent = t.copyHandler = t.bracketTextForPaste = t.prepareTextForTerminal = void 0, t.prepareTextForTerminal = i, t.bracketTextForPaste = r, t.copyHandler = function(e, t) {
                                    e.clipboardData && e.clipboardData.setData("text/plain", t.selectionText), e.preventDefault()
                                }, t.handlePasteEvent = function(e, t, i, r) {
                                    e.stopPropagation(), e.clipboardData && s(e.clipboardData.getData("text/plain"), t, i, r)
                                }, t.paste = s, t.moveTextAreaUnderMouseCursor = n, t.rightClickHandler = function(e, t, i, r, s) {
                                    n(e, t, i), s && r.rightClickSelect(e), t.value = r.selectionText, t.select()
                                }
                            },
                            7239: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.ColorContrastCache = void 0;
                                const r = i(1505);
                                t.ColorContrastCache = class {
                                    constructor() {
                                        this._color = new r.TwoKeyMap, this._css = new r.TwoKeyMap
                                    }
                                    setCss(e, t, i) {
                                        this._css.set(e, t, i)
                                    }
                                    getCss(e, t) {
                                        return this._css.get(e, t)
                                    }
                                    setColor(e, t, i) {
                                        this._color.set(e, t, i)
                                    }
                                    getColor(e, t) {
                                        return this._color.get(e, t)
                                    }
                                    clear() {
                                        this._color.clear(), this._css.clear()
                                    }
                                }
                            },
                            3656: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.addDisposableDomListener = void 0, t.addDisposableDomListener = function(e, t, i, r) {
                                    e.addEventListener(t, i, r);
                                    let s = !1;
                                    return {
                                        dispose: () => {
                                            s || (s = !0, e.removeEventListener(t, i, r))
                                        }
                                    }
                                }
                            },
                            3551: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.Linkifier = void 0;
                                const n = i(3656),
                                    o = i(8460),
                                    a = i(844),
                                    c = i(2585),
                                    l = i(4725);
                                let h = t.Linkifier = class extends a.Disposable {
                                    get currentLink() {
                                        return this._currentLink
                                    }
                                    constructor(e, t, i, r, s) {
                                        super(), this._element = e, this._mouseService = t, this._renderService = i, this._bufferService = r, this._linkProviderService = s, this._linkCacheDisposables = [], this._isMouseOut = !0, this._wasResized = !1, this._activeLine = -1, this._onShowLinkUnderline = this.register(new o.EventEmitter), this.onShowLinkUnderline = this._onShowLinkUnderline.event, this._onHideLinkUnderline = this.register(new o.EventEmitter), this.onHideLinkUnderline = this._onHideLinkUnderline.event, this.register((0, a.getDisposeArrayDisposable)(this._linkCacheDisposables)), this.register((0, a.toDisposable)((() => {
                                            this._lastMouseEvent = void 0, this._activeProviderReplies?.clear()
                                        }))), this.register(this._bufferService.onResize((() => {
                                            this._clearCurrentLink(), this._wasResized = !0
                                        }))), this.register((0, n.addDisposableDomListener)(this._element, "mouseleave", (() => {
                                            this._isMouseOut = !0, this._clearCurrentLink()
                                        }))), this.register((0, n.addDisposableDomListener)(this._element, "mousemove", this._handleMouseMove.bind(this))), this.register((0, n.addDisposableDomListener)(this._element, "mousedown", this._handleMouseDown.bind(this))), this.register((0, n.addDisposableDomListener)(this._element, "mouseup", this._handleMouseUp.bind(this)))
                                    }
                                    _handleMouseMove(e) {
                                        this._lastMouseEvent = e;
                                        const t = this._positionFromMouseEvent(e, this._element, this._mouseService);
                                        if (!t) return;
                                        this._isMouseOut = !1;
                                        const i = e.composedPath();
                                        for (let e = 0; e < i.length; e++) {
                                            const t = i[e];
                                            if (t.classList.contains("xterm")) break;
                                            if (t.classList.contains("xterm-hover")) return
                                        }
                                        this._lastBufferCell && t.x === this._lastBufferCell.x && t.y === this._lastBufferCell.y || (this._handleHover(t), this._lastBufferCell = t)
                                    }
                                    _handleHover(e) {
                                        if (this._activeLine !== e.y || this._wasResized) return this._clearCurrentLink(), this._askForLink(e, !1), void(this._wasResized = !1);
                                        this._currentLink && this._linkAtPosition(this._currentLink.link, e) || (this._clearCurrentLink(), this._askForLink(e, !0))
                                    }
                                    _askForLink(e, t) {
                                        this._activeProviderReplies && t || (this._activeProviderReplies?.forEach((e => {
                                            e?.forEach((e => {
                                                e.link.dispose && e.link.dispose()
                                            }))
                                        })), this._activeProviderReplies = new Map, this._activeLine = e.y);
                                        let i = !1;
                                        for (const [r, s] of this._linkProviderService.linkProviders.entries())
                                            if (t) {
                                                const t = this._activeProviderReplies?.get(r);
                                                t && (i = this._checkLinkProviderResult(r, e, i))
                                            } else s.provideLinks(e.y, (t => {
                                                if (this._isMouseOut) return;
                                                const s = t?.map((e => ({
                                                    link: e
                                                })));
                                                this._activeProviderReplies?.set(r, s), i = this._checkLinkProviderResult(r, e, i), this._activeProviderReplies?.size === this._linkProviderService.linkProviders.length && this._removeIntersectingLinks(e.y, this._activeProviderReplies)
                                            }))
                                    }
                                    _removeIntersectingLinks(e, t) {
                                        const i = new Set;
                                        for (let r = 0; r < t.size; r++) {
                                            const s = t.get(r);
                                            if (s)
                                                for (let t = 0; t < s.length; t++) {
                                                    const r = s[t],
                                                        n = r.link.range.start.y < e ? 0 : r.link.range.start.x,
                                                        o = r.link.range.end.y > e ? this._bufferService.cols : r.link.range.end.x;
                                                    for (let e = n; e <= o; e++) {
                                                        if (i.has(e)) {
                                                            s.splice(t--, 1);
                                                            break
                                                        }
                                                        i.add(e)
                                                    }
                                                }
                                        }
                                    }
                                    _checkLinkProviderResult(e, t, i) {
                                        if (!this._activeProviderReplies) return i;
                                        const r = this._activeProviderReplies.get(e);
                                        let s = !1;
                                        for (let t = 0; t < e; t++) this._activeProviderReplies.has(t) && !this._activeProviderReplies.get(t) || (s = !0);
                                        if (!s && r) {
                                            const e = r.find((e => this._linkAtPosition(e.link, t)));
                                            e && (i = !0, this._handleNewLink(e))
                                        }
                                        if (this._activeProviderReplies.size === this._linkProviderService.linkProviders.length && !i)
                                            for (let e = 0; e < this._activeProviderReplies.size; e++) {
                                                const r = this._activeProviderReplies.get(e)?.find((e => this._linkAtPosition(e.link, t)));
                                                if (r) {
                                                    i = !0, this._handleNewLink(r);
                                                    break
                                                }
                                            }
                                        return i
                                    }
                                    _handleMouseDown() {
                                        this._mouseDownLink = this._currentLink
                                    }
                                    _handleMouseUp(e) {
                                        if (!this._currentLink) return;
                                        const t = this._positionFromMouseEvent(e, this._element, this._mouseService);
                                        t && this._mouseDownLink === this._currentLink && this._linkAtPosition(this._currentLink.link, t) && this._currentLink.link.activate(e, this._currentLink.link.text)
                                    }
                                    _clearCurrentLink(e, t) {
                                        this._currentLink && this._lastMouseEvent && (!e || !t || this._currentLink.link.range.start.y >= e && this._currentLink.link.range.end.y <= t) && (this._linkLeave(this._element, this._currentLink.link, this._lastMouseEvent), this._currentLink = void 0, (0, a.disposeArray)(this._linkCacheDisposables))
                                    }
                                    _handleNewLink(e) {
                                        if (!this._lastMouseEvent) return;
                                        const t = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);
                                        t && this._linkAtPosition(e.link, t) && (this._currentLink = e, this._currentLink.state = {
                                            decorations: {
                                                underline: void 0 === e.link.decorations || e.link.decorations.underline,
                                                pointerCursor: void 0 === e.link.decorations || e.link.decorations.pointerCursor
                                            },
                                            isHovered: !0
                                        }, this._linkHover(this._element, e.link, this._lastMouseEvent), e.link.decorations = {}, Object.defineProperties(e.link.decorations, {
                                            pointerCursor: {
                                                get: () => this._currentLink?.state?.decorations.pointerCursor,
                                                set: e => {
                                                    this._currentLink?.state && this._currentLink.state.decorations.pointerCursor !== e && (this._currentLink.state.decorations.pointerCursor = e, this._currentLink.state.isHovered && this._element.classList.toggle("xterm-cursor-pointer", e))
                                                }
                                            },
                                            underline: {
                                                get: () => this._currentLink?.state?.decorations.underline,
                                                set: t => {
                                                    this._currentLink?.state && this._currentLink?.state?.decorations.underline !== t && (this._currentLink.state.decorations.underline = t, this._currentLink.state.isHovered && this._fireUnderlineEvent(e.link, t))
                                                }
                                            }
                                        }), this._linkCacheDisposables.push(this._renderService.onRenderedViewportChange((e => {
                                            if (!this._currentLink) return;
                                            const t = 0 === e.start ? 0 : e.start + 1 + this._bufferService.buffer.ydisp,
                                                i = this._bufferService.buffer.ydisp + 1 + e.end;
                                            if (this._currentLink.link.range.start.y >= t && this._currentLink.link.range.end.y <= i && (this._clearCurrentLink(t, i), this._lastMouseEvent)) {
                                                const e = this._positionFromMouseEvent(this._lastMouseEvent, this._element, this._mouseService);
                                                e && this._askForLink(e, !1)
                                            }
                                        }))))
                                    }
                                    _linkHover(e, t, i) {
                                        this._currentLink?.state && (this._currentLink.state.isHovered = !0, this._currentLink.state.decorations.underline && this._fireUnderlineEvent(t, !0), this._currentLink.state.decorations.pointerCursor && e.classList.add("xterm-cursor-pointer")), t.hover && t.hover(i, t.text)
                                    }
                                    _fireUnderlineEvent(e, t) {
                                        const i = e.range,
                                            r = this._bufferService.buffer.ydisp,
                                            s = this._createLinkUnderlineEvent(i.start.x - 1, i.start.y - r - 1, i.end.x, i.end.y - r - 1, void 0);
                                        (t ? this._onShowLinkUnderline : this._onHideLinkUnderline).fire(s)
                                    }
                                    _linkLeave(e, t, i) {
                                        this._currentLink?.state && (this._currentLink.state.isHovered = !1, this._currentLink.state.decorations.underline && this._fireUnderlineEvent(t, !1), this._currentLink.state.decorations.pointerCursor && e.classList.remove("xterm-cursor-pointer")), t.leave && t.leave(i, t.text)
                                    }
                                    _linkAtPosition(e, t) {
                                        const i = e.range.start.y * this._bufferService.cols + e.range.start.x,
                                            r = e.range.end.y * this._bufferService.cols + e.range.end.x,
                                            s = t.y * this._bufferService.cols + t.x;
                                        return i <= s && s <= r
                                    }
                                    _positionFromMouseEvent(e, t, i) {
                                        const r = i.getCoords(e, t, this._bufferService.cols, this._bufferService.rows);
                                        if (r) return {
                                            x: r[0],
                                            y: r[1] + this._bufferService.buffer.ydisp
                                        }
                                    }
                                    _createLinkUnderlineEvent(e, t, i, r, s) {
                                        return {
                                            x1: e,
                                            y1: t,
                                            x2: i,
                                            y2: r,
                                            cols: this._bufferService.cols,
                                            fg: s
                                        }
                                    }
                                };
                                t.Linkifier = h = r([s(1, l.IMouseService), s(2, l.IRenderService), s(3, c.IBufferService), s(4, l.ILinkProviderService)], h)
                            },
                            9042: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.tooMuchOutput = t.promptLabel = void 0, t.promptLabel = "Terminal input", t.tooMuchOutput = "Too much output to announce, navigate to rows manually to read"
                            },
                            3730: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.OscLinkProvider = void 0;
                                const n = i(511),
                                    o = i(2585);
                                let a = t.OscLinkProvider = class {
                                    constructor(e, t, i) {
                                        this._bufferService = e, this._optionsService = t, this._oscLinkService = i
                                    }
                                    provideLinks(e, t) {
                                        const i = this._bufferService.buffer.lines.get(e - 1);
                                        if (!i) return void t(void 0);
                                        const r = [],
                                            s = this._optionsService.rawOptions.linkHandler,
                                            o = new n.CellData,
                                            a = i.getTrimmedLength();
                                        let l = -1,
                                            h = -1,
                                            u = !1;
                                        for (let t = 0; t < a; t++)
                                            if (-1 !== h || i.hasContent(t)) {
                                                if (i.loadCell(t, o), o.hasExtendedAttrs() && o.extended.urlId) {
                                                    if (-1 === h) {
                                                        h = t, l = o.extended.urlId;
                                                        continue
                                                    }
                                                    u = o.extended.urlId !== l
                                                } else - 1 !== h && (u = !0);
                                                if (u || -1 !== h && t === a - 1) {
                                                    const i = this._oscLinkService.getLinkData(l)?.uri;
                                                    if (i) {
                                                        const n = {
                                                            start: {
                                                                x: h + 1,
                                                                y: e
                                                            },
                                                            end: {
                                                                x: t + (u || t !== a - 1 ? 0 : 1),
                                                                y: e
                                                            }
                                                        };
                                                        let o = !1;
                                                        if (!s?.allowNonHttpProtocols) try {
                                                            const e = new URL(i);
                                                            ["http:", "https:"].includes(e.protocol) || (o = !0)
                                                        } catch (e) {
                                                            o = !0
                                                        }
                                                        o || r.push({
                                                            text: i,
                                                            range: n,
                                                            activate: (e, t) => s ? s.activate(e, t, n) : c(0, t),
                                                            hover: (e, t) => s?.hover?.(e, t, n),
                                                            leave: (e, t) => s?.leave?.(e, t, n)
                                                        })
                                                    }
                                                    u = !1, o.hasExtendedAttrs() && o.extended.urlId ? (h = t, l = o.extended.urlId) : (h = -1, l = -1)
                                                }
                                            } t(r)
                                    }
                                };

                                function c(e, t) {
                                    if (confirm(`Do you want to navigate to ${t}?\n\nWARNING: This link could potentially be dangerous`)) {
                                        const e = window.open();
                                        if (e) {
                                            try {
                                                e.opener = null
                                            } catch {}
                                            e.location.href = t
                                        } else console.warn("Opening link blocked as opener could not be cleared")
                                    }
                                }
                                t.OscLinkProvider = a = r([s(0, o.IBufferService), s(1, o.IOptionsService), s(2, o.IOscLinkService)], a)
                            },
                            6193: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.RenderDebouncer = void 0, t.RenderDebouncer = class {
                                    constructor(e, t) {
                                        this._renderCallback = e, this._coreBrowserService = t, this._refreshCallbacks = []
                                    }
                                    dispose() {
                                        this._animationFrame && (this._coreBrowserService.window.cancelAnimationFrame(this._animationFrame), this._animationFrame = void 0)
                                    }
                                    addRefreshCallback(e) {
                                        return this._refreshCallbacks.push(e), this._animationFrame || (this._animationFrame = this._coreBrowserService.window.requestAnimationFrame((() => this._innerRefresh()))), this._animationFrame
                                    }
                                    refresh(e, t, i) {
                                        this._rowCount = i, e = void 0 !== e ? e : 0, t = void 0 !== t ? t : this._rowCount - 1, this._rowStart = void 0 !== this._rowStart ? Math.min(this._rowStart, e) : e, this._rowEnd = void 0 !== this._rowEnd ? Math.max(this._rowEnd, t) : t, this._animationFrame || (this._animationFrame = this._coreBrowserService.window.requestAnimationFrame((() => this._innerRefresh())))
                                    }
                                    _innerRefresh() {
                                        if (this._animationFrame = void 0, void 0 === this._rowStart || void 0 === this._rowEnd || void 0 === this._rowCount) return void this._runRefreshCallbacks();
                                        const e = Math.max(this._rowStart, 0),
                                            t = Math.min(this._rowEnd, this._rowCount - 1);
                                        this._rowStart = void 0, this._rowEnd = void 0, this._renderCallback(e, t), this._runRefreshCallbacks()
                                    }
                                    _runRefreshCallbacks() {
                                        for (const e of this._refreshCallbacks) e(0);
                                        this._refreshCallbacks = []
                                    }
                                }
                            },
                            3236: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.Terminal = void 0;
                                const r = i(3614),
                                    s = i(3656),
                                    n = i(3551),
                                    o = i(9042),
                                    a = i(3730),
                                    c = i(1680),
                                    l = i(3107),
                                    h = i(5744),
                                    u = i(2950),
                                    d = i(1296),
                                    f = i(428),
                                    p = i(4269),
                                    _ = i(5114),
                                    g = i(8934),
                                    v = i(3230),
                                    m = i(9312),
                                    b = i(4725),
                                    w = i(6731),
                                    y = i(8055),
                                    S = i(8969),
                                    C = i(8460),
                                    x = i(844),
                                    E = i(6114),
                                    O = i(8437),
                                    k = i(2584),
                                    L = i(7399),
                                    D = i(5941),
                                    M = i(9074),
                                    A = i(2585),
                                    R = i(5435),
                                    P = i(4567),
                                    T = i(779);
                                class B extends S.CoreTerminal {
                                    get onFocus() {
                                        return this._onFocus.event
                                    }
                                    get onBlur() {
                                        return this._onBlur.event
                                    }
                                    get onA11yChar() {
                                        return this._onA11yCharEmitter.event
                                    }
                                    get onA11yTab() {
                                        return this._onA11yTabEmitter.event
                                    }
                                    get onWillOpen() {
                                        return this._onWillOpen.event
                                    }
                                    constructor(e = {}) {
                                        super(e), this.browser = E, this._keyDownHandled = !1, this._keyDownSeen = !1, this._keyPressHandled = !1, this._unprocessedDeadKey = !1, this._accessibilityManager = this.register(new x.MutableDisposable), this._onCursorMove = this.register(new C.EventEmitter), this.onCursorMove = this._onCursorMove.event, this._onKey = this.register(new C.EventEmitter), this.onKey = this._onKey.event, this._onRender = this.register(new C.EventEmitter), this.onRender = this._onRender.event, this._onSelectionChange = this.register(new C.EventEmitter), this.onSelectionChange = this._onSelectionChange.event, this._onTitleChange = this.register(new C.EventEmitter), this.onTitleChange = this._onTitleChange.event, this._onBell = this.register(new C.EventEmitter), this.onBell = this._onBell.event, this._onFocus = this.register(new C.EventEmitter), this._onBlur = this.register(new C.EventEmitter), this._onA11yCharEmitter = this.register(new C.EventEmitter), this._onA11yTabEmitter = this.register(new C.EventEmitter), this._onWillOpen = this.register(new C.EventEmitter), this._setup(), this._decorationService = this._instantiationService.createInstance(M.DecorationService), this._instantiationService.setService(A.IDecorationService, this._decorationService), this._linkProviderService = this._instantiationService.createInstance(T.LinkProviderService), this._instantiationService.setService(b.ILinkProviderService, this._linkProviderService), this._linkProviderService.registerLinkProvider(this._instantiationService.createInstance(a.OscLinkProvider)), this.register(this._inputHandler.onRequestBell((() => this._onBell.fire()))), this.register(this._inputHandler.onRequestRefreshRows(((e, t) => this.refresh(e, t)))), this.register(this._inputHandler.onRequestSendFocus((() => this._reportFocus()))), this.register(this._inputHandler.onRequestReset((() => this.reset()))), this.register(this._inputHandler.onRequestWindowsOptionsReport((e => this._reportWindowsOptions(e)))), this.register(this._inputHandler.onColor((e => this._handleColorEvent(e)))), this.register((0, C.forwardEvent)(this._inputHandler.onCursorMove, this._onCursorMove)), this.register((0, C.forwardEvent)(this._inputHandler.onTitleChange, this._onTitleChange)), this.register((0, C.forwardEvent)(this._inputHandler.onA11yChar, this._onA11yCharEmitter)), this.register((0, C.forwardEvent)(this._inputHandler.onA11yTab, this._onA11yTabEmitter)), this.register(this._bufferService.onResize((e => this._afterResize(e.cols, e.rows)))), this.register((0, x.toDisposable)((() => {
                                            this._customKeyEventHandler = void 0, this.element?.parentNode?.removeChild(this.element)
                                        })))
                                    }
                                    _handleColorEvent(e) {
                                        if (this._themeService)
                                            for (const t of e) {
                                                let e, i = "";
                                                switch (t.index) {
                                                    case 256:
                                                        e = "foreground", i = "10";
                                                        break;
                                                    case 257:
                                                        e = "background", i = "11";
                                                        break;
                                                    case 258:
                                                        e = "cursor", i = "12";
                                                        break;
                                                    default:
                                                        e = "ansi", i = "4;" + t.index
                                                }
                                                switch (t.type) {
                                                    case 0:
                                                        const r = y.color.toColorRGB("ansi" === e ? this._themeService.colors.ansi[t.index] : this._themeService.colors[e]);
                                                        this.coreService.triggerDataEvent(`${k.C0.ESC}]${i};${(0,D.toRgbString)(r)}${k.C1_ESCAPED.ST}`);
                                                        break;
                                                    case 1:
                                                        if ("ansi" === e) this._themeService.modifyColors((e => e.ansi[t.index] = y.channels.toColor(...t.color)));
                                                        else {
                                                            const i = e;
                                                            this._themeService.modifyColors((e => e[i] = y.channels.toColor(...t.color)))
                                                        }
                                                        break;
                                                    case 2:
                                                        this._themeService.restoreColor(t.index)
                                                }
                                            }
                                    }
                                    _setup() {
                                        super._setup(), this._customKeyEventHandler = void 0
                                    }
                                    get buffer() {
                                        return this.buffers.active
                                    }
                                    focus() {
                                        this.textarea && this.textarea.focus({
                                            preventScroll: !0
                                        })
                                    }
                                    _handleScreenReaderModeOptionChange(e) {
                                        e ? !this._accessibilityManager.value && this._renderService && (this._accessibilityManager.value = this._instantiationService.createInstance(P.AccessibilityManager, this)) : this._accessibilityManager.clear()
                                    }
                                    _handleTextAreaFocus(e) {
                                        this.coreService.decPrivateModes.sendFocus && this.coreService.triggerDataEvent(k.C0.ESC + "[I"), this.element.classList.add("focus"), this._showCursor(), this._onFocus.fire()
                                    }
                                    blur() {
                                        return this.textarea?.blur()
                                    }
                                    _handleTextAreaBlur() {
                                        this.textarea.value = "", this.refresh(this.buffer.y, this.buffer.y), this.coreService.decPrivateModes.sendFocus && this.coreService.triggerDataEvent(k.C0.ESC + "[O"), this.element.classList.remove("focus"), this._onBlur.fire()
                                    }
                                    _syncTextArea() {
                                        if (!this.textarea || !this.buffer.isCursorInViewport || this._compositionHelper.isComposing || !this._renderService) return;
                                        const e = this.buffer.ybase + this.buffer.y,
                                            t = this.buffer.lines.get(e);
                                        if (!t) return;
                                        const i = Math.min(this.buffer.x, this.cols - 1),
                                            r = this._renderService.dimensions.css.cell.height,
                                            s = t.getWidth(i),
                                            n = this._renderService.dimensions.css.cell.width * s,
                                            o = this.buffer.y * this._renderService.dimensions.css.cell.height,
                                            a = i * this._renderService.dimensions.css.cell.width;
                                        this.textarea.style.left = a + "px", this.textarea.style.top = o + "px", this.textarea.style.width = n + "px", this.textarea.style.height = r + "px", this.textarea.style.lineHeight = r + "px", this.textarea.style.zIndex = "-5"
                                    }
                                    _initGlobal() {
                                        this._bindKeys(), this.register((0, s.addDisposableDomListener)(this.element, "copy", (e => {
                                            this.hasSelection() && (0, r.copyHandler)(e, this._selectionService)
                                        })));
                                        const e = e => (0, r.handlePasteEvent)(e, this.textarea, this.coreService, this.optionsService);
                                        this.register((0, s.addDisposableDomListener)(this.textarea, "paste", e)), this.register((0, s.addDisposableDomListener)(this.element, "paste", e)), E.isFirefox ? this.register((0, s.addDisposableDomListener)(this.element, "mousedown", (e => {
                                            2 === e.button && (0, r.rightClickHandler)(e, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord)
                                        }))) : this.register((0, s.addDisposableDomListener)(this.element, "contextmenu", (e => {
                                            (0, r.rightClickHandler)(e, this.textarea, this.screenElement, this._selectionService, this.options.rightClickSelectsWord)
                                        }))), E.isLinux && this.register((0, s.addDisposableDomListener)(this.element, "auxclick", (e => {
                                            1 === e.button && (0, r.moveTextAreaUnderMouseCursor)(e, this.textarea, this.screenElement)
                                        })))
                                    }
                                    _bindKeys() {
                                        this.register((0, s.addDisposableDomListener)(this.textarea, "keyup", (e => this._keyUp(e)), !0)), this.register((0, s.addDisposableDomListener)(this.textarea, "keydown", (e => this._keyDown(e)), !0)), this.register((0, s.addDisposableDomListener)(this.textarea, "keypress", (e => this._keyPress(e)), !0)), this.register((0, s.addDisposableDomListener)(this.textarea, "compositionstart", (() => this._compositionHelper.compositionstart()))), this.register((0, s.addDisposableDomListener)(this.textarea, "compositionupdate", (e => this._compositionHelper.compositionupdate(e)))), this.register((0, s.addDisposableDomListener)(this.textarea, "compositionend", (() => this._compositionHelper.compositionend()))), this.register((0, s.addDisposableDomListener)(this.textarea, "input", (e => this._inputEvent(e)), !0)), this.register(this.onRender((() => this._compositionHelper.updateCompositionElements())))
                                    }
                                    open(e) {
                                        if (!e) throw new Error("Terminal requires a parent element.");
                                        if (e.isConnected || this._logService.debug("Terminal.open was called on an element that was not attached to the DOM"), this.element?.ownerDocument.defaultView && this._coreBrowserService) return void(this.element.ownerDocument.defaultView !== this._coreBrowserService.window && (this._coreBrowserService.window = this.element.ownerDocument.defaultView));
                                        this._document = e.ownerDocument, this.options.documentOverride && this.options.documentOverride instanceof Document && (this._document = this.optionsService.rawOptions.documentOverride), this.element = this._document.createElement("div"), this.element.dir = "ltr", this.element.classList.add("terminal"), this.element.classList.add("xterm"), e.appendChild(this.element);
                                        const t = this._document.createDocumentFragment();
                                        this._viewportElement = this._document.createElement("div"), this._viewportElement.classList.add("xterm-viewport"), t.appendChild(this._viewportElement), this._viewportScrollArea = this._document.createElement("div"), this._viewportScrollArea.classList.add("xterm-scroll-area"), this._viewportElement.appendChild(this._viewportScrollArea), this.screenElement = this._document.createElement("div"), this.screenElement.classList.add("xterm-screen"), this.register((0, s.addDisposableDomListener)(this.screenElement, "mousemove", (e => this.updateCursorStyle(e)))), this._helperContainer = this._document.createElement("div"), this._helperContainer.classList.add("xterm-helpers"), this.screenElement.appendChild(this._helperContainer), t.appendChild(this.screenElement), this.textarea = this._document.createElement("textarea"), this.textarea.classList.add("xterm-helper-textarea"), this.textarea.setAttribute("aria-label", o.promptLabel), E.isChromeOS || this.textarea.setAttribute("aria-multiline", "false"), this.textarea.setAttribute("autocorrect", "off"), this.textarea.setAttribute("autocapitalize", "off"), this.textarea.setAttribute("spellcheck", "false"), this.textarea.tabIndex = 0, this._coreBrowserService = this.register(this._instantiationService.createInstance(_.CoreBrowserService, this.textarea, e.ownerDocument.defaultView ?? window, this._document ?? "undefined" != typeof window ? window.document : null)), this._instantiationService.setService(b.ICoreBrowserService, this._coreBrowserService), this.register((0, s.addDisposableDomListener)(this.textarea, "focus", (e => this._handleTextAreaFocus(e)))), this.register((0, s.addDisposableDomListener)(this.textarea, "blur", (() => this._handleTextAreaBlur()))), this._helperContainer.appendChild(this.textarea), this._charSizeService = this._instantiationService.createInstance(f.CharSizeService, this._document, this._helperContainer), this._instantiationService.setService(b.ICharSizeService, this._charSizeService), this._themeService = this._instantiationService.createInstance(w.ThemeService), this._instantiationService.setService(b.IThemeService, this._themeService), this._characterJoinerService = this._instantiationService.createInstance(p.CharacterJoinerService), this._instantiationService.setService(b.ICharacterJoinerService, this._characterJoinerService), this._renderService = this.register(this._instantiationService.createInstance(v.RenderService, this.rows, this.screenElement)), this._instantiationService.setService(b.IRenderService, this._renderService), this.register(this._renderService.onRenderedViewportChange((e => this._onRender.fire(e)))), this.onResize((e => this._renderService.resize(e.cols, e.rows))), this._compositionView = this._document.createElement("div"), this._compositionView.classList.add("composition-view"), this._compositionHelper = this._instantiationService.createInstance(u.CompositionHelper, this.textarea, this._compositionView), this._helperContainer.appendChild(this._compositionView), this._mouseService = this._instantiationService.createInstance(g.MouseService), this._instantiationService.setService(b.IMouseService, this._mouseService), this.linkifier = this.register(this._instantiationService.createInstance(n.Linkifier, this.screenElement)), this.element.appendChild(t);
                                        try {
                                            this._onWillOpen.fire(this.element)
                                        } catch {}
                                        this._renderService.hasRenderer() || this._renderService.setRenderer(this._createRenderer()), this.viewport = this._instantiationService.createInstance(c.Viewport, this._viewportElement, this._viewportScrollArea), this.viewport.onRequestScrollLines((e => this.scrollLines(e.amount, e.suppressScrollEvent, 1))), this.register(this._inputHandler.onRequestSyncScrollBar((() => this.viewport.syncScrollArea()))), this.register(this.viewport), this.register(this.onCursorMove((() => {
                                            this._renderService.handleCursorMove(), this._syncTextArea()
                                        }))), this.register(this.onResize((() => this._renderService.handleResize(this.cols, this.rows)))), this.register(this.onBlur((() => this._renderService.handleBlur()))), this.register(this.onFocus((() => this._renderService.handleFocus()))), this.register(this._renderService.onDimensionsChange((() => this.viewport.syncScrollArea()))), this._selectionService = this.register(this._instantiationService.createInstance(m.SelectionService, this.element, this.screenElement, this.linkifier)), this._instantiationService.setService(b.ISelectionService, this._selectionService), this.register(this._selectionService.onRequestScrollLines((e => this.scrollLines(e.amount, e.suppressScrollEvent)))), this.register(this._selectionService.onSelectionChange((() => this._onSelectionChange.fire()))), this.register(this._selectionService.onRequestRedraw((e => this._renderService.handleSelectionChanged(e.start, e.end, e.columnSelectMode)))), this.register(this._selectionService.onLinuxMouseSelection((e => {
                                            this.textarea.value = e, this.textarea.focus(), this.textarea.select()
                                        }))), this.register(this._onScroll.event((e => {
                                            this.viewport.syncScrollArea(), this._selectionService.refresh()
                                        }))), this.register((0, s.addDisposableDomListener)(this._viewportElement, "scroll", (() => this._selectionService.refresh()))), this.register(this._instantiationService.createInstance(l.BufferDecorationRenderer, this.screenElement)), this.register((0, s.addDisposableDomListener)(this.element, "mousedown", (e => this._selectionService.handleMouseDown(e)))), this.coreMouseService.areMouseEventsActive ? (this._selectionService.disable(), this.element.classList.add("enable-mouse-events")) : this._selectionService.enable(), this.options.screenReaderMode && (this._accessibilityManager.value = this._instantiationService.createInstance(P.AccessibilityManager, this)), this.register(this.optionsService.onSpecificOptionChange("screenReaderMode", (e => this._handleScreenReaderModeOptionChange(e)))), this.options.overviewRulerWidth && (this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(h.OverviewRulerRenderer, this._viewportElement, this.screenElement))), this.optionsService.onSpecificOptionChange("overviewRulerWidth", (e => {
                                            !this._overviewRulerRenderer && e && this._viewportElement && this.screenElement && (this._overviewRulerRenderer = this.register(this._instantiationService.createInstance(h.OverviewRulerRenderer, this._viewportElement, this.screenElement)))
                                        })), this._charSizeService.measure(), this.refresh(0, this.rows - 1), this._initGlobal(), this.bindMouse()
                                    }
                                    _createRenderer() {
                                        return this._instantiationService.createInstance(d.DomRenderer, this, this._document, this.element, this.screenElement, this._viewportElement, this._helperContainer, this.linkifier)
                                    }
                                    bindMouse() {
                                        const e = this,
                                            t = this.element;

                                        function i(t) {
                                            const i = e._mouseService.getMouseReportCoords(t, e.screenElement);
                                            if (!i) return !1;
                                            let r, s;
                                            switch (t.overrideType || t.type) {
                                                case "mousemove":
                                                    s = 32, void 0 === t.buttons ? (r = 3, void 0 !== t.button && (r = t.button < 3 ? t.button : 3)) : r = 1 & t.buttons ? 0 : 4 & t.buttons ? 1 : 2 & t.buttons ? 2 : 3;
                                                    break;
                                                case "mouseup":
                                                    s = 0, r = t.button < 3 ? t.button : 3;
                                                    break;
                                                case "mousedown":
                                                    s = 1, r = t.button < 3 ? t.button : 3;
                                                    break;
                                                case "wheel":
                                                    if (e._customWheelEventHandler && !1 === e._customWheelEventHandler(t)) return !1;
                                                    if (0 === e.viewport.getLinesScrolled(t)) return !1;
                                                    s = t.deltaY < 0 ? 0 : 1, r = 4;
                                                    break;
                                                default:
                                                    return !1
                                            }
                                            return !(void 0 === s || void 0 === r || r > 4) && e.coreMouseService.triggerMouseEvent({
                                                col: i.col,
                                                row: i.row,
                                                x: i.x,
                                                y: i.y,
                                                button: r,
                                                action: s,
                                                ctrl: t.ctrlKey,
                                                alt: t.altKey,
                                                shift: t.shiftKey
                                            })
                                        }
                                        const r = {
                                                mouseup: null,
                                                wheel: null,
                                                mousedrag: null,
                                                mousemove: null
                                            },
                                            n = {
                                                mouseup: e => (i(e), e.buttons || (this._document.removeEventListener("mouseup", r.mouseup), r.mousedrag && this._document.removeEventListener("mousemove", r.mousedrag)), this.cancel(e)),
                                                wheel: e => (i(e), this.cancel(e, !0)),
                                                mousedrag: e => {
                                                    e.buttons && i(e)
                                                },
                                                mousemove: e => {
                                                    e.buttons || i(e)
                                                }
                                            };
                                        this.register(this.coreMouseService.onProtocolChange((e => {
                                            e ? ("debug" === this.optionsService.rawOptions.logLevel && this._logService.debug("Binding to mouse events:", this.coreMouseService.explainEvents(e)), this.element.classList.add("enable-mouse-events"), this._selectionService.disable()) : (this._logService.debug("Unbinding from mouse events."), this.element.classList.remove("enable-mouse-events"), this._selectionService.enable()), 8 & e ? r.mousemove || (t.addEventListener("mousemove", n.mousemove), r.mousemove = n.mousemove) : (t.removeEventListener("mousemove", r.mousemove), r.mousemove = null), 16 & e ? r.wheel || (t.addEventListener("wheel", n.wheel, {
                                                passive: !1
                                            }), r.wheel = n.wheel) : (t.removeEventListener("wheel", r.wheel), r.wheel = null), 2 & e ? r.mouseup || (r.mouseup = n.mouseup) : (this._document.removeEventListener("mouseup", r.mouseup), r.mouseup = null), 4 & e ? r.mousedrag || (r.mousedrag = n.mousedrag) : (this._document.removeEventListener("mousemove", r.mousedrag), r.mousedrag = null)
                                        }))), this.coreMouseService.activeProtocol = this.coreMouseService.activeProtocol, this.register((0, s.addDisposableDomListener)(t, "mousedown", (e => {
                                            if (e.preventDefault(), this.focus(), this.coreMouseService.areMouseEventsActive && !this._selectionService.shouldForceSelection(e)) return i(e), r.mouseup && this._document.addEventListener("mouseup", r.mouseup), r.mousedrag && this._document.addEventListener("mousemove", r.mousedrag), this.cancel(e)
                                        }))), this.register((0, s.addDisposableDomListener)(t, "wheel", (e => {
                                            if (!r.wheel) {
                                                if (this._customWheelEventHandler && !1 === this._customWheelEventHandler(e)) return !1;
                                                if (!this.buffer.hasScrollback) {
                                                    const t = this.viewport.getLinesScrolled(e);
                                                    if (0 === t) return;
                                                    const i = k.C0.ESC + (this.coreService.decPrivateModes.applicationCursorKeys ? "O" : "[") + (e.deltaY < 0 ? "A" : "B");
                                                    let r = "";
                                                    for (let e = 0; e < Math.abs(t); e++) r += i;
                                                    return this.coreService.triggerDataEvent(r, !0), this.cancel(e, !0)
                                                }
                                                return this.viewport.handleWheel(e) ? this.cancel(e) : void 0
                                            }
                                        }), {
                                            passive: !1
                                        })), this.register((0, s.addDisposableDomListener)(t, "touchstart", (e => {
                                            if (!this.coreMouseService.areMouseEventsActive) return this.viewport.handleTouchStart(e), this.cancel(e)
                                        }), {
                                            passive: !0
                                        })), this.register((0, s.addDisposableDomListener)(t, "touchmove", (e => {
                                            if (!this.coreMouseService.areMouseEventsActive) return this.viewport.handleTouchMove(e) ? void 0 : this.cancel(e)
                                        }), {
                                            passive: !1
                                        }))
                                    }
                                    refresh(e, t) {
                                        this._renderService?.refreshRows(e, t)
                                    }
                                    updateCursorStyle(e) {
                                        this._selectionService?.shouldColumnSelect(e) ? this.element.classList.add("column-select") : this.element.classList.remove("column-select")
                                    }
                                    _showCursor() {
                                        this.coreService.isCursorInitialized || (this.coreService.isCursorInitialized = !0, this.refresh(this.buffer.y, this.buffer.y))
                                    }
                                    scrollLines(e, t, i = 0) {
                                        1 === i ? (super.scrollLines(e, t, i), this.refresh(0, this.rows - 1)) : this.viewport?.scrollLines(e)
                                    }
                                    paste(e) {
                                        (0, r.paste)(e, this.textarea, this.coreService, this.optionsService)
                                    }
                                    attachCustomKeyEventHandler(e) {
                                        this._customKeyEventHandler = e
                                    }
                                    attachCustomWheelEventHandler(e) {
                                        this._customWheelEventHandler = e
                                    }
                                    registerLinkProvider(e) {
                                        return this._linkProviderService.registerLinkProvider(e)
                                    }
                                    registerCharacterJoiner(e) {
                                        if (!this._characterJoinerService) throw new Error("Terminal must be opened first");
                                        const t = this._characterJoinerService.register(e);
                                        return this.refresh(0, this.rows - 1), t
                                    }
                                    deregisterCharacterJoiner(e) {
                                        if (!this._characterJoinerService) throw new Error("Terminal must be opened first");
                                        this._characterJoinerService.deregister(e) && this.refresh(0, this.rows - 1)
                                    }
                                    get markers() {
                                        return this.buffer.markers
                                    }
                                    registerMarker(e) {
                                        return this.buffer.addMarker(this.buffer.ybase + this.buffer.y + e)
                                    }
                                    registerDecoration(e) {
                                        return this._decorationService.registerDecoration(e)
                                    }
                                    hasSelection() {
                                        return !!this._selectionService && this._selectionService.hasSelection
                                    }
                                    select(e, t, i) {
                                        this._selectionService.setSelection(e, t, i)
                                    }
                                    getSelection() {
                                        return this._selectionService ? this._selectionService.selectionText : ""
                                    }
                                    getSelectionPosition() {
                                        if (this._selectionService && this._selectionService.hasSelection) return {
                                            start: {
                                                x: this._selectionService.selectionStart[0],
                                                y: this._selectionService.selectionStart[1]
                                            },
                                            end: {
                                                x: this._selectionService.selectionEnd[0],
                                                y: this._selectionService.selectionEnd[1]
                                            }
                                        }
                                    }
                                    clearSelection() {
                                        this._selectionService?.clearSelection()
                                    }
                                    selectAll() {
                                        this._selectionService?.selectAll()
                                    }
                                    selectLines(e, t) {
                                        this._selectionService?.selectLines(e, t)
                                    }
                                    _keyDown(e) {
                                        if (this._keyDownHandled = !1, this._keyDownSeen = !0, this._customKeyEventHandler && !1 === this._customKeyEventHandler(e)) return !1;
                                        const t = this.browser.isMac && this.options.macOptionIsMeta && e.altKey;
                                        if (!t && !this._compositionHelper.keydown(e)) return this.options.scrollOnUserInput && this.buffer.ybase !== this.buffer.ydisp && this.scrollToBottom(), !1;
                                        t || "Dead" !== e.key && "AltGraph" !== e.key || (this._unprocessedDeadKey = !0);
                                        const i = (0, L.evaluateKeyboardEvent)(e, this.coreService.decPrivateModes.applicationCursorKeys, this.browser.isMac, this.options.macOptionIsMeta);
                                        if (this.updateCursorStyle(e), 3 === i.type || 2 === i.type) {
                                            const t = this.rows - 1;
                                            return this.scrollLines(2 === i.type ? -t : t), this.cancel(e, !0)
                                        }
                                        return 1 === i.type && this.selectAll(), !!this._isThirdLevelShift(this.browser, e) || (i.cancel && this.cancel(e, !0), !i.key || !!(e.key && !e.ctrlKey && !e.altKey && !e.metaKey && 1 === e.key.length && e.key.charCodeAt(0) >= 65 && e.key.charCodeAt(0) <= 90) || (this._unprocessedDeadKey ? (this._unprocessedDeadKey = !1, !0) : (i.key !== k.C0.ETX && i.key !== k.C0.CR || (this.textarea.value = ""), this._onKey.fire({
                                            key: i.key,
                                            domEvent: e
                                        }), this._showCursor(), this.coreService.triggerDataEvent(i.key, !0), !this.optionsService.rawOptions.screenReaderMode || e.altKey || e.ctrlKey ? this.cancel(e, !0) : void(this._keyDownHandled = !0))))
                                    }
                                    _isThirdLevelShift(e, t) {
                                        const i = e.isMac && !this.options.macOptionIsMeta && t.altKey && !t.ctrlKey && !t.metaKey || e.isWindows && t.altKey && t.ctrlKey && !t.metaKey || e.isWindows && t.getModifierState("AltGraph");
                                        return "keypress" === t.type ? i : i && (!t.keyCode || t.keyCode > 47)
                                    }
                                    _keyUp(e) {
                                        this._keyDownSeen = !1, this._customKeyEventHandler && !1 === this._customKeyEventHandler(e) || (function(e) {
                                            return 16 === e.keyCode || 17 === e.keyCode || 18 === e.keyCode
                                        }(e) || this.focus(), this.updateCursorStyle(e), this._keyPressHandled = !1)
                                    }
                                    _keyPress(e) {
                                        let t;
                                        if (this._keyPressHandled = !1, this._keyDownHandled) return !1;
                                        if (this._customKeyEventHandler && !1 === this._customKeyEventHandler(e)) return !1;
                                        if (this.cancel(e), e.charCode) t = e.charCode;
                                        else if (null === e.which || void 0 === e.which) t = e.keyCode;
                                        else {
                                            if (0 === e.which || 0 === e.charCode) return !1;
                                            t = e.which
                                        }
                                        return !(!t || (e.altKey || e.ctrlKey || e.metaKey) && !this._isThirdLevelShift(this.browser, e) || (t = String.fromCharCode(t), this._onKey.fire({
                                            key: t,
                                            domEvent: e
                                        }), this._showCursor(), this.coreService.triggerDataEvent(t, !0), this._keyPressHandled = !0, this._unprocessedDeadKey = !1, 0))
                                    }
                                    _inputEvent(e) {
                                        if (e.data && "insertText" === e.inputType && (!e.composed || !this._keyDownSeen) && !this.optionsService.rawOptions.screenReaderMode) {
                                            if (this._keyPressHandled) return !1;
                                            this._unprocessedDeadKey = !1;
                                            const t = e.data;
                                            return this.coreService.triggerDataEvent(t, !0), this.cancel(e), !0
                                        }
                                        return !1
                                    }
                                    resize(e, t) {
                                        e !== this.cols || t !== this.rows ? super.resize(e, t) : this._charSizeService && !this._charSizeService.hasValidSize && this._charSizeService.measure()
                                    }
                                    _afterResize(e, t) {
                                        this._charSizeService?.measure(), this.viewport?.syncScrollArea(!0)
                                    }
                                    clear() {
                                        if (0 !== this.buffer.ybase || 0 !== this.buffer.y) {
                                            this.buffer.clearAllMarkers(), this.buffer.lines.set(0, this.buffer.lines.get(this.buffer.ybase + this.buffer.y)), this.buffer.lines.length = 1, this.buffer.ydisp = 0, this.buffer.ybase = 0, this.buffer.y = 0;
                                            for (let e = 1; e < this.rows; e++) this.buffer.lines.push(this.buffer.getBlankLine(O.DEFAULT_ATTR_DATA));
                                            this._onScroll.fire({
                                                position: this.buffer.ydisp,
                                                source: 0
                                            }), this.viewport?.reset(), this.refresh(0, this.rows - 1)
                                        }
                                    }
                                    reset() {
                                        this.options.rows = this.rows, this.options.cols = this.cols;
                                        const e = this._customKeyEventHandler;
                                        this._setup(), super.reset(), this._selectionService?.reset(), this._decorationService.reset(), this.viewport?.reset(), this._customKeyEventHandler = e, this.refresh(0, this.rows - 1)
                                    }
                                    clearTextureAtlas() {
                                        this._renderService?.clearTextureAtlas()
                                    }
                                    _reportFocus() {
                                        this.element?.classList.contains("focus") ? this.coreService.triggerDataEvent(k.C0.ESC + "[I") : this.coreService.triggerDataEvent(k.C0.ESC + "[O")
                                    }
                                    _reportWindowsOptions(e) {
                                        if (this._renderService) switch (e) {
                                            case R.WindowsOptionsReportType.GET_WIN_SIZE_PIXELS:
                                                const e = this._renderService.dimensions.css.canvas.width.toFixed(0),
                                                    t = this._renderService.dimensions.css.canvas.height.toFixed(0);
                                                this.coreService.triggerDataEvent(`${k.C0.ESC}[4;${t};${e}t`);
                                                break;
                                            case R.WindowsOptionsReportType.GET_CELL_SIZE_PIXELS:
                                                const i = this._renderService.dimensions.css.cell.width.toFixed(0),
                                                    r = this._renderService.dimensions.css.cell.height.toFixed(0);
                                                this.coreService.triggerDataEvent(`${k.C0.ESC}[6;${r};${i}t`)
                                        }
                                    }
                                    cancel(e, t) {
                                        if (this.options.cancelEvents || t) return e.preventDefault(), e.stopPropagation(), !1
                                    }
                                }
                                t.Terminal = B
                            },
                            9924: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.TimeBasedDebouncer = void 0, t.TimeBasedDebouncer = class {
                                    constructor(e, t = 1e3) {
                                        this._renderCallback = e, this._debounceThresholdMS = t, this._lastRefreshMs = 0, this._additionalRefreshRequested = !1
                                    }
                                    dispose() {
                                        this._refreshTimeoutID && clearTimeout(this._refreshTimeoutID)
                                    }
                                    refresh(e, t, i) {
                                        this._rowCount = i, e = void 0 !== e ? e : 0, t = void 0 !== t ? t : this._rowCount - 1, this._rowStart = void 0 !== this._rowStart ? Math.min(this._rowStart, e) : e, this._rowEnd = void 0 !== this._rowEnd ? Math.max(this._rowEnd, t) : t;
                                        const r = Date.now();
                                        if (r - this._lastRefreshMs >= this._debounceThresholdMS) this._lastRefreshMs = r, this._innerRefresh();
                                        else if (!this._additionalRefreshRequested) {
                                            const e = r - this._lastRefreshMs,
                                                t = this._debounceThresholdMS - e;
                                            this._additionalRefreshRequested = !0, this._refreshTimeoutID = window.setTimeout((() => {
                                                this._lastRefreshMs = Date.now(), this._innerRefresh(), this._additionalRefreshRequested = !1, this._refreshTimeoutID = void 0
                                            }), t)
                                        }
                                    }
                                    _innerRefresh() {
                                        if (void 0 === this._rowStart || void 0 === this._rowEnd || void 0 === this._rowCount) return;
                                        const e = Math.max(this._rowStart, 0),
                                            t = Math.min(this._rowEnd, this._rowCount - 1);
                                        this._rowStart = void 0, this._rowEnd = void 0, this._renderCallback(e, t)
                                    }
                                }
                            },
                            1680: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.Viewport = void 0;
                                const n = i(3656),
                                    o = i(4725),
                                    a = i(8460),
                                    c = i(844),
                                    l = i(2585);
                                let h = t.Viewport = class extends c.Disposable {
                                    constructor(e, t, i, r, s, o, c, l) {
                                        super(), this._viewportElement = e, this._scrollArea = t, this._bufferService = i, this._optionsService = r, this._charSizeService = s, this._renderService = o, this._coreBrowserService = c, this.scrollBarWidth = 0, this._currentRowHeight = 0, this._currentDeviceCellHeight = 0, this._lastRecordedBufferLength = 0, this._lastRecordedViewportHeight = 0, this._lastRecordedBufferHeight = 0, this._lastTouchY = 0, this._lastScrollTop = 0, this._wheelPartialScroll = 0, this._refreshAnimationFrame = null, this._ignoreNextScrollEvent = !1, this._smoothScrollState = {
                                            startTime: 0,
                                            origin: -1,
                                            target: -1
                                        }, this._onRequestScrollLines = this.register(new a.EventEmitter), this.onRequestScrollLines = this._onRequestScrollLines.event, this.scrollBarWidth = this._viewportElement.offsetWidth - this._scrollArea.offsetWidth || 15, this.register((0, n.addDisposableDomListener)(this._viewportElement, "scroll", this._handleScroll.bind(this))), this._activeBuffer = this._bufferService.buffer, this.register(this._bufferService.buffers.onBufferActivate((e => this._activeBuffer = e.activeBuffer))), this._renderDimensions = this._renderService.dimensions, this.register(this._renderService.onDimensionsChange((e => this._renderDimensions = e))), this._handleThemeChange(l.colors), this.register(l.onChangeColors((e => this._handleThemeChange(e)))), this.register(this._optionsService.onSpecificOptionChange("scrollback", (() => this.syncScrollArea()))), setTimeout((() => this.syncScrollArea()))
                                    }
                                    _handleThemeChange(e) {
                                        this._viewportElement.style.backgroundColor = e.background.css
                                    }
                                    reset() {
                                        this._currentRowHeight = 0, this._currentDeviceCellHeight = 0, this._lastRecordedBufferLength = 0, this._lastRecordedViewportHeight = 0, this._lastRecordedBufferHeight = 0, this._lastTouchY = 0, this._lastScrollTop = 0, this._coreBrowserService.window.requestAnimationFrame((() => this.syncScrollArea()))
                                    }
                                    _refresh(e) {
                                        if (e) return this._innerRefresh(), void(null !== this._refreshAnimationFrame && this._coreBrowserService.window.cancelAnimationFrame(this._refreshAnimationFrame));
                                        null === this._refreshAnimationFrame && (this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame((() => this._innerRefresh())))
                                    }
                                    _innerRefresh() {
                                        if (this._charSizeService.height > 0) {
                                            this._currentRowHeight = this._renderDimensions.device.cell.height / this._coreBrowserService.dpr, this._currentDeviceCellHeight = this._renderDimensions.device.cell.height, this._lastRecordedViewportHeight = this._viewportElement.offsetHeight;
                                            const e = Math.round(this._currentRowHeight * this._lastRecordedBufferLength) + (this._lastRecordedViewportHeight - this._renderDimensions.css.canvas.height);
                                            this._lastRecordedBufferHeight !== e && (this._lastRecordedBufferHeight = e, this._scrollArea.style.height = this._lastRecordedBufferHeight + "px")
                                        }
                                        const e = this._bufferService.buffer.ydisp * this._currentRowHeight;
                                        this._viewportElement.scrollTop !== e && (this._ignoreNextScrollEvent = !0, this._viewportElement.scrollTop = e), this._refreshAnimationFrame = null
                                    }
                                    syncScrollArea(e = !1) {
                                        if (this._lastRecordedBufferLength !== this._bufferService.buffer.lines.length) return this._lastRecordedBufferLength = this._bufferService.buffer.lines.length, void this._refresh(e);
                                        this._lastRecordedViewportHeight === this._renderService.dimensions.css.canvas.height && this._lastScrollTop === this._activeBuffer.ydisp * this._currentRowHeight && this._renderDimensions.device.cell.height === this._currentDeviceCellHeight || this._refresh(e)
                                    }
                                    _handleScroll(e) {
                                        if (this._lastScrollTop = this._viewportElement.scrollTop, !this._viewportElement.offsetParent) return;
                                        if (this._ignoreNextScrollEvent) return this._ignoreNextScrollEvent = !1, void this._onRequestScrollLines.fire({
                                            amount: 0,
                                            suppressScrollEvent: !0
                                        });
                                        const t = Math.round(this._lastScrollTop / this._currentRowHeight) - this._bufferService.buffer.ydisp;
                                        this._onRequestScrollLines.fire({
                                            amount: t,
                                            suppressScrollEvent: !0
                                        })
                                    }
                                    _smoothScroll() {
                                        if (this._isDisposed || -1 === this._smoothScrollState.origin || -1 === this._smoothScrollState.target) return;
                                        const e = this._smoothScrollPercent();
                                        this._viewportElement.scrollTop = this._smoothScrollState.origin + Math.round(e * (this._smoothScrollState.target - this._smoothScrollState.origin)), e < 1 ? this._coreBrowserService.window.requestAnimationFrame((() => this._smoothScroll())) : this._clearSmoothScrollState()
                                    }
                                    _smoothScrollPercent() {
                                        return this._optionsService.rawOptions.smoothScrollDuration && this._smoothScrollState.startTime ? Math.max(Math.min((Date.now() - this._smoothScrollState.startTime) / this._optionsService.rawOptions.smoothScrollDuration, 1), 0) : 1
                                    }
                                    _clearSmoothScrollState() {
                                        this._smoothScrollState.startTime = 0, this._smoothScrollState.origin = -1, this._smoothScrollState.target = -1
                                    }
                                    _bubbleScroll(e, t) {
                                        const i = this._viewportElement.scrollTop + this._lastRecordedViewportHeight;
                                        return !(t < 0 && 0 !== this._viewportElement.scrollTop || t > 0 && i < this._lastRecordedBufferHeight) || (e.cancelable && e.preventDefault(), !1)
                                    }
                                    handleWheel(e) {
                                        const t = this._getPixelsScrolled(e);
                                        return 0 !== t && (this._optionsService.rawOptions.smoothScrollDuration ? (this._smoothScrollState.startTime = Date.now(), this._smoothScrollPercent() < 1 ? (this._smoothScrollState.origin = this._viewportElement.scrollTop, -1 === this._smoothScrollState.target ? this._smoothScrollState.target = this._viewportElement.scrollTop + t : this._smoothScrollState.target += t, this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0), this._smoothScroll()) : this._clearSmoothScrollState()) : this._viewportElement.scrollTop += t, this._bubbleScroll(e, t))
                                    }
                                    scrollLines(e) {
                                        if (0 !== e)
                                            if (this._optionsService.rawOptions.smoothScrollDuration) {
                                                const t = e * this._currentRowHeight;
                                                this._smoothScrollState.startTime = Date.now(), this._smoothScrollPercent() < 1 ? (this._smoothScrollState.origin = this._viewportElement.scrollTop, this._smoothScrollState.target = this._smoothScrollState.origin + t, this._smoothScrollState.target = Math.max(Math.min(this._smoothScrollState.target, this._viewportElement.scrollHeight), 0), this._smoothScroll()) : this._clearSmoothScrollState()
                                            } else this._onRequestScrollLines.fire({
                                                amount: e,
                                                suppressScrollEvent: !1
                                            })
                                    }
                                    _getPixelsScrolled(e) {
                                        if (0 === e.deltaY || e.shiftKey) return 0;
                                        let t = this._applyScrollModifier(e.deltaY, e);
                                        return e.deltaMode === WheelEvent.DOM_DELTA_LINE ? t *= this._currentRowHeight : e.deltaMode === WheelEvent.DOM_DELTA_PAGE && (t *= this._currentRowHeight * this._bufferService.rows), t
                                    }
                                    getBufferElements(e, t) {
                                        let i, r = "";
                                        const s = [],
                                            n = t ?? this._bufferService.buffer.lines.length,
                                            o = this._bufferService.buffer.lines;
                                        for (let t = e; t < n; t++) {
                                            const e = o.get(t);
                                            if (!e) continue;
                                            const n = o.get(t + 1)?.isWrapped;
                                            if (r += e.translateToString(!n), !n || t === o.length - 1) {
                                                const e = document.createElement("div");
                                                e.textContent = r, s.push(e), r.length > 0 && (i = e), r = ""
                                            }
                                        }
                                        return {
                                            bufferElements: s,
                                            cursorElement: i
                                        }
                                    }
                                    getLinesScrolled(e) {
                                        if (0 === e.deltaY || e.shiftKey) return 0;
                                        let t = this._applyScrollModifier(e.deltaY, e);
                                        return e.deltaMode === WheelEvent.DOM_DELTA_PIXEL ? (t /= this._currentRowHeight + 0, this._wheelPartialScroll += t, t = Math.floor(Math.abs(this._wheelPartialScroll)) * (this._wheelPartialScroll > 0 ? 1 : -1), this._wheelPartialScroll %= 1) : e.deltaMode === WheelEvent.DOM_DELTA_PAGE && (t *= this._bufferService.rows), t
                                    }
                                    _applyScrollModifier(e, t) {
                                        const i = this._optionsService.rawOptions.fastScrollModifier;
                                        return "alt" === i && t.altKey || "ctrl" === i && t.ctrlKey || "shift" === i && t.shiftKey ? e * this._optionsService.rawOptions.fastScrollSensitivity * this._optionsService.rawOptions.scrollSensitivity : e * this._optionsService.rawOptions.scrollSensitivity
                                    }
                                    handleTouchStart(e) {
                                        this._lastTouchY = e.touches[0].pageY
                                    }
                                    handleTouchMove(e) {
                                        const t = this._lastTouchY - e.touches[0].pageY;
                                        return this._lastTouchY = e.touches[0].pageY, 0 !== t && (this._viewportElement.scrollTop += t, this._bubbleScroll(e, t))
                                    }
                                };
                                t.Viewport = h = r([s(2, l.IBufferService), s(3, l.IOptionsService), s(4, o.ICharSizeService), s(5, o.IRenderService), s(6, o.ICoreBrowserService), s(7, o.IThemeService)], h)
                            },
                            3107: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.BufferDecorationRenderer = void 0;
                                const n = i(4725),
                                    o = i(844),
                                    a = i(2585);
                                let c = t.BufferDecorationRenderer = class extends o.Disposable {
                                    constructor(e, t, i, r, s) {
                                        super(), this._screenElement = e, this._bufferService = t, this._coreBrowserService = i, this._decorationService = r, this._renderService = s, this._decorationElements = new Map, this._altBufferIsActive = !1, this._dimensionsChanged = !1, this._container = document.createElement("div"), this._container.classList.add("xterm-decoration-container"), this._screenElement.appendChild(this._container), this.register(this._renderService.onRenderedViewportChange((() => this._doRefreshDecorations()))), this.register(this._renderService.onDimensionsChange((() => {
                                            this._dimensionsChanged = !0, this._queueRefresh()
                                        }))), this.register(this._coreBrowserService.onDprChange((() => this._queueRefresh()))), this.register(this._bufferService.buffers.onBufferActivate((() => {
                                            this._altBufferIsActive = this._bufferService.buffer === this._bufferService.buffers.alt
                                        }))), this.register(this._decorationService.onDecorationRegistered((() => this._queueRefresh()))), this.register(this._decorationService.onDecorationRemoved((e => this._removeDecoration(e)))), this.register((0, o.toDisposable)((() => {
                                            this._container.remove(), this._decorationElements.clear()
                                        })))
                                    }
                                    _queueRefresh() {
                                        void 0 === this._animationFrame && (this._animationFrame = this._renderService.addRefreshCallback((() => {
                                            this._doRefreshDecorations(), this._animationFrame = void 0
                                        })))
                                    }
                                    _doRefreshDecorations() {
                                        for (const e of this._decorationService.decorations) this._renderDecoration(e);
                                        this._dimensionsChanged = !1
                                    }
                                    _renderDecoration(e) {
                                        this._refreshStyle(e), this._dimensionsChanged && this._refreshXPosition(e)
                                    }
                                    _createElement(e) {
                                        const t = this._coreBrowserService.mainDocument.createElement("div");
                                        t.classList.add("xterm-decoration"), t.classList.toggle("xterm-decoration-top-layer", "top" === e?.options?.layer), t.style.width = `${Math.round((e.options.width||1)*this._renderService.dimensions.css.cell.width)}px`, t.style.height = (e.options.height || 1) * this._renderService.dimensions.css.cell.height + "px", t.style.top = (e.marker.line - this._bufferService.buffers.active.ydisp) * this._renderService.dimensions.css.cell.height + "px", t.style.lineHeight = `${this._renderService.dimensions.css.cell.height}px`;
                                        const i = e.options.x ?? 0;
                                        return i && i > this._bufferService.cols && (t.style.display = "none"), this._refreshXPosition(e, t), t
                                    }
                                    _refreshStyle(e) {
                                        const t = e.marker.line - this._bufferService.buffers.active.ydisp;
                                        if (t < 0 || t >= this._bufferService.rows) e.element && (e.element.style.display = "none", e.onRenderEmitter.fire(e.element));
                                        else {
                                            let i = this._decorationElements.get(e);
                                            i || (i = this._createElement(e), e.element = i, this._decorationElements.set(e, i), this._container.appendChild(i), e.onDispose((() => {
                                                this._decorationElements.delete(e), i.remove()
                                            }))), i.style.top = t * this._renderService.dimensions.css.cell.height + "px", i.style.display = this._altBufferIsActive ? "none" : "block", e.onRenderEmitter.fire(i)
                                        }
                                    }
                                    _refreshXPosition(e, t = e.element) {
                                        if (!t) return;
                                        const i = e.options.x ?? 0;
                                        "right" === (e.options.anchor || "left") ? t.style.right = i ? i * this._renderService.dimensions.css.cell.width + "px" : "": t.style.left = i ? i * this._renderService.dimensions.css.cell.width + "px" : ""
                                    }
                                    _removeDecoration(e) {
                                        this._decorationElements.get(e)?.remove(), this._decorationElements.delete(e), e.dispose()
                                    }
                                };
                                t.BufferDecorationRenderer = c = r([s(1, a.IBufferService), s(2, n.ICoreBrowserService), s(3, a.IDecorationService), s(4, n.IRenderService)], c)
                            },
                            5871: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.ColorZoneStore = void 0, t.ColorZoneStore = class {
                                    constructor() {
                                        this._zones = [], this._zonePool = [], this._zonePoolIndex = 0, this._linePadding = {
                                            full: 0,
                                            left: 0,
                                            center: 0,
                                            right: 0
                                        }
                                    }
                                    get zones() {
                                        return this._zonePool.length = Math.min(this._zonePool.length, this._zones.length), this._zones
                                    }
                                    clear() {
                                        this._zones.length = 0, this._zonePoolIndex = 0
                                    }
                                    addDecoration(e) {
                                        if (e.options.overviewRulerOptions) {
                                            for (const t of this._zones)
                                                if (t.color === e.options.overviewRulerOptions.color && t.position === e.options.overviewRulerOptions.position) {
                                                    if (this._lineIntersectsZone(t, e.marker.line)) return;
                                                    if (this._lineAdjacentToZone(t, e.marker.line, e.options.overviewRulerOptions.position)) return void this._addLineToZone(t, e.marker.line)
                                                } if (this._zonePoolIndex < this._zonePool.length) return this._zonePool[this._zonePoolIndex].color = e.options.overviewRulerOptions.color, this._zonePool[this._zonePoolIndex].position = e.options.overviewRulerOptions.position, this._zonePool[this._zonePoolIndex].startBufferLine = e.marker.line, this._zonePool[this._zonePoolIndex].endBufferLine = e.marker.line, void this._zones.push(this._zonePool[this._zonePoolIndex++]);
                                            this._zones.push({
                                                color: e.options.overviewRulerOptions.color,
                                                position: e.options.overviewRulerOptions.position,
                                                startBufferLine: e.marker.line,
                                                endBufferLine: e.marker.line
                                            }), this._zonePool.push(this._zones[this._zones.length - 1]), this._zonePoolIndex++
                                        }
                                    }
                                    setPadding(e) {
                                        this._linePadding = e
                                    }
                                    _lineIntersectsZone(e, t) {
                                        return t >= e.startBufferLine && t <= e.endBufferLine
                                    }
                                    _lineAdjacentToZone(e, t, i) {
                                        return t >= e.startBufferLine - this._linePadding[i || "full"] && t <= e.endBufferLine + this._linePadding[i || "full"]
                                    }
                                    _addLineToZone(e, t) {
                                        e.startBufferLine = Math.min(e.startBufferLine, t), e.endBufferLine = Math.max(e.endBufferLine, t)
                                    }
                                }
                            },
                            5744: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.OverviewRulerRenderer = void 0;
                                const n = i(5871),
                                    o = i(4725),
                                    a = i(844),
                                    c = i(2585),
                                    l = {
                                        full: 0,
                                        left: 0,
                                        center: 0,
                                        right: 0
                                    },
                                    h = {
                                        full: 0,
                                        left: 0,
                                        center: 0,
                                        right: 0
                                    },
                                    u = {
                                        full: 0,
                                        left: 0,
                                        center: 0,
                                        right: 0
                                    };
                                let d = t.OverviewRulerRenderer = class extends a.Disposable {
                                    get _width() {
                                        return this._optionsService.options.overviewRulerWidth || 0
                                    }
                                    constructor(e, t, i, r, s, o, c) {
                                        super(), this._viewportElement = e, this._screenElement = t, this._bufferService = i, this._decorationService = r, this._renderService = s, this._optionsService = o, this._coreBrowserService = c, this._colorZoneStore = new n.ColorZoneStore, this._shouldUpdateDimensions = !0, this._shouldUpdateAnchor = !0, this._lastKnownBufferLength = 0, this._canvas = this._coreBrowserService.mainDocument.createElement("canvas"), this._canvas.classList.add("xterm-decoration-overview-ruler"), this._refreshCanvasDimensions(), this._viewportElement.parentElement?.insertBefore(this._canvas, this._viewportElement);
                                        const l = this._canvas.getContext("2d");
                                        if (!l) throw new Error("Ctx cannot be null");
                                        this._ctx = l, this._registerDecorationListeners(), this._registerBufferChangeListeners(), this._registerDimensionChangeListeners(), this.register((0, a.toDisposable)((() => {
                                            this._canvas?.remove()
                                        })))
                                    }
                                    _registerDecorationListeners() {
                                        this.register(this._decorationService.onDecorationRegistered((() => this._queueRefresh(void 0, !0)))), this.register(this._decorationService.onDecorationRemoved((() => this._queueRefresh(void 0, !0))))
                                    }
                                    _registerBufferChangeListeners() {
                                        this.register(this._renderService.onRenderedViewportChange((() => this._queueRefresh()))), this.register(this._bufferService.buffers.onBufferActivate((() => {
                                            this._canvas.style.display = this._bufferService.buffer === this._bufferService.buffers.alt ? "none" : "block"
                                        }))), this.register(this._bufferService.onScroll((() => {
                                            this._lastKnownBufferLength !== this._bufferService.buffers.normal.lines.length && (this._refreshDrawHeightConstants(), this._refreshColorZonePadding())
                                        })))
                                    }
                                    _registerDimensionChangeListeners() {
                                        this.register(this._renderService.onRender((() => {
                                            this._containerHeight && this._containerHeight === this._screenElement.clientHeight || (this._queueRefresh(!0), this._containerHeight = this._screenElement.clientHeight)
                                        }))), this.register(this._optionsService.onSpecificOptionChange("overviewRulerWidth", (() => this._queueRefresh(!0)))), this.register(this._coreBrowserService.onDprChange((() => this._queueRefresh(!0)))), this._queueRefresh(!0)
                                    }
                                    _refreshDrawConstants() {
                                        const e = Math.floor(this._canvas.width / 3),
                                            t = Math.ceil(this._canvas.width / 3);
                                        h.full = this._canvas.width, h.left = e, h.center = t, h.right = e, this._refreshDrawHeightConstants(), u.full = 0, u.left = 0, u.center = h.left, u.right = h.left + h.center
                                    }
                                    _refreshDrawHeightConstants() {
                                        l.full = Math.round(2 * this._coreBrowserService.dpr);
                                        const e = this._canvas.height / this._bufferService.buffer.lines.length,
                                            t = Math.round(Math.max(Math.min(e, 12), 6) * this._coreBrowserService.dpr);
                                        l.left = t, l.center = t, l.right = t
                                    }
                                    _refreshColorZonePadding() {
                                        this._colorZoneStore.setPadding({
                                            full: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * l.full),
                                            left: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * l.left),
                                            center: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * l.center),
                                            right: Math.floor(this._bufferService.buffers.active.lines.length / (this._canvas.height - 1) * l.right)
                                        }), this._lastKnownBufferLength = this._bufferService.buffers.normal.lines.length
                                    }
                                    _refreshCanvasDimensions() {
                                        this._canvas.style.width = `${this._width}px`, this._canvas.width = Math.round(this._width * this._coreBrowserService.dpr), this._canvas.style.height = `${this._screenElement.clientHeight}px`, this._canvas.height = Math.round(this._screenElement.clientHeight * this._coreBrowserService.dpr), this._refreshDrawConstants(), this._refreshColorZonePadding()
                                    }
                                    _refreshDecorations() {
                                        this._shouldUpdateDimensions && this._refreshCanvasDimensions(), this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height), this._colorZoneStore.clear();
                                        for (const e of this._decorationService.decorations) this._colorZoneStore.addDecoration(e);
                                        this._ctx.lineWidth = 1;
                                        const e = this._colorZoneStore.zones;
                                        for (const t of e) "full" !== t.position && this._renderColorZone(t);
                                        for (const t of e) "full" === t.position && this._renderColorZone(t);
                                        this._shouldUpdateDimensions = !1, this._shouldUpdateAnchor = !1
                                    }
                                    _renderColorZone(e) {
                                        this._ctx.fillStyle = e.color, this._ctx.fillRect(u[e.position || "full"], Math.round((this._canvas.height - 1) * (e.startBufferLine / this._bufferService.buffers.active.lines.length) - l[e.position || "full"] / 2), h[e.position || "full"], Math.round((this._canvas.height - 1) * ((e.endBufferLine - e.startBufferLine) / this._bufferService.buffers.active.lines.length) + l[e.position || "full"]))
                                    }
                                    _queueRefresh(e, t) {
                                        this._shouldUpdateDimensions = e || this._shouldUpdateDimensions, this._shouldUpdateAnchor = t || this._shouldUpdateAnchor, void 0 === this._animationFrame && (this._animationFrame = this._coreBrowserService.window.requestAnimationFrame((() => {
                                            this._refreshDecorations(), this._animationFrame = void 0
                                        })))
                                    }
                                };
                                t.OverviewRulerRenderer = d = r([s(2, c.IBufferService), s(3, c.IDecorationService), s(4, o.IRenderService), s(5, c.IOptionsService), s(6, o.ICoreBrowserService)], d)
                            },
                            2950: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CompositionHelper = void 0;
                                const n = i(4725),
                                    o = i(2585),
                                    a = i(2584);
                                let c = t.CompositionHelper = class {
                                    get isComposing() {
                                        return this._isComposing
                                    }
                                    constructor(e, t, i, r, s, n) {
                                        this._textarea = e, this._compositionView = t, this._bufferService = i, this._optionsService = r, this._coreService = s, this._renderService = n, this._isComposing = !1, this._isSendingComposition = !1, this._compositionPosition = {
                                            start: 0,
                                            end: 0
                                        }, this._dataAlreadySent = ""
                                    }
                                    compositionstart() {
                                        this._isComposing = !0, this._compositionPosition.start = this._textarea.value.length, this._compositionView.textContent = "", this._dataAlreadySent = "", this._compositionView.classList.add("active")
                                    }
                                    compositionupdate(e) {
                                        this._compositionView.textContent = e.data, this.updateCompositionElements(), setTimeout((() => {
                                            this._compositionPosition.end = this._textarea.value.length
                                        }), 0)
                                    }
                                    compositionend() {
                                        this._finalizeComposition(!0)
                                    }
                                    keydown(e) {
                                        if (this._isComposing || this._isSendingComposition) {
                                            if (229 === e.keyCode) return !1;
                                            if (16 === e.keyCode || 17 === e.keyCode || 18 === e.keyCode) return !1;
                                            this._finalizeComposition(!1)
                                        }
                                        return 229 !== e.keyCode || (this._handleAnyTextareaChanges(), !1)
                                    }
                                    _finalizeComposition(e) {
                                        if (this._compositionView.classList.remove("active"), this._isComposing = !1, e) {
                                            const e = {
                                                start: this._compositionPosition.start,
                                                end: this._compositionPosition.end
                                            };
                                            this._isSendingComposition = !0, setTimeout((() => {
                                                if (this._isSendingComposition) {
                                                    let t;
                                                    this._isSendingComposition = !1, e.start += this._dataAlreadySent.length, t = this._isComposing ? this._textarea.value.substring(e.start, e.end) : this._textarea.value.substring(e.start), t.length > 0 && this._coreService.triggerDataEvent(t, !0)
                                                }
                                            }), 0)
                                        } else {
                                            this._isSendingComposition = !1;
                                            const e = this._textarea.value.substring(this._compositionPosition.start, this._compositionPosition.end);
                                            this._coreService.triggerDataEvent(e, !0)
                                        }
                                    }
                                    _handleAnyTextareaChanges() {
                                        const e = this._textarea.value;
                                        setTimeout((() => {
                                            if (!this._isComposing) {
                                                const t = this._textarea.value,
                                                    i = t.replace(e, "");
                                                this._dataAlreadySent = i, t.length > e.length ? this._coreService.triggerDataEvent(i, !0) : t.length < e.length ? this._coreService.triggerDataEvent(`${a.C0.DEL}`, !0) : t.length === e.length && t !== e && this._coreService.triggerDataEvent(t, !0)
                                            }
                                        }), 0)
                                    }
                                    updateCompositionElements(e) {
                                        if (this._isComposing) {
                                            if (this._bufferService.buffer.isCursorInViewport) {
                                                const e = Math.min(this._bufferService.buffer.x, this._bufferService.cols - 1),
                                                    t = this._renderService.dimensions.css.cell.height,
                                                    i = this._bufferService.buffer.y * this._renderService.dimensions.css.cell.height,
                                                    r = e * this._renderService.dimensions.css.cell.width;
                                                this._compositionView.style.left = r + "px", this._compositionView.style.top = i + "px", this._compositionView.style.height = t + "px", this._compositionView.style.lineHeight = t + "px", this._compositionView.style.fontFamily = this._optionsService.rawOptions.fontFamily, this._compositionView.style.fontSize = this._optionsService.rawOptions.fontSize + "px";
                                                const s = this._compositionView.getBoundingClientRect();
                                                this._textarea.style.left = r + "px", this._textarea.style.top = i + "px", this._textarea.style.width = Math.max(s.width, 1) + "px", this._textarea.style.height = Math.max(s.height, 1) + "px", this._textarea.style.lineHeight = s.height + "px"
                                            }
                                            e || setTimeout((() => this.updateCompositionElements(!0)), 0)
                                        }
                                    }
                                };
                                t.CompositionHelper = c = r([s(2, o.IBufferService), s(3, o.IOptionsService), s(4, o.ICoreService), s(5, n.IRenderService)], c)
                            },
                            9806: (e, t) => {
                                function i(e, t, i) {
                                    const r = i.getBoundingClientRect(),
                                        s = e.getComputedStyle(i),
                                        n = parseInt(s.getPropertyValue("padding-left")),
                                        o = parseInt(s.getPropertyValue("padding-top"));
                                    return [t.clientX - r.left - n, t.clientY - r.top - o]
                                }
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.getCoords = t.getCoordsRelativeToElement = void 0, t.getCoordsRelativeToElement = i, t.getCoords = function(e, t, r, s, n, o, a, c, l) {
                                    if (!o) return;
                                    const h = i(e, t, r);
                                    return h ? (h[0] = Math.ceil((h[0] + (l ? a / 2 : 0)) / a), h[1] = Math.ceil(h[1] / c), h[0] = Math.min(Math.max(h[0], 1), s + (l ? 1 : 0)), h[1] = Math.min(Math.max(h[1], 1), n), h) : void 0
                                }
                            },
                            9504: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.moveToCellSequence = void 0;
                                const r = i(2584);

                                function s(e, t, i, r) {
                                    const s = e - n(e, i),
                                        a = t - n(t, i),
                                        h = Math.abs(s - a) - function(e, t, i) {
                                            let r = 0;
                                            const s = e - n(e, i),
                                                a = t - n(t, i);
                                            for (let n = 0; n < Math.abs(s - a); n++) {
                                                const a = "A" === o(e, t) ? -1 : 1;
                                                i.buffer.lines.get(s + a * n)?.isWrapped && r++
                                            }
                                            return r
                                        }(e, t, i);
                                    return l(h, c(o(e, t), r))
                                }

                                function n(e, t) {
                                    let i = 0,
                                        r = t.buffer.lines.get(e),
                                        s = r?.isWrapped;
                                    for (; s && e >= 0 && e < t.rows;) i++, r = t.buffer.lines.get(--e), s = r?.isWrapped;
                                    return i
                                }

                                function o(e, t) {
                                    return e > t ? "A" : "B"
                                }

                                function a(e, t, i, r, s, n) {
                                    let o = e,
                                        a = t,
                                        c = "";
                                    for (; o !== i || a !== r;) o += s ? 1 : -1, s && o > n.cols - 1 ? (c += n.buffer.translateBufferLineToString(a, !1, e, o), o = 0, e = 0, a++) : !s && o < 0 && (c += n.buffer.translateBufferLineToString(a, !1, 0, e + 1), o = n.cols - 1, e = o, a--);
                                    return c + n.buffer.translateBufferLineToString(a, !1, e, o)
                                }

                                function c(e, t) {
                                    const i = t ? "O" : "[";
                                    return r.C0.ESC + i + e
                                }

                                function l(e, t) {
                                    e = Math.floor(e);
                                    let i = "";
                                    for (let r = 0; r < e; r++) i += t;
                                    return i
                                }
                                t.moveToCellSequence = function(e, t, i, r) {
                                    const o = i.buffer.x,
                                        h = i.buffer.y;
                                    if (!i.buffer.hasScrollback) return function(e, t, i, r, o, h) {
                                        return 0 === s(t, r, o, h).length ? "" : l(a(e, t, e, t - n(t, o), !1, o).length, c("D", h))
                                    }(o, h, 0, t, i, r) + s(h, t, i, r) + function(e, t, i, r, o, h) {
                                        let u;
                                        u = s(t, r, o, h).length > 0 ? r - n(r, o) : t;
                                        const d = r,
                                            f = function(e, t, i, r, o, a) {
                                                let c;
                                                return c = s(i, r, o, a).length > 0 ? r - n(r, o) : t, e < i && c <= r || e >= i && c < r ? "C" : "D"
                                            }(e, t, i, r, o, h);
                                        return l(a(e, u, i, d, "C" === f, o).length, c(f, h))
                                    }(o, h, e, t, i, r);
                                    let u;
                                    if (h === t) return u = o > e ? "D" : "C", l(Math.abs(o - e), c(u, r));
                                    u = h > t ? "D" : "C";
                                    const d = Math.abs(h - t);
                                    return l(function(e, t) {
                                        return t.cols - e
                                    }(h > t ? e : o, i) + (d - 1) * i.cols + 1 + ((h > t ? o : e) - 1), c(u, r))
                                }
                            },
                            1296: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.DomRenderer = void 0;
                                const n = i(3787),
                                    o = i(2550),
                                    a = i(2223),
                                    c = i(6171),
                                    l = i(6052),
                                    h = i(4725),
                                    u = i(8055),
                                    d = i(8460),
                                    f = i(844),
                                    p = i(2585),
                                    _ = "xterm-dom-renderer-owner-",
                                    g = "xterm-rows",
                                    v = "xterm-fg-",
                                    m = "xterm-bg-",
                                    b = "xterm-focus",
                                    w = "xterm-selection";
                                let y = 1,
                                    S = t.DomRenderer = class extends f.Disposable {
                                        constructor(e, t, i, r, s, a, h, u, p, v, m, b, S) {
                                            super(), this._terminal = e, this._document = t, this._element = i, this._screenElement = r, this._viewportElement = s, this._helperContainer = a, this._linkifier2 = h, this._charSizeService = p, this._optionsService = v, this._bufferService = m, this._coreBrowserService = b, this._themeService = S, this._terminalClass = y++, this._rowElements = [], this._selectionRenderModel = (0, l.createSelectionRenderModel)(), this.onRequestRedraw = this.register(new d.EventEmitter).event, this._rowContainer = this._document.createElement("div"), this._rowContainer.classList.add(g), this._rowContainer.style.lineHeight = "normal", this._rowContainer.setAttribute("aria-hidden", "true"), this._refreshRowElements(this._bufferService.cols, this._bufferService.rows), this._selectionContainer = this._document.createElement("div"), this._selectionContainer.classList.add(w), this._selectionContainer.setAttribute("aria-hidden", "true"), this.dimensions = (0, c.createRenderDimensions)(), this._updateDimensions(), this.register(this._optionsService.onOptionChange((() => this._handleOptionsChanged()))), this.register(this._themeService.onChangeColors((e => this._injectCss(e)))), this._injectCss(this._themeService.colors), this._rowFactory = u.createInstance(n.DomRendererRowFactory, document), this._element.classList.add(_ + this._terminalClass), this._screenElement.appendChild(this._rowContainer), this._screenElement.appendChild(this._selectionContainer), this.register(this._linkifier2.onShowLinkUnderline((e => this._handleLinkHover(e)))), this.register(this._linkifier2.onHideLinkUnderline((e => this._handleLinkLeave(e)))), this.register((0, f.toDisposable)((() => {
                                                this._element.classList.remove(_ + this._terminalClass), this._rowContainer.remove(), this._selectionContainer.remove(), this._widthCache.dispose(), this._themeStyleElement.remove(), this._dimensionsStyleElement.remove()
                                            }))), this._widthCache = new o.WidthCache(this._document, this._helperContainer), this._widthCache.setFont(this._optionsService.rawOptions.fontFamily, this._optionsService.rawOptions.fontSize, this._optionsService.rawOptions.fontWeight, this._optionsService.rawOptions.fontWeightBold), this._setDefaultSpacing()
                                        }
                                        _updateDimensions() {
                                            const e = this._coreBrowserService.dpr;
                                            this.dimensions.device.char.width = this._charSizeService.width * e, this.dimensions.device.char.height = Math.ceil(this._charSizeService.height * e), this.dimensions.device.cell.width = this.dimensions.device.char.width + Math.round(this._optionsService.rawOptions.letterSpacing), this.dimensions.device.cell.height = Math.floor(this.dimensions.device.char.height * this._optionsService.rawOptions.lineHeight), this.dimensions.device.char.left = 0, this.dimensions.device.char.top = 0, this.dimensions.device.canvas.width = this.dimensions.device.cell.width * this._bufferService.cols, this.dimensions.device.canvas.height = this.dimensions.device.cell.height * this._bufferService.rows, this.dimensions.css.canvas.width = Math.round(this.dimensions.device.canvas.width / e), this.dimensions.css.canvas.height = Math.round(this.dimensions.device.canvas.height / e), this.dimensions.css.cell.width = this.dimensions.css.canvas.width / this._bufferService.cols, this.dimensions.css.cell.height = this.dimensions.css.canvas.height / this._bufferService.rows;
                                            for (const e of this._rowElements) e.style.width = `${this.dimensions.css.canvas.width}px`, e.style.height = `${this.dimensions.css.cell.height}px`, e.style.lineHeight = `${this.dimensions.css.cell.height}px`, e.style.overflow = "hidden";
                                            this._dimensionsStyleElement || (this._dimensionsStyleElement = this._document.createElement("style"), this._screenElement.appendChild(this._dimensionsStyleElement));
                                            const t = `${this._terminalSelector} .${g} span { display: inline-block; height: 100%; vertical-align: top;}`;
                                            this._dimensionsStyleElement.textContent = t, this._selectionContainer.style.height = this._viewportElement.style.height, this._screenElement.style.width = `${this.dimensions.css.canvas.width}px`, this._screenElement.style.height = `${this.dimensions.css.canvas.height}px`
                                        }
                                        _injectCss(e) {
                                            this._themeStyleElement || (this._themeStyleElement = this._document.createElement("style"), this._screenElement.appendChild(this._themeStyleElement));
                                            let t = `${this._terminalSelector} .${g} { color: ${e.foreground.css}; font-family: ${this._optionsService.rawOptions.fontFamily}; font-size: ${this._optionsService.rawOptions.fontSize}px; font-kerning: none; white-space: pre}`;
                                            t += `${this._terminalSelector} .${g} .xterm-dim { color: ${u.color.multiplyOpacity(e.foreground,.5).css};}`, t += `${this._terminalSelector} span:not(.xterm-bold) { font-weight: ${this._optionsService.rawOptions.fontWeight};}${this._terminalSelector} span.xterm-bold { font-weight: ${this._optionsService.rawOptions.fontWeightBold};}${this._terminalSelector} span.xterm-italic { font-style: italic;}`;
                                            const i = `blink_underline_${this._terminalClass}`,
                                                r = `blink_bar_${this._terminalClass}`,
                                                s = `blink_block_${this._terminalClass}`;
                                            t += `@keyframes ${i} { 50% {  border-bottom-style: hidden; }}`, t += `@keyframes ${r} { 50% {  box-shadow: none; }}`, t += `@keyframes ${s} { 0% {  background-color: ${e.cursor.css};  color: ${e.cursorAccent.css}; } 50% {  background-color: inherit;  color: ${e.cursor.css}; }}`, t += `${this._terminalSelector} .${g}.${b} .xterm-cursor.xterm-cursor-blink.xterm-cursor-underline { animation: ${i} 1s step-end infinite;}${this._terminalSelector} .${g}.${b} .xterm-cursor.xterm-cursor-blink.xterm-cursor-bar { animation: ${r} 1s step-end infinite;}${this._terminalSelector} .${g}.${b} .xterm-cursor.xterm-cursor-blink.xterm-cursor-block { animation: ${s} 1s step-end infinite;}${this._terminalSelector} .${g} .xterm-cursor.xterm-cursor-block { background-color: ${e.cursor.css}; color: ${e.cursorAccent.css};}${this._terminalSelector} .${g} .xterm-cursor.xterm-cursor-block:not(.xterm-cursor-blink) { background-color: ${e.cursor.css} !important; color: ${e.cursorAccent.css} !important;}${this._terminalSelector} .${g} .xterm-cursor.xterm-cursor-outline { outline: 1px solid ${e.cursor.css}; outline-offset: -1px;}${this._terminalSelector} .${g} .xterm-cursor.xterm-cursor-bar { box-shadow: ${this._optionsService.rawOptions.cursorWidth}px 0 0 ${e.cursor.css} inset;}${this._terminalSelector} .${g} .xterm-cursor.xterm-cursor-underline { border-bottom: 1px ${e.cursor.css}; border-bottom-style: solid; height: calc(100% - 1px);}`, t += `${this._terminalSelector} .${w} { position: absolute; top: 0; left: 0; z-index: 1; pointer-events: none;}${this._terminalSelector}.focus .${w} div { position: absolute; background-color: ${e.selectionBackgroundOpaque.css};}${this._terminalSelector} .${w} div { position: absolute; background-color: ${e.selectionInactiveBackgroundOpaque.css};}`;
                                            for (const [i, r] of e.ansi.entries()) t += `${this._terminalSelector} .${v}${i} { color: ${r.css}; }${this._terminalSelector} .${v}${i}.xterm-dim { color: ${u.color.multiplyOpacity(r,.5).css}; }${this._terminalSelector} .${m}${i} { background-color: ${r.css}; }`;
                                            t += `${this._terminalSelector} .${v}${a.INVERTED_DEFAULT_COLOR} { color: ${u.color.opaque(e.background).css}; }${this._terminalSelector} .${v}${a.INVERTED_DEFAULT_COLOR}.xterm-dim { color: ${u.color.multiplyOpacity(u.color.opaque(e.background),.5).css}; }${this._terminalSelector} .${m}${a.INVERTED_DEFAULT_COLOR} { background-color: ${e.foreground.css}; }`, this._themeStyleElement.textContent = t
                                        }
                                        _setDefaultSpacing() {
                                            const e = this.dimensions.css.cell.width - this._widthCache.get("W", !1, !1);
                                            this._rowContainer.style.letterSpacing = `${e}px`, this._rowFactory.defaultSpacing = e
                                        }
                                        handleDevicePixelRatioChange() {
                                            this._updateDimensions(), this._widthCache.clear(), this._setDefaultSpacing()
                                        }
                                        _refreshRowElements(e, t) {
                                            for (let e = this._rowElements.length; e <= t; e++) {
                                                const e = this._document.createElement("div");
                                                this._rowContainer.appendChild(e), this._rowElements.push(e)
                                            }
                                            for (; this._rowElements.length > t;) this._rowContainer.removeChild(this._rowElements.pop())
                                        }
                                        handleResize(e, t) {
                                            this._refreshRowElements(e, t), this._updateDimensions(), this.handleSelectionChanged(this._selectionRenderModel.selectionStart, this._selectionRenderModel.selectionEnd, this._selectionRenderModel.columnSelectMode)
                                        }
                                        handleCharSizeChanged() {
                                            this._updateDimensions(), this._widthCache.clear(), this._setDefaultSpacing()
                                        }
                                        handleBlur() {
                                            this._rowContainer.classList.remove(b), this.renderRows(0, this._bufferService.rows - 1)
                                        }
                                        handleFocus() {
                                            this._rowContainer.classList.add(b), this.renderRows(this._bufferService.buffer.y, this._bufferService.buffer.y)
                                        }
                                        handleSelectionChanged(e, t, i) {
                                            if (this._selectionContainer.replaceChildren(), this._rowFactory.handleSelectionChanged(e, t, i), this.renderRows(0, this._bufferService.rows - 1), !e || !t) return;
                                            this._selectionRenderModel.update(this._terminal, e, t, i);
                                            const r = this._selectionRenderModel.viewportStartRow,
                                                s = this._selectionRenderModel.viewportEndRow,
                                                n = this._selectionRenderModel.viewportCappedStartRow,
                                                o = this._selectionRenderModel.viewportCappedEndRow;
                                            if (n >= this._bufferService.rows || o < 0) return;
                                            const a = this._document.createDocumentFragment();
                                            if (i) {
                                                const i = e[0] > t[0];
                                                a.appendChild(this._createSelectionElement(n, i ? t[0] : e[0], i ? e[0] : t[0], o - n + 1))
                                            } else {
                                                const i = r === n ? e[0] : 0,
                                                    c = n === s ? t[0] : this._bufferService.cols;
                                                a.appendChild(this._createSelectionElement(n, i, c));
                                                const l = o - n - 1;
                                                if (a.appendChild(this._createSelectionElement(n + 1, 0, this._bufferService.cols, l)), n !== o) {
                                                    const e = s === o ? t[0] : this._bufferService.cols;
                                                    a.appendChild(this._createSelectionElement(o, 0, e))
                                                }
                                            }
                                            this._selectionContainer.appendChild(a)
                                        }
                                        _createSelectionElement(e, t, i, r = 1) {
                                            const s = this._document.createElement("div"),
                                                n = t * this.dimensions.css.cell.width;
                                            let o = this.dimensions.css.cell.width * (i - t);
                                            return n + o > this.dimensions.css.canvas.width && (o = this.dimensions.css.canvas.width - n), s.style.height = r * this.dimensions.css.cell.height + "px", s.style.top = e * this.dimensions.css.cell.height + "px", s.style.left = `${n}px`, s.style.width = `${o}px`, s
                                        }
                                        handleCursorMove() {}
                                        _handleOptionsChanged() {
                                            this._updateDimensions(), this._injectCss(this._themeService.colors), this._widthCache.setFont(this._optionsService.rawOptions.fontFamily, this._optionsService.rawOptions.fontSize, this._optionsService.rawOptions.fontWeight, this._optionsService.rawOptions.fontWeightBold), this._setDefaultSpacing()
                                        }
                                        clear() {
                                            for (const e of this._rowElements) e.replaceChildren()
                                        }
                                        renderRows(e, t) {
                                            const i = this._bufferService.buffer,
                                                r = i.ybase + i.y,
                                                s = Math.min(i.x, this._bufferService.cols - 1),
                                                n = this._optionsService.rawOptions.cursorBlink,
                                                o = this._optionsService.rawOptions.cursorStyle,
                                                a = this._optionsService.rawOptions.cursorInactiveStyle;
                                            for (let c = e; c <= t; c++) {
                                                const e = c + i.ydisp,
                                                    t = this._rowElements[c],
                                                    l = i.lines.get(e);
                                                if (!t || !l) break;
                                                t.replaceChildren(...this._rowFactory.createRow(l, e, e === r, o, a, s, n, this.dimensions.css.cell.width, this._widthCache, -1, -1))
                                            }
                                        }
                                        get _terminalSelector() {
                                            return `.${_}${this._terminalClass}`
                                        }
                                        _handleLinkHover(e) {
                                            this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, !0)
                                        }
                                        _handleLinkLeave(e) {
                                            this._setCellUnderline(e.x1, e.x2, e.y1, e.y2, e.cols, !1)
                                        }
                                        _setCellUnderline(e, t, i, r, s, n) {
                                            i < 0 && (e = 0), r < 0 && (t = 0);
                                            const o = this._bufferService.rows - 1;
                                            i = Math.max(Math.min(i, o), 0), r = Math.max(Math.min(r, o), 0), s = Math.min(s, this._bufferService.cols);
                                            const a = this._bufferService.buffer,
                                                c = a.ybase + a.y,
                                                l = Math.min(a.x, s - 1),
                                                h = this._optionsService.rawOptions.cursorBlink,
                                                u = this._optionsService.rawOptions.cursorStyle,
                                                d = this._optionsService.rawOptions.cursorInactiveStyle;
                                            for (let o = i; o <= r; ++o) {
                                                const f = o + a.ydisp,
                                                    p = this._rowElements[o],
                                                    _ = a.lines.get(f);
                                                if (!p || !_) break;
                                                p.replaceChildren(...this._rowFactory.createRow(_, f, f === c, u, d, l, h, this.dimensions.css.cell.width, this._widthCache, n ? o === i ? e : 0 : -1, n ? (o === r ? t : s) - 1 : -1))
                                            }
                                        }
                                    };
                                t.DomRenderer = S = r([s(7, p.IInstantiationService), s(8, h.ICharSizeService), s(9, p.IOptionsService), s(10, p.IBufferService), s(11, h.ICoreBrowserService), s(12, h.IThemeService)], S)
                            },
                            3787: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.DomRendererRowFactory = void 0;
                                const n = i(2223),
                                    o = i(643),
                                    a = i(511),
                                    c = i(2585),
                                    l = i(8055),
                                    h = i(4725),
                                    u = i(4269),
                                    d = i(6171),
                                    f = i(3734);
                                let p = t.DomRendererRowFactory = class {
                                    constructor(e, t, i, r, s, n, o) {
                                        this._document = e, this._characterJoinerService = t, this._optionsService = i, this._coreBrowserService = r, this._coreService = s, this._decorationService = n, this._themeService = o, this._workCell = new a.CellData, this._columnSelectMode = !1, this.defaultSpacing = 0
                                    }
                                    handleSelectionChanged(e, t, i) {
                                        this._selectionStart = e, this._selectionEnd = t, this._columnSelectMode = i
                                    }
                                    createRow(e, t, i, r, s, a, c, h, d, p, g) {
                                        const v = [],
                                            m = this._characterJoinerService.getJoinedCharacters(t),
                                            b = this._themeService.colors;
                                        let w, y = e.getNoBgTrimmedLength();
                                        i && y < a + 1 && (y = a + 1);
                                        let S = 0,
                                            C = "",
                                            x = 0,
                                            E = 0,
                                            O = 0,
                                            k = !1,
                                            L = 0,
                                            D = !1,
                                            M = 0;
                                        const A = [],
                                            R = -1 !== p && -1 !== g;
                                        for (let P = 0; P < y; P++) {
                                            e.loadCell(P, this._workCell);
                                            let y = this._workCell.getWidth();
                                            if (0 === y) continue;
                                            let T = !1,
                                                B = P,
                                                I = this._workCell;
                                            if (m.length > 0 && P === m[0][0]) {
                                                T = !0;
                                                const t = m.shift();
                                                I = new u.JoinedCellData(this._workCell, e.translateToString(!0, t[0], t[1]), t[1] - t[0]), B = t[1] - 1, y = I.getWidth()
                                            }
                                            const $ = this._isCellInSelection(P, t),
                                                j = i && P === a,
                                                F = R && P >= p && P <= g;
                                            let N = !1;
                                            this._decorationService.forEachDecorationAtCell(P, t, void 0, (e => {
                                                N = !0
                                            }));
                                            let W = I.getChars() || o.WHITESPACE_CELL_CHAR;
                                            if (" " === W && (I.isUnderline() || I.isOverline()) && (W = " "), M = y * h - d.get(W, I.isBold(), I.isItalic()), w) {
                                                if (S && ($ && D || !$ && !D && I.bg === x) && ($ && D && b.selectionForeground || I.fg === E) && I.extended.ext === O && F === k && M === L && !j && !T && !N) {
                                                    I.isInvisible() ? C += o.WHITESPACE_CELL_CHAR : C += W, S++;
                                                    continue
                                                }
                                                S && (w.textContent = C), w = this._document.createElement("span"), S = 0, C = ""
                                            } else w = this._document.createElement("span");
                                            if (x = I.bg, E = I.fg, O = I.extended.ext, k = F, L = M, D = $, T && a >= P && a <= B && (a = P), !this._coreService.isCursorHidden && j && this._coreService.isCursorInitialized)
                                                if (A.push("xterm-cursor"), this._coreBrowserService.isFocused) c && A.push("xterm-cursor-blink"), A.push("bar" === r ? "xterm-cursor-bar" : "underline" === r ? "xterm-cursor-underline" : "xterm-cursor-block");
                                                else if (s) switch (s) {
                                                case "outline":
                                                    A.push("xterm-cursor-outline");
                                                    break;
                                                case "block":
                                                    A.push("xterm-cursor-block");
                                                    break;
                                                case "bar":
                                                    A.push("xterm-cursor-bar");
                                                    break;
                                                case "underline":
                                                    A.push("xterm-cursor-underline")
                                            }
                                            if (I.isBold() && A.push("xterm-bold"), I.isItalic() && A.push("xterm-italic"), I.isDim() && A.push("xterm-dim"), C = I.isInvisible() ? o.WHITESPACE_CELL_CHAR : I.getChars() || o.WHITESPACE_CELL_CHAR, I.isUnderline() && (A.push(`xterm-underline-${I.extended.underlineStyle}`), " " === C && (C = " "), !I.isUnderlineColorDefault()))
                                                if (I.isUnderlineColorRGB()) w.style.textDecorationColor = `rgb(${f.AttributeData.toColorRGB(I.getUnderlineColor()).join(",")})`;
                                                else {
                                                    let e = I.getUnderlineColor();
                                                    this._optionsService.rawOptions.drawBoldTextInBrightColors && I.isBold() && e < 8 && (e += 8), w.style.textDecorationColor = b.ansi[e].css
                                                } I.isOverline() && (A.push("xterm-overline"), " " === C && (C = " ")), I.isStrikethrough() && A.push("xterm-strikethrough"), F && (w.style.textDecoration = "underline");
                                            let H = I.getFgColor(),
                                                U = I.getFgColorMode(),
                                                z = I.getBgColor(),
                                                G = I.getBgColorMode();
                                            const V = !!I.isInverse();
                                            if (V) {
                                                const e = H;
                                                H = z, z = e;
                                                const t = U;
                                                U = G, G = t
                                            }
                                            let q, K, X, J = !1;
                                            switch (this._decorationService.forEachDecorationAtCell(P, t, void 0, (e => {
                                                    "top" !== e.options.layer && J || (e.backgroundColorRGB && (G = 50331648, z = e.backgroundColorRGB.rgba >> 8 & 16777215, q = e.backgroundColorRGB), e.foregroundColorRGB && (U = 50331648, H = e.foregroundColorRGB.rgba >> 8 & 16777215, K = e.foregroundColorRGB), J = "top" === e.options.layer)
                                                })), !J && $ && (q = this._coreBrowserService.isFocused ? b.selectionBackgroundOpaque : b.selectionInactiveBackgroundOpaque, z = q.rgba >> 8 & 16777215, G = 50331648, J = !0, b.selectionForeground && (U = 50331648, H = b.selectionForeground.rgba >> 8 & 16777215, K = b.selectionForeground)), J && A.push("xterm-decoration-top"), G) {
                                                case 16777216:
                                                case 33554432:
                                                    X = b.ansi[z], A.push(`xterm-bg-${z}`);
                                                    break;
                                                case 50331648:
                                                    X = l.channels.toColor(z >> 16, z >> 8 & 255, 255 & z), this._addStyle(w, `background-color:#${_((z>>>0).toString(16),"0",6)}`);
                                                    break;
                                                default:
                                                    V ? (X = b.foreground, A.push(`xterm-bg-${n.INVERTED_DEFAULT_COLOR}`)) : X = b.background
                                            }
                                            switch (q || I.isDim() && (q = l.color.multiplyOpacity(X, .5)), U) {
                                                case 16777216:
                                                case 33554432:
                                                    I.isBold() && H < 8 && this._optionsService.rawOptions.drawBoldTextInBrightColors && (H += 8), this._applyMinimumContrast(w, X, b.ansi[H], I, q, void 0) || A.push(`xterm-fg-${H}`);
                                                    break;
                                                case 50331648:
                                                    const e = l.channels.toColor(H >> 16 & 255, H >> 8 & 255, 255 & H);
                                                    this._applyMinimumContrast(w, X, e, I, q, K) || this._addStyle(w, `color:#${_(H.toString(16),"0",6)}`);
                                                    break;
                                                default:
                                                    this._applyMinimumContrast(w, X, b.foreground, I, q, K) || V && A.push(`xterm-fg-${n.INVERTED_DEFAULT_COLOR}`)
                                            }
                                            A.length && (w.className = A.join(" "), A.length = 0), j || T || N ? w.textContent = C : S++, M !== this.defaultSpacing && (w.style.letterSpacing = `${M}px`), v.push(w), P = B
                                        }
                                        return w && S && (w.textContent = C), v
                                    }
                                    _applyMinimumContrast(e, t, i, r, s, n) {
                                        if (1 === this._optionsService.rawOptions.minimumContrastRatio || (0, d.treatGlyphAsBackgroundColor)(r.getCode())) return !1;
                                        const o = this._getContrastCache(r);
                                        let a;
                                        if (s || n || (a = o.getColor(t.rgba, i.rgba)), void 0 === a) {
                                            const e = this._optionsService.rawOptions.minimumContrastRatio / (r.isDim() ? 2 : 1);
                                            a = l.color.ensureContrastRatio(s || t, n || i, e), o.setColor((s || t).rgba, (n || i).rgba, a ?? null)
                                        }
                                        return !!a && (this._addStyle(e, `color:${a.css}`), !0)
                                    }
                                    _getContrastCache(e) {
                                        return e.isDim() ? this._themeService.colors.halfContrastCache : this._themeService.colors.contrastCache
                                    }
                                    _addStyle(e, t) {
                                        e.setAttribute("style", `${e.getAttribute("style")||""}${t};`)
                                    }
                                    _isCellInSelection(e, t) {
                                        const i = this._selectionStart,
                                            r = this._selectionEnd;
                                        return !(!i || !r) && (this._columnSelectMode ? i[0] <= r[0] ? e >= i[0] && t >= i[1] && e < r[0] && t <= r[1] : e < i[0] && t >= i[1] && e >= r[0] && t <= r[1] : t > i[1] && t < r[1] || i[1] === r[1] && t === i[1] && e >= i[0] && e < r[0] || i[1] < r[1] && t === r[1] && e < r[0] || i[1] < r[1] && t === i[1] && e >= i[0])
                                    }
                                };

                                function _(e, t, i) {
                                    for (; e.length < i;) e = t + e;
                                    return e
                                }
                                t.DomRendererRowFactory = p = r([s(1, h.ICharacterJoinerService), s(2, c.IOptionsService), s(3, h.ICoreBrowserService), s(4, c.ICoreService), s(5, c.IDecorationService), s(6, h.IThemeService)], p)
                            },
                            2550: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.WidthCache = void 0, t.WidthCache = class {
                                    constructor(e, t) {
                                        this._flat = new Float32Array(256), this._font = "", this._fontSize = 0, this._weight = "normal", this._weightBold = "bold", this._measureElements = [], this._container = e.createElement("div"), this._container.classList.add("xterm-width-cache-measure-container"), this._container.setAttribute("aria-hidden", "true"), this._container.style.whiteSpace = "pre", this._container.style.fontKerning = "none";
                                        const i = e.createElement("span");
                                        i.classList.add("xterm-char-measure-element");
                                        const r = e.createElement("span");
                                        r.classList.add("xterm-char-measure-element"), r.style.fontWeight = "bold";
                                        const s = e.createElement("span");
                                        s.classList.add("xterm-char-measure-element"), s.style.fontStyle = "italic";
                                        const n = e.createElement("span");
                                        n.classList.add("xterm-char-measure-element"), n.style.fontWeight = "bold", n.style.fontStyle = "italic", this._measureElements = [i, r, s, n], this._container.appendChild(i), this._container.appendChild(r), this._container.appendChild(s), this._container.appendChild(n), t.appendChild(this._container), this.clear()
                                    }
                                    dispose() {
                                        this._container.remove(), this._measureElements.length = 0, this._holey = void 0
                                    }
                                    clear() {
                                        this._flat.fill(-9999), this._holey = new Map
                                    }
                                    setFont(e, t, i, r) {
                                        e === this._font && t === this._fontSize && i === this._weight && r === this._weightBold || (this._font = e, this._fontSize = t, this._weight = i, this._weightBold = r, this._container.style.fontFamily = this._font, this._container.style.fontSize = `${this._fontSize}px`, this._measureElements[0].style.fontWeight = `${i}`, this._measureElements[1].style.fontWeight = `${r}`, this._measureElements[2].style.fontWeight = `${i}`, this._measureElements[3].style.fontWeight = `${r}`, this.clear())
                                    }
                                    get(e, t, i) {
                                        let r = 0;
                                        if (!t && !i && 1 === e.length && (r = e.charCodeAt(0)) < 256) {
                                            if (-9999 !== this._flat[r]) return this._flat[r];
                                            const t = this._measure(e, 0);
                                            return t > 0 && (this._flat[r] = t), t
                                        }
                                        let s = e;
                                        t && (s += "B"), i && (s += "I");
                                        let n = this._holey.get(s);
                                        if (void 0 === n) {
                                            let r = 0;
                                            t && (r |= 1), i && (r |= 2), n = this._measure(e, r), n > 0 && this._holey.set(s, n)
                                        }
                                        return n
                                    }
                                    _measure(e, t) {
                                        const i = this._measureElements[t];
                                        return i.textContent = e.repeat(32), i.offsetWidth / 32
                                    }
                                }
                            },
                            2223: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.TEXT_BASELINE = t.DIM_OPACITY = t.INVERTED_DEFAULT_COLOR = void 0;
                                const r = i(6114);
                                t.INVERTED_DEFAULT_COLOR = 257, t.DIM_OPACITY = .5, t.TEXT_BASELINE = r.isFirefox || r.isLegacyEdge ? "bottom" : "ideographic"
                            },
                            6171: (e, t) => {
                                function i(e) {
                                    return 57508 <= e && e <= 57558
                                }

                                function r(e) {
                                    return e >= 128512 && e <= 128591 || e >= 127744 && e <= 128511 || e >= 128640 && e <= 128767 || e >= 9728 && e <= 9983 || e >= 9984 && e <= 10175 || e >= 65024 && e <= 65039 || e >= 129280 && e <= 129535 || e >= 127462 && e <= 127487
                                }
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.computeNextVariantOffset = t.createRenderDimensions = t.treatGlyphAsBackgroundColor = t.allowRescaling = t.isEmoji = t.isRestrictedPowerlineGlyph = t.isPowerlineGlyph = t.throwIfFalsy = void 0, t.throwIfFalsy = function(e) {
                                    if (!e) throw new Error("value must not be falsy");
                                    return e
                                }, t.isPowerlineGlyph = i, t.isRestrictedPowerlineGlyph = function(e) {
                                    return 57520 <= e && e <= 57527
                                }, t.isEmoji = r, t.allowRescaling = function(e, t, s, n) {
                                    return 1 === t && s > Math.ceil(1.5 * n) && void 0 !== e && e > 255 && !r(e) && !i(e) && ! function(e) {
                                        return 57344 <= e && e <= 63743
                                    }(e)
                                }, t.treatGlyphAsBackgroundColor = function(e) {
                                    return i(e) || function(e) {
                                        return 9472 <= e && e <= 9631
                                    }(e)
                                }, t.createRenderDimensions = function() {
                                    return {
                                        css: {
                                            canvas: {
                                                width: 0,
                                                height: 0
                                            },
                                            cell: {
                                                width: 0,
                                                height: 0
                                            }
                                        },
                                        device: {
                                            canvas: {
                                                width: 0,
                                                height: 0
                                            },
                                            cell: {
                                                width: 0,
                                                height: 0
                                            },
                                            char: {
                                                width: 0,
                                                height: 0,
                                                left: 0,
                                                top: 0
                                            }
                                        }
                                    }
                                }, t.computeNextVariantOffset = function(e, t, i = 0) {
                                    return (e - (2 * Math.round(t) - i)) % (2 * Math.round(t))
                                }
                            },
                            6052: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.createSelectionRenderModel = void 0;
                                class i {
                                    constructor() {
                                        this.clear()
                                    }
                                    clear() {
                                        this.hasSelection = !1, this.columnSelectMode = !1, this.viewportStartRow = 0, this.viewportEndRow = 0, this.viewportCappedStartRow = 0, this.viewportCappedEndRow = 0, this.startCol = 0, this.endCol = 0, this.selectionStart = void 0, this.selectionEnd = void 0
                                    }
                                    update(e, t, i, r = !1) {
                                        if (this.selectionStart = t, this.selectionEnd = i, !t || !i || t[0] === i[0] && t[1] === i[1]) return void this.clear();
                                        const s = e.buffers.active.ydisp,
                                            n = t[1] - s,
                                            o = i[1] - s,
                                            a = Math.max(n, 0),
                                            c = Math.min(o, e.rows - 1);
                                        a >= e.rows || c < 0 ? this.clear() : (this.hasSelection = !0, this.columnSelectMode = r, this.viewportStartRow = n, this.viewportEndRow = o, this.viewportCappedStartRow = a, this.viewportCappedEndRow = c, this.startCol = t[0], this.endCol = i[0])
                                    }
                                    isCellSelected(e, t, i) {
                                        return !!this.hasSelection && (i -= e.buffer.active.viewportY, this.columnSelectMode ? this.startCol <= this.endCol ? t >= this.startCol && i >= this.viewportCappedStartRow && t < this.endCol && i <= this.viewportCappedEndRow : t < this.startCol && i >= this.viewportCappedStartRow && t >= this.endCol && i <= this.viewportCappedEndRow : i > this.viewportStartRow && i < this.viewportEndRow || this.viewportStartRow === this.viewportEndRow && i === this.viewportStartRow && t >= this.startCol && t < this.endCol || this.viewportStartRow < this.viewportEndRow && i === this.viewportEndRow && t < this.endCol || this.viewportStartRow < this.viewportEndRow && i === this.viewportStartRow && t >= this.startCol)
                                    }
                                }
                                t.createSelectionRenderModel = function() {
                                    return new i
                                }
                            },
                            456: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.SelectionModel = void 0, t.SelectionModel = class {
                                    constructor(e) {
                                        this._bufferService = e, this.isSelectAllActive = !1, this.selectionStartLength = 0
                                    }
                                    clearSelection() {
                                        this.selectionStart = void 0, this.selectionEnd = void 0, this.isSelectAllActive = !1, this.selectionStartLength = 0
                                    }
                                    get finalSelectionStart() {
                                        return this.isSelectAllActive ? [0, 0] : this.selectionEnd && this.selectionStart && this.areSelectionValuesReversed() ? this.selectionEnd : this.selectionStart
                                    }
                                    get finalSelectionEnd() {
                                        if (this.isSelectAllActive) return [this._bufferService.cols, this._bufferService.buffer.ybase + this._bufferService.rows - 1];
                                        if (this.selectionStart) {
                                            if (!this.selectionEnd || this.areSelectionValuesReversed()) {
                                                const e = this.selectionStart[0] + this.selectionStartLength;
                                                return e > this._bufferService.cols ? e % this._bufferService.cols == 0 ? [this._bufferService.cols, this.selectionStart[1] + Math.floor(e / this._bufferService.cols) - 1] : [e % this._bufferService.cols, this.selectionStart[1] + Math.floor(e / this._bufferService.cols)] : [e, this.selectionStart[1]]
                                            }
                                            if (this.selectionStartLength && this.selectionEnd[1] === this.selectionStart[1]) {
                                                const e = this.selectionStart[0] + this.selectionStartLength;
                                                return e > this._bufferService.cols ? [e % this._bufferService.cols, this.selectionStart[1] + Math.floor(e / this._bufferService.cols)] : [Math.max(e, this.selectionEnd[0]), this.selectionEnd[1]]
                                            }
                                            return this.selectionEnd
                                        }
                                    }
                                    areSelectionValuesReversed() {
                                        const e = this.selectionStart,
                                            t = this.selectionEnd;
                                        return !(!e || !t) && (e[1] > t[1] || e[1] === t[1] && e[0] > t[0])
                                    }
                                    handleTrim(e) {
                                        return this.selectionStart && (this.selectionStart[1] -= e), this.selectionEnd && (this.selectionEnd[1] -= e), this.selectionEnd && this.selectionEnd[1] < 0 ? (this.clearSelection(), !0) : (this.selectionStart && this.selectionStart[1] < 0 && (this.selectionStart[1] = 0), !1)
                                    }
                                }
                            },
                            428: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CharSizeService = void 0;
                                const n = i(2585),
                                    o = i(8460),
                                    a = i(844);
                                let c = t.CharSizeService = class extends a.Disposable {
                                    get hasValidSize() {
                                        return this.width > 0 && this.height > 0
                                    }
                                    constructor(e, t, i) {
                                        super(), this._optionsService = i, this.width = 0, this.height = 0, this._onCharSizeChange = this.register(new o.EventEmitter), this.onCharSizeChange = this._onCharSizeChange.event;
                                        try {
                                            this._measureStrategy = this.register(new u(this._optionsService))
                                        } catch {
                                            this._measureStrategy = this.register(new h(e, t, this._optionsService))
                                        }
                                        this.register(this._optionsService.onMultipleOptionChange(["fontFamily", "fontSize"], (() => this.measure())))
                                    }
                                    measure() {
                                        const e = this._measureStrategy.measure();
                                        e.width === this.width && e.height === this.height || (this.width = e.width, this.height = e.height, this._onCharSizeChange.fire())
                                    }
                                };
                                t.CharSizeService = c = r([s(2, n.IOptionsService)], c);
                                class l extends a.Disposable {
                                    constructor() {
                                        super(...arguments), this._result = {
                                            width: 0,
                                            height: 0
                                        }
                                    }
                                    _validateAndSet(e, t) {
                                        void 0 !== e && e > 0 && void 0 !== t && t > 0 && (this._result.width = e, this._result.height = t)
                                    }
                                }
                                class h extends l {
                                    constructor(e, t, i) {
                                        super(), this._document = e, this._parentElement = t, this._optionsService = i, this._measureElement = this._document.createElement("span"), this._measureElement.classList.add("xterm-char-measure-element"), this._measureElement.textContent = "W".repeat(32), this._measureElement.setAttribute("aria-hidden", "true"), this._measureElement.style.whiteSpace = "pre", this._measureElement.style.fontKerning = "none", this._parentElement.appendChild(this._measureElement)
                                    }
                                    measure() {
                                        return this._measureElement.style.fontFamily = this._optionsService.rawOptions.fontFamily, this._measureElement.style.fontSize = `${this._optionsService.rawOptions.fontSize}px`, this._validateAndSet(Number(this._measureElement.offsetWidth) / 32, Number(this._measureElement.offsetHeight)), this._result
                                    }
                                }
                                class u extends l {
                                    constructor(e) {
                                        super(), this._optionsService = e, this._canvas = new OffscreenCanvas(100, 100), this._ctx = this._canvas.getContext("2d");
                                        const t = this._ctx.measureText("W");
                                        if (!("width" in t && "fontBoundingBoxAscent" in t && "fontBoundingBoxDescent" in t)) throw new Error("Required font metrics not supported")
                                    }
                                    measure() {
                                        this._ctx.font = `${this._optionsService.rawOptions.fontSize}px ${this._optionsService.rawOptions.fontFamily}`;
                                        const e = this._ctx.measureText("W");
                                        return this._validateAndSet(e.width, e.fontBoundingBoxAscent + e.fontBoundingBoxDescent), this._result
                                    }
                                }
                            },
                            4269: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CharacterJoinerService = t.JoinedCellData = void 0;
                                const n = i(3734),
                                    o = i(643),
                                    a = i(511),
                                    c = i(2585);
                                class l extends n.AttributeData {
                                    constructor(e, t, i) {
                                        super(), this.content = 0, this.combinedData = "", this.fg = e.fg, this.bg = e.bg, this.combinedData = t, this._width = i
                                    }
                                    isCombined() {
                                        return 2097152
                                    }
                                    getWidth() {
                                        return this._width
                                    }
                                    getChars() {
                                        return this.combinedData
                                    }
                                    getCode() {
                                        return 2097151
                                    }
                                    setFromCharData(e) {
                                        throw new Error("not implemented")
                                    }
                                    getAsCharData() {
                                        return [this.fg, this.getChars(), this.getWidth(), this.getCode()]
                                    }
                                }
                                t.JoinedCellData = l;
                                let h = t.CharacterJoinerService = class e {
                                    constructor(e) {
                                        this._bufferService = e, this._characterJoiners = [], this._nextCharacterJoinerId = 0, this._workCell = new a.CellData
                                    }
                                    register(e) {
                                        const t = {
                                            id: this._nextCharacterJoinerId++,
                                            handler: e
                                        };
                                        return this._characterJoiners.push(t), t.id
                                    }
                                    deregister(e) {
                                        for (let t = 0; t < this._characterJoiners.length; t++)
                                            if (this._characterJoiners[t].id === e) return this._characterJoiners.splice(t, 1), !0;
                                        return !1
                                    }
                                    getJoinedCharacters(e) {
                                        if (0 === this._characterJoiners.length) return [];
                                        const t = this._bufferService.buffer.lines.get(e);
                                        if (!t || 0 === t.length) return [];
                                        const i = [],
                                            r = t.translateToString(!0);
                                        let s = 0,
                                            n = 0,
                                            a = 0,
                                            c = t.getFg(0),
                                            l = t.getBg(0);
                                        for (let e = 0; e < t.getTrimmedLength(); e++)
                                            if (t.loadCell(e, this._workCell), 0 !== this._workCell.getWidth()) {
                                                if (this._workCell.fg !== c || this._workCell.bg !== l) {
                                                    if (e - s > 1) {
                                                        const e = this._getJoinedRanges(r, a, n, t, s);
                                                        for (let t = 0; t < e.length; t++) i.push(e[t])
                                                    }
                                                    s = e, a = n, c = this._workCell.fg, l = this._workCell.bg
                                                }
                                                n += this._workCell.getChars().length || o.WHITESPACE_CELL_CHAR.length
                                            } if (this._bufferService.cols - s > 1) {
                                            const e = this._getJoinedRanges(r, a, n, t, s);
                                            for (let t = 0; t < e.length; t++) i.push(e[t])
                                        }
                                        return i
                                    }
                                    _getJoinedRanges(t, i, r, s, n) {
                                        const o = t.substring(i, r);
                                        let a = [];
                                        try {
                                            a = this._characterJoiners[0].handler(o)
                                        } catch (e) {
                                            console.error(e)
                                        }
                                        for (let t = 1; t < this._characterJoiners.length; t++) try {
                                            const i = this._characterJoiners[t].handler(o);
                                            for (let t = 0; t < i.length; t++) e._mergeRanges(a, i[t])
                                        } catch (e) {
                                            console.error(e)
                                        }
                                        return this._stringRangesToCellRanges(a, s, n), a
                                    }
                                    _stringRangesToCellRanges(e, t, i) {
                                        let r = 0,
                                            s = !1,
                                            n = 0,
                                            a = e[r];
                                        if (a) {
                                            for (let c = i; c < this._bufferService.cols; c++) {
                                                const i = t.getWidth(c),
                                                    l = t.getString(c).length || o.WHITESPACE_CELL_CHAR.length;
                                                if (0 !== i) {
                                                    if (!s && a[0] <= n && (a[0] = c, s = !0), a[1] <= n) {
                                                        if (a[1] = c, a = e[++r], !a) break;
                                                        a[0] <= n ? (a[0] = c, s = !0) : s = !1
                                                    }
                                                    n += l
                                                }
                                            }
                                            a && (a[1] = this._bufferService.cols)
                                        }
                                    }
                                    static _mergeRanges(e, t) {
                                        let i = !1;
                                        for (let r = 0; r < e.length; r++) {
                                            const s = e[r];
                                            if (i) {
                                                if (t[1] <= s[0]) return e[r - 1][1] = t[1], e;
                                                if (t[1] <= s[1]) return e[r - 1][1] = Math.max(t[1], s[1]), e.splice(r, 1), e;
                                                e.splice(r, 1), r--
                                            } else {
                                                if (t[1] <= s[0]) return e.splice(r, 0, t), e;
                                                if (t[1] <= s[1]) return s[0] = Math.min(t[0], s[0]), e;
                                                t[0] < s[1] && (s[0] = Math.min(t[0], s[0]), i = !0)
                                            }
                                        }
                                        return i ? e[e.length - 1][1] = t[1] : e.push(t), e
                                    }
                                };
                                t.CharacterJoinerService = h = r([s(0, c.IBufferService)], h)
                            },
                            5114: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CoreBrowserService = void 0;
                                const r = i(844),
                                    s = i(8460),
                                    n = i(3656);
                                class o extends r.Disposable {
                                    constructor(e, t, i) {
                                        super(), this._textarea = e, this._window = t, this.mainDocument = i, this._isFocused = !1, this._cachedIsFocused = void 0, this._screenDprMonitor = new a(this._window), this._onDprChange = this.register(new s.EventEmitter), this.onDprChange = this._onDprChange.event, this._onWindowChange = this.register(new s.EventEmitter), this.onWindowChange = this._onWindowChange.event, this.register(this.onWindowChange((e => this._screenDprMonitor.setWindow(e)))), this.register((0, s.forwardEvent)(this._screenDprMonitor.onDprChange, this._onDprChange)), this._textarea.addEventListener("focus", (() => this._isFocused = !0)), this._textarea.addEventListener("blur", (() => this._isFocused = !1))
                                    }
                                    get window() {
                                        return this._window
                                    }
                                    set window(e) {
                                        this._window !== e && (this._window = e, this._onWindowChange.fire(this._window))
                                    }
                                    get dpr() {
                                        return this.window.devicePixelRatio
                                    }
                                    get isFocused() {
                                        return void 0 === this._cachedIsFocused && (this._cachedIsFocused = this._isFocused && this._textarea.ownerDocument.hasFocus(), queueMicrotask((() => this._cachedIsFocused = void 0))), this._cachedIsFocused
                                    }
                                }
                                t.CoreBrowserService = o;
                                class a extends r.Disposable {
                                    constructor(e) {
                                        super(), this._parentWindow = e, this._windowResizeListener = this.register(new r.MutableDisposable), this._onDprChange = this.register(new s.EventEmitter), this.onDprChange = this._onDprChange.event, this._outerListener = () => this._setDprAndFireIfDiffers(), this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio, this._updateDpr(), this._setWindowResizeListener(), this.register((0, r.toDisposable)((() => this.clearListener())))
                                    }
                                    setWindow(e) {
                                        this._parentWindow = e, this._setWindowResizeListener(), this._setDprAndFireIfDiffers()
                                    }
                                    _setWindowResizeListener() {
                                        this._windowResizeListener.value = (0, n.addDisposableDomListener)(this._parentWindow, "resize", (() => this._setDprAndFireIfDiffers()))
                                    }
                                    _setDprAndFireIfDiffers() {
                                        this._parentWindow.devicePixelRatio !== this._currentDevicePixelRatio && this._onDprChange.fire(this._parentWindow.devicePixelRatio), this._updateDpr()
                                    }
                                    _updateDpr() {
                                        this._outerListener && (this._resolutionMediaMatchList?.removeListener(this._outerListener), this._currentDevicePixelRatio = this._parentWindow.devicePixelRatio, this._resolutionMediaMatchList = this._parentWindow.matchMedia(`screen and (resolution: ${this._parentWindow.devicePixelRatio}dppx)`), this._resolutionMediaMatchList.addListener(this._outerListener))
                                    }
                                    clearListener() {
                                        this._resolutionMediaMatchList && this._outerListener && (this._resolutionMediaMatchList.removeListener(this._outerListener), this._resolutionMediaMatchList = void 0, this._outerListener = void 0)
                                    }
                                }
                            },
                            779: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.LinkProviderService = void 0;
                                const r = i(844);
                                class s extends r.Disposable {
                                    constructor() {
                                        super(), this.linkProviders = [], this.register((0, r.toDisposable)((() => this.linkProviders.length = 0)))
                                    }
                                    registerLinkProvider(e) {
                                        return this.linkProviders.push(e), {
                                            dispose: () => {
                                                const t = this.linkProviders.indexOf(e); - 1 !== t && this.linkProviders.splice(t, 1)
                                            }
                                        }
                                    }
                                }
                                t.LinkProviderService = s
                            },
                            8934: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.MouseService = void 0;
                                const n = i(4725),
                                    o = i(9806);
                                let a = t.MouseService = class {
                                    constructor(e, t) {
                                        this._renderService = e, this._charSizeService = t
                                    }
                                    getCoords(e, t, i, r, s) {
                                        return (0, o.getCoords)(window, e, t, i, r, this._charSizeService.hasValidSize, this._renderService.dimensions.css.cell.width, this._renderService.dimensions.css.cell.height, s)
                                    }
                                    getMouseReportCoords(e, t) {
                                        const i = (0, o.getCoordsRelativeToElement)(window, e, t);
                                        if (this._charSizeService.hasValidSize) return i[0] = Math.min(Math.max(i[0], 0), this._renderService.dimensions.css.canvas.width - 1), i[1] = Math.min(Math.max(i[1], 0), this._renderService.dimensions.css.canvas.height - 1), {
                                            col: Math.floor(i[0] / this._renderService.dimensions.css.cell.width),
                                            row: Math.floor(i[1] / this._renderService.dimensions.css.cell.height),
                                            x: Math.floor(i[0]),
                                            y: Math.floor(i[1])
                                        }
                                    }
                                };
                                t.MouseService = a = r([s(0, n.IRenderService), s(1, n.ICharSizeService)], a)
                            },
                            3230: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.RenderService = void 0;
                                const n = i(6193),
                                    o = i(4725),
                                    a = i(8460),
                                    c = i(844),
                                    l = i(7226),
                                    h = i(2585);
                                let u = t.RenderService = class extends c.Disposable {
                                    get dimensions() {
                                        return this._renderer.value.dimensions
                                    }
                                    constructor(e, t, i, r, s, o, h, u) {
                                        super(), this._rowCount = e, this._charSizeService = r, this._renderer = this.register(new c.MutableDisposable), this._pausedResizeTask = new l.DebouncedIdleTask, this._observerDisposable = this.register(new c.MutableDisposable), this._isPaused = !1, this._needsFullRefresh = !1, this._isNextRenderRedrawOnly = !0, this._needsSelectionRefresh = !1, this._canvasWidth = 0, this._canvasHeight = 0, this._selectionState = {
                                            start: void 0,
                                            end: void 0,
                                            columnSelectMode: !1
                                        }, this._onDimensionsChange = this.register(new a.EventEmitter), this.onDimensionsChange = this._onDimensionsChange.event, this._onRenderedViewportChange = this.register(new a.EventEmitter), this.onRenderedViewportChange = this._onRenderedViewportChange.event, this._onRender = this.register(new a.EventEmitter), this.onRender = this._onRender.event, this._onRefreshRequest = this.register(new a.EventEmitter), this.onRefreshRequest = this._onRefreshRequest.event, this._renderDebouncer = new n.RenderDebouncer(((e, t) => this._renderRows(e, t)), h), this.register(this._renderDebouncer), this.register(h.onDprChange((() => this.handleDevicePixelRatioChange()))), this.register(o.onResize((() => this._fullRefresh()))), this.register(o.buffers.onBufferActivate((() => this._renderer.value?.clear()))), this.register(i.onOptionChange((() => this._handleOptionsChanged()))), this.register(this._charSizeService.onCharSizeChange((() => this.handleCharSizeChanged()))), this.register(s.onDecorationRegistered((() => this._fullRefresh()))), this.register(s.onDecorationRemoved((() => this._fullRefresh()))), this.register(i.onMultipleOptionChange(["customGlyphs", "drawBoldTextInBrightColors", "letterSpacing", "lineHeight", "fontFamily", "fontSize", "fontWeight", "fontWeightBold", "minimumContrastRatio", "rescaleOverlappingGlyphs"], (() => {
                                            this.clear(), this.handleResize(o.cols, o.rows), this._fullRefresh()
                                        }))), this.register(i.onMultipleOptionChange(["cursorBlink", "cursorStyle"], (() => this.refreshRows(o.buffer.y, o.buffer.y, !0)))), this.register(u.onChangeColors((() => this._fullRefresh()))), this._registerIntersectionObserver(h.window, t), this.register(h.onWindowChange((e => this._registerIntersectionObserver(e, t))))
                                    }
                                    _registerIntersectionObserver(e, t) {
                                        if ("IntersectionObserver" in e) {
                                            const i = new e.IntersectionObserver((e => this._handleIntersectionChange(e[e.length - 1])), {
                                                threshold: 0
                                            });
                                            i.observe(t), this._observerDisposable.value = (0, c.toDisposable)((() => i.disconnect()))
                                        }
                                    }
                                    _handleIntersectionChange(e) {
                                        this._isPaused = void 0 === e.isIntersecting ? 0 === e.intersectionRatio : !e.isIntersecting, this._isPaused || this._charSizeService.hasValidSize || this._charSizeService.measure(), !this._isPaused && this._needsFullRefresh && (this._pausedResizeTask.flush(), this.refreshRows(0, this._rowCount - 1), this._needsFullRefresh = !1)
                                    }
                                    refreshRows(e, t, i = !1) {
                                        this._isPaused ? this._needsFullRefresh = !0 : (i || (this._isNextRenderRedrawOnly = !1), this._renderDebouncer.refresh(e, t, this._rowCount))
                                    }
                                    _renderRows(e, t) {
                                        this._renderer.value && (e = Math.min(e, this._rowCount - 1), t = Math.min(t, this._rowCount - 1), this._renderer.value.renderRows(e, t), this._needsSelectionRefresh && (this._renderer.value.handleSelectionChanged(this._selectionState.start, this._selectionState.end, this._selectionState.columnSelectMode), this._needsSelectionRefresh = !1), this._isNextRenderRedrawOnly || this._onRenderedViewportChange.fire({
                                            start: e,
                                            end: t
                                        }), this._onRender.fire({
                                            start: e,
                                            end: t
                                        }), this._isNextRenderRedrawOnly = !0)
                                    }
                                    resize(e, t) {
                                        this._rowCount = t, this._fireOnCanvasResize()
                                    }
                                    _handleOptionsChanged() {
                                        this._renderer.value && (this.refreshRows(0, this._rowCount - 1), this._fireOnCanvasResize())
                                    }
                                    _fireOnCanvasResize() {
                                        this._renderer.value && (this._renderer.value.dimensions.css.canvas.width === this._canvasWidth && this._renderer.value.dimensions.css.canvas.height === this._canvasHeight || this._onDimensionsChange.fire(this._renderer.value.dimensions))
                                    }
                                    hasRenderer() {
                                        return !!this._renderer.value
                                    }
                                    setRenderer(e) {
                                        this._renderer.value = e, this._renderer.value && (this._renderer.value.onRequestRedraw((e => this.refreshRows(e.start, e.end, !0))), this._needsSelectionRefresh = !0, this._fullRefresh())
                                    }
                                    addRefreshCallback(e) {
                                        return this._renderDebouncer.addRefreshCallback(e)
                                    }
                                    _fullRefresh() {
                                        this._isPaused ? this._needsFullRefresh = !0 : this.refreshRows(0, this._rowCount - 1)
                                    }
                                    clearTextureAtlas() {
                                        this._renderer.value && (this._renderer.value.clearTextureAtlas?.(), this._fullRefresh())
                                    }
                                    handleDevicePixelRatioChange() {
                                        this._charSizeService.measure(), this._renderer.value && (this._renderer.value.handleDevicePixelRatioChange(), this.refreshRows(0, this._rowCount - 1))
                                    }
                                    handleResize(e, t) {
                                        this._renderer.value && (this._isPaused ? this._pausedResizeTask.set((() => this._renderer.value?.handleResize(e, t))) : this._renderer.value.handleResize(e, t), this._fullRefresh())
                                    }
                                    handleCharSizeChanged() {
                                        this._renderer.value?.handleCharSizeChanged()
                                    }
                                    handleBlur() {
                                        this._renderer.value?.handleBlur()
                                    }
                                    handleFocus() {
                                        this._renderer.value?.handleFocus()
                                    }
                                    handleSelectionChanged(e, t, i) {
                                        this._selectionState.start = e, this._selectionState.end = t, this._selectionState.columnSelectMode = i, this._renderer.value?.handleSelectionChanged(e, t, i)
                                    }
                                    handleCursorMove() {
                                        this._renderer.value?.handleCursorMove()
                                    }
                                    clear() {
                                        this._renderer.value?.clear()
                                    }
                                };
                                t.RenderService = u = r([s(2, h.IOptionsService), s(3, o.ICharSizeService), s(4, h.IDecorationService), s(5, h.IBufferService), s(6, o.ICoreBrowserService), s(7, o.IThemeService)], u)
                            },
                            9312: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.SelectionService = void 0;
                                const n = i(9806),
                                    o = i(9504),
                                    a = i(456),
                                    c = i(4725),
                                    l = i(8460),
                                    h = i(844),
                                    u = i(6114),
                                    d = i(4841),
                                    f = i(511),
                                    p = i(2585),
                                    _ = String.fromCharCode(160),
                                    g = new RegExp(_, "g");
                                let v = t.SelectionService = class extends h.Disposable {
                                    constructor(e, t, i, r, s, n, o, c, u) {
                                        super(), this._element = e, this._screenElement = t, this._linkifier = i, this._bufferService = r, this._coreService = s, this._mouseService = n, this._optionsService = o, this._renderService = c, this._coreBrowserService = u, this._dragScrollAmount = 0, this._enabled = !0, this._workCell = new f.CellData, this._mouseDownTimeStamp = 0, this._oldHasSelection = !1, this._oldSelectionStart = void 0, this._oldSelectionEnd = void 0, this._onLinuxMouseSelection = this.register(new l.EventEmitter), this.onLinuxMouseSelection = this._onLinuxMouseSelection.event, this._onRedrawRequest = this.register(new l.EventEmitter), this.onRequestRedraw = this._onRedrawRequest.event, this._onSelectionChange = this.register(new l.EventEmitter), this.onSelectionChange = this._onSelectionChange.event, this._onRequestScrollLines = this.register(new l.EventEmitter), this.onRequestScrollLines = this._onRequestScrollLines.event, this._mouseMoveListener = e => this._handleMouseMove(e), this._mouseUpListener = e => this._handleMouseUp(e), this._coreService.onUserInput((() => {
                                            this.hasSelection && this.clearSelection()
                                        })), this._trimListener = this._bufferService.buffer.lines.onTrim((e => this._handleTrim(e))), this.register(this._bufferService.buffers.onBufferActivate((e => this._handleBufferActivate(e)))), this.enable(), this._model = new a.SelectionModel(this._bufferService), this._activeSelectionMode = 0, this.register((0, h.toDisposable)((() => {
                                            this._removeMouseDownListeners()
                                        })))
                                    }
                                    reset() {
                                        this.clearSelection()
                                    }
                                    disable() {
                                        this.clearSelection(), this._enabled = !1
                                    }
                                    enable() {
                                        this._enabled = !0
                                    }
                                    get selectionStart() {
                                        return this._model.finalSelectionStart
                                    }
                                    get selectionEnd() {
                                        return this._model.finalSelectionEnd
                                    }
                                    get hasSelection() {
                                        const e = this._model.finalSelectionStart,
                                            t = this._model.finalSelectionEnd;
                                        return !(!e || !t || e[0] === t[0] && e[1] === t[1])
                                    }
                                    get selectionText() {
                                        const e = this._model.finalSelectionStart,
                                            t = this._model.finalSelectionEnd;
                                        if (!e || !t) return "";
                                        const i = this._bufferService.buffer,
                                            r = [];
                                        if (3 === this._activeSelectionMode) {
                                            if (e[0] === t[0]) return "";
                                            const s = e[0] < t[0] ? e[0] : t[0],
                                                n = e[0] < t[0] ? t[0] : e[0];
                                            for (let o = e[1]; o <= t[1]; o++) {
                                                const e = i.translateBufferLineToString(o, !0, s, n);
                                                r.push(e)
                                            }
                                        } else {
                                            const s = e[1] === t[1] ? t[0] : void 0;
                                            r.push(i.translateBufferLineToString(e[1], !0, e[0], s));
                                            for (let s = e[1] + 1; s <= t[1] - 1; s++) {
                                                const e = i.lines.get(s),
                                                    t = i.translateBufferLineToString(s, !0);
                                                e?.isWrapped ? r[r.length - 1] += t : r.push(t)
                                            }
                                            if (e[1] !== t[1]) {
                                                const e = i.lines.get(t[1]),
                                                    s = i.translateBufferLineToString(t[1], !0, 0, t[0]);
                                                e && e.isWrapped ? r[r.length - 1] += s : r.push(s)
                                            }
                                        }
                                        return r.map((e => e.replace(g, " "))).join(u.isWindows ? "\r\n" : "\n")
                                    }
                                    clearSelection() {
                                        this._model.clearSelection(), this._removeMouseDownListeners(), this.refresh(), this._onSelectionChange.fire()
                                    }
                                    refresh(e) {
                                        this._refreshAnimationFrame || (this._refreshAnimationFrame = this._coreBrowserService.window.requestAnimationFrame((() => this._refresh()))), u.isLinux && e && this.selectionText.length && this._onLinuxMouseSelection.fire(this.selectionText)
                                    }
                                    _refresh() {
                                        this._refreshAnimationFrame = void 0, this._onRedrawRequest.fire({
                                            start: this._model.finalSelectionStart,
                                            end: this._model.finalSelectionEnd,
                                            columnSelectMode: 3 === this._activeSelectionMode
                                        })
                                    }
                                    _isClickInSelection(e) {
                                        const t = this._getMouseBufferCoords(e),
                                            i = this._model.finalSelectionStart,
                                            r = this._model.finalSelectionEnd;
                                        return !!(i && r && t) && this._areCoordsInSelection(t, i, r)
                                    }
                                    isCellInSelection(e, t) {
                                        const i = this._model.finalSelectionStart,
                                            r = this._model.finalSelectionEnd;
                                        return !(!i || !r) && this._areCoordsInSelection([e, t], i, r)
                                    }
                                    _areCoordsInSelection(e, t, i) {
                                        return e[1] > t[1] && e[1] < i[1] || t[1] === i[1] && e[1] === t[1] && e[0] >= t[0] && e[0] < i[0] || t[1] < i[1] && e[1] === i[1] && e[0] < i[0] || t[1] < i[1] && e[1] === t[1] && e[0] >= t[0]
                                    }
                                    _selectWordAtCursor(e, t) {
                                        const i = this._linkifier.currentLink?.link?.range;
                                        if (i) return this._model.selectionStart = [i.start.x - 1, i.start.y - 1], this._model.selectionStartLength = (0, d.getRangeLength)(i, this._bufferService.cols), this._model.selectionEnd = void 0, !0;
                                        const r = this._getMouseBufferCoords(e);
                                        return !!r && (this._selectWordAt(r, t), this._model.selectionEnd = void 0, !0)
                                    }
                                    selectAll() {
                                        this._model.isSelectAllActive = !0, this.refresh(), this._onSelectionChange.fire()
                                    }
                                    selectLines(e, t) {
                                        this._model.clearSelection(), e = Math.max(e, 0), t = Math.min(t, this._bufferService.buffer.lines.length - 1), this._model.selectionStart = [0, e], this._model.selectionEnd = [this._bufferService.cols, t], this.refresh(), this._onSelectionChange.fire()
                                    }
                                    _handleTrim(e) {
                                        this._model.handleTrim(e) && this.refresh()
                                    }
                                    _getMouseBufferCoords(e) {
                                        const t = this._mouseService.getCoords(e, this._screenElement, this._bufferService.cols, this._bufferService.rows, !0);
                                        if (t) return t[0]--, t[1]--, t[1] += this._bufferService.buffer.ydisp, t
                                    }
                                    _getMouseEventScrollAmount(e) {
                                        let t = (0, n.getCoordsRelativeToElement)(this._coreBrowserService.window, e, this._screenElement)[1];
                                        const i = this._renderService.dimensions.css.canvas.height;
                                        return t >= 0 && t <= i ? 0 : (t > i && (t -= i), t = Math.min(Math.max(t, -50), 50), t /= 50, t / Math.abs(t) + Math.round(14 * t))
                                    }
                                    shouldForceSelection(e) {
                                        return u.isMac ? e.altKey && this._optionsService.rawOptions.macOptionClickForcesSelection : e.shiftKey
                                    }
                                    handleMouseDown(e) {
                                        if (this._mouseDownTimeStamp = e.timeStamp, (2 !== e.button || !this.hasSelection) && 0 === e.button) {
                                            if (!this._enabled) {
                                                if (!this.shouldForceSelection(e)) return;
                                                e.stopPropagation()
                                            }
                                            e.preventDefault(), this._dragScrollAmount = 0, this._enabled && e.shiftKey ? this._handleIncrementalClick(e) : 1 === e.detail ? this._handleSingleClick(e) : 2 === e.detail ? this._handleDoubleClick(e) : 3 === e.detail && this._handleTripleClick(e), this._addMouseDownListeners(), this.refresh(!0)
                                        }
                                    }
                                    _addMouseDownListeners() {
                                        this._screenElement.ownerDocument && (this._screenElement.ownerDocument.addEventListener("mousemove", this._mouseMoveListener), this._screenElement.ownerDocument.addEventListener("mouseup", this._mouseUpListener)), this._dragScrollIntervalTimer = this._coreBrowserService.window.setInterval((() => this._dragScroll()), 50)
                                    }
                                    _removeMouseDownListeners() {
                                        this._screenElement.ownerDocument && (this._screenElement.ownerDocument.removeEventListener("mousemove", this._mouseMoveListener), this._screenElement.ownerDocument.removeEventListener("mouseup", this._mouseUpListener)), this._coreBrowserService.window.clearInterval(this._dragScrollIntervalTimer), this._dragScrollIntervalTimer = void 0
                                    }
                                    _handleIncrementalClick(e) {
                                        this._model.selectionStart && (this._model.selectionEnd = this._getMouseBufferCoords(e))
                                    }
                                    _handleSingleClick(e) {
                                        if (this._model.selectionStartLength = 0, this._model.isSelectAllActive = !1, this._activeSelectionMode = this.shouldColumnSelect(e) ? 3 : 0, this._model.selectionStart = this._getMouseBufferCoords(e), !this._model.selectionStart) return;
                                        this._model.selectionEnd = void 0;
                                        const t = this._bufferService.buffer.lines.get(this._model.selectionStart[1]);
                                        t && t.length !== this._model.selectionStart[0] && 0 === t.hasWidth(this._model.selectionStart[0]) && this._model.selectionStart[0]++
                                    }
                                    _handleDoubleClick(e) {
                                        this._selectWordAtCursor(e, !0) && (this._activeSelectionMode = 1)
                                    }
                                    _handleTripleClick(e) {
                                        const t = this._getMouseBufferCoords(e);
                                        t && (this._activeSelectionMode = 2, this._selectLineAt(t[1]))
                                    }
                                    shouldColumnSelect(e) {
                                        return e.altKey && !(u.isMac && this._optionsService.rawOptions.macOptionClickForcesSelection)
                                    }
                                    _handleMouseMove(e) {
                                        if (e.stopImmediatePropagation(), !this._model.selectionStart) return;
                                        const t = this._model.selectionEnd ? [this._model.selectionEnd[0], this._model.selectionEnd[1]] : null;
                                        if (this._model.selectionEnd = this._getMouseBufferCoords(e), !this._model.selectionEnd) return void this.refresh(!0);
                                        2 === this._activeSelectionMode ? this._model.selectionEnd[1] < this._model.selectionStart[1] ? this._model.selectionEnd[0] = 0 : this._model.selectionEnd[0] = this._bufferService.cols : 1 === this._activeSelectionMode && this._selectToWordAt(this._model.selectionEnd), this._dragScrollAmount = this._getMouseEventScrollAmount(e), 3 !== this._activeSelectionMode && (this._dragScrollAmount > 0 ? this._model.selectionEnd[0] = this._bufferService.cols : this._dragScrollAmount < 0 && (this._model.selectionEnd[0] = 0));
                                        const i = this._bufferService.buffer;
                                        if (this._model.selectionEnd[1] < i.lines.length) {
                                            const e = i.lines.get(this._model.selectionEnd[1]);
                                            e && 0 === e.hasWidth(this._model.selectionEnd[0]) && this._model.selectionEnd[0] < this._bufferService.cols && this._model.selectionEnd[0]++
                                        }
                                        t && t[0] === this._model.selectionEnd[0] && t[1] === this._model.selectionEnd[1] || this.refresh(!0)
                                    }
                                    _dragScroll() {
                                        if (this._model.selectionEnd && this._model.selectionStart && this._dragScrollAmount) {
                                            this._onRequestScrollLines.fire({
                                                amount: this._dragScrollAmount,
                                                suppressScrollEvent: !1
                                            });
                                            const e = this._bufferService.buffer;
                                            this._dragScrollAmount > 0 ? (3 !== this._activeSelectionMode && (this._model.selectionEnd[0] = this._bufferService.cols), this._model.selectionEnd[1] = Math.min(e.ydisp + this._bufferService.rows, e.lines.length - 1)) : (3 !== this._activeSelectionMode && (this._model.selectionEnd[0] = 0), this._model.selectionEnd[1] = e.ydisp), this.refresh()
                                        }
                                    }
                                    _handleMouseUp(e) {
                                        const t = e.timeStamp - this._mouseDownTimeStamp;
                                        if (this._removeMouseDownListeners(), this.selectionText.length <= 1 && t < 500 && e.altKey && this._optionsService.rawOptions.altClickMovesCursor) {
                                            if (this._bufferService.buffer.ybase === this._bufferService.buffer.ydisp) {
                                                const t = this._mouseService.getCoords(e, this._element, this._bufferService.cols, this._bufferService.rows, !1);
                                                if (t && void 0 !== t[0] && void 0 !== t[1]) {
                                                    const e = (0, o.moveToCellSequence)(t[0] - 1, t[1] - 1, this._bufferService, this._coreService.decPrivateModes.applicationCursorKeys);
                                                    this._coreService.triggerDataEvent(e, !0)
                                                }
                                            }
                                        } else this._fireEventIfSelectionChanged()
                                    }
                                    _fireEventIfSelectionChanged() {
                                        const e = this._model.finalSelectionStart,
                                            t = this._model.finalSelectionEnd,
                                            i = !(!e || !t || e[0] === t[0] && e[1] === t[1]);
                                        i ? e && t && (this._oldSelectionStart && this._oldSelectionEnd && e[0] === this._oldSelectionStart[0] && e[1] === this._oldSelectionStart[1] && t[0] === this._oldSelectionEnd[0] && t[1] === this._oldSelectionEnd[1] || this._fireOnSelectionChange(e, t, i)) : this._oldHasSelection && this._fireOnSelectionChange(e, t, i)
                                    }
                                    _fireOnSelectionChange(e, t, i) {
                                        this._oldSelectionStart = e, this._oldSelectionEnd = t, this._oldHasSelection = i, this._onSelectionChange.fire()
                                    }
                                    _handleBufferActivate(e) {
                                        this.clearSelection(), this._trimListener.dispose(), this._trimListener = e.activeBuffer.lines.onTrim((e => this._handleTrim(e)))
                                    }
                                    _convertViewportColToCharacterIndex(e, t) {
                                        let i = t;
                                        for (let r = 0; t >= r; r++) {
                                            const s = e.loadCell(r, this._workCell).getChars().length;
                                            0 === this._workCell.getWidth() ? i-- : s > 1 && t !== r && (i += s - 1)
                                        }
                                        return i
                                    }
                                    setSelection(e, t, i) {
                                        this._model.clearSelection(), this._removeMouseDownListeners(), this._model.selectionStart = [e, t], this._model.selectionStartLength = i, this.refresh(), this._fireEventIfSelectionChanged()
                                    }
                                    rightClickSelect(e) {
                                        this._isClickInSelection(e) || (this._selectWordAtCursor(e, !1) && this.refresh(!0), this._fireEventIfSelectionChanged())
                                    }
                                    _getWordAt(e, t, i = !0, r = !0) {
                                        if (e[0] >= this._bufferService.cols) return;
                                        const s = this._bufferService.buffer,
                                            n = s.lines.get(e[1]);
                                        if (!n) return;
                                        const o = s.translateBufferLineToString(e[1], !1);
                                        let a = this._convertViewportColToCharacterIndex(n, e[0]),
                                            c = a;
                                        const l = e[0] - a;
                                        let h = 0,
                                            u = 0,
                                            d = 0,
                                            f = 0;
                                        if (" " === o.charAt(a)) {
                                            for (; a > 0 && " " === o.charAt(a - 1);) a--;
                                            for (; c < o.length && " " === o.charAt(c + 1);) c++
                                        } else {
                                            let t = e[0],
                                                i = e[0];
                                            0 === n.getWidth(t) && (h++, t--), 2 === n.getWidth(i) && (u++, i++);
                                            const r = n.getString(i).length;
                                            for (r > 1 && (f += r - 1, c += r - 1); t > 0 && a > 0 && !this._isCharWordSeparator(n.loadCell(t - 1, this._workCell));) {
                                                n.loadCell(t - 1, this._workCell);
                                                const e = this._workCell.getChars().length;
                                                0 === this._workCell.getWidth() ? (h++, t--) : e > 1 && (d += e - 1, a -= e - 1), a--, t--
                                            }
                                            for (; i < n.length && c + 1 < o.length && !this._isCharWordSeparator(n.loadCell(i + 1, this._workCell));) {
                                                n.loadCell(i + 1, this._workCell);
                                                const e = this._workCell.getChars().length;
                                                2 === this._workCell.getWidth() ? (u++, i++) : e > 1 && (f += e - 1, c += e - 1), c++, i++
                                            }
                                        }
                                        c++;
                                        let p = a + l - h + d,
                                            _ = Math.min(this._bufferService.cols, c - a + h + u - d - f);
                                        if (t || "" !== o.slice(a, c).trim()) {
                                            if (i && 0 === p && 32 !== n.getCodePoint(0)) {
                                                const t = s.lines.get(e[1] - 1);
                                                if (t && n.isWrapped && 32 !== t.getCodePoint(this._bufferService.cols - 1)) {
                                                    const t = this._getWordAt([this._bufferService.cols - 1, e[1] - 1], !1, !0, !1);
                                                    if (t) {
                                                        const e = this._bufferService.cols - t.start;
                                                        p -= e, _ += e
                                                    }
                                                }
                                            }
                                            if (r && p + _ === this._bufferService.cols && 32 !== n.getCodePoint(this._bufferService.cols - 1)) {
                                                const t = s.lines.get(e[1] + 1);
                                                if (t?.isWrapped && 32 !== t.getCodePoint(0)) {
                                                    const t = this._getWordAt([0, e[1] + 1], !1, !1, !0);
                                                    t && (_ += t.length)
                                                }
                                            }
                                            return {
                                                start: p,
                                                length: _
                                            }
                                        }
                                    }
                                    _selectWordAt(e, t) {
                                        const i = this._getWordAt(e, t);
                                        if (i) {
                                            for (; i.start < 0;) i.start += this._bufferService.cols, e[1]--;
                                            this._model.selectionStart = [i.start, e[1]], this._model.selectionStartLength = i.length
                                        }
                                    }
                                    _selectToWordAt(e) {
                                        const t = this._getWordAt(e, !0);
                                        if (t) {
                                            let i = e[1];
                                            for (; t.start < 0;) t.start += this._bufferService.cols, i--;
                                            if (!this._model.areSelectionValuesReversed())
                                                for (; t.start + t.length > this._bufferService.cols;) t.length -= this._bufferService.cols, i++;
                                            this._model.selectionEnd = [this._model.areSelectionValuesReversed() ? t.start : t.start + t.length, i]
                                        }
                                    }
                                    _isCharWordSeparator(e) {
                                        return 0 !== e.getWidth() && this._optionsService.rawOptions.wordSeparator.indexOf(e.getChars()) >= 0
                                    }
                                    _selectLineAt(e) {
                                        const t = this._bufferService.buffer.getWrappedRangeForLine(e),
                                            i = {
                                                start: {
                                                    x: 0,
                                                    y: t.first
                                                },
                                                end: {
                                                    x: this._bufferService.cols - 1,
                                                    y: t.last
                                                }
                                            };
                                        this._model.selectionStart = [0, t.first], this._model.selectionEnd = void 0, this._model.selectionStartLength = (0, d.getRangeLength)(i, this._bufferService.cols)
                                    }
                                };
                                t.SelectionService = v = r([s(3, p.IBufferService), s(4, p.ICoreService), s(5, c.IMouseService), s(6, p.IOptionsService), s(7, c.IRenderService), s(8, c.ICoreBrowserService)], v)
                            },
                            4725: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.ILinkProviderService = t.IThemeService = t.ICharacterJoinerService = t.ISelectionService = t.IRenderService = t.IMouseService = t.ICoreBrowserService = t.ICharSizeService = void 0;
                                const r = i(8343);
                                t.ICharSizeService = (0, r.createDecorator)("CharSizeService"), t.ICoreBrowserService = (0, r.createDecorator)("CoreBrowserService"), t.IMouseService = (0, r.createDecorator)("MouseService"), t.IRenderService = (0, r.createDecorator)("RenderService"), t.ISelectionService = (0, r.createDecorator)("SelectionService"), t.ICharacterJoinerService = (0, r.createDecorator)("CharacterJoinerService"), t.IThemeService = (0, r.createDecorator)("ThemeService"), t.ILinkProviderService = (0, r.createDecorator)("LinkProviderService")
                            },
                            6731: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.ThemeService = t.DEFAULT_ANSI_COLORS = void 0;
                                const n = i(7239),
                                    o = i(8055),
                                    a = i(8460),
                                    c = i(844),
                                    l = i(2585),
                                    h = o.css.toColor("#ffffff"),
                                    u = o.css.toColor("#000000"),
                                    d = o.css.toColor("#ffffff"),
                                    f = o.css.toColor("#000000"),
                                    p = {
                                        css: "rgba(255, 255, 255, 0.3)",
                                        rgba: 4294967117
                                    };
                                t.DEFAULT_ANSI_COLORS = Object.freeze((() => {
                                    const e = [o.css.toColor("#2e3436"), o.css.toColor("#cc0000"), o.css.toColor("#4e9a06"), o.css.toColor("#c4a000"), o.css.toColor("#3465a4"), o.css.toColor("#75507b"), o.css.toColor("#06989a"), o.css.toColor("#d3d7cf"), o.css.toColor("#555753"), o.css.toColor("#ef2929"), o.css.toColor("#8ae234"), o.css.toColor("#fce94f"), o.css.toColor("#729fcf"), o.css.toColor("#ad7fa8"), o.css.toColor("#34e2e2"), o.css.toColor("#eeeeec")],
                                        t = [0, 95, 135, 175, 215, 255];
                                    for (let i = 0; i < 216; i++) {
                                        const r = t[i / 36 % 6 | 0],
                                            s = t[i / 6 % 6 | 0],
                                            n = t[i % 6];
                                        e.push({
                                            css: o.channels.toCss(r, s, n),
                                            rgba: o.channels.toRgba(r, s, n)
                                        })
                                    }
                                    for (let t = 0; t < 24; t++) {
                                        const i = 8 + 10 * t;
                                        e.push({
                                            css: o.channels.toCss(i, i, i),
                                            rgba: o.channels.toRgba(i, i, i)
                                        })
                                    }
                                    return e
                                })());
                                let _ = t.ThemeService = class extends c.Disposable {
                                    get colors() {
                                        return this._colors
                                    }
                                    constructor(e) {
                                        super(), this._optionsService = e, this._contrastCache = new n.ColorContrastCache, this._halfContrastCache = new n.ColorContrastCache, this._onChangeColors = this.register(new a.EventEmitter), this.onChangeColors = this._onChangeColors.event, this._colors = {
                                            foreground: h,
                                            background: u,
                                            cursor: d,
                                            cursorAccent: f,
                                            selectionForeground: void 0,
                                            selectionBackgroundTransparent: p,
                                            selectionBackgroundOpaque: o.color.blend(u, p),
                                            selectionInactiveBackgroundTransparent: p,
                                            selectionInactiveBackgroundOpaque: o.color.blend(u, p),
                                            ansi: t.DEFAULT_ANSI_COLORS.slice(),
                                            contrastCache: this._contrastCache,
                                            halfContrastCache: this._halfContrastCache
                                        }, this._updateRestoreColors(), this._setTheme(this._optionsService.rawOptions.theme), this.register(this._optionsService.onSpecificOptionChange("minimumContrastRatio", (() => this._contrastCache.clear()))), this.register(this._optionsService.onSpecificOptionChange("theme", (() => this._setTheme(this._optionsService.rawOptions.theme))))
                                    }
                                    _setTheme(e = {}) {
                                        const i = this._colors;
                                        if (i.foreground = g(e.foreground, h), i.background = g(e.background, u), i.cursor = g(e.cursor, d), i.cursorAccent = g(e.cursorAccent, f), i.selectionBackgroundTransparent = g(e.selectionBackground, p), i.selectionBackgroundOpaque = o.color.blend(i.background, i.selectionBackgroundTransparent), i.selectionInactiveBackgroundTransparent = g(e.selectionInactiveBackground, i.selectionBackgroundTransparent), i.selectionInactiveBackgroundOpaque = o.color.blend(i.background, i.selectionInactiveBackgroundTransparent), i.selectionForeground = e.selectionForeground ? g(e.selectionForeground, o.NULL_COLOR) : void 0, i.selectionForeground === o.NULL_COLOR && (i.selectionForeground = void 0), o.color.isOpaque(i.selectionBackgroundTransparent)) {
                                            const e = .3;
                                            i.selectionBackgroundTransparent = o.color.opacity(i.selectionBackgroundTransparent, e)
                                        }
                                        if (o.color.isOpaque(i.selectionInactiveBackgroundTransparent)) {
                                            const e = .3;
                                            i.selectionInactiveBackgroundTransparent = o.color.opacity(i.selectionInactiveBackgroundTransparent, e)
                                        }
                                        if (i.ansi = t.DEFAULT_ANSI_COLORS.slice(), i.ansi[0] = g(e.black, t.DEFAULT_ANSI_COLORS[0]), i.ansi[1] = g(e.red, t.DEFAULT_ANSI_COLORS[1]), i.ansi[2] = g(e.green, t.DEFAULT_ANSI_COLORS[2]), i.ansi[3] = g(e.yellow, t.DEFAULT_ANSI_COLORS[3]), i.ansi[4] = g(e.blue, t.DEFAULT_ANSI_COLORS[4]), i.ansi[5] = g(e.magenta, t.DEFAULT_ANSI_COLORS[5]), i.ansi[6] = g(e.cyan, t.DEFAULT_ANSI_COLORS[6]), i.ansi[7] = g(e.white, t.DEFAULT_ANSI_COLORS[7]), i.ansi[8] = g(e.brightBlack, t.DEFAULT_ANSI_COLORS[8]), i.ansi[9] = g(e.brightRed, t.DEFAULT_ANSI_COLORS[9]), i.ansi[10] = g(e.brightGreen, t.DEFAULT_ANSI_COLORS[10]), i.ansi[11] = g(e.brightYellow, t.DEFAULT_ANSI_COLORS[11]), i.ansi[12] = g(e.brightBlue, t.DEFAULT_ANSI_COLORS[12]), i.ansi[13] = g(e.brightMagenta, t.DEFAULT_ANSI_COLORS[13]), i.ansi[14] = g(e.brightCyan, t.DEFAULT_ANSI_COLORS[14]), i.ansi[15] = g(e.brightWhite, t.DEFAULT_ANSI_COLORS[15]), e.extendedAnsi) {
                                            const r = Math.min(i.ansi.length - 16, e.extendedAnsi.length);
                                            for (let s = 0; s < r; s++) i.ansi[s + 16] = g(e.extendedAnsi[s], t.DEFAULT_ANSI_COLORS[s + 16])
                                        }
                                        this._contrastCache.clear(), this._halfContrastCache.clear(), this._updateRestoreColors(), this._onChangeColors.fire(this.colors)
                                    }
                                    restoreColor(e) {
                                        this._restoreColor(e), this._onChangeColors.fire(this.colors)
                                    }
                                    _restoreColor(e) {
                                        if (void 0 !== e) switch (e) {
                                            case 256:
                                                this._colors.foreground = this._restoreColors.foreground;
                                                break;
                                            case 257:
                                                this._colors.background = this._restoreColors.background;
                                                break;
                                            case 258:
                                                this._colors.cursor = this._restoreColors.cursor;
                                                break;
                                            default:
                                                this._colors.ansi[e] = this._restoreColors.ansi[e]
                                        } else
                                            for (let e = 0; e < this._restoreColors.ansi.length; ++e) this._colors.ansi[e] = this._restoreColors.ansi[e]
                                    }
                                    modifyColors(e) {
                                        e(this._colors), this._onChangeColors.fire(this.colors)
                                    }
                                    _updateRestoreColors() {
                                        this._restoreColors = {
                                            foreground: this._colors.foreground,
                                            background: this._colors.background,
                                            cursor: this._colors.cursor,
                                            ansi: this._colors.ansi.slice()
                                        }
                                    }
                                };

                                function g(e, t) {
                                    if (void 0 !== e) try {
                                        return o.css.toColor(e)
                                    } catch {}
                                    return t
                                }
                                t.ThemeService = _ = r([s(0, l.IOptionsService)], _)
                            },
                            6349: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CircularList = void 0;
                                const r = i(8460),
                                    s = i(844);
                                class n extends s.Disposable {
                                    constructor(e) {
                                        super(), this._maxLength = e, this.onDeleteEmitter = this.register(new r.EventEmitter), this.onDelete = this.onDeleteEmitter.event, this.onInsertEmitter = this.register(new r.EventEmitter), this.onInsert = this.onInsertEmitter.event, this.onTrimEmitter = this.register(new r.EventEmitter), this.onTrim = this.onTrimEmitter.event, this._array = new Array(this._maxLength), this._startIndex = 0, this._length = 0
                                    }
                                    get maxLength() {
                                        return this._maxLength
                                    }
                                    set maxLength(e) {
                                        if (this._maxLength === e) return;
                                        const t = new Array(e);
                                        for (let i = 0; i < Math.min(e, this.length); i++) t[i] = this._array[this._getCyclicIndex(i)];
                                        this._array = t, this._maxLength = e, this._startIndex = 0
                                    }
                                    get length() {
                                        return this._length
                                    }
                                    set length(e) {
                                        if (e > this._length)
                                            for (let t = this._length; t < e; t++) this._array[t] = void 0;
                                        this._length = e
                                    }
                                    get(e) {
                                        return this._array[this._getCyclicIndex(e)]
                                    }
                                    set(e, t) {
                                        this._array[this._getCyclicIndex(e)] = t
                                    }
                                    push(e) {
                                        this._array[this._getCyclicIndex(this._length)] = e, this._length === this._maxLength ? (this._startIndex = ++this._startIndex % this._maxLength, this.onTrimEmitter.fire(1)) : this._length++
                                    }
                                    recycle() {
                                        if (this._length !== this._maxLength) throw new Error("Can only recycle when the buffer is full");
                                        return this._startIndex = ++this._startIndex % this._maxLength, this.onTrimEmitter.fire(1), this._array[this._getCyclicIndex(this._length - 1)]
                                    }
                                    get isFull() {
                                        return this._length === this._maxLength
                                    }
                                    pop() {
                                        return this._array[this._getCyclicIndex(this._length-- - 1)]
                                    }
                                    splice(e, t, ...i) {
                                        if (t) {
                                            for (let i = e; i < this._length - t; i++) this._array[this._getCyclicIndex(i)] = this._array[this._getCyclicIndex(i + t)];
                                            this._length -= t, this.onDeleteEmitter.fire({
                                                index: e,
                                                amount: t
                                            })
                                        }
                                        for (let t = this._length - 1; t >= e; t--) this._array[this._getCyclicIndex(t + i.length)] = this._array[this._getCyclicIndex(t)];
                                        for (let t = 0; t < i.length; t++) this._array[this._getCyclicIndex(e + t)] = i[t];
                                        if (i.length && this.onInsertEmitter.fire({
                                                index: e,
                                                amount: i.length
                                            }), this._length + i.length > this._maxLength) {
                                            const e = this._length + i.length - this._maxLength;
                                            this._startIndex += e, this._length = this._maxLength, this.onTrimEmitter.fire(e)
                                        } else this._length += i.length
                                    }
                                    trimStart(e) {
                                        e > this._length && (e = this._length), this._startIndex += e, this._length -= e, this.onTrimEmitter.fire(e)
                                    }
                                    shiftElements(e, t, i) {
                                        if (!(t <= 0)) {
                                            if (e < 0 || e >= this._length) throw new Error("start argument out of range");
                                            if (e + i < 0) throw new Error("Cannot shift elements in list beyond index 0");
                                            if (i > 0) {
                                                for (let r = t - 1; r >= 0; r--) this.set(e + r + i, this.get(e + r));
                                                const r = e + t + i - this._length;
                                                if (r > 0)
                                                    for (this._length += r; this._length > this._maxLength;) this._length--, this._startIndex++, this.onTrimEmitter.fire(1)
                                            } else
                                                for (let r = 0; r < t; r++) this.set(e + r + i, this.get(e + r))
                                        }
                                    }
                                    _getCyclicIndex(e) {
                                        return (this._startIndex + e) % this._maxLength
                                    }
                                }
                                t.CircularList = n
                            },
                            1439: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.clone = void 0, t.clone = function e(t, i = 5) {
                                    if ("object" != typeof t) return t;
                                    const r = Array.isArray(t) ? [] : {};
                                    for (const s in t) r[s] = i <= 1 ? t[s] : t[s] && e(t[s], i - 1);
                                    return r
                                }
                            },
                            8055: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.contrastRatio = t.toPaddedHex = t.rgba = t.rgb = t.css = t.color = t.channels = t.NULL_COLOR = void 0;
                                let i = 0,
                                    r = 0,
                                    s = 0,
                                    n = 0;
                                var o, a, c, l, h;

                                function u(e) {
                                    const t = e.toString(16);
                                    return t.length < 2 ? "0" + t : t
                                }

                                function d(e, t) {
                                    return e < t ? (t + .05) / (e + .05) : (e + .05) / (t + .05)
                                }
                                t.NULL_COLOR = {
                                        css: "#00000000",
                                        rgba: 0
                                    },
                                    function(e) {
                                        e.toCss = function(e, t, i, r) {
                                            return void 0 !== r ? `#${u(e)}${u(t)}${u(i)}${u(r)}` : `#${u(e)}${u(t)}${u(i)}`
                                        }, e.toRgba = function(e, t, i, r = 255) {
                                            return (e << 24 | t << 16 | i << 8 | r) >>> 0
                                        }, e.toColor = function(t, i, r, s) {
                                            return {
                                                css: e.toCss(t, i, r, s),
                                                rgba: e.toRgba(t, i, r, s)
                                            }
                                        }
                                    }(o || (t.channels = o = {})),
                                    function(e) {
                                        function t(e, t) {
                                            return n = Math.round(255 * t), [i, r, s] = h.toChannels(e.rgba), {
                                                css: o.toCss(i, r, s, n),
                                                rgba: o.toRgba(i, r, s, n)
                                            }
                                        }
                                        e.blend = function(e, t) {
                                            if (n = (255 & t.rgba) / 255, 1 === n) return {
                                                css: t.css,
                                                rgba: t.rgba
                                            };
                                            const a = t.rgba >> 24 & 255,
                                                c = t.rgba >> 16 & 255,
                                                l = t.rgba >> 8 & 255,
                                                h = e.rgba >> 24 & 255,
                                                u = e.rgba >> 16 & 255,
                                                d = e.rgba >> 8 & 255;
                                            return i = h + Math.round((a - h) * n), r = u + Math.round((c - u) * n), s = d + Math.round((l - d) * n), {
                                                css: o.toCss(i, r, s),
                                                rgba: o.toRgba(i, r, s)
                                            }
                                        }, e.isOpaque = function(e) {
                                            return 255 == (255 & e.rgba)
                                        }, e.ensureContrastRatio = function(e, t, i) {
                                            const r = h.ensureContrastRatio(e.rgba, t.rgba, i);
                                            if (r) return o.toColor(r >> 24 & 255, r >> 16 & 255, r >> 8 & 255)
                                        }, e.opaque = function(e) {
                                            const t = (255 | e.rgba) >>> 0;
                                            return [i, r, s] = h.toChannels(t), {
                                                css: o.toCss(i, r, s),
                                                rgba: t
                                            }
                                        }, e.opacity = t, e.multiplyOpacity = function(e, i) {
                                            return n = 255 & e.rgba, t(e, n * i / 255)
                                        }, e.toColorRGB = function(e) {
                                            return [e.rgba >> 24 & 255, e.rgba >> 16 & 255, e.rgba >> 8 & 255]
                                        }
                                    }(a || (t.color = a = {})),
                                    function(e) {
                                        let t, a;
                                        try {
                                            const e = document.createElement("canvas");
                                            e.width = 1, e.height = 1;
                                            const i = e.getContext("2d", {
                                                willReadFrequently: !0
                                            });
                                            i && (t = i, t.globalCompositeOperation = "copy", a = t.createLinearGradient(0, 0, 1, 1))
                                        } catch {}
                                        e.toColor = function(e) {
                                            if (e.match(/#[\da-f]{3,8}/i)) switch (e.length) {
                                                case 4:
                                                    return i = parseInt(e.slice(1, 2).repeat(2), 16), r = parseInt(e.slice(2, 3).repeat(2), 16), s = parseInt(e.slice(3, 4).repeat(2), 16), o.toColor(i, r, s);
                                                case 5:
                                                    return i = parseInt(e.slice(1, 2).repeat(2), 16), r = parseInt(e.slice(2, 3).repeat(2), 16), s = parseInt(e.slice(3, 4).repeat(2), 16), n = parseInt(e.slice(4, 5).repeat(2), 16), o.toColor(i, r, s, n);
                                                case 7:
                                                    return {
                                                        css: e, rgba: (parseInt(e.slice(1), 16) << 8 | 255) >>> 0
                                                    };
                                                case 9:
                                                    return {
                                                        css: e, rgba: parseInt(e.slice(1), 16) >>> 0
                                                    }
                                            }
                                            const c = e.match(/rgba?\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*(,\s*(0|1|\d?\.(\d+))\s*)?\)/);
                                            if (c) return i = parseInt(c[1]), r = parseInt(c[2]), s = parseInt(c[3]), n = Math.round(255 * (void 0 === c[5] ? 1 : parseFloat(c[5]))), o.toColor(i, r, s, n);
                                            if (!t || !a) throw new Error("css.toColor: Unsupported css format");
                                            if (t.fillStyle = a, t.fillStyle = e, "string" != typeof t.fillStyle) throw new Error("css.toColor: Unsupported css format");
                                            if (t.fillRect(0, 0, 1, 1), [i, r, s, n] = t.getImageData(0, 0, 1, 1).data, 255 !== n) throw new Error("css.toColor: Unsupported css format");
                                            return {
                                                rgba: o.toRgba(i, r, s, n),
                                                css: e
                                            }
                                        }
                                    }(c || (t.css = c = {})),
                                    function(e) {
                                        function t(e, t, i) {
                                            const r = e / 255,
                                                s = t / 255,
                                                n = i / 255;
                                            return .2126 * (r <= .03928 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4)) + .7152 * (s <= .03928 ? s / 12.92 : Math.pow((s + .055) / 1.055, 2.4)) + .0722 * (n <= .03928 ? n / 12.92 : Math.pow((n + .055) / 1.055, 2.4))
                                        }
                                        e.relativeLuminance = function(e) {
                                            return t(e >> 16 & 255, e >> 8 & 255, 255 & e)
                                        }, e.relativeLuminance2 = t
                                    }(l || (t.rgb = l = {})),
                                    function(e) {
                                        function t(e, t, i) {
                                            const r = e >> 24 & 255,
                                                s = e >> 16 & 255,
                                                n = e >> 8 & 255;
                                            let o = t >> 24 & 255,
                                                a = t >> 16 & 255,
                                                c = t >> 8 & 255,
                                                h = d(l.relativeLuminance2(o, a, c), l.relativeLuminance2(r, s, n));
                                            for (; h < i && (o > 0 || a > 0 || c > 0);) o -= Math.max(0, Math.ceil(.1 * o)), a -= Math.max(0, Math.ceil(.1 * a)), c -= Math.max(0, Math.ceil(.1 * c)), h = d(l.relativeLuminance2(o, a, c), l.relativeLuminance2(r, s, n));
                                            return (o << 24 | a << 16 | c << 8 | 255) >>> 0
                                        }

                                        function a(e, t, i) {
                                            const r = e >> 24 & 255,
                                                s = e >> 16 & 255,
                                                n = e >> 8 & 255;
                                            let o = t >> 24 & 255,
                                                a = t >> 16 & 255,
                                                c = t >> 8 & 255,
                                                h = d(l.relativeLuminance2(o, a, c), l.relativeLuminance2(r, s, n));
                                            for (; h < i && (o < 255 || a < 255 || c < 255);) o = Math.min(255, o + Math.ceil(.1 * (255 - o))), a = Math.min(255, a + Math.ceil(.1 * (255 - a))), c = Math.min(255, c + Math.ceil(.1 * (255 - c))), h = d(l.relativeLuminance2(o, a, c), l.relativeLuminance2(r, s, n));
                                            return (o << 24 | a << 16 | c << 8 | 255) >>> 0
                                        }
                                        e.blend = function(e, t) {
                                            if (n = (255 & t) / 255, 1 === n) return t;
                                            const a = t >> 24 & 255,
                                                c = t >> 16 & 255,
                                                l = t >> 8 & 255,
                                                h = e >> 24 & 255,
                                                u = e >> 16 & 255,
                                                d = e >> 8 & 255;
                                            return i = h + Math.round((a - h) * n), r = u + Math.round((c - u) * n), s = d + Math.round((l - d) * n), o.toRgba(i, r, s)
                                        }, e.ensureContrastRatio = function(e, i, r) {
                                            const s = l.relativeLuminance(e >> 8),
                                                n = l.relativeLuminance(i >> 8);
                                            if (d(s, n) < r) {
                                                if (n < s) {
                                                    const n = t(e, i, r),
                                                        o = d(s, l.relativeLuminance(n >> 8));
                                                    if (o < r) {
                                                        const t = a(e, i, r);
                                                        return o > d(s, l.relativeLuminance(t >> 8)) ? n : t
                                                    }
                                                    return n
                                                }
                                                const o = a(e, i, r),
                                                    c = d(s, l.relativeLuminance(o >> 8));
                                                if (c < r) {
                                                    const n = t(e, i, r);
                                                    return c > d(s, l.relativeLuminance(n >> 8)) ? o : n
                                                }
                                                return o
                                            }
                                        }, e.reduceLuminance = t, e.increaseLuminance = a, e.toChannels = function(e) {
                                            return [e >> 24 & 255, e >> 16 & 255, e >> 8 & 255, 255 & e]
                                        }
                                    }(h || (t.rgba = h = {})), t.toPaddedHex = u, t.contrastRatio = d
                            },
                            8969: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CoreTerminal = void 0;
                                const r = i(844),
                                    s = i(2585),
                                    n = i(4348),
                                    o = i(7866),
                                    a = i(744),
                                    c = i(7302),
                                    l = i(6975),
                                    h = i(8460),
                                    u = i(1753),
                                    d = i(1480),
                                    f = i(7994),
                                    p = i(9282),
                                    _ = i(5435),
                                    g = i(5981),
                                    v = i(2660);
                                let m = !1;
                                class b extends r.Disposable {
                                    get onScroll() {
                                        return this._onScrollApi || (this._onScrollApi = this.register(new h.EventEmitter), this._onScroll.event((e => {
                                            this._onScrollApi?.fire(e.position)
                                        }))), this._onScrollApi.event
                                    }
                                    get cols() {
                                        return this._bufferService.cols
                                    }
                                    get rows() {
                                        return this._bufferService.rows
                                    }
                                    get buffers() {
                                        return this._bufferService.buffers
                                    }
                                    get options() {
                                        return this.optionsService.options
                                    }
                                    set options(e) {
                                        for (const t in e) this.optionsService.options[t] = e[t]
                                    }
                                    constructor(e) {
                                        super(), this._windowsWrappingHeuristics = this.register(new r.MutableDisposable), this._onBinary = this.register(new h.EventEmitter), this.onBinary = this._onBinary.event, this._onData = this.register(new h.EventEmitter), this.onData = this._onData.event, this._onLineFeed = this.register(new h.EventEmitter), this.onLineFeed = this._onLineFeed.event, this._onResize = this.register(new h.EventEmitter), this.onResize = this._onResize.event, this._onWriteParsed = this.register(new h.EventEmitter), this.onWriteParsed = this._onWriteParsed.event, this._onScroll = this.register(new h.EventEmitter), this._instantiationService = new n.InstantiationService, this.optionsService = this.register(new c.OptionsService(e)), this._instantiationService.setService(s.IOptionsService, this.optionsService), this._bufferService = this.register(this._instantiationService.createInstance(a.BufferService)), this._instantiationService.setService(s.IBufferService, this._bufferService), this._logService = this.register(this._instantiationService.createInstance(o.LogService)), this._instantiationService.setService(s.ILogService, this._logService), this.coreService = this.register(this._instantiationService.createInstance(l.CoreService)), this._instantiationService.setService(s.ICoreService, this.coreService), this.coreMouseService = this.register(this._instantiationService.createInstance(u.CoreMouseService)), this._instantiationService.setService(s.ICoreMouseService, this.coreMouseService), this.unicodeService = this.register(this._instantiationService.createInstance(d.UnicodeService)), this._instantiationService.setService(s.IUnicodeService, this.unicodeService), this._charsetService = this._instantiationService.createInstance(f.CharsetService), this._instantiationService.setService(s.ICharsetService, this._charsetService), this._oscLinkService = this._instantiationService.createInstance(v.OscLinkService), this._instantiationService.setService(s.IOscLinkService, this._oscLinkService), this._inputHandler = this.register(new _.InputHandler(this._bufferService, this._charsetService, this.coreService, this._logService, this.optionsService, this._oscLinkService, this.coreMouseService, this.unicodeService)), this.register((0, h.forwardEvent)(this._inputHandler.onLineFeed, this._onLineFeed)), this.register(this._inputHandler), this.register((0, h.forwardEvent)(this._bufferService.onResize, this._onResize)), this.register((0, h.forwardEvent)(this.coreService.onData, this._onData)), this.register((0, h.forwardEvent)(this.coreService.onBinary, this._onBinary)), this.register(this.coreService.onRequestScrollToBottom((() => this.scrollToBottom()))), this.register(this.coreService.onUserInput((() => this._writeBuffer.handleUserInput()))), this.register(this.optionsService.onMultipleOptionChange(["windowsMode", "windowsPty"], (() => this._handleWindowsPtyOptionChange()))), this.register(this._bufferService.onScroll((e => {
                                            this._onScroll.fire({
                                                position: this._bufferService.buffer.ydisp,
                                                source: 0
                                            }), this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom)
                                        }))), this.register(this._inputHandler.onScroll((e => {
                                            this._onScroll.fire({
                                                position: this._bufferService.buffer.ydisp,
                                                source: 0
                                            }), this._inputHandler.markRangeDirty(this._bufferService.buffer.scrollTop, this._bufferService.buffer.scrollBottom)
                                        }))), this._writeBuffer = this.register(new g.WriteBuffer(((e, t) => this._inputHandler.parse(e, t)))), this.register((0, h.forwardEvent)(this._writeBuffer.onWriteParsed, this._onWriteParsed))
                                    }
                                    write(e, t) {
                                        this._writeBuffer.write(e, t)
                                    }
                                    writeSync(e, t) {
                                        this._logService.logLevel <= s.LogLevelEnum.WARN && !m && (this._logService.warn("writeSync is unreliable and will be removed soon."), m = !0), this._writeBuffer.writeSync(e, t)
                                    }
                                    input(e, t = !0) {
                                        this.coreService.triggerDataEvent(e, t)
                                    }
                                    resize(e, t) {
                                        isNaN(e) || isNaN(t) || (e = Math.max(e, a.MINIMUM_COLS), t = Math.max(t, a.MINIMUM_ROWS), this._bufferService.resize(e, t))
                                    }
                                    scroll(e, t = !1) {
                                        this._bufferService.scroll(e, t)
                                    }
                                    scrollLines(e, t, i) {
                                        this._bufferService.scrollLines(e, t, i)
                                    }
                                    scrollPages(e) {
                                        this.scrollLines(e * (this.rows - 1))
                                    }
                                    scrollToTop() {
                                        this.scrollLines(-this._bufferService.buffer.ydisp)
                                    }
                                    scrollToBottom() {
                                        this.scrollLines(this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp)
                                    }
                                    scrollToLine(e) {
                                        const t = e - this._bufferService.buffer.ydisp;
                                        0 !== t && this.scrollLines(t)
                                    }
                                    registerEscHandler(e, t) {
                                        return this._inputHandler.registerEscHandler(e, t)
                                    }
                                    registerDcsHandler(e, t) {
                                        return this._inputHandler.registerDcsHandler(e, t)
                                    }
                                    registerCsiHandler(e, t) {
                                        return this._inputHandler.registerCsiHandler(e, t)
                                    }
                                    registerOscHandler(e, t) {
                                        return this._inputHandler.registerOscHandler(e, t)
                                    }
                                    _setup() {
                                        this._handleWindowsPtyOptionChange()
                                    }
                                    reset() {
                                        this._inputHandler.reset(), this._bufferService.reset(), this._charsetService.reset(), this.coreService.reset(), this.coreMouseService.reset()
                                    }
                                    _handleWindowsPtyOptionChange() {
                                        let e = !1;
                                        const t = this.optionsService.rawOptions.windowsPty;
                                        t && void 0 !== t.buildNumber && void 0 !== t.buildNumber ? e = !!("conpty" === t.backend && t.buildNumber < 21376) : this.optionsService.rawOptions.windowsMode && (e = !0), e ? this._enableWindowsWrappingHeuristics() : this._windowsWrappingHeuristics.clear()
                                    }
                                    _enableWindowsWrappingHeuristics() {
                                        if (!this._windowsWrappingHeuristics.value) {
                                            const e = [];
                                            e.push(this.onLineFeed(p.updateWindowsModeWrappedState.bind(null, this._bufferService))), e.push(this.registerCsiHandler({
                                                final: "H"
                                            }, (() => ((0, p.updateWindowsModeWrappedState)(this._bufferService), !1)))), this._windowsWrappingHeuristics.value = (0, r.toDisposable)((() => {
                                                for (const t of e) t.dispose()
                                            }))
                                        }
                                    }
                                }
                                t.CoreTerminal = b
                            },
                            8460: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.runAndSubscribe = t.forwardEvent = t.EventEmitter = void 0, t.EventEmitter = class {
                                    constructor() {
                                        this._listeners = [], this._disposed = !1
                                    }
                                    get event() {
                                        return this._event || (this._event = e => (this._listeners.push(e), {
                                            dispose: () => {
                                                if (!this._disposed)
                                                    for (let t = 0; t < this._listeners.length; t++)
                                                        if (this._listeners[t] === e) return void this._listeners.splice(t, 1)
                                            }
                                        })), this._event
                                    }
                                    fire(e, t) {
                                        const i = [];
                                        for (let e = 0; e < this._listeners.length; e++) i.push(this._listeners[e]);
                                        for (let r = 0; r < i.length; r++) i[r].call(void 0, e, t)
                                    }
                                    dispose() {
                                        this.clearListeners(), this._disposed = !0
                                    }
                                    clearListeners() {
                                        this._listeners && (this._listeners.length = 0)
                                    }
                                }, t.forwardEvent = function(e, t) {
                                    return e((e => t.fire(e)))
                                }, t.runAndSubscribe = function(e, t) {
                                    return t(void 0), e((e => t(e)))
                                }
                            },
                            5435: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.InputHandler = t.WindowsOptionsReportType = void 0;
                                const n = i(2584),
                                    o = i(7116),
                                    a = i(2015),
                                    c = i(844),
                                    l = i(482),
                                    h = i(8437),
                                    u = i(8460),
                                    d = i(643),
                                    f = i(511),
                                    p = i(3734),
                                    _ = i(2585),
                                    g = i(1480),
                                    v = i(6242),
                                    m = i(6351),
                                    b = i(5941),
                                    w = {
                                        "(": 0,
                                        ")": 1,
                                        "*": 2,
                                        "+": 3,
                                        "-": 1,
                                        ".": 2
                                    },
                                    y = 131072;

                                function S(e, t) {
                                    if (e > 24) return t.setWinLines || !1;
                                    switch (e) {
                                        case 1:
                                            return !!t.restoreWin;
                                        case 2:
                                            return !!t.minimizeWin;
                                        case 3:
                                            return !!t.setWinPosition;
                                        case 4:
                                            return !!t.setWinSizePixels;
                                        case 5:
                                            return !!t.raiseWin;
                                        case 6:
                                            return !!t.lowerWin;
                                        case 7:
                                            return !!t.refreshWin;
                                        case 8:
                                            return !!t.setWinSizeChars;
                                        case 9:
                                            return !!t.maximizeWin;
                                        case 10:
                                            return !!t.fullscreenWin;
                                        case 11:
                                            return !!t.getWinState;
                                        case 13:
                                            return !!t.getWinPosition;
                                        case 14:
                                            return !!t.getWinSizePixels;
                                        case 15:
                                            return !!t.getScreenSizePixels;
                                        case 16:
                                            return !!t.getCellSizePixels;
                                        case 18:
                                            return !!t.getWinSizeChars;
                                        case 19:
                                            return !!t.getScreenSizeChars;
                                        case 20:
                                            return !!t.getIconTitle;
                                        case 21:
                                            return !!t.getWinTitle;
                                        case 22:
                                            return !!t.pushTitle;
                                        case 23:
                                            return !!t.popTitle;
                                        case 24:
                                            return !!t.setWinLines
                                    }
                                    return !1
                                }
                                var C;
                                ! function(e) {
                                    e[e.GET_WIN_SIZE_PIXELS = 0] = "GET_WIN_SIZE_PIXELS", e[e.GET_CELL_SIZE_PIXELS = 1] = "GET_CELL_SIZE_PIXELS"
                                }(C || (t.WindowsOptionsReportType = C = {}));
                                let x = 0;
                                class E extends c.Disposable {
                                    getAttrData() {
                                        return this._curAttrData
                                    }
                                    constructor(e, t, i, r, s, c, d, p, _ = new a.EscapeSequenceParser) {
                                        super(), this._bufferService = e, this._charsetService = t, this._coreService = i, this._logService = r, this._optionsService = s, this._oscLinkService = c, this._coreMouseService = d, this._unicodeService = p, this._parser = _, this._parseBuffer = new Uint32Array(4096), this._stringDecoder = new l.StringToUtf32, this._utf8Decoder = new l.Utf8ToUtf32, this._workCell = new f.CellData, this._windowTitle = "", this._iconName = "", this._windowTitleStack = [], this._iconNameStack = [], this._curAttrData = h.DEFAULT_ATTR_DATA.clone(), this._eraseAttrDataInternal = h.DEFAULT_ATTR_DATA.clone(), this._onRequestBell = this.register(new u.EventEmitter), this.onRequestBell = this._onRequestBell.event, this._onRequestRefreshRows = this.register(new u.EventEmitter), this.onRequestRefreshRows = this._onRequestRefreshRows.event, this._onRequestReset = this.register(new u.EventEmitter), this.onRequestReset = this._onRequestReset.event, this._onRequestSendFocus = this.register(new u.EventEmitter), this.onRequestSendFocus = this._onRequestSendFocus.event, this._onRequestSyncScrollBar = this.register(new u.EventEmitter), this.onRequestSyncScrollBar = this._onRequestSyncScrollBar.event, this._onRequestWindowsOptionsReport = this.register(new u.EventEmitter), this.onRequestWindowsOptionsReport = this._onRequestWindowsOptionsReport.event, this._onA11yChar = this.register(new u.EventEmitter), this.onA11yChar = this._onA11yChar.event, this._onA11yTab = this.register(new u.EventEmitter), this.onA11yTab = this._onA11yTab.event, this._onCursorMove = this.register(new u.EventEmitter), this.onCursorMove = this._onCursorMove.event, this._onLineFeed = this.register(new u.EventEmitter), this.onLineFeed = this._onLineFeed.event, this._onScroll = this.register(new u.EventEmitter), this.onScroll = this._onScroll.event, this._onTitleChange = this.register(new u.EventEmitter), this.onTitleChange = this._onTitleChange.event, this._onColor = this.register(new u.EventEmitter), this.onColor = this._onColor.event, this._parseStack = {
                                            paused: !1,
                                            cursorStartX: 0,
                                            cursorStartY: 0,
                                            decodedLength: 0,
                                            position: 0
                                        }, this._specialColors = [256, 257, 258], this.register(this._parser), this._dirtyRowTracker = new O(this._bufferService), this._activeBuffer = this._bufferService.buffer, this.register(this._bufferService.buffers.onBufferActivate((e => this._activeBuffer = e.activeBuffer))), this._parser.setCsiHandlerFallback(((e, t) => {
                                            this._logService.debug("Unknown CSI code: ", {
                                                identifier: this._parser.identToString(e),
                                                params: t.toArray()
                                            })
                                        })), this._parser.setEscHandlerFallback((e => {
                                            this._logService.debug("Unknown ESC code: ", {
                                                identifier: this._parser.identToString(e)
                                            })
                                        })), this._parser.setExecuteHandlerFallback((e => {
                                            this._logService.debug("Unknown EXECUTE code: ", {
                                                code: e
                                            })
                                        })), this._parser.setOscHandlerFallback(((e, t, i) => {
                                            this._logService.debug("Unknown OSC code: ", {
                                                identifier: e,
                                                action: t,
                                                data: i
                                            })
                                        })), this._parser.setDcsHandlerFallback(((e, t, i) => {
                                            "HOOK" === t && (i = i.toArray()), this._logService.debug("Unknown DCS code: ", {
                                                identifier: this._parser.identToString(e),
                                                action: t,
                                                payload: i
                                            })
                                        })), this._parser.setPrintHandler(((e, t, i) => this.print(e, t, i))), this._parser.registerCsiHandler({
                                            final: "@"
                                        }, (e => this.insertChars(e))), this._parser.registerCsiHandler({
                                            intermediates: " ",
                                            final: "@"
                                        }, (e => this.scrollLeft(e))), this._parser.registerCsiHandler({
                                            final: "A"
                                        }, (e => this.cursorUp(e))), this._parser.registerCsiHandler({
                                            intermediates: " ",
                                            final: "A"
                                        }, (e => this.scrollRight(e))), this._parser.registerCsiHandler({
                                            final: "B"
                                        }, (e => this.cursorDown(e))), this._parser.registerCsiHandler({
                                            final: "C"
                                        }, (e => this.cursorForward(e))), this._parser.registerCsiHandler({
                                            final: "D"
                                        }, (e => this.cursorBackward(e))), this._parser.registerCsiHandler({
                                            final: "E"
                                        }, (e => this.cursorNextLine(e))), this._parser.registerCsiHandler({
                                            final: "F"
                                        }, (e => this.cursorPrecedingLine(e))), this._parser.registerCsiHandler({
                                            final: "G"
                                        }, (e => this.cursorCharAbsolute(e))), this._parser.registerCsiHandler({
                                            final: "H"
                                        }, (e => this.cursorPosition(e))), this._parser.registerCsiHandler({
                                            final: "I"
                                        }, (e => this.cursorForwardTab(e))), this._parser.registerCsiHandler({
                                            final: "J"
                                        }, (e => this.eraseInDisplay(e, !1))), this._parser.registerCsiHandler({
                                            prefix: "?",
                                            final: "J"
                                        }, (e => this.eraseInDisplay(e, !0))), this._parser.registerCsiHandler({
                                            final: "K"
                                        }, (e => this.eraseInLine(e, !1))), this._parser.registerCsiHandler({
                                            prefix: "?",
                                            final: "K"
                                        }, (e => this.eraseInLine(e, !0))), this._parser.registerCsiHandler({
                                            final: "L"
                                        }, (e => this.insertLines(e))), this._parser.registerCsiHandler({
                                            final: "M"
                                        }, (e => this.deleteLines(e))), this._parser.registerCsiHandler({
                                            final: "P"
                                        }, (e => this.deleteChars(e))), this._parser.registerCsiHandler({
                                            final: "S"
                                        }, (e => this.scrollUp(e))), this._parser.registerCsiHandler({
                                            final: "T"
                                        }, (e => this.scrollDown(e))), this._parser.registerCsiHandler({
                                            final: "X"
                                        }, (e => this.eraseChars(e))), this._parser.registerCsiHandler({
                                            final: "Z"
                                        }, (e => this.cursorBackwardTab(e))), this._parser.registerCsiHandler({
                                            final: "`"
                                        }, (e => this.charPosAbsolute(e))), this._parser.registerCsiHandler({
                                            final: "a"
                                        }, (e => this.hPositionRelative(e))), this._parser.registerCsiHandler({
                                            final: "b"
                                        }, (e => this.repeatPrecedingCharacter(e))), this._parser.registerCsiHandler({
                                            final: "c"
                                        }, (e => this.sendDeviceAttributesPrimary(e))), this._parser.registerCsiHandler({
                                            prefix: ">",
                                            final: "c"
                                        }, (e => this.sendDeviceAttributesSecondary(e))), this._parser.registerCsiHandler({
                                            final: "d"
                                        }, (e => this.linePosAbsolute(e))), this._parser.registerCsiHandler({
                                            final: "e"
                                        }, (e => this.vPositionRelative(e))), this._parser.registerCsiHandler({
                                            final: "f"
                                        }, (e => this.hVPosition(e))), this._parser.registerCsiHandler({
                                            final: "g"
                                        }, (e => this.tabClear(e))), this._parser.registerCsiHandler({
                                            final: "h"
                                        }, (e => this.setMode(e))), this._parser.registerCsiHandler({
                                            prefix: "?",
                                            final: "h"
                                        }, (e => this.setModePrivate(e))), this._parser.registerCsiHandler({
                                            final: "l"
                                        }, (e => this.resetMode(e))), this._parser.registerCsiHandler({
                                            prefix: "?",
                                            final: "l"
                                        }, (e => this.resetModePrivate(e))), this._parser.registerCsiHandler({
                                            final: "m"
                                        }, (e => this.charAttributes(e))), this._parser.registerCsiHandler({
                                            final: "n"
                                        }, (e => this.deviceStatus(e))), this._parser.registerCsiHandler({
                                            prefix: "?",
                                            final: "n"
                                        }, (e => this.deviceStatusPrivate(e))), this._parser.registerCsiHandler({
                                            intermediates: "!",
                                            final: "p"
                                        }, (e => this.softReset(e))), this._parser.registerCsiHandler({
                                            intermediates: " ",
                                            final: "q"
                                        }, (e => this.setCursorStyle(e))), this._parser.registerCsiHandler({
                                            final: "r"
                                        }, (e => this.setScrollRegion(e))), this._parser.registerCsiHandler({
                                            final: "s"
                                        }, (e => this.saveCursor(e))), this._parser.registerCsiHandler({
                                            final: "t"
                                        }, (e => this.windowOptions(e))), this._parser.registerCsiHandler({
                                            final: "u"
                                        }, (e => this.restoreCursor(e))), this._parser.registerCsiHandler({
                                            intermediates: "'",
                                            final: "}"
                                        }, (e => this.insertColumns(e))), this._parser.registerCsiHandler({
                                            intermediates: "'",
                                            final: "~"
                                        }, (e => this.deleteColumns(e))), this._parser.registerCsiHandler({
                                            intermediates: '"',
                                            final: "q"
                                        }, (e => this.selectProtected(e))), this._parser.registerCsiHandler({
                                            intermediates: "$",
                                            final: "p"
                                        }, (e => this.requestMode(e, !0))), this._parser.registerCsiHandler({
                                            prefix: "?",
                                            intermediates: "$",
                                            final: "p"
                                        }, (e => this.requestMode(e, !1))), this._parser.setExecuteHandler(n.C0.BEL, (() => this.bell())), this._parser.setExecuteHandler(n.C0.LF, (() => this.lineFeed())), this._parser.setExecuteHandler(n.C0.VT, (() => this.lineFeed())), this._parser.setExecuteHandler(n.C0.FF, (() => this.lineFeed())), this._parser.setExecuteHandler(n.C0.CR, (() => this.carriageReturn())), this._parser.setExecuteHandler(n.C0.BS, (() => this.backspace())), this._parser.setExecuteHandler(n.C0.HT, (() => this.tab())), this._parser.setExecuteHandler(n.C0.SO, (() => this.shiftOut())), this._parser.setExecuteHandler(n.C0.SI, (() => this.shiftIn())), this._parser.setExecuteHandler(n.C1.IND, (() => this.index())), this._parser.setExecuteHandler(n.C1.NEL, (() => this.nextLine())), this._parser.setExecuteHandler(n.C1.HTS, (() => this.tabSet())), this._parser.registerOscHandler(0, new v.OscHandler((e => (this.setTitle(e), this.setIconName(e), !0)))), this._parser.registerOscHandler(1, new v.OscHandler((e => this.setIconName(e)))), this._parser.registerOscHandler(2, new v.OscHandler((e => this.setTitle(e)))), this._parser.registerOscHandler(4, new v.OscHandler((e => this.setOrReportIndexedColor(e)))), this._parser.registerOscHandler(8, new v.OscHandler((e => this.setHyperlink(e)))), this._parser.registerOscHandler(10, new v.OscHandler((e => this.setOrReportFgColor(e)))), this._parser.registerOscHandler(11, new v.OscHandler((e => this.setOrReportBgColor(e)))), this._parser.registerOscHandler(12, new v.OscHandler((e => this.setOrReportCursorColor(e)))), this._parser.registerOscHandler(104, new v.OscHandler((e => this.restoreIndexedColor(e)))), this._parser.registerOscHandler(110, new v.OscHandler((e => this.restoreFgColor(e)))), this._parser.registerOscHandler(111, new v.OscHandler((e => this.restoreBgColor(e)))), this._parser.registerOscHandler(112, new v.OscHandler((e => this.restoreCursorColor(e)))), this._parser.registerEscHandler({
                                            final: "7"
                                        }, (() => this.saveCursor())), this._parser.registerEscHandler({
                                            final: "8"
                                        }, (() => this.restoreCursor())), this._parser.registerEscHandler({
                                            final: "D"
                                        }, (() => this.index())), this._parser.registerEscHandler({
                                            final: "E"
                                        }, (() => this.nextLine())), this._parser.registerEscHandler({
                                            final: "H"
                                        }, (() => this.tabSet())), this._parser.registerEscHandler({
                                            final: "M"
                                        }, (() => this.reverseIndex())), this._parser.registerEscHandler({
                                            final: "="
                                        }, (() => this.keypadApplicationMode())), this._parser.registerEscHandler({
                                            final: ">"
                                        }, (() => this.keypadNumericMode())), this._parser.registerEscHandler({
                                            final: "c"
                                        }, (() => this.fullReset())), this._parser.registerEscHandler({
                                            final: "n"
                                        }, (() => this.setgLevel(2))), this._parser.registerEscHandler({
                                            final: "o"
                                        }, (() => this.setgLevel(3))), this._parser.registerEscHandler({
                                            final: "|"
                                        }, (() => this.setgLevel(3))), this._parser.registerEscHandler({
                                            final: "}"
                                        }, (() => this.setgLevel(2))), this._parser.registerEscHandler({
                                            final: "~"
                                        }, (() => this.setgLevel(1))), this._parser.registerEscHandler({
                                            intermediates: "%",
                                            final: "@"
                                        }, (() => this.selectDefaultCharset())), this._parser.registerEscHandler({
                                            intermediates: "%",
                                            final: "G"
                                        }, (() => this.selectDefaultCharset()));
                                        for (const e in o.CHARSETS) this._parser.registerEscHandler({
                                            intermediates: "(",
                                            final: e
                                        }, (() => this.selectCharset("(" + e))), this._parser.registerEscHandler({
                                            intermediates: ")",
                                            final: e
                                        }, (() => this.selectCharset(")" + e))), this._parser.registerEscHandler({
                                            intermediates: "*",
                                            final: e
                                        }, (() => this.selectCharset("*" + e))), this._parser.registerEscHandler({
                                            intermediates: "+",
                                            final: e
                                        }, (() => this.selectCharset("+" + e))), this._parser.registerEscHandler({
                                            intermediates: "-",
                                            final: e
                                        }, (() => this.selectCharset("-" + e))), this._parser.registerEscHandler({
                                            intermediates: ".",
                                            final: e
                                        }, (() => this.selectCharset("." + e))), this._parser.registerEscHandler({
                                            intermediates: "/",
                                            final: e
                                        }, (() => this.selectCharset("/" + e)));
                                        this._parser.registerEscHandler({
                                            intermediates: "#",
                                            final: "8"
                                        }, (() => this.screenAlignmentPattern())), this._parser.setErrorHandler((e => (this._logService.error("Parsing error: ", e), e))), this._parser.registerDcsHandler({
                                            intermediates: "$",
                                            final: "q"
                                        }, new m.DcsHandler(((e, t) => this.requestStatusString(e, t))))
                                    }
                                    _preserveStack(e, t, i, r) {
                                        this._parseStack.paused = !0, this._parseStack.cursorStartX = e, this._parseStack.cursorStartY = t, this._parseStack.decodedLength = i, this._parseStack.position = r
                                    }
                                    _logSlowResolvingAsync(e) {
                                        this._logService.logLevel <= _.LogLevelEnum.WARN && Promise.race([e, new Promise(((e, t) => setTimeout((() => t("#SLOW_TIMEOUT")), 5e3)))]).catch((e => {
                                            if ("#SLOW_TIMEOUT" !== e) throw e;
                                            console.warn("async parser handler taking longer than 5000 ms")
                                        }))
                                    }
                                    _getCurrentLinkId() {
                                        return this._curAttrData.extended.urlId
                                    }
                                    parse(e, t) {
                                        let i, r = this._activeBuffer.x,
                                            s = this._activeBuffer.y,
                                            n = 0;
                                        const o = this._parseStack.paused;
                                        if (o) {
                                            if (i = this._parser.parse(this._parseBuffer, this._parseStack.decodedLength, t)) return this._logSlowResolvingAsync(i), i;
                                            r = this._parseStack.cursorStartX, s = this._parseStack.cursorStartY, this._parseStack.paused = !1, e.length > y && (n = this._parseStack.position + y)
                                        }
                                        if (this._logService.logLevel <= _.LogLevelEnum.DEBUG && this._logService.debug("parsing data" + ("string" == typeof e ? ` "${e}"` : ` "${Array.prototype.map.call(e,(e=>String.fromCharCode(e))).join("")}"`), "string" == typeof e ? e.split("").map((e => e.charCodeAt(0))) : e), this._parseBuffer.length < e.length && this._parseBuffer.length < y && (this._parseBuffer = new Uint32Array(Math.min(e.length, y))), o || this._dirtyRowTracker.clearRange(), e.length > y)
                                            for (let t = n; t < e.length; t += y) {
                                                const n = t + y < e.length ? t + y : e.length,
                                                    o = "string" == typeof e ? this._stringDecoder.decode(e.substring(t, n), this._parseBuffer) : this._utf8Decoder.decode(e.subarray(t, n), this._parseBuffer);
                                                if (i = this._parser.parse(this._parseBuffer, o)) return this._preserveStack(r, s, o, t), this._logSlowResolvingAsync(i), i
                                            } else if (!o) {
                                                const t = "string" == typeof e ? this._stringDecoder.decode(e, this._parseBuffer) : this._utf8Decoder.decode(e, this._parseBuffer);
                                                if (i = this._parser.parse(this._parseBuffer, t)) return this._preserveStack(r, s, t, 0), this._logSlowResolvingAsync(i), i
                                            } this._activeBuffer.x === r && this._activeBuffer.y === s || this._onCursorMove.fire();
                                        const a = this._dirtyRowTracker.end + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp),
                                            c = this._dirtyRowTracker.start + (this._bufferService.buffer.ybase - this._bufferService.buffer.ydisp);
                                        c < this._bufferService.rows && this._onRequestRefreshRows.fire(Math.min(c, this._bufferService.rows - 1), Math.min(a, this._bufferService.rows - 1))
                                    }
                                    print(e, t, i) {
                                        let r, s;
                                        const n = this._charsetService.charset,
                                            o = this._optionsService.rawOptions.screenReaderMode,
                                            a = this._bufferService.cols,
                                            c = this._coreService.decPrivateModes.wraparound,
                                            u = this._coreService.modes.insertMode,
                                            f = this._curAttrData;
                                        let p = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
                                        this._dirtyRowTracker.markDirty(this._activeBuffer.y), this._activeBuffer.x && i - t > 0 && 2 === p.getWidth(this._activeBuffer.x - 1) && p.setCellFromCodepoint(this._activeBuffer.x - 1, 0, 1, f);
                                        let _ = this._parser.precedingJoinState;
                                        for (let v = t; v < i; ++v) {
                                            if (r = e[v], r < 127 && n) {
                                                const e = n[String.fromCharCode(r)];
                                                e && (r = e.charCodeAt(0))
                                            }
                                            const t = this._unicodeService.charProperties(r, _);
                                            s = g.UnicodeService.extractWidth(t);
                                            const i = g.UnicodeService.extractShouldJoin(t),
                                                m = i ? g.UnicodeService.extractWidth(_) : 0;
                                            if (_ = t, o && this._onA11yChar.fire((0, l.stringFromCodePoint)(r)), this._getCurrentLinkId() && this._oscLinkService.addLineToLink(this._getCurrentLinkId(), this._activeBuffer.ybase + this._activeBuffer.y), this._activeBuffer.x + s - m > a)
                                                if (c) {
                                                    const e = p;
                                                    let t = this._activeBuffer.x - m;
                                                    for (this._activeBuffer.x = m, this._activeBuffer.y++, this._activeBuffer.y === this._activeBuffer.scrollBottom + 1 ? (this._activeBuffer.y--, this._bufferService.scroll(this._eraseAttrData(), !0)) : (this._activeBuffer.y >= this._bufferService.rows && (this._activeBuffer.y = this._bufferService.rows - 1), this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y).isWrapped = !0), p = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y), m > 0 && p instanceof h.BufferLine && p.copyCellsFrom(e, t, 0, m, !1); t < a;) e.setCellFromCodepoint(t++, 0, 1, f)
                                                } else if (this._activeBuffer.x = a - 1, 2 === s) continue;
                                            if (i && this._activeBuffer.x) {
                                                const e = p.getWidth(this._activeBuffer.x - 1) ? 1 : 2;
                                                p.addCodepointToCell(this._activeBuffer.x - e, r, s);
                                                for (let e = s - m; --e >= 0;) p.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, f)
                                            } else if (u && (p.insertCells(this._activeBuffer.x, s - m, this._activeBuffer.getNullCell(f)), 2 === p.getWidth(a - 1) && p.setCellFromCodepoint(a - 1, d.NULL_CELL_CODE, d.NULL_CELL_WIDTH, f)), p.setCellFromCodepoint(this._activeBuffer.x++, r, s, f), s > 0)
                                                for (; --s;) p.setCellFromCodepoint(this._activeBuffer.x++, 0, 0, f)
                                        }
                                        this._parser.precedingJoinState = _, this._activeBuffer.x < a && i - t > 0 && 0 === p.getWidth(this._activeBuffer.x) && !p.hasContent(this._activeBuffer.x) && p.setCellFromCodepoint(this._activeBuffer.x, 0, 1, f), this._dirtyRowTracker.markDirty(this._activeBuffer.y)
                                    }
                                    registerCsiHandler(e, t) {
                                        return "t" !== e.final || e.prefix || e.intermediates ? this._parser.registerCsiHandler(e, t) : this._parser.registerCsiHandler(e, (e => !S(e.params[0], this._optionsService.rawOptions.windowOptions) || t(e)))
                                    }
                                    registerDcsHandler(e, t) {
                                        return this._parser.registerDcsHandler(e, new m.DcsHandler(t))
                                    }
                                    registerEscHandler(e, t) {
                                        return this._parser.registerEscHandler(e, t)
                                    }
                                    registerOscHandler(e, t) {
                                        return this._parser.registerOscHandler(e, new v.OscHandler(t))
                                    }
                                    bell() {
                                        return this._onRequestBell.fire(), !0
                                    }
                                    lineFeed() {
                                        return this._dirtyRowTracker.markDirty(this._activeBuffer.y), this._optionsService.rawOptions.convertEol && (this._activeBuffer.x = 0), this._activeBuffer.y++, this._activeBuffer.y === this._activeBuffer.scrollBottom + 1 ? (this._activeBuffer.y--, this._bufferService.scroll(this._eraseAttrData())) : this._activeBuffer.y >= this._bufferService.rows ? this._activeBuffer.y = this._bufferService.rows - 1 : this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y).isWrapped = !1, this._activeBuffer.x >= this._bufferService.cols && this._activeBuffer.x--, this._dirtyRowTracker.markDirty(this._activeBuffer.y), this._onLineFeed.fire(), !0
                                    }
                                    carriageReturn() {
                                        return this._activeBuffer.x = 0, !0
                                    }
                                    backspace() {
                                        if (!this._coreService.decPrivateModes.reverseWraparound) return this._restrictCursor(), this._activeBuffer.x > 0 && this._activeBuffer.x--, !0;
                                        if (this._restrictCursor(this._bufferService.cols), this._activeBuffer.x > 0) this._activeBuffer.x--;
                                        else if (0 === this._activeBuffer.x && this._activeBuffer.y > this._activeBuffer.scrollTop && this._activeBuffer.y <= this._activeBuffer.scrollBottom && this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y)?.isWrapped) {
                                            this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y).isWrapped = !1, this._activeBuffer.y--, this._activeBuffer.x = this._bufferService.cols - 1;
                                            const e = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
                                            e.hasWidth(this._activeBuffer.x) && !e.hasContent(this._activeBuffer.x) && this._activeBuffer.x--
                                        }
                                        return this._restrictCursor(), !0
                                    }
                                    tab() {
                                        if (this._activeBuffer.x >= this._bufferService.cols) return !0;
                                        const e = this._activeBuffer.x;
                                        return this._activeBuffer.x = this._activeBuffer.nextStop(), this._optionsService.rawOptions.screenReaderMode && this._onA11yTab.fire(this._activeBuffer.x - e), !0
                                    }
                                    shiftOut() {
                                        return this._charsetService.setgLevel(1), !0
                                    }
                                    shiftIn() {
                                        return this._charsetService.setgLevel(0), !0
                                    }
                                    _restrictCursor(e = this._bufferService.cols - 1) {
                                        this._activeBuffer.x = Math.min(e, Math.max(0, this._activeBuffer.x)), this._activeBuffer.y = this._coreService.decPrivateModes.origin ? Math.min(this._activeBuffer.scrollBottom, Math.max(this._activeBuffer.scrollTop, this._activeBuffer.y)) : Math.min(this._bufferService.rows - 1, Math.max(0, this._activeBuffer.y)), this._dirtyRowTracker.markDirty(this._activeBuffer.y)
                                    }
                                    _setCursor(e, t) {
                                        this._dirtyRowTracker.markDirty(this._activeBuffer.y), this._coreService.decPrivateModes.origin ? (this._activeBuffer.x = e, this._activeBuffer.y = this._activeBuffer.scrollTop + t) : (this._activeBuffer.x = e, this._activeBuffer.y = t), this._restrictCursor(), this._dirtyRowTracker.markDirty(this._activeBuffer.y)
                                    }
                                    _moveCursor(e, t) {
                                        this._restrictCursor(), this._setCursor(this._activeBuffer.x + e, this._activeBuffer.y + t)
                                    }
                                    cursorUp(e) {
                                        const t = this._activeBuffer.y - this._activeBuffer.scrollTop;
                                        return t >= 0 ? this._moveCursor(0, -Math.min(t, e.params[0] || 1)) : this._moveCursor(0, -(e.params[0] || 1)), !0
                                    }
                                    cursorDown(e) {
                                        const t = this._activeBuffer.scrollBottom - this._activeBuffer.y;
                                        return t >= 0 ? this._moveCursor(0, Math.min(t, e.params[0] || 1)) : this._moveCursor(0, e.params[0] || 1), !0
                                    }
                                    cursorForward(e) {
                                        return this._moveCursor(e.params[0] || 1, 0), !0
                                    }
                                    cursorBackward(e) {
                                        return this._moveCursor(-(e.params[0] || 1), 0), !0
                                    }
                                    cursorNextLine(e) {
                                        return this.cursorDown(e), this._activeBuffer.x = 0, !0
                                    }
                                    cursorPrecedingLine(e) {
                                        return this.cursorUp(e), this._activeBuffer.x = 0, !0
                                    }
                                    cursorCharAbsolute(e) {
                                        return this._setCursor((e.params[0] || 1) - 1, this._activeBuffer.y), !0
                                    }
                                    cursorPosition(e) {
                                        return this._setCursor(e.length >= 2 ? (e.params[1] || 1) - 1 : 0, (e.params[0] || 1) - 1), !0
                                    }
                                    charPosAbsolute(e) {
                                        return this._setCursor((e.params[0] || 1) - 1, this._activeBuffer.y), !0
                                    }
                                    hPositionRelative(e) {
                                        return this._moveCursor(e.params[0] || 1, 0), !0
                                    }
                                    linePosAbsolute(e) {
                                        return this._setCursor(this._activeBuffer.x, (e.params[0] || 1) - 1), !0
                                    }
                                    vPositionRelative(e) {
                                        return this._moveCursor(0, e.params[0] || 1), !0
                                    }
                                    hVPosition(e) {
                                        return this.cursorPosition(e), !0
                                    }
                                    tabClear(e) {
                                        const t = e.params[0];
                                        return 0 === t ? delete this._activeBuffer.tabs[this._activeBuffer.x] : 3 === t && (this._activeBuffer.tabs = {}), !0
                                    }
                                    cursorForwardTab(e) {
                                        if (this._activeBuffer.x >= this._bufferService.cols) return !0;
                                        let t = e.params[0] || 1;
                                        for (; t--;) this._activeBuffer.x = this._activeBuffer.nextStop();
                                        return !0
                                    }
                                    cursorBackwardTab(e) {
                                        if (this._activeBuffer.x >= this._bufferService.cols) return !0;
                                        let t = e.params[0] || 1;
                                        for (; t--;) this._activeBuffer.x = this._activeBuffer.prevStop();
                                        return !0
                                    }
                                    selectProtected(e) {
                                        const t = e.params[0];
                                        return 1 === t && (this._curAttrData.bg |= 536870912), 2 !== t && 0 !== t || (this._curAttrData.bg &= -536870913), !0
                                    }
                                    _eraseInBufferLine(e, t, i, r = !1, s = !1) {
                                        const n = this._activeBuffer.lines.get(this._activeBuffer.ybase + e);
                                        n.replaceCells(t, i, this._activeBuffer.getNullCell(this._eraseAttrData()), s), r && (n.isWrapped = !1)
                                    }
                                    _resetBufferLine(e, t = !1) {
                                        const i = this._activeBuffer.lines.get(this._activeBuffer.ybase + e);
                                        i && (i.fill(this._activeBuffer.getNullCell(this._eraseAttrData()), t), this._bufferService.buffer.clearMarkers(this._activeBuffer.ybase + e), i.isWrapped = !1)
                                    }
                                    eraseInDisplay(e, t = !1) {
                                        let i;
                                        switch (this._restrictCursor(this._bufferService.cols), e.params[0]) {
                                            case 0:
                                                for (i = this._activeBuffer.y, this._dirtyRowTracker.markDirty(i), this._eraseInBufferLine(i++, this._activeBuffer.x, this._bufferService.cols, 0 === this._activeBuffer.x, t); i < this._bufferService.rows; i++) this._resetBufferLine(i, t);
                                                this._dirtyRowTracker.markDirty(i);
                                                break;
                                            case 1:
                                                for (i = this._activeBuffer.y, this._dirtyRowTracker.markDirty(i), this._eraseInBufferLine(i, 0, this._activeBuffer.x + 1, !0, t), this._activeBuffer.x + 1 >= this._bufferService.cols && (this._activeBuffer.lines.get(i + 1).isWrapped = !1); i--;) this._resetBufferLine(i, t);
                                                this._dirtyRowTracker.markDirty(0);
                                                break;
                                            case 2:
                                                for (i = this._bufferService.rows, this._dirtyRowTracker.markDirty(i - 1); i--;) this._resetBufferLine(i, t);
                                                this._dirtyRowTracker.markDirty(0);
                                                break;
                                            case 3:
                                                const e = this._activeBuffer.lines.length - this._bufferService.rows;
                                                e > 0 && (this._activeBuffer.lines.trimStart(e), this._activeBuffer.ybase = Math.max(this._activeBuffer.ybase - e, 0), this._activeBuffer.ydisp = Math.max(this._activeBuffer.ydisp - e, 0), this._onScroll.fire(0))
                                        }
                                        return !0
                                    }
                                    eraseInLine(e, t = !1) {
                                        switch (this._restrictCursor(this._bufferService.cols), e.params[0]) {
                                            case 0:
                                                this._eraseInBufferLine(this._activeBuffer.y, this._activeBuffer.x, this._bufferService.cols, 0 === this._activeBuffer.x, t);
                                                break;
                                            case 1:
                                                this._eraseInBufferLine(this._activeBuffer.y, 0, this._activeBuffer.x + 1, !1, t);
                                                break;
                                            case 2:
                                                this._eraseInBufferLine(this._activeBuffer.y, 0, this._bufferService.cols, !0, t)
                                        }
                                        return this._dirtyRowTracker.markDirty(this._activeBuffer.y), !0
                                    }
                                    insertLines(e) {
                                        this._restrictCursor();
                                        let t = e.params[0] || 1;
                                        if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) return !0;
                                        const i = this._activeBuffer.ybase + this._activeBuffer.y,
                                            r = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom,
                                            s = this._bufferService.rows - 1 + this._activeBuffer.ybase - r + 1;
                                        for (; t--;) this._activeBuffer.lines.splice(s - 1, 1), this._activeBuffer.lines.splice(i, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));
                                        return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom), this._activeBuffer.x = 0, !0
                                    }
                                    deleteLines(e) {
                                        this._restrictCursor();
                                        let t = e.params[0] || 1;
                                        if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) return !0;
                                        const i = this._activeBuffer.ybase + this._activeBuffer.y;
                                        let r;
                                        for (r = this._bufferService.rows - 1 - this._activeBuffer.scrollBottom, r = this._bufferService.rows - 1 + this._activeBuffer.ybase - r; t--;) this._activeBuffer.lines.splice(i, 1), this._activeBuffer.lines.splice(r, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));
                                        return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.y, this._activeBuffer.scrollBottom), this._activeBuffer.x = 0, !0
                                    }
                                    insertChars(e) {
                                        this._restrictCursor();
                                        const t = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
                                        return t && (t.insertCells(this._activeBuffer.x, e.params[0] || 1, this._activeBuffer.getNullCell(this._eraseAttrData())), this._dirtyRowTracker.markDirty(this._activeBuffer.y)), !0
                                    }
                                    deleteChars(e) {
                                        this._restrictCursor();
                                        const t = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
                                        return t && (t.deleteCells(this._activeBuffer.x, e.params[0] || 1, this._activeBuffer.getNullCell(this._eraseAttrData())), this._dirtyRowTracker.markDirty(this._activeBuffer.y)), !0
                                    }
                                    scrollUp(e) {
                                        let t = e.params[0] || 1;
                                        for (; t--;) this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 1), this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 0, this._activeBuffer.getBlankLine(this._eraseAttrData()));
                                        return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0
                                    }
                                    scrollDown(e) {
                                        let t = e.params[0] || 1;
                                        for (; t--;) this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollBottom, 1), this._activeBuffer.lines.splice(this._activeBuffer.ybase + this._activeBuffer.scrollTop, 0, this._activeBuffer.getBlankLine(h.DEFAULT_ATTR_DATA));
                                        return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0
                                    }
                                    scrollLeft(e) {
                                        if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) return !0;
                                        const t = e.params[0] || 1;
                                        for (let e = this._activeBuffer.scrollTop; e <= this._activeBuffer.scrollBottom; ++e) {
                                            const i = this._activeBuffer.lines.get(this._activeBuffer.ybase + e);
                                            i.deleteCells(0, t, this._activeBuffer.getNullCell(this._eraseAttrData())), i.isWrapped = !1
                                        }
                                        return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0
                                    }
                                    scrollRight(e) {
                                        if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) return !0;
                                        const t = e.params[0] || 1;
                                        for (let e = this._activeBuffer.scrollTop; e <= this._activeBuffer.scrollBottom; ++e) {
                                            const i = this._activeBuffer.lines.get(this._activeBuffer.ybase + e);
                                            i.insertCells(0, t, this._activeBuffer.getNullCell(this._eraseAttrData())), i.isWrapped = !1
                                        }
                                        return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0
                                    }
                                    insertColumns(e) {
                                        if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) return !0;
                                        const t = e.params[0] || 1;
                                        for (let e = this._activeBuffer.scrollTop; e <= this._activeBuffer.scrollBottom; ++e) {
                                            const i = this._activeBuffer.lines.get(this._activeBuffer.ybase + e);
                                            i.insertCells(this._activeBuffer.x, t, this._activeBuffer.getNullCell(this._eraseAttrData())), i.isWrapped = !1
                                        }
                                        return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0
                                    }
                                    deleteColumns(e) {
                                        if (this._activeBuffer.y > this._activeBuffer.scrollBottom || this._activeBuffer.y < this._activeBuffer.scrollTop) return !0;
                                        const t = e.params[0] || 1;
                                        for (let e = this._activeBuffer.scrollTop; e <= this._activeBuffer.scrollBottom; ++e) {
                                            const i = this._activeBuffer.lines.get(this._activeBuffer.ybase + e);
                                            i.deleteCells(this._activeBuffer.x, t, this._activeBuffer.getNullCell(this._eraseAttrData())), i.isWrapped = !1
                                        }
                                        return this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom), !0
                                    }
                                    eraseChars(e) {
                                        this._restrictCursor();
                                        const t = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y);
                                        return t && (t.replaceCells(this._activeBuffer.x, this._activeBuffer.x + (e.params[0] || 1), this._activeBuffer.getNullCell(this._eraseAttrData())), this._dirtyRowTracker.markDirty(this._activeBuffer.y)), !0
                                    }
                                    repeatPrecedingCharacter(e) {
                                        const t = this._parser.precedingJoinState;
                                        if (!t) return !0;
                                        const i = e.params[0] || 1,
                                            r = g.UnicodeService.extractWidth(t),
                                            s = this._activeBuffer.x - r,
                                            n = this._activeBuffer.lines.get(this._activeBuffer.ybase + this._activeBuffer.y).getString(s),
                                            o = new Uint32Array(n.length * i);
                                        let a = 0;
                                        for (let e = 0; e < n.length;) {
                                            const t = n.codePointAt(e) || 0;
                                            o[a++] = t, e += t > 65535 ? 2 : 1
                                        }
                                        let c = a;
                                        for (let e = 1; e < i; ++e) o.copyWithin(c, 0, a), c += a;
                                        return this.print(o, 0, c), !0
                                    }
                                    sendDeviceAttributesPrimary(e) {
                                        return e.params[0] > 0 || (this._is("xterm") || this._is("rxvt-unicode") || this._is("screen") ? this._coreService.triggerDataEvent(n.C0.ESC + "[?1;2c") : this._is("linux") && this._coreService.triggerDataEvent(n.C0.ESC + "[?6c")), !0
                                    }
                                    sendDeviceAttributesSecondary(e) {
                                        return e.params[0] > 0 || (this._is("xterm") ? this._coreService.triggerDataEvent(n.C0.ESC + "[>0;276;0c") : this._is("rxvt-unicode") ? this._coreService.triggerDataEvent(n.C0.ESC + "[>85;95;0c") : this._is("linux") ? this._coreService.triggerDataEvent(e.params[0] + "c") : this._is("screen") && this._coreService.triggerDataEvent(n.C0.ESC + "[>83;40003;0c")), !0
                                    }
                                    _is(e) {
                                        return 0 === (this._optionsService.rawOptions.termName + "").indexOf(e)
                                    }
                                    setMode(e) {
                                        for (let t = 0; t < e.length; t++) switch (e.params[t]) {
                                            case 4:
                                                this._coreService.modes.insertMode = !0;
                                                break;
                                            case 20:
                                                this._optionsService.options.convertEol = !0
                                        }
                                        return !0
                                    }
                                    setModePrivate(e) {
                                        for (let t = 0; t < e.length; t++) switch (e.params[t]) {
                                            case 1:
                                                this._coreService.decPrivateModes.applicationCursorKeys = !0;
                                                break;
                                            case 2:
                                                this._charsetService.setgCharset(0, o.DEFAULT_CHARSET), this._charsetService.setgCharset(1, o.DEFAULT_CHARSET), this._charsetService.setgCharset(2, o.DEFAULT_CHARSET), this._charsetService.setgCharset(3, o.DEFAULT_CHARSET);
                                                break;
                                            case 3:
                                                this._optionsService.rawOptions.windowOptions.setWinLines && (this._bufferService.resize(132, this._bufferService.rows), this._onRequestReset.fire());
                                                break;
                                            case 6:
                                                this._coreService.decPrivateModes.origin = !0, this._setCursor(0, 0);
                                                break;
                                            case 7:
                                                this._coreService.decPrivateModes.wraparound = !0;
                                                break;
                                            case 12:
                                                this._optionsService.options.cursorBlink = !0;
                                                break;
                                            case 45:
                                                this._coreService.decPrivateModes.reverseWraparound = !0;
                                                break;
                                            case 66:
                                                this._logService.debug("Serial port requested application keypad."), this._coreService.decPrivateModes.applicationKeypad = !0, this._onRequestSyncScrollBar.fire();
                                                break;
                                            case 9:
                                                this._coreMouseService.activeProtocol = "X10";
                                                break;
                                            case 1e3:
                                                this._coreMouseService.activeProtocol = "VT200";
                                                break;
                                            case 1002:
                                                this._coreMouseService.activeProtocol = "DRAG";
                                                break;
                                            case 1003:
                                                this._coreMouseService.activeProtocol = "ANY";
                                                break;
                                            case 1004:
                                                this._coreService.decPrivateModes.sendFocus = !0, this._onRequestSendFocus.fire();
                                                break;
                                            case 1005:
                                                this._logService.debug("DECSET 1005 not supported (see #2507)");
                                                break;
                                            case 1006:
                                                this._coreMouseService.activeEncoding = "SGR";
                                                break;
                                            case 1015:
                                                this._logService.debug("DECSET 1015 not supported (see #2507)");
                                                break;
                                            case 1016:
                                                this._coreMouseService.activeEncoding = "SGR_PIXELS";
                                                break;
                                            case 25:
                                                this._coreService.isCursorHidden = !1;
                                                break;
                                            case 1048:
                                                this.saveCursor();
                                                break;
                                            case 1049:
                                                this.saveCursor();
                                            case 47:
                                            case 1047:
                                                this._bufferService.buffers.activateAltBuffer(this._eraseAttrData()), this._coreService.isCursorInitialized = !0, this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1), this._onRequestSyncScrollBar.fire();
                                                break;
                                            case 2004:
                                                this._coreService.decPrivateModes.bracketedPasteMode = !0
                                        }
                                        return !0
                                    }
                                    resetMode(e) {
                                        for (let t = 0; t < e.length; t++) switch (e.params[t]) {
                                            case 4:
                                                this._coreService.modes.insertMode = !1;
                                                break;
                                            case 20:
                                                this._optionsService.options.convertEol = !1
                                        }
                                        return !0
                                    }
                                    resetModePrivate(e) {
                                        for (let t = 0; t < e.length; t++) switch (e.params[t]) {
                                            case 1:
                                                this._coreService.decPrivateModes.applicationCursorKeys = !1;
                                                break;
                                            case 3:
                                                this._optionsService.rawOptions.windowOptions.setWinLines && (this._bufferService.resize(80, this._bufferService.rows), this._onRequestReset.fire());
                                                break;
                                            case 6:
                                                this._coreService.decPrivateModes.origin = !1, this._setCursor(0, 0);
                                                break;
                                            case 7:
                                                this._coreService.decPrivateModes.wraparound = !1;
                                                break;
                                            case 12:
                                                this._optionsService.options.cursorBlink = !1;
                                                break;
                                            case 45:
                                                this._coreService.decPrivateModes.reverseWraparound = !1;
                                                break;
                                            case 66:
                                                this._logService.debug("Switching back to normal keypad."), this._coreService.decPrivateModes.applicationKeypad = !1, this._onRequestSyncScrollBar.fire();
                                                break;
                                            case 9:
                                            case 1e3:
                                            case 1002:
                                            case 1003:
                                                this._coreMouseService.activeProtocol = "NONE";
                                                break;
                                            case 1004:
                                                this._coreService.decPrivateModes.sendFocus = !1;
                                                break;
                                            case 1005:
                                                this._logService.debug("DECRST 1005 not supported (see #2507)");
                                                break;
                                            case 1006:
                                            case 1016:
                                                this._coreMouseService.activeEncoding = "DEFAULT";
                                                break;
                                            case 1015:
                                                this._logService.debug("DECRST 1015 not supported (see #2507)");
                                                break;
                                            case 25:
                                                this._coreService.isCursorHidden = !0;
                                                break;
                                            case 1048:
                                                this.restoreCursor();
                                                break;
                                            case 1049:
                                            case 47:
                                            case 1047:
                                                this._bufferService.buffers.activateNormalBuffer(), 1049 === e.params[t] && this.restoreCursor(), this._coreService.isCursorInitialized = !0, this._onRequestRefreshRows.fire(0, this._bufferService.rows - 1), this._onRequestSyncScrollBar.fire();
                                                break;
                                            case 2004:
                                                this._coreService.decPrivateModes.bracketedPasteMode = !1
                                        }
                                        return !0
                                    }
                                    requestMode(e, t) {
                                        const i = this._coreService.decPrivateModes,
                                            {
                                                activeProtocol: r,
                                                activeEncoding: s
                                            } = this._coreMouseService,
                                            o = this._coreService,
                                            {
                                                buffers: a,
                                                cols: c
                                            } = this._bufferService,
                                            {
                                                active: l,
                                                alt: h
                                            } = a,
                                            u = this._optionsService.rawOptions,
                                            d = e => e ? 1 : 2,
                                            f = e.params[0];
                                        return p = f, _ = t ? 2 === f ? 4 : 4 === f ? d(o.modes.insertMode) : 12 === f ? 3 : 20 === f ? d(u.convertEol) : 0 : 1 === f ? d(i.applicationCursorKeys) : 3 === f ? u.windowOptions.setWinLines ? 80 === c ? 2 : 132 === c ? 1 : 0 : 0 : 6 === f ? d(i.origin) : 7 === f ? d(i.wraparound) : 8 === f ? 3 : 9 === f ? d("X10" === r) : 12 === f ? d(u.cursorBlink) : 25 === f ? d(!o.isCursorHidden) : 45 === f ? d(i.reverseWraparound) : 66 === f ? d(i.applicationKeypad) : 67 === f ? 4 : 1e3 === f ? d("VT200" === r) : 1002 === f ? d("DRAG" === r) : 1003 === f ? d("ANY" === r) : 1004 === f ? d(i.sendFocus) : 1005 === f ? 4 : 1006 === f ? d("SGR" === s) : 1015 === f ? 4 : 1016 === f ? d("SGR_PIXELS" === s) : 1048 === f ? 1 : 47 === f || 1047 === f || 1049 === f ? d(l === h) : 2004 === f ? d(i.bracketedPasteMode) : 0, o.triggerDataEvent(`${n.C0.ESC}[${t?"":"?"}${p};${_}$y`), !0;
                                        var p, _
                                    }
                                    _updateAttrColor(e, t, i, r, s) {
                                        return 2 === t ? (e |= 50331648, e &= -16777216, e |= p.AttributeData.fromColorRGB([i, r, s])) : 5 === t && (e &= -50331904, e |= 33554432 | 255 & i), e
                                    }
                                    _extractColor(e, t, i) {
                                        const r = [0, 0, -1, 0, 0, 0];
                                        let s = 0,
                                            n = 0;
                                        do {
                                            if (r[n + s] = e.params[t + n], e.hasSubParams(t + n)) {
                                                const i = e.getSubParams(t + n);
                                                let o = 0;
                                                do {
                                                    5 === r[1] && (s = 1), r[n + o + 1 + s] = i[o]
                                                } while (++o < i.length && o + n + 1 + s < r.length);
                                                break
                                            }
                                            if (5 === r[1] && n + s >= 2 || 2 === r[1] && n + s >= 5) break;
                                            r[1] && (s = 1)
                                        } while (++n + t < e.length && n + s < r.length);
                                        for (let e = 2; e < r.length; ++e) - 1 === r[e] && (r[e] = 0);
                                        switch (r[0]) {
                                            case 38:
                                                i.fg = this._updateAttrColor(i.fg, r[1], r[3], r[4], r[5]);
                                                break;
                                            case 48:
                                                i.bg = this._updateAttrColor(i.bg, r[1], r[3], r[4], r[5]);
                                                break;
                                            case 58:
                                                i.extended = i.extended.clone(), i.extended.underlineColor = this._updateAttrColor(i.extended.underlineColor, r[1], r[3], r[4], r[5])
                                        }
                                        return n
                                    }
                                    _processUnderline(e, t) {
                                        t.extended = t.extended.clone(), (!~e || e > 5) && (e = 1), t.extended.underlineStyle = e, t.fg |= 268435456, 0 === e && (t.fg &= -268435457), t.updateExtended()
                                    }
                                    _processSGR0(e) {
                                        e.fg = h.DEFAULT_ATTR_DATA.fg, e.bg = h.DEFAULT_ATTR_DATA.bg, e.extended = e.extended.clone(), e.extended.underlineStyle = 0, e.extended.underlineColor &= -67108864, e.updateExtended()
                                    }
                                    charAttributes(e) {
                                        if (1 === e.length && 0 === e.params[0]) return this._processSGR0(this._curAttrData), !0;
                                        const t = e.length;
                                        let i;
                                        const r = this._curAttrData;
                                        for (let s = 0; s < t; s++) i = e.params[s], i >= 30 && i <= 37 ? (r.fg &= -50331904, r.fg |= 16777216 | i - 30) : i >= 40 && i <= 47 ? (r.bg &= -50331904, r.bg |= 16777216 | i - 40) : i >= 90 && i <= 97 ? (r.fg &= -50331904, r.fg |= 16777224 | i - 90) : i >= 100 && i <= 107 ? (r.bg &= -50331904, r.bg |= 16777224 | i - 100) : 0 === i ? this._processSGR0(r) : 1 === i ? r.fg |= 134217728 : 3 === i ? r.bg |= 67108864 : 4 === i ? (r.fg |= 268435456, this._processUnderline(e.hasSubParams(s) ? e.getSubParams(s)[0] : 1, r)) : 5 === i ? r.fg |= 536870912 : 7 === i ? r.fg |= 67108864 : 8 === i ? r.fg |= 1073741824 : 9 === i ? r.fg |= 2147483648 : 2 === i ? r.bg |= 134217728 : 21 === i ? this._processUnderline(2, r) : 22 === i ? (r.fg &= -134217729, r.bg &= -134217729) : 23 === i ? r.bg &= -67108865 : 24 === i ? (r.fg &= -268435457, this._processUnderline(0, r)) : 25 === i ? r.fg &= -536870913 : 27 === i ? r.fg &= -67108865 : 28 === i ? r.fg &= -1073741825 : 29 === i ? r.fg &= 2147483647 : 39 === i ? (r.fg &= -67108864, r.fg |= 16777215 & h.DEFAULT_ATTR_DATA.fg) : 49 === i ? (r.bg &= -67108864, r.bg |= 16777215 & h.DEFAULT_ATTR_DATA.bg) : 38 === i || 48 === i || 58 === i ? s += this._extractColor(e, s, r) : 53 === i ? r.bg |= 1073741824 : 55 === i ? r.bg &= -1073741825 : 59 === i ? (r.extended = r.extended.clone(), r.extended.underlineColor = -1, r.updateExtended()) : 100 === i ? (r.fg &= -67108864, r.fg |= 16777215 & h.DEFAULT_ATTR_DATA.fg, r.bg &= -67108864, r.bg |= 16777215 & h.DEFAULT_ATTR_DATA.bg) : this._logService.debug("Unknown SGR attribute: %d.", i);
                                        return !0
                                    }
                                    deviceStatus(e) {
                                        switch (e.params[0]) {
                                            case 5:
                                                this._coreService.triggerDataEvent(`${n.C0.ESC}[0n`);
                                                break;
                                            case 6:
                                                const e = this._activeBuffer.y + 1,
                                                    t = this._activeBuffer.x + 1;
                                                this._coreService.triggerDataEvent(`${n.C0.ESC}[${e};${t}R`)
                                        }
                                        return !0
                                    }
                                    deviceStatusPrivate(e) {
                                        if (6 === e.params[0]) {
                                            const e = this._activeBuffer.y + 1,
                                                t = this._activeBuffer.x + 1;
                                            this._coreService.triggerDataEvent(`${n.C0.ESC}[?${e};${t}R`)
                                        }
                                        return !0
                                    }
                                    softReset(e) {
                                        return this._coreService.isCursorHidden = !1, this._onRequestSyncScrollBar.fire(), this._activeBuffer.scrollTop = 0, this._activeBuffer.scrollBottom = this._bufferService.rows - 1, this._curAttrData = h.DEFAULT_ATTR_DATA.clone(), this._coreService.reset(), this._charsetService.reset(), this._activeBuffer.savedX = 0, this._activeBuffer.savedY = this._activeBuffer.ybase, this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg, this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg, this._activeBuffer.savedCharset = this._charsetService.charset, this._coreService.decPrivateModes.origin = !1, !0
                                    }
                                    setCursorStyle(e) {
                                        const t = e.params[0] || 1;
                                        switch (t) {
                                            case 1:
                                            case 2:
                                                this._optionsService.options.cursorStyle = "block";
                                                break;
                                            case 3:
                                            case 4:
                                                this._optionsService.options.cursorStyle = "underline";
                                                break;
                                            case 5:
                                            case 6:
                                                this._optionsService.options.cursorStyle = "bar"
                                        }
                                        const i = t % 2 == 1;
                                        return this._optionsService.options.cursorBlink = i, !0
                                    }
                                    setScrollRegion(e) {
                                        const t = e.params[0] || 1;
                                        let i;
                                        return (e.length < 2 || (i = e.params[1]) > this._bufferService.rows || 0 === i) && (i = this._bufferService.rows), i > t && (this._activeBuffer.scrollTop = t - 1, this._activeBuffer.scrollBottom = i - 1, this._setCursor(0, 0)), !0
                                    }
                                    windowOptions(e) {
                                        if (!S(e.params[0], this._optionsService.rawOptions.windowOptions)) return !0;
                                        const t = e.length > 1 ? e.params[1] : 0;
                                        switch (e.params[0]) {
                                            case 14:
                                                2 !== t && this._onRequestWindowsOptionsReport.fire(C.GET_WIN_SIZE_PIXELS);
                                                break;
                                            case 16:
                                                this._onRequestWindowsOptionsReport.fire(C.GET_CELL_SIZE_PIXELS);
                                                break;
                                            case 18:
                                                this._bufferService && this._coreService.triggerDataEvent(`${n.C0.ESC}[8;${this._bufferService.rows};${this._bufferService.cols}t`);
                                                break;
                                            case 22:
                                                0 !== t && 2 !== t || (this._windowTitleStack.push(this._windowTitle), this._windowTitleStack.length > 10 && this._windowTitleStack.shift()), 0 !== t && 1 !== t || (this._iconNameStack.push(this._iconName), this._iconNameStack.length > 10 && this._iconNameStack.shift());
                                                break;
                                            case 23:
                                                0 !== t && 2 !== t || this._windowTitleStack.length && this.setTitle(this._windowTitleStack.pop()), 0 !== t && 1 !== t || this._iconNameStack.length && this.setIconName(this._iconNameStack.pop())
                                        }
                                        return !0
                                    }
                                    saveCursor(e) {
                                        return this._activeBuffer.savedX = this._activeBuffer.x, this._activeBuffer.savedY = this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.savedCurAttrData.fg = this._curAttrData.fg, this._activeBuffer.savedCurAttrData.bg = this._curAttrData.bg, this._activeBuffer.savedCharset = this._charsetService.charset, !0
                                    }
                                    restoreCursor(e) {
                                        return this._activeBuffer.x = this._activeBuffer.savedX || 0, this._activeBuffer.y = Math.max(this._activeBuffer.savedY - this._activeBuffer.ybase, 0), this._curAttrData.fg = this._activeBuffer.savedCurAttrData.fg, this._curAttrData.bg = this._activeBuffer.savedCurAttrData.bg, this._charsetService.charset = this._savedCharset, this._activeBuffer.savedCharset && (this._charsetService.charset = this._activeBuffer.savedCharset), this._restrictCursor(), !0
                                    }
                                    setTitle(e) {
                                        return this._windowTitle = e, this._onTitleChange.fire(e), !0
                                    }
                                    setIconName(e) {
                                        return this._iconName = e, !0
                                    }
                                    setOrReportIndexedColor(e) {
                                        const t = [],
                                            i = e.split(";");
                                        for (; i.length > 1;) {
                                            const e = i.shift(),
                                                r = i.shift();
                                            if (/^\d+$/.exec(e)) {
                                                const i = parseInt(e);
                                                if (k(i))
                                                    if ("?" === r) t.push({
                                                        type: 0,
                                                        index: i
                                                    });
                                                    else {
                                                        const e = (0, b.parseColor)(r);
                                                        e && t.push({
                                                            type: 1,
                                                            index: i,
                                                            color: e
                                                        })
                                                    }
                                            }
                                        }
                                        return t.length && this._onColor.fire(t), !0
                                    }
                                    setHyperlink(e) {
                                        const t = e.split(";");
                                        return !(t.length < 2) && (t[1] ? this._createHyperlink(t[0], t[1]) : !t[0] && this._finishHyperlink())
                                    }
                                    _createHyperlink(e, t) {
                                        this._getCurrentLinkId() && this._finishHyperlink();
                                        const i = e.split(":");
                                        let r;
                                        const s = i.findIndex((e => e.startsWith("id=")));
                                        return -1 !== s && (r = i[s].slice(3) || void 0), this._curAttrData.extended = this._curAttrData.extended.clone(), this._curAttrData.extended.urlId = this._oscLinkService.registerLink({
                                            id: r,
                                            uri: t
                                        }), this._curAttrData.updateExtended(), !0
                                    }
                                    _finishHyperlink() {
                                        return this._curAttrData.extended = this._curAttrData.extended.clone(), this._curAttrData.extended.urlId = 0, this._curAttrData.updateExtended(), !0
                                    }
                                    _setOrReportSpecialColor(e, t) {
                                        const i = e.split(";");
                                        for (let e = 0; e < i.length && !(t >= this._specialColors.length); ++e, ++t)
                                            if ("?" === i[e]) this._onColor.fire([{
                                                type: 0,
                                                index: this._specialColors[t]
                                            }]);
                                            else {
                                                const r = (0, b.parseColor)(i[e]);
                                                r && this._onColor.fire([{
                                                    type: 1,
                                                    index: this._specialColors[t],
                                                    color: r
                                                }])
                                            } return !0
                                    }
                                    setOrReportFgColor(e) {
                                        return this._setOrReportSpecialColor(e, 0)
                                    }
                                    setOrReportBgColor(e) {
                                        return this._setOrReportSpecialColor(e, 1)
                                    }
                                    setOrReportCursorColor(e) {
                                        return this._setOrReportSpecialColor(e, 2)
                                    }
                                    restoreIndexedColor(e) {
                                        if (!e) return this._onColor.fire([{
                                            type: 2
                                        }]), !0;
                                        const t = [],
                                            i = e.split(";");
                                        for (let e = 0; e < i.length; ++e)
                                            if (/^\d+$/.exec(i[e])) {
                                                const r = parseInt(i[e]);
                                                k(r) && t.push({
                                                    type: 2,
                                                    index: r
                                                })
                                            } return t.length && this._onColor.fire(t), !0
                                    }
                                    restoreFgColor(e) {
                                        return this._onColor.fire([{
                                            type: 2,
                                            index: 256
                                        }]), !0
                                    }
                                    restoreBgColor(e) {
                                        return this._onColor.fire([{
                                            type: 2,
                                            index: 257
                                        }]), !0
                                    }
                                    restoreCursorColor(e) {
                                        return this._onColor.fire([{
                                            type: 2,
                                            index: 258
                                        }]), !0
                                    }
                                    nextLine() {
                                        return this._activeBuffer.x = 0, this.index(), !0
                                    }
                                    keypadApplicationMode() {
                                        return this._logService.debug("Serial port requested application keypad."), this._coreService.decPrivateModes.applicationKeypad = !0, this._onRequestSyncScrollBar.fire(), !0
                                    }
                                    keypadNumericMode() {
                                        return this._logService.debug("Switching back to normal keypad."), this._coreService.decPrivateModes.applicationKeypad = !1, this._onRequestSyncScrollBar.fire(), !0
                                    }
                                    selectDefaultCharset() {
                                        return this._charsetService.setgLevel(0), this._charsetService.setgCharset(0, o.DEFAULT_CHARSET), !0
                                    }
                                    selectCharset(e) {
                                        return 2 !== e.length ? (this.selectDefaultCharset(), !0) : ("/" === e[0] || this._charsetService.setgCharset(w[e[0]], o.CHARSETS[e[1]] || o.DEFAULT_CHARSET), !0)
                                    }
                                    index() {
                                        return this._restrictCursor(), this._activeBuffer.y++, this._activeBuffer.y === this._activeBuffer.scrollBottom + 1 ? (this._activeBuffer.y--, this._bufferService.scroll(this._eraseAttrData())) : this._activeBuffer.y >= this._bufferService.rows && (this._activeBuffer.y = this._bufferService.rows - 1), this._restrictCursor(), !0
                                    }
                                    tabSet() {
                                        return this._activeBuffer.tabs[this._activeBuffer.x] = !0, !0
                                    }
                                    reverseIndex() {
                                        if (this._restrictCursor(), this._activeBuffer.y === this._activeBuffer.scrollTop) {
                                            const e = this._activeBuffer.scrollBottom - this._activeBuffer.scrollTop;
                                            this._activeBuffer.lines.shiftElements(this._activeBuffer.ybase + this._activeBuffer.y, e, 1), this._activeBuffer.lines.set(this._activeBuffer.ybase + this._activeBuffer.y, this._activeBuffer.getBlankLine(this._eraseAttrData())), this._dirtyRowTracker.markRangeDirty(this._activeBuffer.scrollTop, this._activeBuffer.scrollBottom)
                                        } else this._activeBuffer.y--, this._restrictCursor();
                                        return !0
                                    }
                                    fullReset() {
                                        return this._parser.reset(), this._onRequestReset.fire(), !0
                                    }
                                    reset() {
                                        this._curAttrData = h.DEFAULT_ATTR_DATA.clone(), this._eraseAttrDataInternal = h.DEFAULT_ATTR_DATA.clone()
                                    }
                                    _eraseAttrData() {
                                        return this._eraseAttrDataInternal.bg &= -67108864, this._eraseAttrDataInternal.bg |= 67108863 & this._curAttrData.bg, this._eraseAttrDataInternal
                                    }
                                    setgLevel(e) {
                                        return this._charsetService.setgLevel(e), !0
                                    }
                                    screenAlignmentPattern() {
                                        const e = new f.CellData;
                                        e.content = 1 << 22 | "E".charCodeAt(0), e.fg = this._curAttrData.fg, e.bg = this._curAttrData.bg, this._setCursor(0, 0);
                                        for (let t = 0; t < this._bufferService.rows; ++t) {
                                            const i = this._activeBuffer.ybase + this._activeBuffer.y + t,
                                                r = this._activeBuffer.lines.get(i);
                                            r && (r.fill(e), r.isWrapped = !1)
                                        }
                                        return this._dirtyRowTracker.markAllDirty(), this._setCursor(0, 0), !0
                                    }
                                    requestStatusString(e, t) {
                                        const i = this._bufferService.buffer,
                                            r = this._optionsService.rawOptions;
                                        return (e => (this._coreService.triggerDataEvent(`${n.C0.ESC}${e}${n.C0.ESC}\\`), !0))('"q' === e ? `P1$r${this._curAttrData.isProtected()?1:0}"q` : '"p' === e ? 'P1$r61;1"p' : "r" === e ? `P1$r${i.scrollTop+1};${i.scrollBottom+1}r` : "m" === e ? "P1$r0m" : " q" === e ? `P1$r${{block:2,underline:4,bar:6}[r.cursorStyle]-(r.cursorBlink?1:0)} q` : "P0$r")
                                    }
                                    markRangeDirty(e, t) {
                                        this._dirtyRowTracker.markRangeDirty(e, t)
                                    }
                                }
                                t.InputHandler = E;
                                let O = class {
                                    constructor(e) {
                                        this._bufferService = e, this.clearRange()
                                    }
                                    clearRange() {
                                        this.start = this._bufferService.buffer.y, this.end = this._bufferService.buffer.y
                                    }
                                    markDirty(e) {
                                        e < this.start ? this.start = e : e > this.end && (this.end = e)
                                    }
                                    markRangeDirty(e, t) {
                                        e > t && (x = e, e = t, t = x), e < this.start && (this.start = e), t > this.end && (this.end = t)
                                    }
                                    markAllDirty() {
                                        this.markRangeDirty(0, this._bufferService.rows - 1)
                                    }
                                };

                                function k(e) {
                                    return 0 <= e && e < 256
                                }
                                O = r([s(0, _.IBufferService)], O)
                            },
                            844: (e, t) => {
                                function i(e) {
                                    for (const t of e) t.dispose();
                                    e.length = 0
                                }
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.getDisposeArrayDisposable = t.disposeArray = t.toDisposable = t.MutableDisposable = t.Disposable = void 0, t.Disposable = class {
                                    constructor() {
                                        this._disposables = [], this._isDisposed = !1
                                    }
                                    dispose() {
                                        this._isDisposed = !0;
                                        for (const e of this._disposables) e.dispose();
                                        this._disposables.length = 0
                                    }
                                    register(e) {
                                        return this._disposables.push(e), e
                                    }
                                    unregister(e) {
                                        const t = this._disposables.indexOf(e); - 1 !== t && this._disposables.splice(t, 1)
                                    }
                                }, t.MutableDisposable = class {
                                    constructor() {
                                        this._isDisposed = !1
                                    }
                                    get value() {
                                        return this._isDisposed ? void 0 : this._value
                                    }
                                    set value(e) {
                                        this._isDisposed || e === this._value || (this._value?.dispose(), this._value = e)
                                    }
                                    clear() {
                                        this.value = void 0
                                    }
                                    dispose() {
                                        this._isDisposed = !0, this._value?.dispose(), this._value = void 0
                                    }
                                }, t.toDisposable = function(e) {
                                    return {
                                        dispose: e
                                    }
                                }, t.disposeArray = i, t.getDisposeArrayDisposable = function(e) {
                                    return {
                                        dispose: () => i(e)
                                    }
                                }
                            },
                            1505: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.FourKeyMap = t.TwoKeyMap = void 0;
                                class i {
                                    constructor() {
                                        this._data = {}
                                    }
                                    set(e, t, i) {
                                        this._data[e] || (this._data[e] = {}), this._data[e][t] = i
                                    }
                                    get(e, t) {
                                        return this._data[e] ? this._data[e][t] : void 0
                                    }
                                    clear() {
                                        this._data = {}
                                    }
                                }
                                t.TwoKeyMap = i, t.FourKeyMap = class {
                                    constructor() {
                                        this._data = new i
                                    }
                                    set(e, t, r, s, n) {
                                        this._data.get(e, t) || this._data.set(e, t, new i), this._data.get(e, t).set(r, s, n)
                                    }
                                    get(e, t, i, r) {
                                        return this._data.get(e, t)?.get(i, r)
                                    }
                                    clear() {
                                        this._data.clear()
                                    }
                                }
                            },
                            6114: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.isChromeOS = t.isLinux = t.isWindows = t.isIphone = t.isIpad = t.isMac = t.getSafariVersion = t.isSafari = t.isLegacyEdge = t.isFirefox = t.isNode = void 0, t.isNode = "undefined" != typeof process && "title" in process;
                                const i = t.isNode ? "node" : navigator.userAgent,
                                    r = t.isNode ? "node" : navigator.platform;
                                t.isFirefox = i.includes("Firefox"), t.isLegacyEdge = i.includes("Edge"), t.isSafari = /^((?!chrome|android).)*safari/i.test(i), t.getSafariVersion = function() {
                                    if (!t.isSafari) return 0;
                                    const e = i.match(/Version\/(\d+)/);
                                    return null === e || e.length < 2 ? 0 : parseInt(e[1])
                                }, t.isMac = ["Macintosh", "MacIntel", "MacPPC", "Mac68K"].includes(r), t.isIpad = "iPad" === r, t.isIphone = "iPhone" === r, t.isWindows = ["Windows", "Win16", "Win32", "WinCE"].includes(r), t.isLinux = r.indexOf("Linux") >= 0, t.isChromeOS = /\bCrOS\b/.test(i)
                            },
                            6106: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.SortedList = void 0;
                                let i = 0;
                                t.SortedList = class {
                                    constructor(e) {
                                        this._getKey = e, this._array = []
                                    }
                                    clear() {
                                        this._array.length = 0
                                    }
                                    insert(e) {
                                        0 !== this._array.length ? (i = this._search(this._getKey(e)), this._array.splice(i, 0, e)) : this._array.push(e)
                                    }
                                    delete(e) {
                                        if (0 === this._array.length) return !1;
                                        const t = this._getKey(e);
                                        if (void 0 === t) return !1;
                                        if (i = this._search(t), -1 === i) return !1;
                                        if (this._getKey(this._array[i]) !== t) return !1;
                                        do {
                                            if (this._array[i] === e) return this._array.splice(i, 1), !0
                                        } while (++i < this._array.length && this._getKey(this._array[i]) === t);
                                        return !1
                                    }* getKeyIterator(e) {
                                        if (0 !== this._array.length && (i = this._search(e), !(i < 0 || i >= this._array.length) && this._getKey(this._array[i]) === e))
                                            do {
                                                yield this._array[i]
                                            } while (++i < this._array.length && this._getKey(this._array[i]) === e)
                                    }
                                    forEachByKey(e, t) {
                                        if (0 !== this._array.length && (i = this._search(e), !(i < 0 || i >= this._array.length) && this._getKey(this._array[i]) === e))
                                            do {
                                                t(this._array[i])
                                            } while (++i < this._array.length && this._getKey(this._array[i]) === e)
                                    }
                                    values() {
                                        return [...this._array].values()
                                    }
                                    _search(e) {
                                        let t = 0,
                                            i = this._array.length - 1;
                                        for (; i >= t;) {
                                            let r = t + i >> 1;
                                            const s = this._getKey(this._array[r]);
                                            if (s > e) i = r - 1;
                                            else {
                                                if (!(s < e)) {
                                                    for (; r > 0 && this._getKey(this._array[r - 1]) === e;) r--;
                                                    return r
                                                }
                                                t = r + 1
                                            }
                                        }
                                        return t
                                    }
                                }
                            },
                            7226: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.DebouncedIdleTask = t.IdleTaskQueue = t.PriorityTaskQueue = void 0;
                                const r = i(6114);
                                class s {
                                    constructor() {
                                        this._tasks = [], this._i = 0
                                    }
                                    enqueue(e) {
                                        this._tasks.push(e), this._start()
                                    }
                                    flush() {
                                        for (; this._i < this._tasks.length;) this._tasks[this._i]() || this._i++;
                                        this.clear()
                                    }
                                    clear() {
                                        this._idleCallback && (this._cancelCallback(this._idleCallback), this._idleCallback = void 0), this._i = 0, this._tasks.length = 0
                                    }
                                    _start() {
                                        this._idleCallback || (this._idleCallback = this._requestCallback(this._process.bind(this)))
                                    }
                                    _process(e) {
                                        this._idleCallback = void 0;
                                        let t = 0,
                                            i = 0,
                                            r = e.timeRemaining(),
                                            s = 0;
                                        for (; this._i < this._tasks.length;) {
                                            if (t = Date.now(), this._tasks[this._i]() || this._i++, t = Math.max(1, Date.now() - t), i = Math.max(t, i), s = e.timeRemaining(), 1.5 * i > s) return r - t < -20 && console.warn(`task queue exceeded allotted deadline by ${Math.abs(Math.round(r-t))}ms`), void this._start();
                                            r = s
                                        }
                                        this.clear()
                                    }
                                }
                                class n extends s {
                                    _requestCallback(e) {
                                        return setTimeout((() => e(this._createDeadline(16))))
                                    }
                                    _cancelCallback(e) {
                                        clearTimeout(e)
                                    }
                                    _createDeadline(e) {
                                        const t = Date.now() + e;
                                        return {
                                            timeRemaining: () => Math.max(0, t - Date.now())
                                        }
                                    }
                                }
                                t.PriorityTaskQueue = n, t.IdleTaskQueue = !r.isNode && "requestIdleCallback" in window ? class extends s {
                                    _requestCallback(e) {
                                        return requestIdleCallback(e)
                                    }
                                    _cancelCallback(e) {
                                        cancelIdleCallback(e)
                                    }
                                } : n, t.DebouncedIdleTask = class {
                                    constructor() {
                                        this._queue = new t.IdleTaskQueue
                                    }
                                    set(e) {
                                        this._queue.clear(), this._queue.enqueue(e)
                                    }
                                    flush() {
                                        this._queue.flush()
                                    }
                                }
                            },
                            9282: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.updateWindowsModeWrappedState = void 0;
                                const r = i(643);
                                t.updateWindowsModeWrappedState = function(e) {
                                    const t = e.buffer.lines.get(e.buffer.ybase + e.buffer.y - 1)?.get(e.cols - 1),
                                        i = e.buffer.lines.get(e.buffer.ybase + e.buffer.y);
                                    i && t && (i.isWrapped = t[r.CHAR_DATA_CODE_INDEX] !== r.NULL_CELL_CODE && t[r.CHAR_DATA_CODE_INDEX] !== r.WHITESPACE_CELL_CODE)
                                }
                            },
                            3734: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.ExtendedAttrs = t.AttributeData = void 0;
                                class i {
                                    constructor() {
                                        this.fg = 0, this.bg = 0, this.extended = new r
                                    }
                                    static toColorRGB(e) {
                                        return [e >>> 16 & 255, e >>> 8 & 255, 255 & e]
                                    }
                                    static fromColorRGB(e) {
                                        return (255 & e[0]) << 16 | (255 & e[1]) << 8 | 255 & e[2]
                                    }
                                    clone() {
                                        const e = new i;
                                        return e.fg = this.fg, e.bg = this.bg, e.extended = this.extended.clone(), e
                                    }
                                    isInverse() {
                                        return 67108864 & this.fg
                                    }
                                    isBold() {
                                        return 134217728 & this.fg
                                    }
                                    isUnderline() {
                                        return this.hasExtendedAttrs() && 0 !== this.extended.underlineStyle ? 1 : 268435456 & this.fg
                                    }
                                    isBlink() {
                                        return 536870912 & this.fg
                                    }
                                    isInvisible() {
                                        return 1073741824 & this.fg
                                    }
                                    isItalic() {
                                        return 67108864 & this.bg
                                    }
                                    isDim() {
                                        return 134217728 & this.bg
                                    }
                                    isStrikethrough() {
                                        return 2147483648 & this.fg
                                    }
                                    isProtected() {
                                        return 536870912 & this.bg
                                    }
                                    isOverline() {
                                        return 1073741824 & this.bg
                                    }
                                    getFgColorMode() {
                                        return 50331648 & this.fg
                                    }
                                    getBgColorMode() {
                                        return 50331648 & this.bg
                                    }
                                    isFgRGB() {
                                        return 50331648 == (50331648 & this.fg)
                                    }
                                    isBgRGB() {
                                        return 50331648 == (50331648 & this.bg)
                                    }
                                    isFgPalette() {
                                        return 16777216 == (50331648 & this.fg) || 33554432 == (50331648 & this.fg)
                                    }
                                    isBgPalette() {
                                        return 16777216 == (50331648 & this.bg) || 33554432 == (50331648 & this.bg)
                                    }
                                    isFgDefault() {
                                        return 0 == (50331648 & this.fg)
                                    }
                                    isBgDefault() {
                                        return 0 == (50331648 & this.bg)
                                    }
                                    isAttributeDefault() {
                                        return 0 === this.fg && 0 === this.bg
                                    }
                                    getFgColor() {
                                        switch (50331648 & this.fg) {
                                            case 16777216:
                                            case 33554432:
                                                return 255 & this.fg;
                                            case 50331648:
                                                return 16777215 & this.fg;
                                            default:
                                                return -1
                                        }
                                    }
                                    getBgColor() {
                                        switch (50331648 & this.bg) {
                                            case 16777216:
                                            case 33554432:
                                                return 255 & this.bg;
                                            case 50331648:
                                                return 16777215 & this.bg;
                                            default:
                                                return -1
                                        }
                                    }
                                    hasExtendedAttrs() {
                                        return 268435456 & this.bg
                                    }
                                    updateExtended() {
                                        this.extended.isEmpty() ? this.bg &= -268435457 : this.bg |= 268435456
                                    }
                                    getUnderlineColor() {
                                        if (268435456 & this.bg && ~this.extended.underlineColor) switch (50331648 & this.extended.underlineColor) {
                                            case 16777216:
                                            case 33554432:
                                                return 255 & this.extended.underlineColor;
                                            case 50331648:
                                                return 16777215 & this.extended.underlineColor;
                                            default:
                                                return this.getFgColor()
                                        }
                                        return this.getFgColor()
                                    }
                                    getUnderlineColorMode() {
                                        return 268435456 & this.bg && ~this.extended.underlineColor ? 50331648 & this.extended.underlineColor : this.getFgColorMode()
                                    }
                                    isUnderlineColorRGB() {
                                        return 268435456 & this.bg && ~this.extended.underlineColor ? 50331648 == (50331648 & this.extended.underlineColor) : this.isFgRGB()
                                    }
                                    isUnderlineColorPalette() {
                                        return 268435456 & this.bg && ~this.extended.underlineColor ? 16777216 == (50331648 & this.extended.underlineColor) || 33554432 == (50331648 & this.extended.underlineColor) : this.isFgPalette()
                                    }
                                    isUnderlineColorDefault() {
                                        return 268435456 & this.bg && ~this.extended.underlineColor ? 0 == (50331648 & this.extended.underlineColor) : this.isFgDefault()
                                    }
                                    getUnderlineStyle() {
                                        return 268435456 & this.fg ? 268435456 & this.bg ? this.extended.underlineStyle : 1 : 0
                                    }
                                    getUnderlineVariantOffset() {
                                        return this.extended.underlineVariantOffset
                                    }
                                }
                                t.AttributeData = i;
                                class r {
                                    get ext() {
                                        return this._urlId ? -469762049 & this._ext | this.underlineStyle << 26 : this._ext
                                    }
                                    set ext(e) {
                                        this._ext = e
                                    }
                                    get underlineStyle() {
                                        return this._urlId ? 5 : (469762048 & this._ext) >> 26
                                    }
                                    set underlineStyle(e) {
                                        this._ext &= -469762049, this._ext |= e << 26 & 469762048
                                    }
                                    get underlineColor() {
                                        return 67108863 & this._ext
                                    }
                                    set underlineColor(e) {
                                        this._ext &= -67108864, this._ext |= 67108863 & e
                                    }
                                    get urlId() {
                                        return this._urlId
                                    }
                                    set urlId(e) {
                                        this._urlId = e
                                    }
                                    get underlineVariantOffset() {
                                        const e = (3758096384 & this._ext) >> 29;
                                        return e < 0 ? 4294967288 ^ e : e
                                    }
                                    set underlineVariantOffset(e) {
                                        this._ext &= 536870911, this._ext |= e << 29 & 3758096384
                                    }
                                    constructor(e = 0, t = 0) {
                                        this._ext = 0, this._urlId = 0, this._ext = e, this._urlId = t
                                    }
                                    clone() {
                                        return new r(this._ext, this._urlId)
                                    }
                                    isEmpty() {
                                        return 0 === this.underlineStyle && 0 === this._urlId
                                    }
                                }
                                t.ExtendedAttrs = r
                            },
                            9092: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.Buffer = t.MAX_BUFFER_SIZE = void 0;
                                const r = i(6349),
                                    s = i(7226),
                                    n = i(3734),
                                    o = i(8437),
                                    a = i(4634),
                                    c = i(511),
                                    l = i(643),
                                    h = i(4863),
                                    u = i(7116);
                                t.MAX_BUFFER_SIZE = 4294967295, t.Buffer = class {
                                    constructor(e, t, i) {
                                        this._hasScrollback = e, this._optionsService = t, this._bufferService = i, this.ydisp = 0, this.ybase = 0, this.y = 0, this.x = 0, this.tabs = {}, this.savedY = 0, this.savedX = 0, this.savedCurAttrData = o.DEFAULT_ATTR_DATA.clone(), this.savedCharset = u.DEFAULT_CHARSET, this.markers = [], this._nullCell = c.CellData.fromCharData([0, l.NULL_CELL_CHAR, l.NULL_CELL_WIDTH, l.NULL_CELL_CODE]), this._whitespaceCell = c.CellData.fromCharData([0, l.WHITESPACE_CELL_CHAR, l.WHITESPACE_CELL_WIDTH, l.WHITESPACE_CELL_CODE]), this._isClearing = !1, this._memoryCleanupQueue = new s.IdleTaskQueue, this._memoryCleanupPosition = 0, this._cols = this._bufferService.cols, this._rows = this._bufferService.rows, this.lines = new r.CircularList(this._getCorrectBufferLength(this._rows)), this.scrollTop = 0, this.scrollBottom = this._rows - 1, this.setupTabStops()
                                    }
                                    getNullCell(e) {
                                        return e ? (this._nullCell.fg = e.fg, this._nullCell.bg = e.bg, this._nullCell.extended = e.extended) : (this._nullCell.fg = 0, this._nullCell.bg = 0, this._nullCell.extended = new n.ExtendedAttrs), this._nullCell
                                    }
                                    getWhitespaceCell(e) {
                                        return e ? (this._whitespaceCell.fg = e.fg, this._whitespaceCell.bg = e.bg, this._whitespaceCell.extended = e.extended) : (this._whitespaceCell.fg = 0, this._whitespaceCell.bg = 0, this._whitespaceCell.extended = new n.ExtendedAttrs), this._whitespaceCell
                                    }
                                    getBlankLine(e, t) {
                                        return new o.BufferLine(this._bufferService.cols, this.getNullCell(e), t)
                                    }
                                    get hasScrollback() {
                                        return this._hasScrollback && this.lines.maxLength > this._rows
                                    }
                                    get isCursorInViewport() {
                                        const e = this.ybase + this.y - this.ydisp;
                                        return e >= 0 && e < this._rows
                                    }
                                    _getCorrectBufferLength(e) {
                                        if (!this._hasScrollback) return e;
                                        const i = e + this._optionsService.rawOptions.scrollback;
                                        return i > t.MAX_BUFFER_SIZE ? t.MAX_BUFFER_SIZE : i
                                    }
                                    fillViewportRows(e) {
                                        if (0 === this.lines.length) {
                                            void 0 === e && (e = o.DEFAULT_ATTR_DATA);
                                            let t = this._rows;
                                            for (; t--;) this.lines.push(this.getBlankLine(e))
                                        }
                                    }
                                    clear() {
                                        this.ydisp = 0, this.ybase = 0, this.y = 0, this.x = 0, this.lines = new r.CircularList(this._getCorrectBufferLength(this._rows)), this.scrollTop = 0, this.scrollBottom = this._rows - 1, this.setupTabStops()
                                    }
                                    resize(e, t) {
                                        const i = this.getNullCell(o.DEFAULT_ATTR_DATA);
                                        let r = 0;
                                        const s = this._getCorrectBufferLength(t);
                                        if (s > this.lines.maxLength && (this.lines.maxLength = s), this.lines.length > 0) {
                                            if (this._cols < e)
                                                for (let t = 0; t < this.lines.length; t++) r += +this.lines.get(t).resize(e, i);
                                            let n = 0;
                                            if (this._rows < t)
                                                for (let r = this._rows; r < t; r++) this.lines.length < t + this.ybase && (this._optionsService.rawOptions.windowsMode || void 0 !== this._optionsService.rawOptions.windowsPty.backend || void 0 !== this._optionsService.rawOptions.windowsPty.buildNumber ? this.lines.push(new o.BufferLine(e, i)) : this.ybase > 0 && this.lines.length <= this.ybase + this.y + n + 1 ? (this.ybase--, n++, this.ydisp > 0 && this.ydisp--) : this.lines.push(new o.BufferLine(e, i)));
                                            else
                                                for (let e = this._rows; e > t; e--) this.lines.length > t + this.ybase && (this.lines.length > this.ybase + this.y + 1 ? this.lines.pop() : (this.ybase++, this.ydisp++));
                                            if (s < this.lines.maxLength) {
                                                const e = this.lines.length - s;
                                                e > 0 && (this.lines.trimStart(e), this.ybase = Math.max(this.ybase - e, 0), this.ydisp = Math.max(this.ydisp - e, 0), this.savedY = Math.max(this.savedY - e, 0)), this.lines.maxLength = s
                                            }
                                            this.x = Math.min(this.x, e - 1), this.y = Math.min(this.y, t - 1), n && (this.y += n), this.savedX = Math.min(this.savedX, e - 1), this.scrollTop = 0
                                        }
                                        if (this.scrollBottom = t - 1, this._isReflowEnabled && (this._reflow(e, t), this._cols > e))
                                            for (let t = 0; t < this.lines.length; t++) r += +this.lines.get(t).resize(e, i);
                                        this._cols = e, this._rows = t, this._memoryCleanupQueue.clear(), r > .1 * this.lines.length && (this._memoryCleanupPosition = 0, this._memoryCleanupQueue.enqueue((() => this._batchedMemoryCleanup())))
                                    }
                                    _batchedMemoryCleanup() {
                                        let e = !0;
                                        this._memoryCleanupPosition >= this.lines.length && (this._memoryCleanupPosition = 0, e = !1);
                                        let t = 0;
                                        for (; this._memoryCleanupPosition < this.lines.length;)
                                            if (t += this.lines.get(this._memoryCleanupPosition++).cleanupMemory(), t > 100) return !0;
                                        return e
                                    }
                                    get _isReflowEnabled() {
                                        const e = this._optionsService.rawOptions.windowsPty;
                                        return e && e.buildNumber ? this._hasScrollback && "conpty" === e.backend && e.buildNumber >= 21376 : this._hasScrollback && !this._optionsService.rawOptions.windowsMode
                                    }
                                    _reflow(e, t) {
                                        this._cols !== e && (e > this._cols ? this._reflowLarger(e, t) : this._reflowSmaller(e, t))
                                    }
                                    _reflowLarger(e, t) {
                                        const i = (0, a.reflowLargerGetLinesToRemove)(this.lines, this._cols, e, this.ybase + this.y, this.getNullCell(o.DEFAULT_ATTR_DATA));
                                        if (i.length > 0) {
                                            const r = (0, a.reflowLargerCreateNewLayout)(this.lines, i);
                                            (0, a.reflowLargerApplyNewLayout)(this.lines, r.layout), this._reflowLargerAdjustViewport(e, t, r.countRemoved)
                                        }
                                    }
                                    _reflowLargerAdjustViewport(e, t, i) {
                                        const r = this.getNullCell(o.DEFAULT_ATTR_DATA);
                                        let s = i;
                                        for (; s-- > 0;) 0 === this.ybase ? (this.y > 0 && this.y--, this.lines.length < t && this.lines.push(new o.BufferLine(e, r))) : (this.ydisp === this.ybase && this.ydisp--, this.ybase--);
                                        this.savedY = Math.max(this.savedY - i, 0)
                                    }
                                    _reflowSmaller(e, t) {
                                        const i = this.getNullCell(o.DEFAULT_ATTR_DATA),
                                            r = [];
                                        let s = 0;
                                        for (let n = this.lines.length - 1; n >= 0; n--) {
                                            let c = this.lines.get(n);
                                            if (!c || !c.isWrapped && c.getTrimmedLength() <= e) continue;
                                            const l = [c];
                                            for (; c.isWrapped && n > 0;) c = this.lines.get(--n), l.unshift(c);
                                            const h = this.ybase + this.y;
                                            if (h >= n && h < n + l.length) continue;
                                            const u = l[l.length - 1].getTrimmedLength(),
                                                d = (0, a.reflowSmallerGetNewLineLengths)(l, this._cols, e),
                                                f = d.length - l.length;
                                            let p;
                                            p = 0 === this.ybase && this.y !== this.lines.length - 1 ? Math.max(0, this.y - this.lines.maxLength + f) : Math.max(0, this.lines.length - this.lines.maxLength + f);
                                            const _ = [];
                                            for (let e = 0; e < f; e++) {
                                                const e = this.getBlankLine(o.DEFAULT_ATTR_DATA, !0);
                                                _.push(e)
                                            }
                                            _.length > 0 && (r.push({
                                                start: n + l.length + s,
                                                newLines: _
                                            }), s += _.length), l.push(..._);
                                            let g = d.length - 1,
                                                v = d[g];
                                            0 === v && (g--, v = d[g]);
                                            let m = l.length - f - 1,
                                                b = u;
                                            for (; m >= 0;) {
                                                const e = Math.min(b, v);
                                                if (void 0 === l[g]) break;
                                                if (l[g].copyCellsFrom(l[m], b - e, v - e, e, !0), v -= e, 0 === v && (g--, v = d[g]), b -= e, 0 === b) {
                                                    m--;
                                                    const e = Math.max(m, 0);
                                                    b = (0, a.getWrappedLineTrimmedLength)(l, e, this._cols)
                                                }
                                            }
                                            for (let t = 0; t < l.length; t++) d[t] < e && l[t].setCell(d[t], i);
                                            let w = f - p;
                                            for (; w-- > 0;) 0 === this.ybase ? this.y < t - 1 ? (this.y++, this.lines.pop()) : (this.ybase++, this.ydisp++) : this.ybase < Math.min(this.lines.maxLength, this.lines.length + s) - t && (this.ybase === this.ydisp && this.ydisp++, this.ybase++);
                                            this.savedY = Math.min(this.savedY + f, this.ybase + t - 1)
                                        }
                                        if (r.length > 0) {
                                            const e = [],
                                                t = [];
                                            for (let e = 0; e < this.lines.length; e++) t.push(this.lines.get(e));
                                            const i = this.lines.length;
                                            let n = i - 1,
                                                o = 0,
                                                a = r[o];
                                            this.lines.length = Math.min(this.lines.maxLength, this.lines.length + s);
                                            let c = 0;
                                            for (let l = Math.min(this.lines.maxLength - 1, i + s - 1); l >= 0; l--)
                                                if (a && a.start > n + c) {
                                                    for (let e = a.newLines.length - 1; e >= 0; e--) this.lines.set(l--, a.newLines[e]);
                                                    l++, e.push({
                                                        index: n + 1,
                                                        amount: a.newLines.length
                                                    }), c += a.newLines.length, a = r[++o]
                                                } else this.lines.set(l, t[n--]);
                                            let l = 0;
                                            for (let t = e.length - 1; t >= 0; t--) e[t].index += l, this.lines.onInsertEmitter.fire(e[t]), l += e[t].amount;
                                            const h = Math.max(0, i + s - this.lines.maxLength);
                                            h > 0 && this.lines.onTrimEmitter.fire(h)
                                        }
                                    }
                                    translateBufferLineToString(e, t, i = 0, r) {
                                        const s = this.lines.get(e);
                                        return s ? s.translateToString(t, i, r) : ""
                                    }
                                    getWrappedRangeForLine(e) {
                                        let t = e,
                                            i = e;
                                        for (; t > 0 && this.lines.get(t).isWrapped;) t--;
                                        for (; i + 1 < this.lines.length && this.lines.get(i + 1).isWrapped;) i++;
                                        return {
                                            first: t,
                                            last: i
                                        }
                                    }
                                    setupTabStops(e) {
                                        for (null != e ? this.tabs[e] || (e = this.prevStop(e)) : (this.tabs = {}, e = 0); e < this._cols; e += this._optionsService.rawOptions.tabStopWidth) this.tabs[e] = !0
                                    }
                                    prevStop(e) {
                                        for (null == e && (e = this.x); !this.tabs[--e] && e > 0;);
                                        return e >= this._cols ? this._cols - 1 : e < 0 ? 0 : e
                                    }
                                    nextStop(e) {
                                        for (null == e && (e = this.x); !this.tabs[++e] && e < this._cols;);
                                        return e >= this._cols ? this._cols - 1 : e < 0 ? 0 : e
                                    }
                                    clearMarkers(e) {
                                        this._isClearing = !0;
                                        for (let t = 0; t < this.markers.length; t++) this.markers[t].line === e && (this.markers[t].dispose(), this.markers.splice(t--, 1));
                                        this._isClearing = !1
                                    }
                                    clearAllMarkers() {
                                        this._isClearing = !0;
                                        for (let e = 0; e < this.markers.length; e++) this.markers[e].dispose(), this.markers.splice(e--, 1);
                                        this._isClearing = !1
                                    }
                                    addMarker(e) {
                                        const t = new h.Marker(e);
                                        return this.markers.push(t), t.register(this.lines.onTrim((e => {
                                            t.line -= e, t.line < 0 && t.dispose()
                                        }))), t.register(this.lines.onInsert((e => {
                                            t.line >= e.index && (t.line += e.amount)
                                        }))), t.register(this.lines.onDelete((e => {
                                            t.line >= e.index && t.line < e.index + e.amount && t.dispose(), t.line > e.index && (t.line -= e.amount)
                                        }))), t.register(t.onDispose((() => this._removeMarker(t)))), t
                                    }
                                    _removeMarker(e) {
                                        this._isClearing || this.markers.splice(this.markers.indexOf(e), 1)
                                    }
                                }
                            },
                            8437: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.BufferLine = t.DEFAULT_ATTR_DATA = void 0;
                                const r = i(3734),
                                    s = i(511),
                                    n = i(643),
                                    o = i(482);
                                t.DEFAULT_ATTR_DATA = Object.freeze(new r.AttributeData);
                                let a = 0;
                                class c {
                                    constructor(e, t, i = !1) {
                                        this.isWrapped = i, this._combined = {}, this._extendedAttrs = {}, this._data = new Uint32Array(3 * e);
                                        const r = t || s.CellData.fromCharData([0, n.NULL_CELL_CHAR, n.NULL_CELL_WIDTH, n.NULL_CELL_CODE]);
                                        for (let t = 0; t < e; ++t) this.setCell(t, r);
                                        this.length = e
                                    }
                                    get(e) {
                                        const t = this._data[3 * e + 0],
                                            i = 2097151 & t;
                                        return [this._data[3 * e + 1], 2097152 & t ? this._combined[e] : i ? (0, o.stringFromCodePoint)(i) : "", t >> 22, 2097152 & t ? this._combined[e].charCodeAt(this._combined[e].length - 1) : i]
                                    }
                                    set(e, t) {
                                        this._data[3 * e + 1] = t[n.CHAR_DATA_ATTR_INDEX], t[n.CHAR_DATA_CHAR_INDEX].length > 1 ? (this._combined[e] = t[1], this._data[3 * e + 0] = 2097152 | e | t[n.CHAR_DATA_WIDTH_INDEX] << 22) : this._data[3 * e + 0] = t[n.CHAR_DATA_CHAR_INDEX].charCodeAt(0) | t[n.CHAR_DATA_WIDTH_INDEX] << 22
                                    }
                                    getWidth(e) {
                                        return this._data[3 * e + 0] >> 22
                                    }
                                    hasWidth(e) {
                                        return 12582912 & this._data[3 * e + 0]
                                    }
                                    getFg(e) {
                                        return this._data[3 * e + 1]
                                    }
                                    getBg(e) {
                                        return this._data[3 * e + 2]
                                    }
                                    hasContent(e) {
                                        return 4194303 & this._data[3 * e + 0]
                                    }
                                    getCodePoint(e) {
                                        const t = this._data[3 * e + 0];
                                        return 2097152 & t ? this._combined[e].charCodeAt(this._combined[e].length - 1) : 2097151 & t
                                    }
                                    isCombined(e) {
                                        return 2097152 & this._data[3 * e + 0]
                                    }
                                    getString(e) {
                                        const t = this._data[3 * e + 0];
                                        return 2097152 & t ? this._combined[e] : 2097151 & t ? (0, o.stringFromCodePoint)(2097151 & t) : ""
                                    }
                                    isProtected(e) {
                                        return 536870912 & this._data[3 * e + 2]
                                    }
                                    loadCell(e, t) {
                                        return a = 3 * e, t.content = this._data[a + 0], t.fg = this._data[a + 1], t.bg = this._data[a + 2], 2097152 & t.content && (t.combinedData = this._combined[e]), 268435456 & t.bg && (t.extended = this._extendedAttrs[e]), t
                                    }
                                    setCell(e, t) {
                                        2097152 & t.content && (this._combined[e] = t.combinedData), 268435456 & t.bg && (this._extendedAttrs[e] = t.extended), this._data[3 * e + 0] = t.content, this._data[3 * e + 1] = t.fg, this._data[3 * e + 2] = t.bg
                                    }
                                    setCellFromCodepoint(e, t, i, r) {
                                        268435456 & r.bg && (this._extendedAttrs[e] = r.extended), this._data[3 * e + 0] = t | i << 22, this._data[3 * e + 1] = r.fg, this._data[3 * e + 2] = r.bg
                                    }
                                    addCodepointToCell(e, t, i) {
                                        let r = this._data[3 * e + 0];
                                        2097152 & r ? this._combined[e] += (0, o.stringFromCodePoint)(t) : 2097151 & r ? (this._combined[e] = (0, o.stringFromCodePoint)(2097151 & r) + (0, o.stringFromCodePoint)(t), r &= -2097152, r |= 2097152) : r = t | 1 << 22, i && (r &= -12582913, r |= i << 22), this._data[3 * e + 0] = r
                                    }
                                    insertCells(e, t, i) {
                                        if ((e %= this.length) && 2 === this.getWidth(e - 1) && this.setCellFromCodepoint(e - 1, 0, 1, i), t < this.length - e) {
                                            const r = new s.CellData;
                                            for (let i = this.length - e - t - 1; i >= 0; --i) this.setCell(e + t + i, this.loadCell(e + i, r));
                                            for (let r = 0; r < t; ++r) this.setCell(e + r, i)
                                        } else
                                            for (let t = e; t < this.length; ++t) this.setCell(t, i);
                                        2 === this.getWidth(this.length - 1) && this.setCellFromCodepoint(this.length - 1, 0, 1, i)
                                    }
                                    deleteCells(e, t, i) {
                                        if (e %= this.length, t < this.length - e) {
                                            const r = new s.CellData;
                                            for (let i = 0; i < this.length - e - t; ++i) this.setCell(e + i, this.loadCell(e + t + i, r));
                                            for (let e = this.length - t; e < this.length; ++e) this.setCell(e, i)
                                        } else
                                            for (let t = e; t < this.length; ++t) this.setCell(t, i);
                                        e && 2 === this.getWidth(e - 1) && this.setCellFromCodepoint(e - 1, 0, 1, i), 0 !== this.getWidth(e) || this.hasContent(e) || this.setCellFromCodepoint(e, 0, 1, i)
                                    }
                                    replaceCells(e, t, i, r = !1) {
                                        if (r)
                                            for (e && 2 === this.getWidth(e - 1) && !this.isProtected(e - 1) && this.setCellFromCodepoint(e - 1, 0, 1, i), t < this.length && 2 === this.getWidth(t - 1) && !this.isProtected(t) && this.setCellFromCodepoint(t, 0, 1, i); e < t && e < this.length;) this.isProtected(e) || this.setCell(e, i), e++;
                                        else
                                            for (e && 2 === this.getWidth(e - 1) && this.setCellFromCodepoint(e - 1, 0, 1, i), t < this.length && 2 === this.getWidth(t - 1) && this.setCellFromCodepoint(t, 0, 1, i); e < t && e < this.length;) this.setCell(e++, i)
                                    }
                                    resize(e, t) {
                                        if (e === this.length) return 4 * this._data.length * 2 < this._data.buffer.byteLength;
                                        const i = 3 * e;
                                        if (e > this.length) {
                                            if (this._data.buffer.byteLength >= 4 * i) this._data = new Uint32Array(this._data.buffer, 0, i);
                                            else {
                                                const e = new Uint32Array(i);
                                                e.set(this._data), this._data = e
                                            }
                                            for (let i = this.length; i < e; ++i) this.setCell(i, t)
                                        } else {
                                            this._data = this._data.subarray(0, i);
                                            const t = Object.keys(this._combined);
                                            for (let i = 0; i < t.length; i++) {
                                                const r = parseInt(t[i], 10);
                                                r >= e && delete this._combined[r]
                                            }
                                            const r = Object.keys(this._extendedAttrs);
                                            for (let t = 0; t < r.length; t++) {
                                                const i = parseInt(r[t], 10);
                                                i >= e && delete this._extendedAttrs[i]
                                            }
                                        }
                                        return this.length = e, 4 * i * 2 < this._data.buffer.byteLength
                                    }
                                    cleanupMemory() {
                                        if (4 * this._data.length * 2 < this._data.buffer.byteLength) {
                                            const e = new Uint32Array(this._data.length);
                                            return e.set(this._data), this._data = e, 1
                                        }
                                        return 0
                                    }
                                    fill(e, t = !1) {
                                        if (t)
                                            for (let t = 0; t < this.length; ++t) this.isProtected(t) || this.setCell(t, e);
                                        else {
                                            this._combined = {}, this._extendedAttrs = {};
                                            for (let t = 0; t < this.length; ++t) this.setCell(t, e)
                                        }
                                    }
                                    copyFrom(e) {
                                        this.length !== e.length ? this._data = new Uint32Array(e._data) : this._data.set(e._data), this.length = e.length, this._combined = {};
                                        for (const t in e._combined) this._combined[t] = e._combined[t];
                                        this._extendedAttrs = {};
                                        for (const t in e._extendedAttrs) this._extendedAttrs[t] = e._extendedAttrs[t];
                                        this.isWrapped = e.isWrapped
                                    }
                                    clone() {
                                        const e = new c(0);
                                        e._data = new Uint32Array(this._data), e.length = this.length;
                                        for (const t in this._combined) e._combined[t] = this._combined[t];
                                        for (const t in this._extendedAttrs) e._extendedAttrs[t] = this._extendedAttrs[t];
                                        return e.isWrapped = this.isWrapped, e
                                    }
                                    getTrimmedLength() {
                                        for (let e = this.length - 1; e >= 0; --e)
                                            if (4194303 & this._data[3 * e + 0]) return e + (this._data[3 * e + 0] >> 22);
                                        return 0
                                    }
                                    getNoBgTrimmedLength() {
                                        for (let e = this.length - 1; e >= 0; --e)
                                            if (4194303 & this._data[3 * e + 0] || 50331648 & this._data[3 * e + 2]) return e + (this._data[3 * e + 0] >> 22);
                                        return 0
                                    }
                                    copyCellsFrom(e, t, i, r, s) {
                                        const n = e._data;
                                        if (s)
                                            for (let s = r - 1; s >= 0; s--) {
                                                for (let e = 0; e < 3; e++) this._data[3 * (i + s) + e] = n[3 * (t + s) + e];
                                                268435456 & n[3 * (t + s) + 2] && (this._extendedAttrs[i + s] = e._extendedAttrs[t + s])
                                            } else
                                                for (let s = 0; s < r; s++) {
                                                    for (let e = 0; e < 3; e++) this._data[3 * (i + s) + e] = n[3 * (t + s) + e];
                                                    268435456 & n[3 * (t + s) + 2] && (this._extendedAttrs[i + s] = e._extendedAttrs[t + s])
                                                }
                                        const o = Object.keys(e._combined);
                                        for (let r = 0; r < o.length; r++) {
                                            const s = parseInt(o[r], 10);
                                            s >= t && (this._combined[s - t + i] = e._combined[s])
                                        }
                                    }
                                    translateToString(e, t, i, r) {
                                        t = t ?? 0, i = i ?? this.length, e && (i = Math.min(i, this.getTrimmedLength())), r && (r.length = 0);
                                        let s = "";
                                        for (; t < i;) {
                                            const e = this._data[3 * t + 0],
                                                i = 2097151 & e,
                                                a = 2097152 & e ? this._combined[t] : i ? (0, o.stringFromCodePoint)(i) : n.WHITESPACE_CELL_CHAR;
                                            if (s += a, r)
                                                for (let e = 0; e < a.length; ++e) r.push(t);
                                            t += e >> 22 || 1
                                        }
                                        return r && r.push(t), s
                                    }
                                }
                                t.BufferLine = c
                            },
                            4841: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.getRangeLength = void 0, t.getRangeLength = function(e, t) {
                                    if (e.start.y > e.end.y) throw new Error(`Buffer range end (${e.end.x}, ${e.end.y}) cannot be before start (${e.start.x}, ${e.start.y})`);
                                    return t * (e.end.y - e.start.y) + (e.end.x - e.start.x + 1)
                                }
                            },
                            4634: (e, t) => {
                                function i(e, t, i) {
                                    if (t === e.length - 1) return e[t].getTrimmedLength();
                                    const r = !e[t].hasContent(i - 1) && 1 === e[t].getWidth(i - 1),
                                        s = 2 === e[t + 1].getWidth(0);
                                    return r && s ? i - 1 : i
                                }
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.getWrappedLineTrimmedLength = t.reflowSmallerGetNewLineLengths = t.reflowLargerApplyNewLayout = t.reflowLargerCreateNewLayout = t.reflowLargerGetLinesToRemove = void 0, t.reflowLargerGetLinesToRemove = function(e, t, r, s, n) {
                                    const o = [];
                                    for (let a = 0; a < e.length - 1; a++) {
                                        let c = a,
                                            l = e.get(++c);
                                        if (!l.isWrapped) continue;
                                        const h = [e.get(a)];
                                        for (; c < e.length && l.isWrapped;) h.push(l), l = e.get(++c);
                                        if (s >= a && s < c) {
                                            a += h.length - 1;
                                            continue
                                        }
                                        let u = 0,
                                            d = i(h, u, t),
                                            f = 1,
                                            p = 0;
                                        for (; f < h.length;) {
                                            const e = i(h, f, t),
                                                s = e - p,
                                                o = r - d,
                                                a = Math.min(s, o);
                                            h[u].copyCellsFrom(h[f], p, d, a, !1), d += a, d === r && (u++, d = 0), p += a, p === e && (f++, p = 0), 0 === d && 0 !== u && 2 === h[u - 1].getWidth(r - 1) && (h[u].copyCellsFrom(h[u - 1], r - 1, d++, 1, !1), h[u - 1].setCell(r - 1, n))
                                        }
                                        h[u].replaceCells(d, r, n);
                                        let _ = 0;
                                        for (let e = h.length - 1; e > 0 && (e > u || 0 === h[e].getTrimmedLength()); e--) _++;
                                        _ > 0 && (o.push(a + h.length - _), o.push(_)), a += h.length - 1
                                    }
                                    return o
                                }, t.reflowLargerCreateNewLayout = function(e, t) {
                                    const i = [];
                                    let r = 0,
                                        s = t[r],
                                        n = 0;
                                    for (let o = 0; o < e.length; o++)
                                        if (s === o) {
                                            const i = t[++r];
                                            e.onDeleteEmitter.fire({
                                                index: o - n,
                                                amount: i
                                            }), o += i - 1, n += i, s = t[++r]
                                        } else i.push(o);
                                    return {
                                        layout: i,
                                        countRemoved: n
                                    }
                                }, t.reflowLargerApplyNewLayout = function(e, t) {
                                    const i = [];
                                    for (let r = 0; r < t.length; r++) i.push(e.get(t[r]));
                                    for (let t = 0; t < i.length; t++) e.set(t, i[t]);
                                    e.length = t.length
                                }, t.reflowSmallerGetNewLineLengths = function(e, t, r) {
                                    const s = [],
                                        n = e.map(((r, s) => i(e, s, t))).reduce(((e, t) => e + t));
                                    let o = 0,
                                        a = 0,
                                        c = 0;
                                    for (; c < n;) {
                                        if (n - c < r) {
                                            s.push(n - c);
                                            break
                                        }
                                        o += r;
                                        const l = i(e, a, t);
                                        o > l && (o -= l, a++);
                                        const h = 2 === e[a].getWidth(o - 1);
                                        h && o--;
                                        const u = h ? r - 1 : r;
                                        s.push(u), c += u
                                    }
                                    return s
                                }, t.getWrappedLineTrimmedLength = i
                            },
                            5295: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.BufferSet = void 0;
                                const r = i(8460),
                                    s = i(844),
                                    n = i(9092);
                                class o extends s.Disposable {
                                    constructor(e, t) {
                                        super(), this._optionsService = e, this._bufferService = t, this._onBufferActivate = this.register(new r.EventEmitter), this.onBufferActivate = this._onBufferActivate.event, this.reset(), this.register(this._optionsService.onSpecificOptionChange("scrollback", (() => this.resize(this._bufferService.cols, this._bufferService.rows)))), this.register(this._optionsService.onSpecificOptionChange("tabStopWidth", (() => this.setupTabStops())))
                                    }
                                    reset() {
                                        this._normal = new n.Buffer(!0, this._optionsService, this._bufferService), this._normal.fillViewportRows(), this._alt = new n.Buffer(!1, this._optionsService, this._bufferService), this._activeBuffer = this._normal, this._onBufferActivate.fire({
                                            activeBuffer: this._normal,
                                            inactiveBuffer: this._alt
                                        }), this.setupTabStops()
                                    }
                                    get alt() {
                                        return this._alt
                                    }
                                    get active() {
                                        return this._activeBuffer
                                    }
                                    get normal() {
                                        return this._normal
                                    }
                                    activateNormalBuffer() {
                                        this._activeBuffer !== this._normal && (this._normal.x = this._alt.x, this._normal.y = this._alt.y, this._alt.clearAllMarkers(), this._alt.clear(), this._activeBuffer = this._normal, this._onBufferActivate.fire({
                                            activeBuffer: this._normal,
                                            inactiveBuffer: this._alt
                                        }))
                                    }
                                    activateAltBuffer(e) {
                                        this._activeBuffer !== this._alt && (this._alt.fillViewportRows(e), this._alt.x = this._normal.x, this._alt.y = this._normal.y, this._activeBuffer = this._alt, this._onBufferActivate.fire({
                                            activeBuffer: this._alt,
                                            inactiveBuffer: this._normal
                                        }))
                                    }
                                    resize(e, t) {
                                        this._normal.resize(e, t), this._alt.resize(e, t), this.setupTabStops(e)
                                    }
                                    setupTabStops(e) {
                                        this._normal.setupTabStops(e), this._alt.setupTabStops(e)
                                    }
                                }
                                t.BufferSet = o
                            },
                            511: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CellData = void 0;
                                const r = i(482),
                                    s = i(643),
                                    n = i(3734);
                                class o extends n.AttributeData {
                                    constructor() {
                                        super(...arguments), this.content = 0, this.fg = 0, this.bg = 0, this.extended = new n.ExtendedAttrs, this.combinedData = ""
                                    }
                                    static fromCharData(e) {
                                        const t = new o;
                                        return t.setFromCharData(e), t
                                    }
                                    isCombined() {
                                        return 2097152 & this.content
                                    }
                                    getWidth() {
                                        return this.content >> 22
                                    }
                                    getChars() {
                                        return 2097152 & this.content ? this.combinedData : 2097151 & this.content ? (0, r.stringFromCodePoint)(2097151 & this.content) : ""
                                    }
                                    getCode() {
                                        return this.isCombined() ? this.combinedData.charCodeAt(this.combinedData.length - 1) : 2097151 & this.content
                                    }
                                    setFromCharData(e) {
                                        this.fg = e[s.CHAR_DATA_ATTR_INDEX], this.bg = 0;
                                        let t = !1;
                                        if (e[s.CHAR_DATA_CHAR_INDEX].length > 2) t = !0;
                                        else if (2 === e[s.CHAR_DATA_CHAR_INDEX].length) {
                                            const i = e[s.CHAR_DATA_CHAR_INDEX].charCodeAt(0);
                                            if (55296 <= i && i <= 56319) {
                                                const r = e[s.CHAR_DATA_CHAR_INDEX].charCodeAt(1);
                                                56320 <= r && r <= 57343 ? this.content = 1024 * (i - 55296) + r - 56320 + 65536 | e[s.CHAR_DATA_WIDTH_INDEX] << 22 : t = !0
                                            } else t = !0
                                        } else this.content = e[s.CHAR_DATA_CHAR_INDEX].charCodeAt(0) | e[s.CHAR_DATA_WIDTH_INDEX] << 22;
                                        t && (this.combinedData = e[s.CHAR_DATA_CHAR_INDEX], this.content = 2097152 | e[s.CHAR_DATA_WIDTH_INDEX] << 22)
                                    }
                                    getAsCharData() {
                                        return [this.fg, this.getChars(), this.getWidth(), this.getCode()]
                                    }
                                }
                                t.CellData = o
                            },
                            643: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.WHITESPACE_CELL_CODE = t.WHITESPACE_CELL_WIDTH = t.WHITESPACE_CELL_CHAR = t.NULL_CELL_CODE = t.NULL_CELL_WIDTH = t.NULL_CELL_CHAR = t.CHAR_DATA_CODE_INDEX = t.CHAR_DATA_WIDTH_INDEX = t.CHAR_DATA_CHAR_INDEX = t.CHAR_DATA_ATTR_INDEX = t.DEFAULT_EXT = t.DEFAULT_ATTR = t.DEFAULT_COLOR = void 0, t.DEFAULT_COLOR = 0, t.DEFAULT_ATTR = 256 | t.DEFAULT_COLOR << 9, t.DEFAULT_EXT = 0, t.CHAR_DATA_ATTR_INDEX = 0, t.CHAR_DATA_CHAR_INDEX = 1, t.CHAR_DATA_WIDTH_INDEX = 2, t.CHAR_DATA_CODE_INDEX = 3, t.NULL_CELL_CHAR = "", t.NULL_CELL_WIDTH = 1, t.NULL_CELL_CODE = 0, t.WHITESPACE_CELL_CHAR = " ", t.WHITESPACE_CELL_WIDTH = 1, t.WHITESPACE_CELL_CODE = 32
                            },
                            4863: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.Marker = void 0;
                                const r = i(8460),
                                    s = i(844);
                                class n {
                                    get id() {
                                        return this._id
                                    }
                                    constructor(e) {
                                        this.line = e, this.isDisposed = !1, this._disposables = [], this._id = n._nextId++, this._onDispose = this.register(new r.EventEmitter), this.onDispose = this._onDispose.event
                                    }
                                    dispose() {
                                        this.isDisposed || (this.isDisposed = !0, this.line = -1, this._onDispose.fire(), (0, s.disposeArray)(this._disposables), this._disposables.length = 0)
                                    }
                                    register(e) {
                                        return this._disposables.push(e), e
                                    }
                                }
                                t.Marker = n, n._nextId = 1
                            },
                            7116: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.DEFAULT_CHARSET = t.CHARSETS = void 0, t.CHARSETS = {}, t.DEFAULT_CHARSET = t.CHARSETS.B, t.CHARSETS[0] = {
                                    "`": "◆",
                                    a: "▒",
                                    b: "␉",
                                    c: "␌",
                                    d: "␍",
                                    e: "␊",
                                    f: "°",
                                    g: "±",
                                    h: "␤",
                                    i: "␋",
                                    j: "┘",
                                    k: "┐",
                                    l: "┌",
                                    m: "└",
                                    n: "┼",
                                    o: "⎺",
                                    p: "⎻",
                                    q: "─",
                                    r: "⎼",
                                    s: "⎽",
                                    t: "├",
                                    u: "┤",
                                    v: "┴",
                                    w: "┬",
                                    x: "│",
                                    y: "≤",
                                    z: "≥",
                                    "{": "π",
                                    "|": "≠",
                                    "}": "£",
                                    "~": "·"
                                }, t.CHARSETS.A = {
                                    "#": "£"
                                }, t.CHARSETS.B = void 0, t.CHARSETS[4] = {
                                    "#": "£",
                                    "@": "¾",
                                    "[": "ij",
                                    "\\": "½",
                                    "]": "|",
                                    "{": "¨",
                                    "|": "f",
                                    "}": "¼",
                                    "~": "´"
                                }, t.CHARSETS.C = t.CHARSETS[5] = {
                                    "[": "Ä",
                                    "\\": "Ö",
                                    "]": "Å",
                                    "^": "Ü",
                                    "`": "é",
                                    "{": "ä",
                                    "|": "ö",
                                    "}": "å",
                                    "~": "ü"
                                }, t.CHARSETS.R = {
                                    "#": "£",
                                    "@": "à",
                                    "[": "°",
                                    "\\": "ç",
                                    "]": "§",
                                    "{": "é",
                                    "|": "ù",
                                    "}": "è",
                                    "~": "¨"
                                }, t.CHARSETS.Q = {
                                    "@": "à",
                                    "[": "â",
                                    "\\": "ç",
                                    "]": "ê",
                                    "^": "î",
                                    "`": "ô",
                                    "{": "é",
                                    "|": "ù",
                                    "}": "è",
                                    "~": "û"
                                }, t.CHARSETS.K = {
                                    "@": "§",
                                    "[": "Ä",
                                    "\\": "Ö",
                                    "]": "Ü",
                                    "{": "ä",
                                    "|": "ö",
                                    "}": "ü",
                                    "~": "ß"
                                }, t.CHARSETS.Y = {
                                    "#": "£",
                                    "@": "§",
                                    "[": "°",
                                    "\\": "ç",
                                    "]": "é",
                                    "`": "ù",
                                    "{": "à",
                                    "|": "ò",
                                    "}": "è",
                                    "~": "ì"
                                }, t.CHARSETS.E = t.CHARSETS[6] = {
                                    "@": "Ä",
                                    "[": "Æ",
                                    "\\": "Ø",
                                    "]": "Å",
                                    "^": "Ü",
                                    "`": "ä",
                                    "{": "æ",
                                    "|": "ø",
                                    "}": "å",
                                    "~": "ü"
                                }, t.CHARSETS.Z = {
                                    "#": "£",
                                    "@": "§",
                                    "[": "¡",
                                    "\\": "Ñ",
                                    "]": "¿",
                                    "{": "°",
                                    "|": "ñ",
                                    "}": "ç"
                                }, t.CHARSETS.H = t.CHARSETS[7] = {
                                    "@": "É",
                                    "[": "Ä",
                                    "\\": "Ö",
                                    "]": "Å",
                                    "^": "Ü",
                                    "`": "é",
                                    "{": "ä",
                                    "|": "ö",
                                    "}": "å",
                                    "~": "ü"
                                }, t.CHARSETS["="] = {
                                    "#": "ù",
                                    "@": "à",
                                    "[": "é",
                                    "\\": "ç",
                                    "]": "ê",
                                    "^": "î",
                                    _: "è",
                                    "`": "ô",
                                    "{": "ä",
                                    "|": "ö",
                                    "}": "ü",
                                    "~": "û"
                                }
                            },
                            2584: (e, t) => {
                                var i, r, s;
                                Object.defineProperty(t, "__esModule", {
                                        value: !0
                                    }), t.C1_ESCAPED = t.C1 = t.C0 = void 0,
                                    function(e) {
                                        e.NUL = "\0", e.SOH = "", e.STX = "", e.ETX = "", e.EOT = "", e.ENQ = "", e.ACK = "", e.BEL = "", e.BS = "\b", e.HT = "\t", e.LF = "\n", e.VT = "\v", e.FF = "\f", e.CR = "\r", e.SO = "", e.SI = "", e.DLE = "", e.DC1 = "", e.DC2 = "", e.DC3 = "", e.DC4 = "", e.NAK = "", e.SYN = "", e.ETB = "", e.CAN = "", e.EM = "", e.SUB = "", e.ESC = "", e.FS = "", e.GS = "", e.RS = "", e.US = "", e.SP = " ", e.DEL = ""
                                    }(i || (t.C0 = i = {})),
                                    function(e) {
                                        e.PAD = "", e.HOP = "", e.BPH = "", e.NBH = "", e.IND = "", e.NEL = "", e.SSA = "", e.ESA = "", e.HTS = "", e.HTJ = "", e.VTS = "", e.PLD = "", e.PLU = "", e.RI = "", e.SS2 = "", e.SS3 = "", e.DCS = "", e.PU1 = "", e.PU2 = "", e.STS = "", e.CCH = "", e.MW = "", e.SPA = "", e.EPA = "", e.SOS = "", e.SGCI = "", e.SCI = "", e.CSI = "", e.ST = "", e.OSC = "", e.PM = "", e.APC = ""
                                    }(r || (t.C1 = r = {})),
                                    function(e) {
                                        e.ST = `${i.ESC}\\`
                                    }(s || (t.C1_ESCAPED = s = {}))
                            },
                            7399: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.evaluateKeyboardEvent = void 0;
                                const r = i(2584),
                                    s = {
                                        48: ["0", ")"],
                                        49: ["1", "!"],
                                        50: ["2", "@"],
                                        51: ["3", "#"],
                                        52: ["4", "$"],
                                        53: ["5", "%"],
                                        54: ["6", "^"],
                                        55: ["7", "&"],
                                        56: ["8", "*"],
                                        57: ["9", "("],
                                        186: [";", ":"],
                                        187: ["=", "+"],
                                        188: [",", "<"],
                                        189: ["-", "_"],
                                        190: [".", ">"],
                                        191: ["/", "?"],
                                        192: ["`", "~"],
                                        219: ["[", "{"],
                                        220: ["\\", "|"],
                                        221: ["]", "}"],
                                        222: ["'", '"']
                                    };
                                t.evaluateKeyboardEvent = function(e, t, i, n) {
                                    const o = {
                                            type: 0,
                                            cancel: !1,
                                            key: void 0
                                        },
                                        a = (e.shiftKey ? 1 : 0) | (e.altKey ? 2 : 0) | (e.ctrlKey ? 4 : 0) | (e.metaKey ? 8 : 0);
                                    switch (e.keyCode) {
                                        case 0:
                                            "UIKeyInputUpArrow" === e.key ? o.key = t ? r.C0.ESC + "OA" : r.C0.ESC + "[A" : "UIKeyInputLeftArrow" === e.key ? o.key = t ? r.C0.ESC + "OD" : r.C0.ESC + "[D" : "UIKeyInputRightArrow" === e.key ? o.key = t ? r.C0.ESC + "OC" : r.C0.ESC + "[C" : "UIKeyInputDownArrow" === e.key && (o.key = t ? r.C0.ESC + "OB" : r.C0.ESC + "[B");
                                            break;
                                        case 8:
                                            o.key = e.ctrlKey ? "\b" : r.C0.DEL, e.altKey && (o.key = r.C0.ESC + o.key);
                                            break;
                                        case 9:
                                            if (e.shiftKey) {
                                                o.key = r.C0.ESC + "[Z";
                                                break
                                            }
                                            o.key = r.C0.HT, o.cancel = !0;
                                            break;
                                        case 13:
                                            o.key = e.altKey ? r.C0.ESC + r.C0.CR : r.C0.CR, o.cancel = !0;
                                            break;
                                        case 27:
                                            o.key = r.C0.ESC, e.altKey && (o.key = r.C0.ESC + r.C0.ESC), o.cancel = !0;
                                            break;
                                        case 37:
                                            if (e.metaKey) break;
                                            a ? (o.key = r.C0.ESC + "[1;" + (a + 1) + "D", o.key === r.C0.ESC + "[1;3D" && (o.key = r.C0.ESC + (i ? "b" : "[1;5D"))) : o.key = t ? r.C0.ESC + "OD" : r.C0.ESC + "[D";
                                            break;
                                        case 39:
                                            if (e.metaKey) break;
                                            a ? (o.key = r.C0.ESC + "[1;" + (a + 1) + "C", o.key === r.C0.ESC + "[1;3C" && (o.key = r.C0.ESC + (i ? "f" : "[1;5C"))) : o.key = t ? r.C0.ESC + "OC" : r.C0.ESC + "[C";
                                            break;
                                        case 38:
                                            if (e.metaKey) break;
                                            a ? (o.key = r.C0.ESC + "[1;" + (a + 1) + "A", i || o.key !== r.C0.ESC + "[1;3A" || (o.key = r.C0.ESC + "[1;5A")) : o.key = t ? r.C0.ESC + "OA" : r.C0.ESC + "[A";
                                            break;
                                        case 40:
                                            if (e.metaKey) break;
                                            a ? (o.key = r.C0.ESC + "[1;" + (a + 1) + "B", i || o.key !== r.C0.ESC + "[1;3B" || (o.key = r.C0.ESC + "[1;5B")) : o.key = t ? r.C0.ESC + "OB" : r.C0.ESC + "[B";
                                            break;
                                        case 45:
                                            e.shiftKey || e.ctrlKey || (o.key = r.C0.ESC + "[2~");
                                            break;
                                        case 46:
                                            o.key = a ? r.C0.ESC + "[3;" + (a + 1) + "~" : r.C0.ESC + "[3~";
                                            break;
                                        case 36:
                                            o.key = a ? r.C0.ESC + "[1;" + (a + 1) + "H" : t ? r.C0.ESC + "OH" : r.C0.ESC + "[H";
                                            break;
                                        case 35:
                                            o.key = a ? r.C0.ESC + "[1;" + (a + 1) + "F" : t ? r.C0.ESC + "OF" : r.C0.ESC + "[F";
                                            break;
                                        case 33:
                                            e.shiftKey ? o.type = 2 : e.ctrlKey ? o.key = r.C0.ESC + "[5;" + (a + 1) + "~" : o.key = r.C0.ESC + "[5~";
                                            break;
                                        case 34:
                                            e.shiftKey ? o.type = 3 : e.ctrlKey ? o.key = r.C0.ESC + "[6;" + (a + 1) + "~" : o.key = r.C0.ESC + "[6~";
                                            break;
                                        case 112:
                                            o.key = a ? r.C0.ESC + "[1;" + (a + 1) + "P" : r.C0.ESC + "OP";
                                            break;
                                        case 113:
                                            o.key = a ? r.C0.ESC + "[1;" + (a + 1) + "Q" : r.C0.ESC + "OQ";
                                            break;
                                        case 114:
                                            o.key = a ? r.C0.ESC + "[1;" + (a + 1) + "R" : r.C0.ESC + "OR";
                                            break;
                                        case 115:
                                            o.key = a ? r.C0.ESC + "[1;" + (a + 1) + "S" : r.C0.ESC + "OS";
                                            break;
                                        case 116:
                                            o.key = a ? r.C0.ESC + "[15;" + (a + 1) + "~" : r.C0.ESC + "[15~";
                                            break;
                                        case 117:
                                            o.key = a ? r.C0.ESC + "[17;" + (a + 1) + "~" : r.C0.ESC + "[17~";
                                            break;
                                        case 118:
                                            o.key = a ? r.C0.ESC + "[18;" + (a + 1) + "~" : r.C0.ESC + "[18~";
                                            break;
                                        case 119:
                                            o.key = a ? r.C0.ESC + "[19;" + (a + 1) + "~" : r.C0.ESC + "[19~";
                                            break;
                                        case 120:
                                            o.key = a ? r.C0.ESC + "[20;" + (a + 1) + "~" : r.C0.ESC + "[20~";
                                            break;
                                        case 121:
                                            o.key = a ? r.C0.ESC + "[21;" + (a + 1) + "~" : r.C0.ESC + "[21~";
                                            break;
                                        case 122:
                                            o.key = a ? r.C0.ESC + "[23;" + (a + 1) + "~" : r.C0.ESC + "[23~";
                                            break;
                                        case 123:
                                            o.key = a ? r.C0.ESC + "[24;" + (a + 1) + "~" : r.C0.ESC + "[24~";
                                            break;
                                        default:
                                            if (!e.ctrlKey || e.shiftKey || e.altKey || e.metaKey)
                                                if (i && !n || !e.altKey || e.metaKey) !i || e.altKey || e.ctrlKey || e.shiftKey || !e.metaKey ? e.key && !e.ctrlKey && !e.altKey && !e.metaKey && e.keyCode >= 48 && 1 === e.key.length ? o.key = e.key : e.key && e.ctrlKey && ("_" === e.key && (o.key = r.C0.US), "@" === e.key && (o.key = r.C0.NUL)) : 65 === e.keyCode && (o.type = 1);
                                                else {
                                                    const t = s[e.keyCode]?.[e.shiftKey ? 1 : 0];
                                                    if (t) o.key = r.C0.ESC + t;
                                                    else if (e.keyCode >= 65 && e.keyCode <= 90) {
                                                        const t = e.ctrlKey ? e.keyCode - 64 : e.keyCode + 32;
                                                        let i = String.fromCharCode(t);
                                                        e.shiftKey && (i = i.toUpperCase()), o.key = r.C0.ESC + i
                                                    } else if (32 === e.keyCode) o.key = r.C0.ESC + (e.ctrlKey ? r.C0.NUL : " ");
                                                    else if ("Dead" === e.key && e.code.startsWith("Key")) {
                                                        let t = e.code.slice(3, 4);
                                                        e.shiftKey || (t = t.toLowerCase()), o.key = r.C0.ESC + t, o.cancel = !0
                                                    }
                                                }
                                            else e.keyCode >= 65 && e.keyCode <= 90 ? o.key = String.fromCharCode(e.keyCode - 64) : 32 === e.keyCode ? o.key = r.C0.NUL : e.keyCode >= 51 && e.keyCode <= 55 ? o.key = String.fromCharCode(e.keyCode - 51 + 27) : 56 === e.keyCode ? o.key = r.C0.DEL : 219 === e.keyCode ? o.key = r.C0.ESC : 220 === e.keyCode ? o.key = r.C0.FS : 221 === e.keyCode && (o.key = r.C0.GS)
                                    }
                                    return o
                                }
                            },
                            482: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.Utf8ToUtf32 = t.StringToUtf32 = t.utf32ToString = t.stringFromCodePoint = void 0, t.stringFromCodePoint = function(e) {
                                    return e > 65535 ? (e -= 65536, String.fromCharCode(55296 + (e >> 10)) + String.fromCharCode(e % 1024 + 56320)) : String.fromCharCode(e)
                                }, t.utf32ToString = function(e, t = 0, i = e.length) {
                                    let r = "";
                                    for (let s = t; s < i; ++s) {
                                        let t = e[s];
                                        t > 65535 ? (t -= 65536, r += String.fromCharCode(55296 + (t >> 10)) + String.fromCharCode(t % 1024 + 56320)) : r += String.fromCharCode(t)
                                    }
                                    return r
                                }, t.StringToUtf32 = class {
                                    constructor() {
                                        this._interim = 0
                                    }
                                    clear() {
                                        this._interim = 0
                                    }
                                    decode(e, t) {
                                        const i = e.length;
                                        if (!i) return 0;
                                        let r = 0,
                                            s = 0;
                                        if (this._interim) {
                                            const i = e.charCodeAt(s++);
                                            56320 <= i && i <= 57343 ? t[r++] = 1024 * (this._interim - 55296) + i - 56320 + 65536 : (t[r++] = this._interim, t[r++] = i), this._interim = 0
                                        }
                                        for (let n = s; n < i; ++n) {
                                            const s = e.charCodeAt(n);
                                            if (55296 <= s && s <= 56319) {
                                                if (++n >= i) return this._interim = s, r;
                                                const o = e.charCodeAt(n);
                                                56320 <= o && o <= 57343 ? t[r++] = 1024 * (s - 55296) + o - 56320 + 65536 : (t[r++] = s, t[r++] = o)
                                            } else 65279 !== s && (t[r++] = s)
                                        }
                                        return r
                                    }
                                }, t.Utf8ToUtf32 = class {
                                    constructor() {
                                        this.interim = new Uint8Array(3)
                                    }
                                    clear() {
                                        this.interim.fill(0)
                                    }
                                    decode(e, t) {
                                        const i = e.length;
                                        if (!i) return 0;
                                        let r, s, n, o, a = 0,
                                            c = 0,
                                            l = 0;
                                        if (this.interim[0]) {
                                            let r = !1,
                                                s = this.interim[0];
                                            s &= 192 == (224 & s) ? 31 : 224 == (240 & s) ? 15 : 7;
                                            let n, o = 0;
                                            for (;
                                                (n = 63 & this.interim[++o]) && o < 4;) s <<= 6, s |= n;
                                            const c = 192 == (224 & this.interim[0]) ? 2 : 224 == (240 & this.interim[0]) ? 3 : 4,
                                                h = c - o;
                                            for (; l < h;) {
                                                if (l >= i) return 0;
                                                if (n = e[l++], 128 != (192 & n)) {
                                                    l--, r = !0;
                                                    break
                                                }
                                                this.interim[o++] = n, s <<= 6, s |= 63 & n
                                            }
                                            r || (2 === c ? s < 128 ? l-- : t[a++] = s : 3 === c ? s < 2048 || s >= 55296 && s <= 57343 || 65279 === s || (t[a++] = s) : s < 65536 || s > 1114111 || (t[a++] = s)), this.interim.fill(0)
                                        }
                                        const h = i - 4;
                                        let u = l;
                                        for (; u < i;) {
                                            for (; !(!(u < h) || 128 & (r = e[u]) || 128 & (s = e[u + 1]) || 128 & (n = e[u + 2]) || 128 & (o = e[u + 3]));) t[a++] = r, t[a++] = s, t[a++] = n, t[a++] = o, u += 4;
                                            if (r = e[u++], r < 128) t[a++] = r;
                                            else if (192 == (224 & r)) {
                                                if (u >= i) return this.interim[0] = r, a;
                                                if (s = e[u++], 128 != (192 & s)) {
                                                    u--;
                                                    continue
                                                }
                                                if (c = (31 & r) << 6 | 63 & s, c < 128) {
                                                    u--;
                                                    continue
                                                }
                                                t[a++] = c
                                            } else if (224 == (240 & r)) {
                                                if (u >= i) return this.interim[0] = r, a;
                                                if (s = e[u++], 128 != (192 & s)) {
                                                    u--;
                                                    continue
                                                }
                                                if (u >= i) return this.interim[0] = r, this.interim[1] = s, a;
                                                if (n = e[u++], 128 != (192 & n)) {
                                                    u--;
                                                    continue
                                                }
                                                if (c = (15 & r) << 12 | (63 & s) << 6 | 63 & n, c < 2048 || c >= 55296 && c <= 57343 || 65279 === c) continue;
                                                t[a++] = c
                                            } else if (240 == (248 & r)) {
                                                if (u >= i) return this.interim[0] = r, a;
                                                if (s = e[u++], 128 != (192 & s)) {
                                                    u--;
                                                    continue
                                                }
                                                if (u >= i) return this.interim[0] = r, this.interim[1] = s, a;
                                                if (n = e[u++], 128 != (192 & n)) {
                                                    u--;
                                                    continue
                                                }
                                                if (u >= i) return this.interim[0] = r, this.interim[1] = s, this.interim[2] = n, a;
                                                if (o = e[u++], 128 != (192 & o)) {
                                                    u--;
                                                    continue
                                                }
                                                if (c = (7 & r) << 18 | (63 & s) << 12 | (63 & n) << 6 | 63 & o, c < 65536 || c > 1114111) continue;
                                                t[a++] = c
                                            }
                                        }
                                        return a
                                    }
                                }
                            },
                            225: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.UnicodeV6 = void 0;
                                const r = i(1480),
                                    s = [
                                        [768, 879],
                                        [1155, 1158],
                                        [1160, 1161],
                                        [1425, 1469],
                                        [1471, 1471],
                                        [1473, 1474],
                                        [1476, 1477],
                                        [1479, 1479],
                                        [1536, 1539],
                                        [1552, 1557],
                                        [1611, 1630],
                                        [1648, 1648],
                                        [1750, 1764],
                                        [1767, 1768],
                                        [1770, 1773],
                                        [1807, 1807],
                                        [1809, 1809],
                                        [1840, 1866],
                                        [1958, 1968],
                                        [2027, 2035],
                                        [2305, 2306],
                                        [2364, 2364],
                                        [2369, 2376],
                                        [2381, 2381],
                                        [2385, 2388],
                                        [2402, 2403],
                                        [2433, 2433],
                                        [2492, 2492],
                                        [2497, 2500],
                                        [2509, 2509],
                                        [2530, 2531],
                                        [2561, 2562],
                                        [2620, 2620],
                                        [2625, 2626],
                                        [2631, 2632],
                                        [2635, 2637],
                                        [2672, 2673],
                                        [2689, 2690],
                                        [2748, 2748],
                                        [2753, 2757],
                                        [2759, 2760],
                                        [2765, 2765],
                                        [2786, 2787],
                                        [2817, 2817],
                                        [2876, 2876],
                                        [2879, 2879],
                                        [2881, 2883],
                                        [2893, 2893],
                                        [2902, 2902],
                                        [2946, 2946],
                                        [3008, 3008],
                                        [3021, 3021],
                                        [3134, 3136],
                                        [3142, 3144],
                                        [3146, 3149],
                                        [3157, 3158],
                                        [3260, 3260],
                                        [3263, 3263],
                                        [3270, 3270],
                                        [3276, 3277],
                                        [3298, 3299],
                                        [3393, 3395],
                                        [3405, 3405],
                                        [3530, 3530],
                                        [3538, 3540],
                                        [3542, 3542],
                                        [3633, 3633],
                                        [3636, 3642],
                                        [3655, 3662],
                                        [3761, 3761],
                                        [3764, 3769],
                                        [3771, 3772],
                                        [3784, 3789],
                                        [3864, 3865],
                                        [3893, 3893],
                                        [3895, 3895],
                                        [3897, 3897],
                                        [3953, 3966],
                                        [3968, 3972],
                                        [3974, 3975],
                                        [3984, 3991],
                                        [3993, 4028],
                                        [4038, 4038],
                                        [4141, 4144],
                                        [4146, 4146],
                                        [4150, 4151],
                                        [4153, 4153],
                                        [4184, 4185],
                                        [4448, 4607],
                                        [4959, 4959],
                                        [5906, 5908],
                                        [5938, 5940],
                                        [5970, 5971],
                                        [6002, 6003],
                                        [6068, 6069],
                                        [6071, 6077],
                                        [6086, 6086],
                                        [6089, 6099],
                                        [6109, 6109],
                                        [6155, 6157],
                                        [6313, 6313],
                                        [6432, 6434],
                                        [6439, 6440],
                                        [6450, 6450],
                                        [6457, 6459],
                                        [6679, 6680],
                                        [6912, 6915],
                                        [6964, 6964],
                                        [6966, 6970],
                                        [6972, 6972],
                                        [6978, 6978],
                                        [7019, 7027],
                                        [7616, 7626],
                                        [7678, 7679],
                                        [8203, 8207],
                                        [8234, 8238],
                                        [8288, 8291],
                                        [8298, 8303],
                                        [8400, 8431],
                                        [12330, 12335],
                                        [12441, 12442],
                                        [43014, 43014],
                                        [43019, 43019],
                                        [43045, 43046],
                                        [64286, 64286],
                                        [65024, 65039],
                                        [65056, 65059],
                                        [65279, 65279],
                                        [65529, 65531]
                                    ],
                                    n = [
                                        [68097, 68099],
                                        [68101, 68102],
                                        [68108, 68111],
                                        [68152, 68154],
                                        [68159, 68159],
                                        [119143, 119145],
                                        [119155, 119170],
                                        [119173, 119179],
                                        [119210, 119213],
                                        [119362, 119364],
                                        [917505, 917505],
                                        [917536, 917631],
                                        [917760, 917999]
                                    ];
                                let o;
                                t.UnicodeV6 = class {
                                    constructor() {
                                        if (this.version = "6", !o) {
                                            o = new Uint8Array(65536), o.fill(1), o[0] = 0, o.fill(0, 1, 32), o.fill(0, 127, 160), o.fill(2, 4352, 4448), o[9001] = 2, o[9002] = 2, o.fill(2, 11904, 42192), o[12351] = 1, o.fill(2, 44032, 55204), o.fill(2, 63744, 64256), o.fill(2, 65040, 65050), o.fill(2, 65072, 65136), o.fill(2, 65280, 65377), o.fill(2, 65504, 65511);
                                            for (let e = 0; e < s.length; ++e) o.fill(0, s[e][0], s[e][1] + 1)
                                        }
                                    }
                                    wcwidth(e) {
                                        return e < 32 ? 0 : e < 127 ? 1 : e < 65536 ? o[e] : function(e, t) {
                                            let i, r = 0,
                                                s = t.length - 1;
                                            if (e < t[0][0] || e > t[s][1]) return !1;
                                            for (; s >= r;)
                                                if (i = r + s >> 1, e > t[i][1]) r = i + 1;
                                                else {
                                                    if (!(e < t[i][0])) return !0;
                                                    s = i - 1
                                                } return !1
                                        }(e, n) ? 0 : e >= 131072 && e <= 196605 || e >= 196608 && e <= 262141 ? 2 : 1
                                    }
                                    charProperties(e, t) {
                                        let i = this.wcwidth(e),
                                            s = 0 === i && 0 !== t;
                                        if (s) {
                                            const e = r.UnicodeService.extractWidth(t);
                                            0 === e ? s = !1 : e > i && (i = e)
                                        }
                                        return r.UnicodeService.createPropertyValue(0, i, s)
                                    }
                                }
                            },
                            5981: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.WriteBuffer = void 0;
                                const r = i(8460),
                                    s = i(844);
                                class n extends s.Disposable {
                                    constructor(e) {
                                        super(), this._action = e, this._writeBuffer = [], this._callbacks = [], this._pendingData = 0, this._bufferOffset = 0, this._isSyncWriting = !1, this._syncCalls = 0, this._didUserInput = !1, this._onWriteParsed = this.register(new r.EventEmitter), this.onWriteParsed = this._onWriteParsed.event
                                    }
                                    handleUserInput() {
                                        this._didUserInput = !0
                                    }
                                    writeSync(e, t) {
                                        if (void 0 !== t && this._syncCalls > t) return void(this._syncCalls = 0);
                                        if (this._pendingData += e.length, this._writeBuffer.push(e), this._callbacks.push(void 0), this._syncCalls++, this._isSyncWriting) return;
                                        let i;
                                        for (this._isSyncWriting = !0; i = this._writeBuffer.shift();) {
                                            this._action(i);
                                            const e = this._callbacks.shift();
                                            e && e()
                                        }
                                        this._pendingData = 0, this._bufferOffset = 2147483647, this._isSyncWriting = !1, this._syncCalls = 0
                                    }
                                    write(e, t) {
                                        if (this._pendingData > 5e7) throw new Error("write data discarded, use flow control to avoid losing data");
                                        if (!this._writeBuffer.length) {
                                            if (this._bufferOffset = 0, this._didUserInput) return this._didUserInput = !1, this._pendingData += e.length, this._writeBuffer.push(e), this._callbacks.push(t), void this._innerWrite();
                                            setTimeout((() => this._innerWrite()))
                                        }
                                        this._pendingData += e.length, this._writeBuffer.push(e), this._callbacks.push(t)
                                    }
                                    _innerWrite(e = 0, t = !0) {
                                        const i = e || Date.now();
                                        for (; this._writeBuffer.length > this._bufferOffset;) {
                                            const e = this._writeBuffer[this._bufferOffset],
                                                r = this._action(e, t);
                                            if (r) {
                                                const e = e => Date.now() - i >= 12 ? setTimeout((() => this._innerWrite(0, e))) : this._innerWrite(i, e);
                                                return void r.catch((e => (queueMicrotask((() => {
                                                    throw e
                                                })), Promise.resolve(!1)))).then(e)
                                            }
                                            const s = this._callbacks[this._bufferOffset];
                                            if (s && s(), this._bufferOffset++, this._pendingData -= e.length, Date.now() - i >= 12) break
                                        }
                                        this._writeBuffer.length > this._bufferOffset ? (this._bufferOffset > 50 && (this._writeBuffer = this._writeBuffer.slice(this._bufferOffset), this._callbacks = this._callbacks.slice(this._bufferOffset), this._bufferOffset = 0), setTimeout((() => this._innerWrite()))) : (this._writeBuffer.length = 0, this._callbacks.length = 0, this._pendingData = 0, this._bufferOffset = 0), this._onWriteParsed.fire()
                                    }
                                }
                                t.WriteBuffer = n
                            },
                            5941: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.toRgbString = t.parseColor = void 0;
                                const i = /^([\da-f])\/([\da-f])\/([\da-f])$|^([\da-f]{2})\/([\da-f]{2})\/([\da-f]{2})$|^([\da-f]{3})\/([\da-f]{3})\/([\da-f]{3})$|^([\da-f]{4})\/([\da-f]{4})\/([\da-f]{4})$/,
                                    r = /^[\da-f]+$/;

                                function s(e, t) {
                                    const i = e.toString(16),
                                        r = i.length < 2 ? "0" + i : i;
                                    switch (t) {
                                        case 4:
                                            return i[0];
                                        case 8:
                                            return r;
                                        case 12:
                                            return (r + r).slice(0, 3);
                                        default:
                                            return r + r
                                    }
                                }
                                t.parseColor = function(e) {
                                    if (!e) return;
                                    let t = e.toLowerCase();
                                    if (0 === t.indexOf("rgb:")) {
                                        t = t.slice(4);
                                        const e = i.exec(t);
                                        if (e) {
                                            const t = e[1] ? 15 : e[4] ? 255 : e[7] ? 4095 : 65535;
                                            return [Math.round(parseInt(e[1] || e[4] || e[7] || e[10], 16) / t * 255), Math.round(parseInt(e[2] || e[5] || e[8] || e[11], 16) / t * 255), Math.round(parseInt(e[3] || e[6] || e[9] || e[12], 16) / t * 255)]
                                        }
                                    } else if (0 === t.indexOf("#") && (t = t.slice(1), r.exec(t) && [3, 6, 9, 12].includes(t.length))) {
                                        const e = t.length / 3,
                                            i = [0, 0, 0];
                                        for (let r = 0; r < 3; ++r) {
                                            const s = parseInt(t.slice(e * r, e * r + e), 16);
                                            i[r] = 1 === e ? s << 4 : 2 === e ? s : 3 === e ? s >> 4 : s >> 8
                                        }
                                        return i
                                    }
                                }, t.toRgbString = function(e, t = 16) {
                                    const [i, r, n] = e;
                                    return `rgb:${s(i,t)}/${s(r,t)}/${s(n,t)}`
                                }
                            },
                            5770: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.PAYLOAD_LIMIT = void 0, t.PAYLOAD_LIMIT = 1e7
                            },
                            6351: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.DcsHandler = t.DcsParser = void 0;
                                const r = i(482),
                                    s = i(8742),
                                    n = i(5770),
                                    o = [];
                                t.DcsParser = class {
                                    constructor() {
                                        this._handlers = Object.create(null), this._active = o, this._ident = 0, this._handlerFb = () => {}, this._stack = {
                                            paused: !1,
                                            loopPosition: 0,
                                            fallThrough: !1
                                        }
                                    }
                                    dispose() {
                                        this._handlers = Object.create(null), this._handlerFb = () => {}, this._active = o
                                    }
                                    registerHandler(e, t) {
                                        void 0 === this._handlers[e] && (this._handlers[e] = []);
                                        const i = this._handlers[e];
                                        return i.push(t), {
                                            dispose: () => {
                                                const e = i.indexOf(t); - 1 !== e && i.splice(e, 1)
                                            }
                                        }
                                    }
                                    clearHandler(e) {
                                        this._handlers[e] && delete this._handlers[e]
                                    }
                                    setHandlerFallback(e) {
                                        this._handlerFb = e
                                    }
                                    reset() {
                                        if (this._active.length)
                                            for (let e = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; e >= 0; --e) this._active[e].unhook(!1);
                                        this._stack.paused = !1, this._active = o, this._ident = 0
                                    }
                                    hook(e, t) {
                                        if (this.reset(), this._ident = e, this._active = this._handlers[e] || o, this._active.length)
                                            for (let e = this._active.length - 1; e >= 0; e--) this._active[e].hook(t);
                                        else this._handlerFb(this._ident, "HOOK", t)
                                    }
                                    put(e, t, i) {
                                        if (this._active.length)
                                            for (let r = this._active.length - 1; r >= 0; r--) this._active[r].put(e, t, i);
                                        else this._handlerFb(this._ident, "PUT", (0, r.utf32ToString)(e, t, i))
                                    }
                                    unhook(e, t = !0) {
                                        if (this._active.length) {
                                            let i = !1,
                                                r = this._active.length - 1,
                                                s = !1;
                                            if (this._stack.paused && (r = this._stack.loopPosition - 1, i = t, s = this._stack.fallThrough, this._stack.paused = !1), !s && !1 === i) {
                                                for (; r >= 0 && (i = this._active[r].unhook(e), !0 !== i); r--)
                                                    if (i instanceof Promise) return this._stack.paused = !0, this._stack.loopPosition = r, this._stack.fallThrough = !1, i;
                                                r--
                                            }
                                            for (; r >= 0; r--)
                                                if (i = this._active[r].unhook(!1), i instanceof Promise) return this._stack.paused = !0, this._stack.loopPosition = r, this._stack.fallThrough = !0, i
                                        } else this._handlerFb(this._ident, "UNHOOK", e);
                                        this._active = o, this._ident = 0
                                    }
                                };
                                const a = new s.Params;
                                a.addParam(0), t.DcsHandler = class {
                                    constructor(e) {
                                        this._handler = e, this._data = "", this._params = a, this._hitLimit = !1
                                    }
                                    hook(e) {
                                        this._params = e.length > 1 || e.params[0] ? e.clone() : a, this._data = "", this._hitLimit = !1
                                    }
                                    put(e, t, i) {
                                        this._hitLimit || (this._data += (0, r.utf32ToString)(e, t, i), this._data.length > n.PAYLOAD_LIMIT && (this._data = "", this._hitLimit = !0))
                                    }
                                    unhook(e) {
                                        let t = !1;
                                        if (this._hitLimit) t = !1;
                                        else if (e && (t = this._handler(this._data, this._params), t instanceof Promise)) return t.then((e => (this._params = a, this._data = "", this._hitLimit = !1, e)));
                                        return this._params = a, this._data = "", this._hitLimit = !1, t
                                    }
                                }
                            },
                            2015: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.EscapeSequenceParser = t.VT500_TRANSITION_TABLE = t.TransitionTable = void 0;
                                const r = i(844),
                                    s = i(8742),
                                    n = i(6242),
                                    o = i(6351);
                                class a {
                                    constructor(e) {
                                        this.table = new Uint8Array(e)
                                    }
                                    setDefault(e, t) {
                                        this.table.fill(e << 4 | t)
                                    }
                                    add(e, t, i, r) {
                                        this.table[t << 8 | e] = i << 4 | r
                                    }
                                    addMany(e, t, i, r) {
                                        for (let s = 0; s < e.length; s++) this.table[t << 8 | e[s]] = i << 4 | r
                                    }
                                }
                                t.TransitionTable = a;
                                const c = 160;
                                t.VT500_TRANSITION_TABLE = function() {
                                    const e = new a(4095),
                                        t = Array.apply(null, Array(256)).map(((e, t) => t)),
                                        i = (e, i) => t.slice(e, i),
                                        r = i(32, 127),
                                        s = i(0, 24);
                                    s.push(25), s.push.apply(s, i(28, 32));
                                    const n = i(0, 14);
                                    let o;
                                    for (o in e.setDefault(1, 0), e.addMany(r, 0, 2, 0), n) e.addMany([24, 26, 153, 154], o, 3, 0), e.addMany(i(128, 144), o, 3, 0), e.addMany(i(144, 152), o, 3, 0), e.add(156, o, 0, 0), e.add(27, o, 11, 1), e.add(157, o, 4, 8), e.addMany([152, 158, 159], o, 0, 7), e.add(155, o, 11, 3), e.add(144, o, 11, 9);
                                    return e.addMany(s, 0, 3, 0), e.addMany(s, 1, 3, 1), e.add(127, 1, 0, 1), e.addMany(s, 8, 0, 8), e.addMany(s, 3, 3, 3), e.add(127, 3, 0, 3), e.addMany(s, 4, 3, 4), e.add(127, 4, 0, 4), e.addMany(s, 6, 3, 6), e.addMany(s, 5, 3, 5), e.add(127, 5, 0, 5), e.addMany(s, 2, 3, 2), e.add(127, 2, 0, 2), e.add(93, 1, 4, 8), e.addMany(r, 8, 5, 8), e.add(127, 8, 5, 8), e.addMany([156, 27, 24, 26, 7], 8, 6, 0), e.addMany(i(28, 32), 8, 0, 8), e.addMany([88, 94, 95], 1, 0, 7), e.addMany(r, 7, 0, 7), e.addMany(s, 7, 0, 7), e.add(156, 7, 0, 0), e.add(127, 7, 0, 7), e.add(91, 1, 11, 3), e.addMany(i(64, 127), 3, 7, 0), e.addMany(i(48, 60), 3, 8, 4), e.addMany([60, 61, 62, 63], 3, 9, 4), e.addMany(i(48, 60), 4, 8, 4), e.addMany(i(64, 127), 4, 7, 0), e.addMany([60, 61, 62, 63], 4, 0, 6), e.addMany(i(32, 64), 6, 0, 6), e.add(127, 6, 0, 6), e.addMany(i(64, 127), 6, 0, 0), e.addMany(i(32, 48), 3, 9, 5), e.addMany(i(32, 48), 5, 9, 5), e.addMany(i(48, 64), 5, 0, 6), e.addMany(i(64, 127), 5, 7, 0), e.addMany(i(32, 48), 4, 9, 5), e.addMany(i(32, 48), 1, 9, 2), e.addMany(i(32, 48), 2, 9, 2), e.addMany(i(48, 127), 2, 10, 0), e.addMany(i(48, 80), 1, 10, 0), e.addMany(i(81, 88), 1, 10, 0), e.addMany([89, 90, 92], 1, 10, 0), e.addMany(i(96, 127), 1, 10, 0), e.add(80, 1, 11, 9), e.addMany(s, 9, 0, 9), e.add(127, 9, 0, 9), e.addMany(i(28, 32), 9, 0, 9), e.addMany(i(32, 48), 9, 9, 12), e.addMany(i(48, 60), 9, 8, 10), e.addMany([60, 61, 62, 63], 9, 9, 10), e.addMany(s, 11, 0, 11), e.addMany(i(32, 128), 11, 0, 11), e.addMany(i(28, 32), 11, 0, 11), e.addMany(s, 10, 0, 10), e.add(127, 10, 0, 10), e.addMany(i(28, 32), 10, 0, 10), e.addMany(i(48, 60), 10, 8, 10), e.addMany([60, 61, 62, 63], 10, 0, 11), e.addMany(i(32, 48), 10, 9, 12), e.addMany(s, 12, 0, 12), e.add(127, 12, 0, 12), e.addMany(i(28, 32), 12, 0, 12), e.addMany(i(32, 48), 12, 9, 12), e.addMany(i(48, 64), 12, 0, 11), e.addMany(i(64, 127), 12, 12, 13), e.addMany(i(64, 127), 10, 12, 13), e.addMany(i(64, 127), 9, 12, 13), e.addMany(s, 13, 13, 13), e.addMany(r, 13, 13, 13), e.add(127, 13, 0, 13), e.addMany([27, 156, 24, 26], 13, 14, 0), e.add(c, 0, 2, 0), e.add(c, 8, 5, 8), e.add(c, 6, 0, 6), e.add(c, 11, 0, 11), e.add(c, 13, 13, 13), e
                                }();
                                class l extends r.Disposable {
                                    constructor(e = t.VT500_TRANSITION_TABLE) {
                                        super(), this._transitions = e, this._parseStack = {
                                            state: 0,
                                            handlers: [],
                                            handlerPos: 0,
                                            transition: 0,
                                            chunkPos: 0
                                        }, this.initialState = 0, this.currentState = this.initialState, this._params = new s.Params, this._params.addParam(0), this._collect = 0, this.precedingJoinState = 0, this._printHandlerFb = (e, t, i) => {}, this._executeHandlerFb = e => {}, this._csiHandlerFb = (e, t) => {}, this._escHandlerFb = e => {}, this._errorHandlerFb = e => e, this._printHandler = this._printHandlerFb, this._executeHandlers = Object.create(null), this._csiHandlers = Object.create(null), this._escHandlers = Object.create(null), this.register((0, r.toDisposable)((() => {
                                            this._csiHandlers = Object.create(null), this._executeHandlers = Object.create(null), this._escHandlers = Object.create(null)
                                        }))), this._oscParser = this.register(new n.OscParser), this._dcsParser = this.register(new o.DcsParser), this._errorHandler = this._errorHandlerFb, this.registerEscHandler({
                                            final: "\\"
                                        }, (() => !0))
                                    }
                                    _identifier(e, t = [64, 126]) {
                                        let i = 0;
                                        if (e.prefix) {
                                            if (e.prefix.length > 1) throw new Error("only one byte as prefix supported");
                                            if (i = e.prefix.charCodeAt(0), i && 60 > i || i > 63) throw new Error("prefix must be in range 0x3c .. 0x3f")
                                        }
                                        if (e.intermediates) {
                                            if (e.intermediates.length > 2) throw new Error("only two bytes as intermediates are supported");
                                            for (let t = 0; t < e.intermediates.length; ++t) {
                                                const r = e.intermediates.charCodeAt(t);
                                                if (32 > r || r > 47) throw new Error("intermediate must be in range 0x20 .. 0x2f");
                                                i <<= 8, i |= r
                                            }
                                        }
                                        if (1 !== e.final.length) throw new Error("final must be a single byte");
                                        const r = e.final.charCodeAt(0);
                                        if (t[0] > r || r > t[1]) throw new Error(`final must be in range ${t[0]} .. ${t[1]}`);
                                        return i <<= 8, i |= r, i
                                    }
                                    identToString(e) {
                                        const t = [];
                                        for (; e;) t.push(String.fromCharCode(255 & e)), e >>= 8;
                                        return t.reverse().join("")
                                    }
                                    setPrintHandler(e) {
                                        this._printHandler = e
                                    }
                                    clearPrintHandler() {
                                        this._printHandler = this._printHandlerFb
                                    }
                                    registerEscHandler(e, t) {
                                        const i = this._identifier(e, [48, 126]);
                                        void 0 === this._escHandlers[i] && (this._escHandlers[i] = []);
                                        const r = this._escHandlers[i];
                                        return r.push(t), {
                                            dispose: () => {
                                                const e = r.indexOf(t); - 1 !== e && r.splice(e, 1)
                                            }
                                        }
                                    }
                                    clearEscHandler(e) {
                                        this._escHandlers[this._identifier(e, [48, 126])] && delete this._escHandlers[this._identifier(e, [48, 126])]
                                    }
                                    setEscHandlerFallback(e) {
                                        this._escHandlerFb = e
                                    }
                                    setExecuteHandler(e, t) {
                                        this._executeHandlers[e.charCodeAt(0)] = t
                                    }
                                    clearExecuteHandler(e) {
                                        this._executeHandlers[e.charCodeAt(0)] && delete this._executeHandlers[e.charCodeAt(0)]
                                    }
                                    setExecuteHandlerFallback(e) {
                                        this._executeHandlerFb = e
                                    }
                                    registerCsiHandler(e, t) {
                                        const i = this._identifier(e);
                                        void 0 === this._csiHandlers[i] && (this._csiHandlers[i] = []);
                                        const r = this._csiHandlers[i];
                                        return r.push(t), {
                                            dispose: () => {
                                                const e = r.indexOf(t); - 1 !== e && r.splice(e, 1)
                                            }
                                        }
                                    }
                                    clearCsiHandler(e) {
                                        this._csiHandlers[this._identifier(e)] && delete this._csiHandlers[this._identifier(e)]
                                    }
                                    setCsiHandlerFallback(e) {
                                        this._csiHandlerFb = e
                                    }
                                    registerDcsHandler(e, t) {
                                        return this._dcsParser.registerHandler(this._identifier(e), t)
                                    }
                                    clearDcsHandler(e) {
                                        this._dcsParser.clearHandler(this._identifier(e))
                                    }
                                    setDcsHandlerFallback(e) {
                                        this._dcsParser.setHandlerFallback(e)
                                    }
                                    registerOscHandler(e, t) {
                                        return this._oscParser.registerHandler(e, t)
                                    }
                                    clearOscHandler(e) {
                                        this._oscParser.clearHandler(e)
                                    }
                                    setOscHandlerFallback(e) {
                                        this._oscParser.setHandlerFallback(e)
                                    }
                                    setErrorHandler(e) {
                                        this._errorHandler = e
                                    }
                                    clearErrorHandler() {
                                        this._errorHandler = this._errorHandlerFb
                                    }
                                    reset() {
                                        this.currentState = this.initialState, this._oscParser.reset(), this._dcsParser.reset(), this._params.reset(), this._params.addParam(0), this._collect = 0, this.precedingJoinState = 0, 0 !== this._parseStack.state && (this._parseStack.state = 2, this._parseStack.handlers = [])
                                    }
                                    _preserveStack(e, t, i, r, s) {
                                        this._parseStack.state = e, this._parseStack.handlers = t, this._parseStack.handlerPos = i, this._parseStack.transition = r, this._parseStack.chunkPos = s
                                    }
                                    parse(e, t, i) {
                                        let r, s = 0,
                                            n = 0,
                                            o = 0;
                                        if (this._parseStack.state)
                                            if (2 === this._parseStack.state) this._parseStack.state = 0, o = this._parseStack.chunkPos + 1;
                                            else {
                                                if (void 0 === i || 1 === this._parseStack.state) throw this._parseStack.state = 1, new Error("improper continuation due to previous async handler, giving up parsing");
                                                const t = this._parseStack.handlers;
                                                let n = this._parseStack.handlerPos - 1;
                                                switch (this._parseStack.state) {
                                                    case 3:
                                                        if (!1 === i && n > -1)
                                                            for (; n >= 0 && (r = t[n](this._params), !0 !== r); n--)
                                                                if (r instanceof Promise) return this._parseStack.handlerPos = n, r;
                                                        this._parseStack.handlers = [];
                                                        break;
                                                    case 4:
                                                        if (!1 === i && n > -1)
                                                            for (; n >= 0 && (r = t[n](), !0 !== r); n--)
                                                                if (r instanceof Promise) return this._parseStack.handlerPos = n, r;
                                                        this._parseStack.handlers = [];
                                                        break;
                                                    case 6:
                                                        if (s = e[this._parseStack.chunkPos], r = this._dcsParser.unhook(24 !== s && 26 !== s, i), r) return r;
                                                        27 === s && (this._parseStack.transition |= 1), this._params.reset(), this._params.addParam(0), this._collect = 0;
                                                        break;
                                                    case 5:
                                                        if (s = e[this._parseStack.chunkPos], r = this._oscParser.end(24 !== s && 26 !== s, i), r) return r;
                                                        27 === s && (this._parseStack.transition |= 1), this._params.reset(), this._params.addParam(0), this._collect = 0
                                                }
                                                this._parseStack.state = 0, o = this._parseStack.chunkPos + 1, this.precedingJoinState = 0, this.currentState = 15 & this._parseStack.transition
                                            } for (let i = o; i < t; ++i) {
                                            switch (s = e[i], n = this._transitions.table[this.currentState << 8 | (s < 160 ? s : c)], n >> 4) {
                                                case 2:
                                                    for (let r = i + 1;; ++r) {
                                                        if (r >= t || (s = e[r]) < 32 || s > 126 && s < c) {
                                                            this._printHandler(e, i, r), i = r - 1;
                                                            break
                                                        }
                                                        if (++r >= t || (s = e[r]) < 32 || s > 126 && s < c) {
                                                            this._printHandler(e, i, r), i = r - 1;
                                                            break
                                                        }
                                                        if (++r >= t || (s = e[r]) < 32 || s > 126 && s < c) {
                                                            this._printHandler(e, i, r), i = r - 1;
                                                            break
                                                        }
                                                        if (++r >= t || (s = e[r]) < 32 || s > 126 && s < c) {
                                                            this._printHandler(e, i, r), i = r - 1;
                                                            break
                                                        }
                                                    }
                                                    break;
                                                case 3:
                                                    this._executeHandlers[s] ? this._executeHandlers[s]() : this._executeHandlerFb(s), this.precedingJoinState = 0;
                                                    break;
                                                case 0:
                                                    break;
                                                case 1:
                                                    if (this._errorHandler({
                                                            position: i,
                                                            code: s,
                                                            currentState: this.currentState,
                                                            collect: this._collect,
                                                            params: this._params,
                                                            abort: !1
                                                        }).abort) return;
                                                    break;
                                                case 7:
                                                    const o = this._csiHandlers[this._collect << 8 | s];
                                                    let a = o ? o.length - 1 : -1;
                                                    for (; a >= 0 && (r = o[a](this._params), !0 !== r); a--)
                                                        if (r instanceof Promise) return this._preserveStack(3, o, a, n, i), r;
                                                    a < 0 && this._csiHandlerFb(this._collect << 8 | s, this._params), this.precedingJoinState = 0;
                                                    break;
                                                case 8:
                                                    do {
                                                        switch (s) {
                                                            case 59:
                                                                this._params.addParam(0);
                                                                break;
                                                            case 58:
                                                                this._params.addSubParam(-1);
                                                                break;
                                                            default:
                                                                this._params.addDigit(s - 48)
                                                        }
                                                    } while (++i < t && (s = e[i]) > 47 && s < 60);
                                                    i--;
                                                    break;
                                                case 9:
                                                    this._collect <<= 8, this._collect |= s;
                                                    break;
                                                case 10:
                                                    const l = this._escHandlers[this._collect << 8 | s];
                                                    let h = l ? l.length - 1 : -1;
                                                    for (; h >= 0 && (r = l[h](), !0 !== r); h--)
                                                        if (r instanceof Promise) return this._preserveStack(4, l, h, n, i), r;
                                                    h < 0 && this._escHandlerFb(this._collect << 8 | s), this.precedingJoinState = 0;
                                                    break;
                                                case 11:
                                                    this._params.reset(), this._params.addParam(0), this._collect = 0;
                                                    break;
                                                case 12:
                                                    this._dcsParser.hook(this._collect << 8 | s, this._params);
                                                    break;
                                                case 13:
                                                    for (let r = i + 1;; ++r)
                                                        if (r >= t || 24 === (s = e[r]) || 26 === s || 27 === s || s > 127 && s < c) {
                                                            this._dcsParser.put(e, i, r), i = r - 1;
                                                            break
                                                        } break;
                                                case 14:
                                                    if (r = this._dcsParser.unhook(24 !== s && 26 !== s), r) return this._preserveStack(6, [], 0, n, i), r;
                                                    27 === s && (n |= 1), this._params.reset(), this._params.addParam(0), this._collect = 0, this.precedingJoinState = 0;
                                                    break;
                                                case 4:
                                                    this._oscParser.start();
                                                    break;
                                                case 5:
                                                    for (let r = i + 1;; r++)
                                                        if (r >= t || (s = e[r]) < 32 || s > 127 && s < c) {
                                                            this._oscParser.put(e, i, r), i = r - 1;
                                                            break
                                                        } break;
                                                case 6:
                                                    if (r = this._oscParser.end(24 !== s && 26 !== s), r) return this._preserveStack(5, [], 0, n, i), r;
                                                    27 === s && (n |= 1), this._params.reset(), this._params.addParam(0), this._collect = 0, this.precedingJoinState = 0
                                            }
                                            this.currentState = 15 & n
                                        }
                                    }
                                }
                                t.EscapeSequenceParser = l
                            },
                            6242: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.OscHandler = t.OscParser = void 0;
                                const r = i(5770),
                                    s = i(482),
                                    n = [];
                                t.OscParser = class {
                                    constructor() {
                                        this._state = 0, this._active = n, this._id = -1, this._handlers = Object.create(null), this._handlerFb = () => {}, this._stack = {
                                            paused: !1,
                                            loopPosition: 0,
                                            fallThrough: !1
                                        }
                                    }
                                    registerHandler(e, t) {
                                        void 0 === this._handlers[e] && (this._handlers[e] = []);
                                        const i = this._handlers[e];
                                        return i.push(t), {
                                            dispose: () => {
                                                const e = i.indexOf(t); - 1 !== e && i.splice(e, 1)
                                            }
                                        }
                                    }
                                    clearHandler(e) {
                                        this._handlers[e] && delete this._handlers[e]
                                    }
                                    setHandlerFallback(e) {
                                        this._handlerFb = e
                                    }
                                    dispose() {
                                        this._handlers = Object.create(null), this._handlerFb = () => {}, this._active = n
                                    }
                                    reset() {
                                        if (2 === this._state)
                                            for (let e = this._stack.paused ? this._stack.loopPosition - 1 : this._active.length - 1; e >= 0; --e) this._active[e].end(!1);
                                        this._stack.paused = !1, this._active = n, this._id = -1, this._state = 0
                                    }
                                    _start() {
                                        if (this._active = this._handlers[this._id] || n, this._active.length)
                                            for (let e = this._active.length - 1; e >= 0; e--) this._active[e].start();
                                        else this._handlerFb(this._id, "START")
                                    }
                                    _put(e, t, i) {
                                        if (this._active.length)
                                            for (let r = this._active.length - 1; r >= 0; r--) this._active[r].put(e, t, i);
                                        else this._handlerFb(this._id, "PUT", (0, s.utf32ToString)(e, t, i))
                                    }
                                    start() {
                                        this.reset(), this._state = 1
                                    }
                                    put(e, t, i) {
                                        if (3 !== this._state) {
                                            if (1 === this._state)
                                                for (; t < i;) {
                                                    const i = e[t++];
                                                    if (59 === i) {
                                                        this._state = 2, this._start();
                                                        break
                                                    }
                                                    if (i < 48 || 57 < i) return void(this._state = 3); - 1 === this._id && (this._id = 0), this._id = 10 * this._id + i - 48
                                                }
                                            2 === this._state && i - t > 0 && this._put(e, t, i)
                                        }
                                    }
                                    end(e, t = !0) {
                                        if (0 !== this._state) {
                                            if (3 !== this._state)
                                                if (1 === this._state && this._start(), this._active.length) {
                                                    let i = !1,
                                                        r = this._active.length - 1,
                                                        s = !1;
                                                    if (this._stack.paused && (r = this._stack.loopPosition - 1, i = t, s = this._stack.fallThrough, this._stack.paused = !1), !s && !1 === i) {
                                                        for (; r >= 0 && (i = this._active[r].end(e), !0 !== i); r--)
                                                            if (i instanceof Promise) return this._stack.paused = !0, this._stack.loopPosition = r, this._stack.fallThrough = !1, i;
                                                        r--
                                                    }
                                                    for (; r >= 0; r--)
                                                        if (i = this._active[r].end(!1), i instanceof Promise) return this._stack.paused = !0, this._stack.loopPosition = r, this._stack.fallThrough = !0, i
                                                } else this._handlerFb(this._id, "END", e);
                                            this._active = n, this._id = -1, this._state = 0
                                        }
                                    }
                                }, t.OscHandler = class {
                                    constructor(e) {
                                        this._handler = e, this._data = "", this._hitLimit = !1
                                    }
                                    start() {
                                        this._data = "", this._hitLimit = !1
                                    }
                                    put(e, t, i) {
                                        this._hitLimit || (this._data += (0, s.utf32ToString)(e, t, i), this._data.length > r.PAYLOAD_LIMIT && (this._data = "", this._hitLimit = !0))
                                    }
                                    end(e) {
                                        let t = !1;
                                        if (this._hitLimit) t = !1;
                                        else if (e && (t = this._handler(this._data), t instanceof Promise)) return t.then((e => (this._data = "", this._hitLimit = !1, e)));
                                        return this._data = "", this._hitLimit = !1, t
                                    }
                                }
                            },
                            8742: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.Params = void 0;
                                const i = 2147483647;
                                class r {
                                    static fromArray(e) {
                                        const t = new r;
                                        if (!e.length) return t;
                                        for (let i = Array.isArray(e[0]) ? 1 : 0; i < e.length; ++i) {
                                            const r = e[i];
                                            if (Array.isArray(r))
                                                for (let e = 0; e < r.length; ++e) t.addSubParam(r[e]);
                                            else t.addParam(r)
                                        }
                                        return t
                                    }
                                    constructor(e = 32, t = 32) {
                                        if (this.maxLength = e, this.maxSubParamsLength = t, t > 256) throw new Error("maxSubParamsLength must not be greater than 256");
                                        this.params = new Int32Array(e), this.length = 0, this._subParams = new Int32Array(t), this._subParamsLength = 0, this._subParamsIdx = new Uint16Array(e), this._rejectDigits = !1, this._rejectSubDigits = !1, this._digitIsSub = !1
                                    }
                                    clone() {
                                        const e = new r(this.maxLength, this.maxSubParamsLength);
                                        return e.params.set(this.params), e.length = this.length, e._subParams.set(this._subParams), e._subParamsLength = this._subParamsLength, e._subParamsIdx.set(this._subParamsIdx), e._rejectDigits = this._rejectDigits, e._rejectSubDigits = this._rejectSubDigits, e._digitIsSub = this._digitIsSub, e
                                    }
                                    toArray() {
                                        const e = [];
                                        for (let t = 0; t < this.length; ++t) {
                                            e.push(this.params[t]);
                                            const i = this._subParamsIdx[t] >> 8,
                                                r = 255 & this._subParamsIdx[t];
                                            r - i > 0 && e.push(Array.prototype.slice.call(this._subParams, i, r))
                                        }
                                        return e
                                    }
                                    reset() {
                                        this.length = 0, this._subParamsLength = 0, this._rejectDigits = !1, this._rejectSubDigits = !1, this._digitIsSub = !1
                                    }
                                    addParam(e) {
                                        if (this._digitIsSub = !1, this.length >= this.maxLength) this._rejectDigits = !0;
                                        else {
                                            if (e < -1) throw new Error("values lesser than -1 are not allowed");
                                            this._subParamsIdx[this.length] = this._subParamsLength << 8 | this._subParamsLength, this.params[this.length++] = e > i ? i : e
                                        }
                                    }
                                    addSubParam(e) {
                                        if (this._digitIsSub = !0, this.length)
                                            if (this._rejectDigits || this._subParamsLength >= this.maxSubParamsLength) this._rejectSubDigits = !0;
                                            else {
                                                if (e < -1) throw new Error("values lesser than -1 are not allowed");
                                                this._subParams[this._subParamsLength++] = e > i ? i : e, this._subParamsIdx[this.length - 1]++
                                            }
                                    }
                                    hasSubParams(e) {
                                        return (255 & this._subParamsIdx[e]) - (this._subParamsIdx[e] >> 8) > 0
                                    }
                                    getSubParams(e) {
                                        const t = this._subParamsIdx[e] >> 8,
                                            i = 255 & this._subParamsIdx[e];
                                        return i - t > 0 ? this._subParams.subarray(t, i) : null
                                    }
                                    getSubParamsAll() {
                                        const e = {};
                                        for (let t = 0; t < this.length; ++t) {
                                            const i = this._subParamsIdx[t] >> 8,
                                                r = 255 & this._subParamsIdx[t];
                                            r - i > 0 && (e[t] = this._subParams.slice(i, r))
                                        }
                                        return e
                                    }
                                    addDigit(e) {
                                        let t;
                                        if (this._rejectDigits || !(t = this._digitIsSub ? this._subParamsLength : this.length) || this._digitIsSub && this._rejectSubDigits) return;
                                        const r = this._digitIsSub ? this._subParams : this.params,
                                            s = r[t - 1];
                                        r[t - 1] = ~s ? Math.min(10 * s + e, i) : e
                                    }
                                }
                                t.Params = r
                            },
                            5741: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.AddonManager = void 0, t.AddonManager = class {
                                    constructor() {
                                        this._addons = []
                                    }
                                    dispose() {
                                        for (let e = this._addons.length - 1; e >= 0; e--) this._addons[e].instance.dispose()
                                    }
                                    loadAddon(e, t) {
                                        const i = {
                                            instance: t,
                                            dispose: t.dispose,
                                            isDisposed: !1
                                        };
                                        this._addons.push(i), t.dispose = () => this._wrappedAddonDispose(i), t.activate(e)
                                    }
                                    _wrappedAddonDispose(e) {
                                        if (e.isDisposed) return;
                                        let t = -1;
                                        for (let i = 0; i < this._addons.length; i++)
                                            if (this._addons[i] === e) {
                                                t = i;
                                                break
                                            } if (-1 === t) throw new Error("Could not dispose an addon that has not been loaded");
                                        e.isDisposed = !0, e.dispose.apply(e.instance), this._addons.splice(t, 1)
                                    }
                                }
                            },
                            8771: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.BufferApiView = void 0;
                                const r = i(3785),
                                    s = i(511);
                                t.BufferApiView = class {
                                    constructor(e, t) {
                                        this._buffer = e, this.type = t
                                    }
                                    init(e) {
                                        return this._buffer = e, this
                                    }
                                    get cursorY() {
                                        return this._buffer.y
                                    }
                                    get cursorX() {
                                        return this._buffer.x
                                    }
                                    get viewportY() {
                                        return this._buffer.ydisp
                                    }
                                    get baseY() {
                                        return this._buffer.ybase
                                    }
                                    get length() {
                                        return this._buffer.lines.length
                                    }
                                    getLine(e) {
                                        const t = this._buffer.lines.get(e);
                                        if (t) return new r.BufferLineApiView(t)
                                    }
                                    getNullCell() {
                                        return new s.CellData
                                    }
                                }
                            },
                            3785: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.BufferLineApiView = void 0;
                                const r = i(511);
                                t.BufferLineApiView = class {
                                    constructor(e) {
                                        this._line = e
                                    }
                                    get isWrapped() {
                                        return this._line.isWrapped
                                    }
                                    get length() {
                                        return this._line.length
                                    }
                                    getCell(e, t) {
                                        if (!(e < 0 || e >= this._line.length)) return t ? (this._line.loadCell(e, t), t) : this._line.loadCell(e, new r.CellData)
                                    }
                                    translateToString(e, t, i) {
                                        return this._line.translateToString(e, t, i)
                                    }
                                }
                            },
                            8285: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.BufferNamespaceApi = void 0;
                                const r = i(8771),
                                    s = i(8460),
                                    n = i(844);
                                class o extends n.Disposable {
                                    constructor(e) {
                                        super(), this._core = e, this._onBufferChange = this.register(new s.EventEmitter), this.onBufferChange = this._onBufferChange.event, this._normal = new r.BufferApiView(this._core.buffers.normal, "normal"), this._alternate = new r.BufferApiView(this._core.buffers.alt, "alternate"), this._core.buffers.onBufferActivate((() => this._onBufferChange.fire(this.active)))
                                    }
                                    get active() {
                                        if (this._core.buffers.active === this._core.buffers.normal) return this.normal;
                                        if (this._core.buffers.active === this._core.buffers.alt) return this.alternate;
                                        throw new Error("Active buffer is neither normal nor alternate")
                                    }
                                    get normal() {
                                        return this._normal.init(this._core.buffers.normal)
                                    }
                                    get alternate() {
                                        return this._alternate.init(this._core.buffers.alt)
                                    }
                                }
                                t.BufferNamespaceApi = o
                            },
                            7975: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.ParserApi = void 0, t.ParserApi = class {
                                    constructor(e) {
                                        this._core = e
                                    }
                                    registerCsiHandler(e, t) {
                                        return this._core.registerCsiHandler(e, (e => t(e.toArray())))
                                    }
                                    addCsiHandler(e, t) {
                                        return this.registerCsiHandler(e, t)
                                    }
                                    registerDcsHandler(e, t) {
                                        return this._core.registerDcsHandler(e, ((e, i) => t(e, i.toArray())))
                                    }
                                    addDcsHandler(e, t) {
                                        return this.registerDcsHandler(e, t)
                                    }
                                    registerEscHandler(e, t) {
                                        return this._core.registerEscHandler(e, t)
                                    }
                                    addEscHandler(e, t) {
                                        return this.registerEscHandler(e, t)
                                    }
                                    registerOscHandler(e, t) {
                                        return this._core.registerOscHandler(e, t)
                                    }
                                    addOscHandler(e, t) {
                                        return this.registerOscHandler(e, t)
                                    }
                                }
                            },
                            7090: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.UnicodeApi = void 0, t.UnicodeApi = class {
                                    constructor(e) {
                                        this._core = e
                                    }
                                    register(e) {
                                        this._core.unicodeService.register(e)
                                    }
                                    get versions() {
                                        return this._core.unicodeService.versions
                                    }
                                    get activeVersion() {
                                        return this._core.unicodeService.activeVersion
                                    }
                                    set activeVersion(e) {
                                        this._core.unicodeService.activeVersion = e
                                    }
                                }
                            },
                            744: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.BufferService = t.MINIMUM_ROWS = t.MINIMUM_COLS = void 0;
                                const n = i(8460),
                                    o = i(844),
                                    a = i(5295),
                                    c = i(2585);
                                t.MINIMUM_COLS = 2, t.MINIMUM_ROWS = 1;
                                let l = t.BufferService = class extends o.Disposable {
                                    get buffer() {
                                        return this.buffers.active
                                    }
                                    constructor(e) {
                                        super(), this.isUserScrolling = !1, this._onResize = this.register(new n.EventEmitter), this.onResize = this._onResize.event, this._onScroll = this.register(new n.EventEmitter), this.onScroll = this._onScroll.event, this.cols = Math.max(e.rawOptions.cols || 0, t.MINIMUM_COLS), this.rows = Math.max(e.rawOptions.rows || 0, t.MINIMUM_ROWS), this.buffers = this.register(new a.BufferSet(e, this))
                                    }
                                    resize(e, t) {
                                        this.cols = e, this.rows = t, this.buffers.resize(e, t), this._onResize.fire({
                                            cols: e,
                                            rows: t
                                        })
                                    }
                                    reset() {
                                        this.buffers.reset(), this.isUserScrolling = !1
                                    }
                                    scroll(e, t = !1) {
                                        const i = this.buffer;
                                        let r;
                                        r = this._cachedBlankLine, r && r.length === this.cols && r.getFg(0) === e.fg && r.getBg(0) === e.bg || (r = i.getBlankLine(e, t), this._cachedBlankLine = r), r.isWrapped = t;
                                        const s = i.ybase + i.scrollTop,
                                            n = i.ybase + i.scrollBottom;
                                        if (0 === i.scrollTop) {
                                            const e = i.lines.isFull;
                                            n === i.lines.length - 1 ? e ? i.lines.recycle().copyFrom(r) : i.lines.push(r.clone()) : i.lines.splice(n + 1, 0, r.clone()), e ? this.isUserScrolling && (i.ydisp = Math.max(i.ydisp - 1, 0)) : (i.ybase++, this.isUserScrolling || i.ydisp++)
                                        } else {
                                            const e = n - s + 1;
                                            i.lines.shiftElements(s + 1, e - 1, -1), i.lines.set(n, r.clone())
                                        }
                                        this.isUserScrolling || (i.ydisp = i.ybase), this._onScroll.fire(i.ydisp)
                                    }
                                    scrollLines(e, t, i) {
                                        const r = this.buffer;
                                        if (e < 0) {
                                            if (0 === r.ydisp) return;
                                            this.isUserScrolling = !0
                                        } else e + r.ydisp >= r.ybase && (this.isUserScrolling = !1);
                                        const s = r.ydisp;
                                        r.ydisp = Math.max(Math.min(r.ydisp + e, r.ybase), 0), s !== r.ydisp && (t || this._onScroll.fire(r.ydisp))
                                    }
                                };
                                t.BufferService = l = r([s(0, c.IOptionsService)], l)
                            },
                            7994: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CharsetService = void 0, t.CharsetService = class {
                                    constructor() {
                                        this.glevel = 0, this._charsets = []
                                    }
                                    reset() {
                                        this.charset = void 0, this._charsets = [], this.glevel = 0
                                    }
                                    setgLevel(e) {
                                        this.glevel = e, this.charset = this._charsets[e]
                                    }
                                    setgCharset(e, t) {
                                        this._charsets[e] = t, this.glevel === e && (this.charset = t)
                                    }
                                }
                            },
                            1753: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CoreMouseService = void 0;
                                const n = i(2585),
                                    o = i(8460),
                                    a = i(844),
                                    c = {
                                        NONE: {
                                            events: 0,
                                            restrict: () => !1
                                        },
                                        X10: {
                                            events: 1,
                                            restrict: e => 4 !== e.button && 1 === e.action && (e.ctrl = !1, e.alt = !1, e.shift = !1, !0)
                                        },
                                        VT200: {
                                            events: 19,
                                            restrict: e => 32 !== e.action
                                        },
                                        DRAG: {
                                            events: 23,
                                            restrict: e => 32 !== e.action || 3 !== e.button
                                        },
                                        ANY: {
                                            events: 31,
                                            restrict: e => !0
                                        }
                                    };

                                function l(e, t) {
                                    let i = (e.ctrl ? 16 : 0) | (e.shift ? 4 : 0) | (e.alt ? 8 : 0);
                                    return 4 === e.button ? (i |= 64, i |= e.action) : (i |= 3 & e.button, 4 & e.button && (i |= 64), 8 & e.button && (i |= 128), 32 === e.action ? i |= 32 : 0 !== e.action || t || (i |= 3)), i
                                }
                                const h = String.fromCharCode,
                                    u = {
                                        DEFAULT: e => {
                                            const t = [l(e, !1) + 32, e.col + 32, e.row + 32];
                                            return t[0] > 255 || t[1] > 255 || t[2] > 255 ? "" : `[M${h(t[0])}${h(t[1])}${h(t[2])}`
                                        },
                                        SGR: e => {
                                            const t = 0 === e.action && 4 !== e.button ? "m" : "M";
                                            return `[<${l(e,!0)};${e.col};${e.row}${t}`
                                        },
                                        SGR_PIXELS: e => {
                                            const t = 0 === e.action && 4 !== e.button ? "m" : "M";
                                            return `[<${l(e,!0)};${e.x};${e.y}${t}`
                                        }
                                    };
                                let d = t.CoreMouseService = class extends a.Disposable {
                                    constructor(e, t) {
                                        super(), this._bufferService = e, this._coreService = t, this._protocols = {}, this._encodings = {}, this._activeProtocol = "", this._activeEncoding = "", this._lastEvent = null, this._onProtocolChange = this.register(new o.EventEmitter), this.onProtocolChange = this._onProtocolChange.event;
                                        for (const e of Object.keys(c)) this.addProtocol(e, c[e]);
                                        for (const e of Object.keys(u)) this.addEncoding(e, u[e]);
                                        this.reset()
                                    }
                                    addProtocol(e, t) {
                                        this._protocols[e] = t
                                    }
                                    addEncoding(e, t) {
                                        this._encodings[e] = t
                                    }
                                    get activeProtocol() {
                                        return this._activeProtocol
                                    }
                                    get areMouseEventsActive() {
                                        return 0 !== this._protocols[this._activeProtocol].events
                                    }
                                    set activeProtocol(e) {
                                        if (!this._protocols[e]) throw new Error(`unknown protocol "${e}"`);
                                        this._activeProtocol = e, this._onProtocolChange.fire(this._protocols[e].events)
                                    }
                                    get activeEncoding() {
                                        return this._activeEncoding
                                    }
                                    set activeEncoding(e) {
                                        if (!this._encodings[e]) throw new Error(`unknown encoding "${e}"`);
                                        this._activeEncoding = e
                                    }
                                    reset() {
                                        this.activeProtocol = "NONE", this.activeEncoding = "DEFAULT", this._lastEvent = null
                                    }
                                    triggerMouseEvent(e) {
                                        if (e.col < 0 || e.col >= this._bufferService.cols || e.row < 0 || e.row >= this._bufferService.rows) return !1;
                                        if (4 === e.button && 32 === e.action) return !1;
                                        if (3 === e.button && 32 !== e.action) return !1;
                                        if (4 !== e.button && (2 === e.action || 3 === e.action)) return !1;
                                        if (e.col++, e.row++, 32 === e.action && this._lastEvent && this._equalEvents(this._lastEvent, e, "SGR_PIXELS" === this._activeEncoding)) return !1;
                                        if (!this._protocols[this._activeProtocol].restrict(e)) return !1;
                                        const t = this._encodings[this._activeEncoding](e);
                                        return t && ("DEFAULT" === this._activeEncoding ? this._coreService.triggerBinaryEvent(t) : this._coreService.triggerDataEvent(t, !0)), this._lastEvent = e, !0
                                    }
                                    explainEvents(e) {
                                        return {
                                            down: !!(1 & e),
                                            up: !!(2 & e),
                                            drag: !!(4 & e),
                                            move: !!(8 & e),
                                            wheel: !!(16 & e)
                                        }
                                    }
                                    _equalEvents(e, t, i) {
                                        if (i) {
                                            if (e.x !== t.x) return !1;
                                            if (e.y !== t.y) return !1
                                        } else {
                                            if (e.col !== t.col) return !1;
                                            if (e.row !== t.row) return !1
                                        }
                                        return e.button === t.button && e.action === t.action && e.ctrl === t.ctrl && e.alt === t.alt && e.shift === t.shift
                                    }
                                };
                                t.CoreMouseService = d = r([s(0, n.IBufferService), s(1, n.ICoreService)], d)
                            },
                            6975: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.CoreService = void 0;
                                const n = i(1439),
                                    o = i(8460),
                                    a = i(844),
                                    c = i(2585),
                                    l = Object.freeze({
                                        insertMode: !1
                                    }),
                                    h = Object.freeze({
                                        applicationCursorKeys: !1,
                                        applicationKeypad: !1,
                                        bracketedPasteMode: !1,
                                        origin: !1,
                                        reverseWraparound: !1,
                                        sendFocus: !1,
                                        wraparound: !0
                                    });
                                let u = t.CoreService = class extends a.Disposable {
                                    constructor(e, t, i) {
                                        super(), this._bufferService = e, this._logService = t, this._optionsService = i, this.isCursorInitialized = !1, this.isCursorHidden = !1, this._onData = this.register(new o.EventEmitter), this.onData = this._onData.event, this._onUserInput = this.register(new o.EventEmitter), this.onUserInput = this._onUserInput.event, this._onBinary = this.register(new o.EventEmitter), this.onBinary = this._onBinary.event, this._onRequestScrollToBottom = this.register(new o.EventEmitter), this.onRequestScrollToBottom = this._onRequestScrollToBottom.event, this.modes = (0, n.clone)(l), this.decPrivateModes = (0, n.clone)(h)
                                    }
                                    reset() {
                                        this.modes = (0, n.clone)(l), this.decPrivateModes = (0, n.clone)(h)
                                    }
                                    triggerDataEvent(e, t = !1) {
                                        if (this._optionsService.rawOptions.disableStdin) return;
                                        const i = this._bufferService.buffer;
                                        t && this._optionsService.rawOptions.scrollOnUserInput && i.ybase !== i.ydisp && this._onRequestScrollToBottom.fire(), t && this._onUserInput.fire(), this._logService.debug(`sending data "${e}"`, (() => e.split("").map((e => e.charCodeAt(0))))), this._onData.fire(e)
                                    }
                                    triggerBinaryEvent(e) {
                                        this._optionsService.rawOptions.disableStdin || (this._logService.debug(`sending binary "${e}"`, (() => e.split("").map((e => e.charCodeAt(0))))), this._onBinary.fire(e))
                                    }
                                };
                                t.CoreService = u = r([s(0, c.IBufferService), s(1, c.ILogService), s(2, c.IOptionsService)], u)
                            },
                            9074: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.DecorationService = void 0;
                                const r = i(8055),
                                    s = i(8460),
                                    n = i(844),
                                    o = i(6106);
                                let a = 0,
                                    c = 0;
                                class l extends n.Disposable {
                                    get decorations() {
                                        return this._decorations.values()
                                    }
                                    constructor() {
                                        super(), this._decorations = new o.SortedList((e => e?.marker.line)), this._onDecorationRegistered = this.register(new s.EventEmitter), this.onDecorationRegistered = this._onDecorationRegistered.event, this._onDecorationRemoved = this.register(new s.EventEmitter), this.onDecorationRemoved = this._onDecorationRemoved.event, this.register((0, n.toDisposable)((() => this.reset())))
                                    }
                                    registerDecoration(e) {
                                        if (e.marker.isDisposed) return;
                                        const t = new h(e);
                                        if (t) {
                                            const e = t.marker.onDispose((() => t.dispose()));
                                            t.onDispose((() => {
                                                t && (this._decorations.delete(t) && this._onDecorationRemoved.fire(t), e.dispose())
                                            })), this._decorations.insert(t), this._onDecorationRegistered.fire(t)
                                        }
                                        return t
                                    }
                                    reset() {
                                        for (const e of this._decorations.values()) e.dispose();
                                        this._decorations.clear()
                                    }* getDecorationsAtCell(e, t, i) {
                                        let r = 0,
                                            s = 0;
                                        for (const n of this._decorations.getKeyIterator(t)) r = n.options.x ?? 0, s = r + (n.options.width ?? 1), e >= r && e < s && (!i || (n.options.layer ?? "bottom") === i) && (yield n)
                                    }
                                    forEachDecorationAtCell(e, t, i, r) {
                                        this._decorations.forEachByKey(t, (t => {
                                            a = t.options.x ?? 0, c = a + (t.options.width ?? 1), e >= a && e < c && (!i || (t.options.layer ?? "bottom") === i) && r(t)
                                        }))
                                    }
                                }
                                t.DecorationService = l;
                                class h extends n.Disposable {
                                    get isDisposed() {
                                        return this._isDisposed
                                    }
                                    get backgroundColorRGB() {
                                        return null === this._cachedBg && (this.options.backgroundColor ? this._cachedBg = r.css.toColor(this.options.backgroundColor) : this._cachedBg = void 0), this._cachedBg
                                    }
                                    get foregroundColorRGB() {
                                        return null === this._cachedFg && (this.options.foregroundColor ? this._cachedFg = r.css.toColor(this.options.foregroundColor) : this._cachedFg = void 0), this._cachedFg
                                    }
                                    constructor(e) {
                                        super(), this.options = e, this.onRenderEmitter = this.register(new s.EventEmitter), this.onRender = this.onRenderEmitter.event, this._onDispose = this.register(new s.EventEmitter), this.onDispose = this._onDispose.event, this._cachedBg = null, this._cachedFg = null, this.marker = e.marker, this.options.overviewRulerOptions && !this.options.overviewRulerOptions.position && (this.options.overviewRulerOptions.position = "full")
                                    }
                                    dispose() {
                                        this._onDispose.fire(), super.dispose()
                                    }
                                }
                            },
                            4348: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.InstantiationService = t.ServiceCollection = void 0;
                                const r = i(2585),
                                    s = i(8343);
                                class n {
                                    constructor(...e) {
                                        this._entries = new Map;
                                        for (const [t, i] of e) this.set(t, i)
                                    }
                                    set(e, t) {
                                        const i = this._entries.get(e);
                                        return this._entries.set(e, t), i
                                    }
                                    forEach(e) {
                                        for (const [t, i] of this._entries.entries()) e(t, i)
                                    }
                                    has(e) {
                                        return this._entries.has(e)
                                    }
                                    get(e) {
                                        return this._entries.get(e)
                                    }
                                }
                                t.ServiceCollection = n, t.InstantiationService = class {
                                    constructor() {
                                        this._services = new n, this._services.set(r.IInstantiationService, this)
                                    }
                                    setService(e, t) {
                                        this._services.set(e, t)
                                    }
                                    getService(e) {
                                        return this._services.get(e)
                                    }
                                    createInstance(e, ...t) {
                                        const i = (0, s.getServiceDependencies)(e).sort(((e, t) => e.index - t.index)),
                                            r = [];
                                        for (const t of i) {
                                            const i = this._services.get(t.id);
                                            if (!i) throw new Error(`[createInstance] ${e.name} depends on UNKNOWN service ${t.id}.`);
                                            r.push(i)
                                        }
                                        const n = i.length > 0 ? i[0].index : t.length;
                                        if (t.length !== n) throw new Error(`[createInstance] First service dependency of ${e.name} at position ${n+1} conflicts with ${t.length} static arguments`);
                                        return new e(...[...t, ...r])
                                    }
                                }
                            },
                            7866: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.traceCall = t.setTraceLogger = t.LogService = void 0;
                                const n = i(844),
                                    o = i(2585),
                                    a = {
                                        trace: o.LogLevelEnum.TRACE,
                                        debug: o.LogLevelEnum.DEBUG,
                                        info: o.LogLevelEnum.INFO,
                                        warn: o.LogLevelEnum.WARN,
                                        error: o.LogLevelEnum.ERROR,
                                        off: o.LogLevelEnum.OFF
                                    };
                                let c, l = t.LogService = class extends n.Disposable {
                                    get logLevel() {
                                        return this._logLevel
                                    }
                                    constructor(e) {
                                        super(), this._optionsService = e, this._logLevel = o.LogLevelEnum.OFF, this._updateLogLevel(), this.register(this._optionsService.onSpecificOptionChange("logLevel", (() => this._updateLogLevel()))), c = this
                                    }
                                    _updateLogLevel() {
                                        this._logLevel = a[this._optionsService.rawOptions.logLevel]
                                    }
                                    _evalLazyOptionalParams(e) {
                                        for (let t = 0; t < e.length; t++) "function" == typeof e[t] && (e[t] = e[t]())
                                    }
                                    _log(e, t, i) {
                                        this._evalLazyOptionalParams(i), e.call(console, (this._optionsService.options.logger ? "" : "xterm.js: ") + t, ...i)
                                    }
                                    trace(e, ...t) {
                                        this._logLevel <= o.LogLevelEnum.TRACE && this._log(this._optionsService.options.logger?.trace.bind(this._optionsService.options.logger) ?? console.log, e, t)
                                    }
                                    debug(e, ...t) {
                                        this._logLevel <= o.LogLevelEnum.DEBUG && this._log(this._optionsService.options.logger?.debug.bind(this._optionsService.options.logger) ?? console.log, e, t)
                                    }
                                    info(e, ...t) {
                                        this._logLevel <= o.LogLevelEnum.INFO && this._log(this._optionsService.options.logger?.info.bind(this._optionsService.options.logger) ?? console.info, e, t)
                                    }
                                    warn(e, ...t) {
                                        this._logLevel <= o.LogLevelEnum.WARN && this._log(this._optionsService.options.logger?.warn.bind(this._optionsService.options.logger) ?? console.warn, e, t)
                                    }
                                    error(e, ...t) {
                                        this._logLevel <= o.LogLevelEnum.ERROR && this._log(this._optionsService.options.logger?.error.bind(this._optionsService.options.logger) ?? console.error, e, t)
                                    }
                                };
                                t.LogService = l = r([s(0, o.IOptionsService)], l), t.setTraceLogger = function(e) {
                                    c = e
                                }, t.traceCall = function(e, t, i) {
                                    if ("function" != typeof i.value) throw new Error("not supported");
                                    const r = i.value;
                                    i.value = function(...e) {
                                        if (c.logLevel !== o.LogLevelEnum.TRACE) return r.apply(this, e);
                                        c.trace(`GlyphRenderer#${r.name}(${e.map((e=>JSON.stringify(e))).join(", ")})`);
                                        const t = r.apply(this, e);
                                        return c.trace(`GlyphRenderer#${r.name} return`, t), t
                                    }
                                }
                            },
                            7302: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.OptionsService = t.DEFAULT_OPTIONS = void 0;
                                const r = i(8460),
                                    s = i(844),
                                    n = i(6114);
                                t.DEFAULT_OPTIONS = {
                                    cols: 80,
                                    rows: 24,
                                    cursorBlink: !1,
                                    cursorStyle: "block",
                                    cursorWidth: 1,
                                    cursorInactiveStyle: "outline",
                                    customGlyphs: !0,
                                    drawBoldTextInBrightColors: !0,
                                    documentOverride: null,
                                    fastScrollModifier: "alt",
                                    fastScrollSensitivity: 5,
                                    fontFamily: "courier-new, courier, monospace",
                                    fontSize: 15,
                                    fontWeight: "normal",
                                    fontWeightBold: "bold",
                                    ignoreBracketedPasteMode: !1,
                                    lineHeight: 1,
                                    letterSpacing: 0,
                                    linkHandler: null,
                                    logLevel: "info",
                                    logger: null,
                                    scrollback: 1e3,
                                    scrollOnUserInput: !0,
                                    scrollSensitivity: 1,
                                    screenReaderMode: !1,
                                    smoothScrollDuration: 0,
                                    macOptionIsMeta: !1,
                                    macOptionClickForcesSelection: !1,
                                    minimumContrastRatio: 1,
                                    disableStdin: !1,
                                    allowProposedApi: !1,
                                    allowTransparency: !1,
                                    tabStopWidth: 8,
                                    theme: {},
                                    rescaleOverlappingGlyphs: !1,
                                    rightClickSelectsWord: n.isMac,
                                    windowOptions: {},
                                    windowsMode: !1,
                                    windowsPty: {},
                                    wordSeparator: " ()[]{}',\"`",
                                    altClickMovesCursor: !0,
                                    convertEol: !1,
                                    termName: "xterm",
                                    cancelEvents: !1,
                                    overviewRulerWidth: 0
                                };
                                const o = ["normal", "bold", "100", "200", "300", "400", "500", "600", "700", "800", "900"];
                                class a extends s.Disposable {
                                    constructor(e) {
                                        super(), this._onOptionChange = this.register(new r.EventEmitter), this.onOptionChange = this._onOptionChange.event;
                                        const i = {
                                            ...t.DEFAULT_OPTIONS
                                        };
                                        for (const t in e)
                                            if (t in i) try {
                                                const r = e[t];
                                                i[t] = this._sanitizeAndValidateOption(t, r)
                                            } catch (e) {
                                                console.error(e)
                                            }
                                        this.rawOptions = i, this.options = {
                                            ...i
                                        }, this._setupOptions(), this.register((0, s.toDisposable)((() => {
                                            this.rawOptions.linkHandler = null, this.rawOptions.documentOverride = null
                                        })))
                                    }
                                    onSpecificOptionChange(e, t) {
                                        return this.onOptionChange((i => {
                                            i === e && t(this.rawOptions[e])
                                        }))
                                    }
                                    onMultipleOptionChange(e, t) {
                                        return this.onOptionChange((i => {
                                            -1 !== e.indexOf(i) && t()
                                        }))
                                    }
                                    _setupOptions() {
                                        const e = e => {
                                                if (!(e in t.DEFAULT_OPTIONS)) throw new Error(`No option with key "${e}"`);
                                                return this.rawOptions[e]
                                            },
                                            i = (e, i) => {
                                                if (!(e in t.DEFAULT_OPTIONS)) throw new Error(`No option with key "${e}"`);
                                                i = this._sanitizeAndValidateOption(e, i), this.rawOptions[e] !== i && (this.rawOptions[e] = i, this._onOptionChange.fire(e))
                                            };
                                        for (const t in this.rawOptions) {
                                            const r = {
                                                get: e.bind(this, t),
                                                set: i.bind(this, t)
                                            };
                                            Object.defineProperty(this.options, t, r)
                                        }
                                    }
                                    _sanitizeAndValidateOption(e, i) {
                                        switch (e) {
                                            case "cursorStyle":
                                                if (i || (i = t.DEFAULT_OPTIONS[e]), ! function(e) {
                                                        return "block" === e || "underline" === e || "bar" === e
                                                    }(i)) throw new Error(`"${i}" is not a valid value for ${e}`);
                                                break;
                                            case "wordSeparator":
                                                i || (i = t.DEFAULT_OPTIONS[e]);
                                                break;
                                            case "fontWeight":
                                            case "fontWeightBold":
                                                if ("number" == typeof i && 1 <= i && i <= 1e3) break;
                                                i = o.includes(i) ? i : t.DEFAULT_OPTIONS[e];
                                                break;
                                            case "cursorWidth":
                                                i = Math.floor(i);
                                            case "lineHeight":
                                            case "tabStopWidth":
                                                if (i < 1) throw new Error(`${e} cannot be less than 1, value: ${i}`);
                                                break;
                                            case "minimumContrastRatio":
                                                i = Math.max(1, Math.min(21, Math.round(10 * i) / 10));
                                                break;
                                            case "scrollback":
                                                if ((i = Math.min(i, 4294967295)) < 0) throw new Error(`${e} cannot be less than 0, value: ${i}`);
                                                break;
                                            case "fastScrollSensitivity":
                                            case "scrollSensitivity":
                                                if (i <= 0) throw new Error(`${e} cannot be less than or equal to 0, value: ${i}`);
                                                break;
                                            case "rows":
                                            case "cols":
                                                if (!i && 0 !== i) throw new Error(`${e} must be numeric, value: ${i}`);
                                                break;
                                            case "windowsPty":
                                                i = i ?? {}
                                        }
                                        return i
                                    }
                                }
                                t.OptionsService = a
                            },
                            2660: function(e, t, i) {
                                var r = this && this.__decorate || function(e, t, i, r) {
                                        var s, n = arguments.length,
                                            o = n < 3 ? t : null === r ? r = Object.getOwnPropertyDescriptor(t, i) : r;
                                        if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) o = Reflect.decorate(e, t, i, r);
                                        else
                                            for (var a = e.length - 1; a >= 0; a--)(s = e[a]) && (o = (n < 3 ? s(o) : n > 3 ? s(t, i, o) : s(t, i)) || o);
                                        return n > 3 && o && Object.defineProperty(t, i, o), o
                                    },
                                    s = this && this.__param || function(e, t) {
                                        return function(i, r) {
                                            t(i, r, e)
                                        }
                                    };
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.OscLinkService = void 0;
                                const n = i(2585);
                                let o = t.OscLinkService = class {
                                    constructor(e) {
                                        this._bufferService = e, this._nextId = 1, this._entriesWithId = new Map, this._dataByLinkId = new Map
                                    }
                                    registerLink(e) {
                                        const t = this._bufferService.buffer;
                                        if (void 0 === e.id) {
                                            const i = t.addMarker(t.ybase + t.y),
                                                r = {
                                                    data: e,
                                                    id: this._nextId++,
                                                    lines: [i]
                                                };
                                            return i.onDispose((() => this._removeMarkerFromLink(r, i))), this._dataByLinkId.set(r.id, r), r.id
                                        }
                                        const i = e,
                                            r = this._getEntryIdKey(i),
                                            s = this._entriesWithId.get(r);
                                        if (s) return this.addLineToLink(s.id, t.ybase + t.y), s.id;
                                        const n = t.addMarker(t.ybase + t.y),
                                            o = {
                                                id: this._nextId++,
                                                key: this._getEntryIdKey(i),
                                                data: i,
                                                lines: [n]
                                            };
                                        return n.onDispose((() => this._removeMarkerFromLink(o, n))), this._entriesWithId.set(o.key, o), this._dataByLinkId.set(o.id, o), o.id
                                    }
                                    addLineToLink(e, t) {
                                        const i = this._dataByLinkId.get(e);
                                        if (i && i.lines.every((e => e.line !== t))) {
                                            const e = this._bufferService.buffer.addMarker(t);
                                            i.lines.push(e), e.onDispose((() => this._removeMarkerFromLink(i, e)))
                                        }
                                    }
                                    getLinkData(e) {
                                        return this._dataByLinkId.get(e)?.data
                                    }
                                    _getEntryIdKey(e) {
                                        return `${e.id};;${e.uri}`
                                    }
                                    _removeMarkerFromLink(e, t) {
                                        const i = e.lines.indexOf(t); - 1 !== i && (e.lines.splice(i, 1), 0 === e.lines.length && (void 0 !== e.data.id && this._entriesWithId.delete(e.key), this._dataByLinkId.delete(e.id)))
                                    }
                                };
                                t.OscLinkService = o = r([s(0, n.IBufferService)], o)
                            },
                            8343: (e, t) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.createDecorator = t.getServiceDependencies = t.serviceRegistry = void 0;
                                const i = "di$target",
                                    r = "di$dependencies";
                                t.serviceRegistry = new Map, t.getServiceDependencies = function(e) {
                                    return e[r] || []
                                }, t.createDecorator = function(e) {
                                    if (t.serviceRegistry.has(e)) return t.serviceRegistry.get(e);
                                    const s = function(e, t, n) {
                                        if (3 !== arguments.length) throw new Error("@IServiceName-decorator can only be used to decorate a parameter");
                                        ! function(e, t, s) {
                                            t[i] === t ? t[r].push({
                                                id: e,
                                                index: s
                                            }) : (t[r] = [{
                                                id: e,
                                                index: s
                                            }], t[i] = t)
                                        }(s, e, n)
                                    };
                                    return s.toString = () => e, t.serviceRegistry.set(e, s), s
                                }
                            },
                            2585: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.IDecorationService = t.IUnicodeService = t.IOscLinkService = t.IOptionsService = t.ILogService = t.LogLevelEnum = t.IInstantiationService = t.ICharsetService = t.ICoreService = t.ICoreMouseService = t.IBufferService = void 0;
                                const r = i(8343);
                                var s;
                                t.IBufferService = (0, r.createDecorator)("BufferService"), t.ICoreMouseService = (0, r.createDecorator)("CoreMouseService"), t.ICoreService = (0, r.createDecorator)("CoreService"), t.ICharsetService = (0, r.createDecorator)("CharsetService"), t.IInstantiationService = (0, r.createDecorator)("InstantiationService"),
                                    function(e) {
                                        e[e.TRACE = 0] = "TRACE", e[e.DEBUG = 1] = "DEBUG", e[e.INFO = 2] = "INFO", e[e.WARN = 3] = "WARN", e[e.ERROR = 4] = "ERROR", e[e.OFF = 5] = "OFF"
                                    }(s || (t.LogLevelEnum = s = {})), t.ILogService = (0, r.createDecorator)("LogService"), t.IOptionsService = (0, r.createDecorator)("OptionsService"), t.IOscLinkService = (0, r.createDecorator)("OscLinkService"), t.IUnicodeService = (0, r.createDecorator)("UnicodeService"), t.IDecorationService = (0, r.createDecorator)("DecorationService")
                            },
                            1480: (e, t, i) => {
                                Object.defineProperty(t, "__esModule", {
                                    value: !0
                                }), t.UnicodeService = void 0;
                                const r = i(8460),
                                    s = i(225);
                                class n {
                                    static extractShouldJoin(e) {
                                        return 0 != (1 & e)
                                    }
                                    static extractWidth(e) {
                                        return e >> 1 & 3
                                    }
                                    static extractCharKind(e) {
                                        return e >> 3
                                    }
                                    static createPropertyValue(e, t, i = !1) {
                                        return (16777215 & e) << 3 | (3 & t) << 1 | (i ? 1 : 0)
                                    }
                                    constructor() {
                                        this._providers = Object.create(null), this._active = "", this._onChange = new r.EventEmitter, this.onChange = this._onChange.event;
                                        const e = new s.UnicodeV6;
                                        this.register(e), this._active = e.version, this._activeProvider = e
                                    }
                                    dispose() {
                                        this._onChange.dispose()
                                    }
                                    get versions() {
                                        return Object.keys(this._providers)
                                    }
                                    get activeVersion() {
                                        return this._active
                                    }
                                    set activeVersion(e) {
                                        if (!this._providers[e]) throw new Error(`unknown Unicode version "${e}"`);
                                        this._active = e, this._activeProvider = this._providers[e], this._onChange.fire(e)
                                    }
                                    register(e) {
                                        this._providers[e.version] = e
                                    }
                                    wcwidth(e) {
                                        return this._activeProvider.wcwidth(e)
                                    }
                                    getStringCellWidth(e) {
                                        let t = 0,
                                            i = 0;
                                        const r = e.length;
                                        for (let s = 0; s < r; ++s) {
                                            let o = e.charCodeAt(s);
                                            if (55296 <= o && o <= 56319) {
                                                if (++s >= r) return t + this.wcwidth(o);
                                                const i = e.charCodeAt(s);
                                                56320 <= i && i <= 57343 ? o = 1024 * (o - 55296) + i - 56320 + 65536 : t += this.wcwidth(i)
                                            }
                                            const a = this.charProperties(o, i);
                                            let c = n.extractWidth(a);
                                            n.extractShouldJoin(a) && (c -= n.extractWidth(i)), t += c, i = a
                                        }
                                        return t
                                    }
                                    charProperties(e, t) {
                                        return this._activeProvider.charProperties(e, t)
                                    }
                                }
                                t.UnicodeService = n
                            }
                        },
                        t = {};

                    function i(r) {
                        var s = t[r];
                        if (void 0 !== s) return s.exports;
                        var n = t[r] = {
                            exports: {}
                        };
                        return e[r].call(n.exports, n, n.exports, i), n.exports
                    }
                    var r = {};
                    return (() => {
                        var e = r;
                        Object.defineProperty(e, "__esModule", {
                            value: !0
                        }), e.Terminal = void 0;
                        const t = i(9042),
                            s = i(3236),
                            n = i(844),
                            o = i(5741),
                            a = i(8285),
                            c = i(7975),
                            l = i(7090),
                            h = ["cols", "rows"];
                        class u extends n.Disposable {
                            constructor(e) {
                                super(), this._core = this.register(new s.Terminal(e)), this._addonManager = this.register(new o.AddonManager), this._publicOptions = {
                                    ...this._core.options
                                };
                                const t = e => this._core.options[e],
                                    i = (e, t) => {
                                        this._checkReadonlyOptions(e), this._core.options[e] = t
                                    };
                                for (const e in this._core.options) {
                                    const r = {
                                        get: t.bind(this, e),
                                        set: i.bind(this, e)
                                    };
                                    Object.defineProperty(this._publicOptions, e, r)
                                }
                            }
                            _checkReadonlyOptions(e) {
                                if (h.includes(e)) throw new Error(`Option "${e}" can only be set in the constructor`)
                            }
                            _checkProposedApi() {
                                if (!this._core.optionsService.rawOptions.allowProposedApi) throw new Error("You must set the allowProposedApi option to true to use proposed API")
                            }
                            get onBell() {
                                return this._core.onBell
                            }
                            get onBinary() {
                                return this._core.onBinary
                            }
                            get onCursorMove() {
                                return this._core.onCursorMove
                            }
                            get onData() {
                                return this._core.onData
                            }
                            get onKey() {
                                return this._core.onKey
                            }
                            get onLineFeed() {
                                return this._core.onLineFeed
                            }
                            get onRender() {
                                return this._core.onRender
                            }
                            get onResize() {
                                return this._core.onResize
                            }
                            get onScroll() {
                                return this._core.onScroll
                            }
                            get onSelectionChange() {
                                return this._core.onSelectionChange
                            }
                            get onTitleChange() {
                                return this._core.onTitleChange
                            }
                            get onWriteParsed() {
                                return this._core.onWriteParsed
                            }
                            get element() {
                                return this._core.element
                            }
                            get parser() {
                                return this._parser || (this._parser = new c.ParserApi(this._core)), this._parser
                            }
                            get unicode() {
                                return this._checkProposedApi(), new l.UnicodeApi(this._core)
                            }
                            get textarea() {
                                return this._core.textarea
                            }
                            get rows() {
                                return this._core.rows
                            }
                            get cols() {
                                return this._core.cols
                            }
                            get buffer() {
                                return this._buffer || (this._buffer = this.register(new a.BufferNamespaceApi(this._core))), this._buffer
                            }
                            get markers() {
                                return this._checkProposedApi(), this._core.markers
                            }
                            get modes() {
                                const e = this._core.coreService.decPrivateModes;
                                let t = "none";
                                switch (this._core.coreMouseService.activeProtocol) {
                                    case "X10":
                                        t = "x10";
                                        break;
                                    case "VT200":
                                        t = "vt200";
                                        break;
                                    case "DRAG":
                                        t = "drag";
                                        break;
                                    case "ANY":
                                        t = "any"
                                }
                                return {
                                    applicationCursorKeysMode: e.applicationCursorKeys,
                                    applicationKeypadMode: e.applicationKeypad,
                                    bracketedPasteMode: e.bracketedPasteMode,
                                    insertMode: this._core.coreService.modes.insertMode,
                                    mouseTrackingMode: t,
                                    originMode: e.origin,
                                    reverseWraparoundMode: e.reverseWraparound,
                                    sendFocusMode: e.sendFocus,
                                    wraparoundMode: e.wraparound
                                }
                            }
                            get options() {
                                return this._publicOptions
                            }
                            set options(e) {
                                for (const t in e) this._publicOptions[t] = e[t]
                            }
                            blur() {
                                this._core.blur()
                            }
                            focus() {
                                this._core.focus()
                            }
                            input(e, t = !0) {
                                this._core.input(e, t)
                            }
                            resize(e, t) {
                                this._verifyIntegers(e, t), this._core.resize(e, t)
                            }
                            open(e) {
                                this._core.open(e)
                            }
                            attachCustomKeyEventHandler(e) {
                                this._core.attachCustomKeyEventHandler(e)
                            }
                            attachCustomWheelEventHandler(e) {
                                this._core.attachCustomWheelEventHandler(e)
                            }
                            registerLinkProvider(e) {
                                return this._core.registerLinkProvider(e)
                            }
                            registerCharacterJoiner(e) {
                                return this._checkProposedApi(), this._core.registerCharacterJoiner(e)
                            }
                            deregisterCharacterJoiner(e) {
                                this._checkProposedApi(), this._core.deregisterCharacterJoiner(e)
                            }
                            registerMarker(e = 0) {
                                return this._verifyIntegers(e), this._core.registerMarker(e)
                            }
                            registerDecoration(e) {
                                return this._checkProposedApi(), this._verifyPositiveIntegers(e.x ?? 0, e.width ?? 0, e.height ?? 0), this._core.registerDecoration(e)
                            }
                            hasSelection() {
                                return this._core.hasSelection()
                            }
                            select(e, t, i) {
                                this._verifyIntegers(e, t, i), this._core.select(e, t, i)
                            }
                            getSelection() {
                                return this._core.getSelection()
                            }
                            getSelectionPosition() {
                                return this._core.getSelectionPosition()
                            }
                            clearSelection() {
                                this._core.clearSelection()
                            }
                            selectAll() {
                                this._core.selectAll()
                            }
                            selectLines(e, t) {
                                this._verifyIntegers(e, t), this._core.selectLines(e, t)
                            }
                            dispose() {
                                super.dispose()
                            }
                            scrollLines(e) {
                                this._verifyIntegers(e), this._core.scrollLines(e)
                            }
                            scrollPages(e) {
                                this._verifyIntegers(e), this._core.scrollPages(e)
                            }
                            scrollToTop() {
                                this._core.scrollToTop()
                            }
                            scrollToBottom() {
                                this._core.scrollToBottom()
                            }
                            scrollToLine(e) {
                                this._verifyIntegers(e), this._core.scrollToLine(e)
                            }
                            clear() {
                                this._core.clear()
                            }
                            write(e, t) {
                                this._core.write(e, t)
                            }
                            writeln(e, t) {
                                this._core.write(e), this._core.write("\r\n", t)
                            }
                            paste(e) {
                                this._core.paste(e)
                            }
                            refresh(e, t) {
                                this._verifyIntegers(e, t), this._core.refresh(e, t)
                            }
                            reset() {
                                this._core.reset()
                            }
                            clearTextureAtlas() {
                                this._core.clearTextureAtlas()
                            }
                            loadAddon(e) {
                                this._addonManager.loadAddon(this, e)
                            }
                            static get strings() {
                                return t
                            }
                            _verifyIntegers(...e) {
                                for (const t of e)
                                    if (t === 1 / 0 || isNaN(t) || t % 1 != 0) throw new Error("This API only accepts integers")
                            }
                            _verifyPositiveIntegers(...e) {
                                for (const t of e)
                                    if (t && (t === 1 / 0 || isNaN(t) || t % 1 != 0 || t < 0)) throw new Error("This API only accepts positive integers")
                            }
                        }
                        e.Terminal = u
                    })(), r
                })(), e.exports = t()
            },
            9758: (e, t, i) => {
                "use strict";
                e.exports = i(9512)
            },
            9512: e => {
                "use strict";
                var t = function(e) {
                    if (e = e || {}, this.Promise = e.Promise || Promise, this.queues = Object.create(null), this.domainReentrant = e.domainReentrant || !1, this.domainReentrant) {
                        if ("undefined" == typeof process || void 0 === process.domain) throw new Error("Domain-reentrant locks require `process.domain` to exist. Please flip `opts.domainReentrant = false`, use a NodeJS version that still implements Domain, or install a browser polyfill.");
                        this.domains = Object.create(null)
                    }
                    this.timeout = e.timeout || t.DEFAULT_TIMEOUT, this.maxOccupationTime = e.maxOccupationTime || t.DEFAULT_MAX_OCCUPATION_TIME, this.maxExecutionTime = e.maxExecutionTime || t.DEFAULT_MAX_EXECUTION_TIME, e.maxPending === 1 / 0 || Number.isInteger(e.maxPending) && e.maxPending >= 0 ? this.maxPending = e.maxPending : this.maxPending = t.DEFAULT_MAX_PENDING
                };
                t.DEFAULT_TIMEOUT = 0, t.DEFAULT_MAX_OCCUPATION_TIME = 0, t.DEFAULT_MAX_EXECUTION_TIME = 0, t.DEFAULT_MAX_PENDING = 1e3, t.prototype.acquire = function(e, t, i, r) {
                    if (Array.isArray(e)) return this._acquireBatch(e, t, i, r);
                    if ("function" != typeof t) throw new Error("You must pass a function to execute");
                    var s = null,
                        n = null,
                        o = null;
                    "function" != typeof i && (r = i, i = null, o = new this.Promise((function(e, t) {
                        s = e, n = t
                    }))), r = r || {};
                    var a = !1,
                        c = null,
                        l = null,
                        h = null,
                        u = this,
                        d = function(t, r, c) {
                            l && (clearTimeout(l), l = null), h && (clearTimeout(h), h = null), t && (u.queues[e] && 0 === u.queues[e].length && delete u.queues[e], u.domainReentrant && delete u.domains[e]), a || (o ? r ? n(r) : s(c) : "function" == typeof i && i(r, c), a = !0), t && u.queues[e] && u.queues[e].length > 0 && u.queues[e].shift()()
                        },
                        f = function(i) {
                            if (a) return d(i);
                            c && (clearTimeout(c), c = null), u.domainReentrant && i && (u.domains[e] = process.domain);
                            var s = r.maxExecutionTime || u.maxExecutionTime;
                            if (s && (h = setTimeout((function() {
                                    u.queues[e] && d(i, new Error("Maximum execution time is exceeded " + e))
                                }), s)), 1 === t.length) {
                                var n = !1;
                                try {
                                    t((function(e, t) {
                                        n || (n = !0, d(i, e, t))
                                    }))
                                } catch (e) {
                                    n || (n = !0, d(i, e))
                                }
                            } else u._promiseTry((function() {
                                return t()
                            })).then((function(e) {
                                d(i, void 0, e)
                            }), (function(e) {
                                d(i, e)
                            }))
                        };
                    if (u.domainReentrant && process.domain && (f = process.domain.bind(f)), u.queues[e])
                        if (u.domainReentrant && process.domain && process.domain === u.domains[e]) f(!1);
                        else if (u.queues[e].length >= u.maxPending) d(!1, new Error("Too many pending tasks in queue " + e));
                    else {
                        var p = function() {
                            f(!0)
                        };
                        r.skipQueue ? u.queues[e].unshift(p) : u.queues[e].push(p);
                        var _ = r.timeout || u.timeout;
                        _ && (c = setTimeout((function() {
                            c = null, d(!1, new Error("async-lock timed out in queue " + e))
                        }), _))
                    } else u.queues[e] = [], f(!0);
                    var g = r.maxOccupationTime || u.maxOccupationTime;
                    return g && (l = setTimeout((function() {
                        u.queues[e] && d(!1, new Error("Maximum occupation time is exceeded in queue " + e))
                    }), g)), o || void 0
                }, t.prototype._acquireBatch = function(e, t, i, r) {
                    "function" != typeof i && (r = i, i = null);
                    var s = this,
                        n = e.reduceRight((function(e, t) {
                            return function(e, t) {
                                return function(i) {
                                    s.acquire(e, t, i, r)
                                }
                            }(t, e)
                        }), t);
                    if ("function" != typeof i) return new this.Promise((function(e, t) {
                        1 === n.length ? n((function(i, r) {
                            i ? t(i) : e(r)
                        })) : e(n())
                    }));
                    n(i)
                }, t.prototype.isBusy = function(e) {
                    return e ? !!this.queues[e] : Object.keys(this.queues).length > 0
                }, t.prototype._promiseTry = function(e) {
                    try {
                        return this.Promise.resolve(e())
                    } catch (e) {
                        return this.Promise.reject(e)
                    }
                }, e.exports = t
            },
            5623: e => {
                "use strict";

                function t(e, t, s) {
                    e instanceof RegExp && (e = i(e, s)), t instanceof RegExp && (t = i(t, s));
                    var n = r(e, t, s);
                    return n && {
                        start: n[0],
                        end: n[1],
                        pre: s.slice(0, n[0]),
                        body: s.slice(n[0] + e.length, n[1]),
                        post: s.slice(n[1] + t.length)
                    }
                }

                function i(e, t) {
                    var i = t.match(e);
                    return i ? i[0] : null
                }

                function r(e, t, i) {
                    var r, s, n, o, a, c = i.indexOf(e),
                        l = i.indexOf(t, c + 1),
                        h = c;
                    if (c >= 0 && l > 0) {
                        if (e === t) return [c, l];
                        for (r = [], n = i.length; h >= 0 && !a;) h == c ? (r.push(h), c = i.indexOf(e, h + 1)) : 1 == r.length ? a = [r.pop(), l] : ((s = r.pop()) < n && (n = s, o = l), l = i.indexOf(t, h + 1)), h = c < l && c >= 0 ? c : l;
                        r.length && (a = [n, o])
                    }
                    return a
                }
                e.exports = t, t.range = r
            },
            289: (e, t, i) => {
                var r = i(7147),
                    s = i(1017),
                    n = i(2843),
                    o = s.join,
                    a = s.dirname,
                    c = r.accessSync && function(e) {
                        try {
                            r.accessSync(e)
                        } catch (e) {
                            return !1
                        }
                        return !0
                    } || r.existsSync || s.existsSync,
                    l = {
                        arrow: {
                            NODE_ENV: "production",
                            BASE_URL: ""
                        }.NODE_BINDINGS_ARROW || " → ",
                        compiled: {
                            NODE_ENV: "production",
                            BASE_URL: ""
                        }.NODE_BINDINGS_COMPILED_DIR || "compiled",
                        platform: process.platform,
                        arch: process.arch,
                        nodePreGyp: "node-v" + process.versions.modules + "-" + process.platform + "-" + process.arch,
                        version: process.versions.node,
                        bindings: "bindings.node",
                        try: [
                            ["module_root", "build", "bindings"],
                            ["module_root", "build", "Debug", "bindings"],
                            ["module_root", "build", "Release", "bindings"],
                            ["module_root", "out", "Debug", "bindings"],
                            ["module_root", "Debug", "bindings"],
                            ["module_root", "out", "Release", "bindings"],
                            ["module_root", "Release", "bindings"],
                            ["module_root", "build", "default", "bindings"],
                            ["module_root", "compiled", "version", "platform", "arch", "bindings"],
                            ["module_root", "addon-build", "release", "install-root", "bindings"],
                            ["module_root", "addon-build", "debug", "install-root", "bindings"],
                            ["module_root", "addon-build", "default", "install-root", "bindings"],
                            ["module_root", "lib", "binding", "nodePreGyp", "bindings"]
                        ]
                    };
                e.exports = t = function(e) {
                    "string" == typeof e ? e = {
                        bindings: e
                    } : e || (e = {}), Object.keys(l).map((function(t) {
                        t in e || (e[t] = l[t])
                    })), e.module_root || (e.module_root = t.getRoot(t.getFileName())), ".node" != s.extname(e.bindings) && (e.bindings += ".node");
                    for (var i, r, n, a = require, c = [], h = 0, u = e.try.length; h < u; h++) {
                        i = o.apply(null, e.try[h].map((function(t) {
                            return e[t] || t
                        }))), c.push(i);
                        try {
                            return r = e.path ? a.resolve(i) : a(i), e.path || (r.path = i), r
                        } catch (e) {
                            if ("MODULE_NOT_FOUND" !== e.code && "QUALIFIED_PATH_RESOLUTION_FAILED" !== e.code && !/not find/i.test(e.message)) throw e
                        }
                    }
                    throw (n = new Error("Could not locate the bindings file. Tried:\n" + c.map((function(t) {
                        return e.arrow + t
                    })).join("\n"))).tries = c, n
                }, t.getFileName = function(e) {
                    var t, i = Error.prepareStackTrace,
                        r = Error.stackTraceLimit,
                        s = {};
                    Error.stackTraceLimit = 10, Error.prepareStackTrace = function(i, r) {
                        for (var s = 0, n = r.length; s < n; s++)
                            if ((t = r[s].getFileName()) !== __filename) {
                                if (!e) return;
                                if (t !== e) return
                            }
                    }, Error.captureStackTrace(s), s = s.stack, Error.prepareStackTrace = i, Error.stackTraceLimit = r;
                    return 0 === t.indexOf("file://") && (t = n(t)), t
                }, t.getRoot = function(e) {
                    for (var t, i = a(e);;) {
                        if ("." === i && (i = process.cwd()), c(o(i, "package.json")) || c(o(i, "node_modules"))) return i;
                        if (t === i) throw new Error('Could not find module root given file: "' + e + '". Do you have a `package.json` file? ');
                        t = i, i = o(i, "..")
                    }
                }
            },
            3644: (e, t, i) => {
                var r = i(5623);
                e.exports = function(e) {
                    if (!e) return [];
                    "{}" === e.substr(0, 2) && (e = "\\{\\}" + e.substr(2));
                    return g(function(e) {
                        return e.split("\\\\").join(s).split("\\{").join(n).split("\\}").join(o).split("\\,").join(a).split("\\.").join(c)
                    }(e), !0).map(h)
                };
                var s = "\0SLASH" + Math.random() + "\0",
                    n = "\0OPEN" + Math.random() + "\0",
                    o = "\0CLOSE" + Math.random() + "\0",
                    a = "\0COMMA" + Math.random() + "\0",
                    c = "\0PERIOD" + Math.random() + "\0";

                function l(e) {
                    return parseInt(e, 10) == e ? parseInt(e, 10) : e.charCodeAt(0)
                }

                function h(e) {
                    return e.split(s).join("\\").split(n).join("{").split(o).join("}").split(a).join(",").split(c).join(".")
                }

                function u(e) {
                    if (!e) return [""];
                    var t = [],
                        i = r("{", "}", e);
                    if (!i) return e.split(",");
                    var s = i.pre,
                        n = i.body,
                        o = i.post,
                        a = s.split(",");
                    a[a.length - 1] += "{" + n + "}";
                    var c = u(o);
                    return o.length && (a[a.length - 1] += c.shift(), a.push.apply(a, c)), t.push.apply(t, a), t
                }

                function d(e) {
                    return "{" + e + "}"
                }

                function f(e) {
                    return /^-?0\d/.test(e)
                }

                function p(e, t) {
                    return e <= t
                }

                function _(e, t) {
                    return e >= t
                }

                function g(e, t) {
                    var i = [],
                        s = r("{", "}", e);
                    if (!s) return [e];
                    var n = s.pre,
                        a = s.post.length ? g(s.post, !1) : [""];
                    if (/\$$/.test(s.pre))
                        for (var c = 0; c < a.length; c++) {
                            var h = n + "{" + s.body + "}" + a[c];
                            i.push(h)
                        } else {
                            var v, m, b = /^-?\d+\.\.-?\d+(?:\.\.-?\d+)?$/.test(s.body),
                                w = /^[a-zA-Z]\.\.[a-zA-Z](?:\.\.-?\d+)?$/.test(s.body),
                                y = b || w,
                                S = s.body.indexOf(",") >= 0;
                            if (!y && !S) return s.post.match(/,.*\}/) ? g(e = s.pre + "{" + s.body + o + s.post) : [e];
                            if (y) v = s.body.split(/\.\./);
                            else if (1 === (v = u(s.body)).length && 1 === (v = g(v[0], !1).map(d)).length) return a.map((function(e) {
                                return s.pre + v[0] + e
                            }));
                            if (y) {
                                var C = l(v[0]),
                                    x = l(v[1]),
                                    E = Math.max(v[0].length, v[1].length),
                                    O = 3 == v.length ? Math.abs(l(v[2])) : 1,
                                    k = p;
                                x < C && (O *= -1, k = _);
                                var L = v.some(f);
                                m = [];
                                for (var D = C; k(D, x); D += O) {
                                    var M;
                                    if (w) "\\" === (M = String.fromCharCode(D)) && (M = "");
                                    else if (M = String(D), L) {
                                        var A = E - M.length;
                                        if (A > 0) {
                                            var R = new Array(A + 1).join("0");
                                            M = D < 0 ? "-" + R + M.slice(1) : R + M
                                        }
                                    }
                                    m.push(M)
                                }
                            } else {
                                m = [];
                                for (var P = 0; P < v.length; P++) m.push.apply(m, g(v[P], !1))
                            }
                            for (P = 0; P < m.length; P++)
                                for (c = 0; c < a.length; c++) {
                                    h = n + m[P] + a[c];
                                    (!t || y || h) && i.push(h)
                                }
                        }
                    return i
                }
            },
            1990: e => {
                "use strict";

                function t(e, t, i) {
                    return t = t instanceof RegExp ? t : new RegExp(t.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"), "g"), e.replace(t, i)
                }
                var i = {
                    clean: function(e) {
                        if ("string" != typeof e) throw new Error("Expected a string, received: " + e);
                        return e = t(e, "./", "/"), e = t(e, "..", "."), e = t(e, " ", "-"), e = t(e, /^[~^:?*\\\-]/g, ""), e = t(e, /[~^:?*\\]/g, "-"), e = t(e, /[~^:?*\\\-]$/g, ""), e = t(e, "@{", "-"), e = t(e, /\.$/g, ""), e = t(e, /\/$/g, ""), e = t(e, /\.lock$/g, "")
                    }
                };
                e.exports = i
            },
            4606: (e, t) => {
                var i;
                i = function(e) {
                    e.version = "1.2.2";
                    var t = function() {
                            for (var e = 0, t = new Array(256), i = 0; 256 != i; ++i) e = 1 & (e = 1 & (e = 1 & (e = 1 & (e = 1 & (e = 1 & (e = 1 & (e = 1 & (e = i) ? -306674912 ^ e >>> 1 : e >>> 1) ? -306674912 ^ e >>> 1 : e >>> 1) ? -306674912 ^ e >>> 1 : e >>> 1) ? -306674912 ^ e >>> 1 : e >>> 1) ? -306674912 ^ e >>> 1 : e >>> 1) ? -306674912 ^ e >>> 1 : e >>> 1) ? -306674912 ^ e >>> 1 : e >>> 1) ? -306674912 ^ e >>> 1 : e >>> 1, t[i] = e;
                            return "undefined" != typeof Int32Array ? new Int32Array(t) : t
                        }(),
                        i = function(e) {
                            var t = 0,
                                i = 0,
                                r = 0,
                                s = "undefined" != typeof Int32Array ? new Int32Array(4096) : new Array(4096);
                            for (r = 0; 256 != r; ++r) s[r] = e[r];
                            for (r = 0; 256 != r; ++r)
                                for (i = e[r], t = 256 + r; t < 4096; t += 256) i = s[t] = i >>> 8 ^ e[255 & i];
                            var n = [];
                            for (r = 1; 16 != r; ++r) n[r - 1] = "undefined" != typeof Int32Array ? s.subarray(256 * r, 256 * r + 256) : s.slice(256 * r, 256 * r + 256);
                            return n
                        }(t),
                        r = i[0],
                        s = i[1],
                        n = i[2],
                        o = i[3],
                        a = i[4],
                        c = i[5],
                        l = i[6],
                        h = i[7],
                        u = i[8],
                        d = i[9],
                        f = i[10],
                        p = i[11],
                        _ = i[12],
                        g = i[13],
                        v = i[14];
                    e.table = t, e.bstr = function(e, i) {
                        for (var r = -1 ^ i, s = 0, n = e.length; s < n;) r = r >>> 8 ^ t[255 & (r ^ e.charCodeAt(s++))];
                        return ~r
                    }, e.buf = function(e, i) {
                        for (var m = -1 ^ i, b = e.length - 15, w = 0; w < b;) m = v[e[w++] ^ 255 & m] ^ g[e[w++] ^ m >> 8 & 255] ^ _[e[w++] ^ m >> 16 & 255] ^ p[e[w++] ^ m >>> 24] ^ f[e[w++]] ^ d[e[w++]] ^ u[e[w++]] ^ h[e[w++]] ^ l[e[w++]] ^ c[e[w++]] ^ a[e[w++]] ^ o[e[w++]] ^ n[e[w++]] ^ s[e[w++]] ^ r[e[w++]] ^ t[e[w++]];
                        for (b += 15; w < b;) m = m >>> 8 ^ t[255 & (m ^ e[w++])];
                        return ~m
                    }, e.str = function(e, i) {
                        for (var r = -1 ^ i, s = 0, n = e.length, o = 0, a = 0; s < n;)(o = e.charCodeAt(s++)) < 128 ? r = r >>> 8 ^ t[255 & (r ^ o)] : o < 2048 ? r = (r = r >>> 8 ^ t[255 & (r ^ (192 | o >> 6 & 31))]) >>> 8 ^ t[255 & (r ^ (128 | 63 & o))] : o >= 55296 && o < 57344 ? (o = 64 + (1023 & o), a = 1023 & e.charCodeAt(s++), r = (r = (r = (r = r >>> 8 ^ t[255 & (r ^ (240 | o >> 8 & 7))]) >>> 8 ^ t[255 & (r ^ (128 | o >> 2 & 63))]) >>> 8 ^ t[255 & (r ^ (128 | a >> 6 & 15 | (3 & o) << 4))]) >>> 8 ^ t[255 & (r ^ (128 | 63 & a))]) : r = (r = (r = r >>> 8 ^ t[255 & (r ^ (224 | o >> 12 & 15))]) >>> 8 ^ t[255 & (r ^ (128 | o >> 6 & 63))]) >>> 8 ^ t[255 & (r ^ (128 | 63 & o))];
                        return ~r
                    }
                }, "undefined" == typeof DO_NOT_EXPORT_CRC ? i(t) : i({})
            },
            9027: (e, t, i) => {
                var r = i(6375);

                function s(e, t) {
                    for (var i = [], s = e.length, n = t.length, o = function(e, t) {
                            var i = new r(e, t);
                            i.compose();
                            for (var s, n, o = i.getses(), a = e.length - 1, c = t.length - 1, l = o.length - 1; l >= 0; --l) o[l].t === i.SES_COMMON ? (n ? (n.chain = {
                                file1index: a,
                                file2index: c,
                                chain: null
                            }, n = n.chain) : n = s = {
                                file1index: a,
                                file2index: c,
                                chain: null
                            }, a--, c--) : o[l].t === i.SES_DELETE ? a-- : o[l].t === i.SES_ADD && c--;
                            var h = {
                                file1index: -1,
                                file2index: -1,
                                chain: null
                            };
                            return n ? (n.chain = h, s) : h
                        }(e, t); null !== o; o = o.chain) {
                        var a = s - o.file1index - 1,
                            c = n - o.file2index - 1;
                        s = o.file1index, n = o.file2index, (a || c) && i.push({
                            file1: [s + 1, a],
                            file2: [n + 1, c]
                        })
                    }
                    return i.reverse(), i
                }
                e.exports = function(e, t, i) {
                    var r = [],
                        n = [e, t, i],
                        o = function(e, t, i) {
                            var r, n = s(t, e),
                                o = s(t, i),
                                a = [];

                            function c(e, t) {
                                a.push([e.file1[0], t, e.file1[1], e.file2[0], e.file2[1]])
                            }
                            for (r = 0; r < n.length; r++) c(n[r], 0);
                            for (r = 0; r < o.length; r++) c(o[r], 2);
                            a.sort((function(e, t) {
                                return e[0] - t[0]
                            }));
                            var l = [],
                                h = 0;

                            function u(e) {
                                e > h && (l.push([1, h, e - h]), h = e)
                            }
                            for (var d = 0; d < a.length; d++) {
                                for (var f = d, p = a[d], _ = p[0], g = _ + p[2]; d < a.length - 1;) {
                                    var v = a[d + 1],
                                        m = v[0];
                                    if (m > g) break;
                                    g = Math.max(g, m + v[2]), d++
                                }
                                if (u(_), f == d) p[4] > 0 && l.push([p[1], p[3], p[4]]);
                                else {
                                    var b = {
                                        0: [e.length, -1, t.length, -1],
                                        2: [i.length, -1, t.length, -1]
                                    };
                                    for (r = f; r <= d; r++) {
                                        var w = b[(p = a[r])[1]],
                                            y = p[0],
                                            S = y + p[2],
                                            C = p[3],
                                            x = C + p[4];
                                        w[0] = Math.min(C, w[0]), w[1] = Math.max(x, w[1]), w[2] = Math.min(y, w[2]), w[3] = Math.max(S, w[3])
                                    }
                                    var E = b[0][0] + (_ - b[0][2]),
                                        O = b[0][1] + (g - b[0][3]),
                                        k = b[2][0] + (_ - b[2][2]),
                                        L = b[2][1] + (g - b[2][3]);
                                    l.push([-1, E, O - E, _, g - _, k, L - k])
                                }
                                h = g
                            }
                            return u(t.length), l
                        }(e, t, i),
                        a = [];

                    function c() {
                        a.length && r.push({
                            ok: a
                        }), a = []
                    }

                    function l(e) {
                        for (var t = 0; t < e.length; t++) a.push(e[t])
                    }

                    function h(t) {
                        if (t[2] != t[6]) return !0;
                        for (var r = t[1], s = t[5], n = 0; n < t[2]; n++)
                            if (e[n + r] != i[n + s]) return !0;
                        return !1
                    }
                    for (var u = 0; u < o.length; u++) {
                        var d = o[u],
                            f = d[0]; - 1 == f ? h(d) ? (c(), r.push({
                            conflict: {
                                a: e.slice(d[1], d[1] + d[2]),
                                aIndex: d[1],
                                o: t.slice(d[3], d[3] + d[4]),
                                oIndex: d[3],
                                b: i.slice(d[5], d[5] + d[6]),
                                bIndex: d[5]
                            }
                        })) : l(n[0].slice(d[1], d[1] + d[2])) : l(n[f].slice(d[1], d[1] + d[2]))
                    }
                    return c(), r
                }
            },
            6375: e => {
                e.exports = function(e, t) {
                    var i, r, s = e,
                        n = t,
                        o = s.length,
                        a = n.length,
                        c = !1,
                        l = null,
                        h = o + 1,
                        u = [],
                        d = [],
                        f = [],
                        p = "",
                        _ = function(e, t, i) {
                            return {
                                x: e,
                                y: t,
                                k: i
                            }
                        },
                        g = function(e, t) {
                            return {
                                elem: e,
                                t
                            }
                        },
                        v = function(e, t, i) {
                            var r, c, l;
                            for (r = t > i ? u[e - 1 + h] : u[e + 1 + h], c = (l = Math.max(t, i)) - e; c < o && l < a && s[c] === n[l];) ++c, ++l;
                            return u[e + h] = d.length, d[d.length] = new _(c, l, r), l
                        };
                    return o >= a && (i = s, r = o, s = n, n = i, o = a, a = r, c = !0, h = o + 1), {
                        SES_DELETE: -1,
                        SES_COMMON: 0,
                        SES_ADD: 1,
                        editdistance: function() {
                            return l
                        },
                        getlcs: function() {
                            return p
                        },
                        getses: function() {
                            return f
                        },
                        compose: function() {
                            var e, t, i, r, m, b, w, y;
                            for (e = a - o, t = o + a + 3, i = {}, w = 0; w < t; ++w) i[w] = -1, u[w] = -1;
                            r = -1;
                            do {
                                for (y = - ++r; y <= e - 1; ++y) i[y + h] = v(y, i[y - 1 + h] + 1, i[y + 1 + h]);
                                for (y = e + r; y >= e + 1; --y) i[y + h] = v(y, i[y - 1 + h] + 1, i[y + 1 + h]);
                                i[e + h] = v(e, i[e - 1 + h] + 1, i[e + 1 + h])
                            } while (i[e + h] !== a);
                            for (l = e + 2 * r, m = u[e + h], b = []; - 1 !== m;) b[b.length] = new _(d[m].x, d[m].y, null), m = d[m].k;
                            ! function(e) {
                                var t, i, r;
                                for (t = i = 0, r = e.length - 1; r >= 0; --r)
                                    for (; t < e[r].x || i < e[r].y;) e[r].y - e[r].x > i - t ? (f[f.length] = new g(n[i], c ? -1 : 1), ++i) : e[r].y - e[r].x < i - t ? (f[f.length] = new g(s[t], c ? 1 : -1), ++t) : (f[f.length] = new g(s[t], 0), p += s[t], ++t, ++i)
                            }(b)
                        }
                    }
                }
            },
            2843: (e, t, i) => {
                var r = i(1017).sep || "/";
                e.exports = function(e) {
                    if ("string" != typeof e || e.length <= 7 || "file://" != e.substring(0, 7)) throw new TypeError("must pass in a file:// URI to convert to a file path");
                    var t = decodeURI(e.substring(7)),
                        i = t.indexOf("/"),
                        s = t.substring(0, i),
                        n = t.substring(i + 1);
                    "localhost" == s && (s = "");
                    s && (s = r + r + s);
                    n = n.replace(/^(.+)\|/, "$1:"), "\\" == r && (n = n.replace(/\//g, "\\"));
                    /^.+\:/.test(n) || (n = r + n);
                    return s + n
                }
            },
            9662: (e, t, i) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.Bus = void 0;
                const r = i(9989),
                    s = i(3837);
                class n {
                    constructor(e) {
                        this.impl = e;
                        const t = e.signals;
                        this.detached = new r.Signal(t, "detached"), this.message = new r.Signal(t, "message")
                    }
                    attach(e) {
                        return this.impl.attach(e)
                    }
                    post(e, t = null) {
                        this.impl.post(e, t)
                    } [s.inspect.custom](e, t) {
                        return "Bus {}"
                    }
                }
                t.Bus = n
            },
            7849: (e, t, i) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.Cancellable = void 0;
                const r = i(4102),
                    s = i(9989),
                    n = i(3837);
                class o {
                    constructor() {
                        this.impl = new r.binding.Cancellable;
                        const {
                            signals: e
                        } = this.impl;
                        this.cancelled = new s.Signal(e, "cancelled")
                    }
                    get isCancelled() {
                        return this.impl.isCancelled
                    }
                    throwIfCancelled() {
                        this.impl.throwIfCancelled()
                    }
                    cancel() {
                        return this.impl.cancel()
                    } [n.inspect.custom]() {
                        return "Cancellable {}"
                    }
                }
                t.Cancellable = o
            },
            523: (e, t) => {
                "use strict";
                var i;
                Object.defineProperty(t, "__esModule", {
                        value: !0
                    }), t.ChildOrigin = void 0,
                    function(e) {
                        e.Fork = "fork", e.Exec = "exec", e.Spawn = "spawn"
                    }(i || (t.ChildOrigin = i = {}))
            },
            1101: (e, t, i) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.Realm = t.Stdio = t.Scope = t.DeviceType = t.Device = void 0;
                const r = i(9662),
                    s = i(1303),
                    n = i(9077),
                    o = i(9989),
                    a = i(3640),
                    c = i(3837);
                class l {
                    constructor(e) {
                        this.impl = e, this.bus = new r.Bus(e.bus);
                        const {
                            signals: t
                        } = e;
                        this.spawnAdded = new o.Signal(t, "spawn-added"), this.spawnRemoved = new o.Signal(t, "spawn-removed"), this.childAdded = new o.Signal(t, "child-added"), this.childRemoved = new o.Signal(t, "child-removed"), this.processCrashed = new o.Signal(t, "process-crashed"), this.output = new o.Signal(t, "output"), this.uninjected = new o.Signal(t, "uninjected"), this.lost = new o.Signal(t, "lost")
                    }
                    get id() {
                        return this.impl.id
                    }
                    get name() {
                        return this.impl.name
                    }
                    get icon() {
                        return this.impl.icon
                    }
                    get type() {
                        return this.impl.type
                    }
                    get isLost() {
                        return this.impl.isLost
                    }
                    querySystemParameters(e) {
                        return this.impl.querySystemParameters(e)
                    }
                    getFrontmostApplication(e = {}, t) {
                        const {
                            scope: i = null
                        } = e;
                        return this.impl.getFrontmostApplication(i, t)
                    }
                    enumerateApplications(e = {}, t) {
                        const {
                            identifiers: i = [],
                            scope: r = null
                        } = e;
                        return this.impl.enumerateApplications(i, r, t)
                    }
                    enumerateProcesses(e = {}, t) {
                        const {
                            pids: i = [],
                            scope: r = null
                        } = e;
                        return this.impl.enumerateProcesses(i, r, t)
                    }
                    async getProcess(e, t = {}, i) {
                        const {
                            scope: r = u.Minimal
                        } = t, s = await this.enumerateProcesses({
                            scope: r
                        }, i), n = new a.Minimatch(e.toLowerCase()), o = s.filter((e => n.match(e.name.toLowerCase())));
                        if (1 === o.length) return o[0];
                        throw o.length > 1 ? new Error("Ambiguous name; it matches: " + o.map((e => `${e.name} (pid: ${e.pid})`)).join(", ")) : new Error("Process not found")
                    }
                    enableSpawnGating(e) {
                        return this.impl.enableSpawnGating(e)
                    }
                    disableSpawnGating(e) {
                        return this.impl.disableSpawnGating(e)
                    }
                    enumeratePendingSpawn(e) {
                        return this.impl.enumeratePendingSpawn(e)
                    }
                    enumeratePendingChildren(e) {
                        return this.impl.enumeratePendingChildren(e)
                    }
                    spawn(e, t = {}, i) {
                        const r = Object.assign({}, t);
                        let s = h("argv");
                        "string" != typeof e && (s = e, e = s[0], 1 === s.length && (s = null));
                        const n = h("envp"),
                            o = h("env"),
                            a = h("cwd"),
                            c = h("stdio"),
                            l = r;
                        return this.impl.spawn(e, s, n, o, a, c, l, i);

                        function h(e) {
                            const t = r[e];
                            return void 0 === t ? null : (delete r[e], t)
                        }
                    }
                    async input(e, t, i) {
                        const r = await this.getPid(e, i);
                        return this.impl.input(r, t, i)
                    }
                    async resume(e, t) {
                        const i = await this.getPid(e, t);
                        return this.impl.resume(i, t)
                    }
                    async kill(e, t) {
                        const i = await this.getPid(e, t);
                        return this.impl.kill(i, t)
                    }
                    async attach(e, t = {}, i) {
                        const {
                            realm: r = null,
                            persistTimeout: s = null
                        } = t, o = await this.getPid(e, i);
                        return new n.Session(await this.impl.attach(o, r, s, i))
                    }
                    async injectLibraryFile(e, t, i, r, s) {
                        const n = await this.getPid(e, s);
                        return this.impl.injectLibraryFile(n, t, i, r, s)
                    }
                    async injectLibraryBlob(e, t, i, r, s) {
                        const n = await this.getPid(e, s);
                        return this.impl.injectLibraryBlob(n, t, i, r, s)
                    }
                    async openChannel(e, t) {
                        return new s.IOStream(await this.impl.openChannel(e, t))
                    }
                    async unpair(e) {
                        await this.impl.unpair(e)
                    }
                    async getPid(e, t) {
                        if ("number" == typeof e) return e;
                        return (await this.getProcess(e, {}, t)).pid
                    } [c.inspect.custom](e, t) {
                        return "Device " + (0, c.inspect)({
                            id: this.id,
                            name: this.name,
                            icon: this.icon,
                            type: this.type
                        }, t)
                    }
                }
                var h, u, d, f;
                t.Device = l,
                    function(e) {
                        e.Local = "local", e.Remote = "remote", e.Usb = "usb"
                    }(h || (t.DeviceType = h = {})),
                    function(e) {
                        e.Minimal = "minimal", e.Metadata = "metadata", e.Full = "full"
                    }(u || (t.Scope = u = {})),
                    function(e) {
                        e.Inherit = "inherit", e.Pipe = "pipe"
                    }(d || (t.Stdio = d = {})),
                    function(e) {
                        e.Native = "native", e.Emulated = "emulated"
                    }(f || (t.Realm = f = {}))
            },
            4386: (e, t, i) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.DeviceManager = void 0;
                const r = i(1101),
                    s = i(4102),
                    n = i(9989),
                    o = i(3837);
                class a {
                    constructor() {
                        this.impl = new s.binding.DeviceManager;
                        const e = new c(this.impl.signals);
                        this.added = new n.Signal(e, "added"), this.removed = new n.Signal(e, "removed"), this.changed = new n.Signal(e, "changed")
                    }
                    async enumerateDevices(e) {
                        return (await this.impl.enumerateDevices(e)).map((e => new r.Device(e)))
                    }
                    async addRemoteDevice(e, t = {}, i) {
                        const {
                            certificate: s = null,
                            origin: n = null,
                            token: o = null,
                            keepaliveInterval: a = null
                        } = t;
                        return new r.Device(await this.impl.addRemoteDevice(e, s, n, o, a, i))
                    }
                    removeRemoteDevice(e, t) {
                        return this.impl.removeRemoteDevice(e, t)
                    } [o.inspect.custom]() {
                        return "DeviceManager {}"
                    }
                }
                t.DeviceManager = a;
                class c extends n.SignalAdapter {
                    constructor(e) {
                        super(e)
                    }
                    getProxy(e, t) {
                        return "added" === e || "removed" === e ? e => t(new r.Device(e)) : null
                    }
                }
            },
            6142: (e, t, i) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.EndpointParameters = void 0;
                const r = i(4102),
                    s = i(3837);
                class n {
                    constructor({
                        address: e = null,
                        port: t = null,
                        certificate: i = null,
                        origin: s = null,
                        authentication: n = null,
                        assetRoot: o = null
                    } = {}) {
                        let a = null,
                            c = null;
                        null !== n && ("token" === n.scheme ? a = n.token : c = n.callback), this.impl = new r.binding.EndpointParameters(e, t, i, s, a, c, o)
                    } [s.inspect.custom]() {
                        return "EndpointParameters {}"
                    }
                }
                t.EndpointParameters = n
            },
            9495: (e, t, i) => {
                "use strict";
                t.Wp = t.bK = t.K0 = t.e3 = t.Ru = t.Yi = void 0;
                const r = i(9662),
                    s = i(7849),
                    n = i(523),
                    o = i(4386),
                    a = i(1101),
                    c = i(6142),
                    l = i(1303),
                    h = i(134),
                    u = i(2990),
                    d = i(9558),
                    f = i(6966),
                    p = i(9077);
                o.DeviceManager, a.Device, t.Yi = a.DeviceType, a.Scope, a.Stdio, a.Realm, p.Session, p.SessionDetachReason, f.Script, f.ScriptRuntime, f.MessageType, f.LogLevel, d.Relay, d.RelayKind, h.PortalMembership, u.PortalService, c.EndpointParameters, l.IOStream, s.Cancellable, n.ChildOrigin, r.Bus;
                let _ = null;

                function g() {
                    return null === _ && (_ = new o.DeviceManager), _
                }

                function v(e) {
                    return m((e => e.type === t.Yi.Local), {}, e)
                }
                async function m(e, t = {}, i) {
                    const r = await b(e, i);
                    if (null !== r) return r;
                    const {
                        timeout: s = 0
                    } = t;
                    if (0 === s) throw new Error("Device not found");
                    const n = new Promise(((t, r) => {
                        const n = g();
                        n.added.connect(a);
                        const o = null !== s ? setTimeout((function() {
                            l(new Error("Timed out while waiting for device to appear"))
                        }), s) : null;

                        function a(t) {
                            e(t) && c(t)
                        }

                        function c(e) {
                            u(), t(e)
                        }

                        function l(e) {
                            u(), r(e)
                        }

                        function h() {
                            l(new Error("Operation was cancelled"))
                        }

                        function u() {
                            void 0 !== i && i.cancelled.disconnect(h), null !== o && clearTimeout(o), n.added.disconnect(a)
                        }
                        void 0 !== i && (i.cancelled.connect(h), i.isCancelled) ? h() : b(e, i).then((e => {
                            null !== e && c(e)
                        })).catch(l)
                    }));
                    return await n
                }
                async function b(e, t) {
                    const i = g(),
                        r = (await i.enumerateDevices(t)).filter(e);
                    return 0 === r.length ? null : r[0]
                }
                t.Ru = async function(e) {
                    const t = g();
                    return await t.enumerateDevices(e)
                }, t.e3 = g, t.K0 = v, t.bK = function(e) {
                    return m((e => e.type === t.Yi.Remote), {}, e)
                }, t.Wp = function(e, i) {
                    return m((e => e.type === t.Yi.Usb), e, i)
                }
            },
            1303: (e, t, i) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.IOStream = void 0;
                const r = i(7849),
                    s = i(2781);
                class n extends s.Duplex {
                    constructor(e) {
                        super({}), this.impl = e, this.pending = new Set, this.cancellable = new r.Cancellable
                    }
                    async _destroy(e, t) {
                        this.cancellable.cancel();
                        for (const e of this.pending) try {
                            await e
                        } catch (e) {}
                        try {
                            await this.impl.close()
                        } catch (e) {}
                        t(e)
                    }
                    _read(e) {
                        const t = this.impl.read(e, this.cancellable).then((e => {
                            0 === e.length ? this.push(null) : this.push(e)
                        })).catch((e => {
                            this.impl.isClosed && this.push(null), this.emit("error", e)
                        }));
                        this.track(t)
                    }
                    _write(e, t, i) {
                        let r;
                        r = Buffer.isBuffer(e) ? e : Buffer.from(e, t);
                        const s = this.impl.write(r, this.cancellable).then((() => {
                            i(null)
                        })).catch((e => {
                            i(e)
                        }));
                        this.track(s)
                    }
                    track(e) {
                        this.pending.add(e), e.catch((e => {})).finally((() => {
                            this.pending.delete(e)
                        }))
                    }
                }
                t.IOStream = n
            },
            4102: (e, t, i) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.binding = void 0;
                const r = i(289);
                t.binding = r({
                    bindings: "frida_binding",
                    try: [
                        ["module_root", "build", "bindings"],
                        ["module_root", "build", "Debug", "bindings"],
                        ["module_root", "build", "Release", "bindings"],
                        ["module_root", "out", "Debug", "bindings"],
                        ["module_root", "Debug", "bindings"],
                        ["module_root", "out", "Release", "bindings"],
                        ["module_root", "Release", "bindings"],
                        ["module_root", "build", "default", "bindings"],
                        ["module_root", "compiled", "version", "platform", "arch", "bindings"],
                        [process.cwd(), "bindings"]
                    ]
                })
            },
            134: (e, t) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.PortalMembership = void 0;
                t.PortalMembership = class {
                    constructor(e) {
                        this.impl = e
                    }
                    terminate(e) {
                        return this.impl.terminate(e)
                    }
                }
            },
            2990: (e, t, i) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.PortalService = void 0;
                const r = i(1101),
                    s = i(4102),
                    n = i(9989),
                    o = i(3837);
                class a {
                    constructor({
                        clusterParams: e = null,
                        controlParams: t = null
                    } = {}) {
                        const i = new s.binding.PortalService(e, t);
                        this.impl = i, this.device = new r.Device(i.device);
                        const {
                            signals: o
                        } = i;
                        this.nodeConnected = new n.Signal(o, "node-connected"), this.nodeJoined = new n.Signal(o, "node-joined"), this.nodeLeft = new n.Signal(o, "node-left"), this.nodeDisconnected = new n.Signal(o, "node-disconnected"), this.controllerConnected = new n.Signal(o, "controller-connected"), this.controllerDisconnected = new n.Signal(o, "controller-disconnected"), this.authenticated = new n.Signal(o, "authenticated"), this.subscribe = new n.Signal(o, "subscribe"), this.message = new n.Signal(o, "message")
                    }
                    start(e) {
                        return this.impl.start(e)
                    }
                    stop(e) {
                        return this.impl.stop(e)
                    }
                    post(e, t, i = null) {
                        this.impl.post(e, t, i)
                    }
                    narrowcast(e, t, i = null) {
                        this.impl.narrowcast(e, t, i)
                    }
                    broadcast(e, t = null) {
                        this.impl.broadcast(e, t)
                    }
                    enumerateTags(e) {
                        return this.impl.enumerateTags(e)
                    }
                    tag(e, t) {
                        this.impl.tag(e, t)
                    }
                    untag(e, t) {
                        this.impl.untag(e, t)
                    } [o.inspect.custom]() {
                        return "PortalService {}"
                    }
                }
                t.PortalService = a
            },
            9558: (e, t, i) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.RelayKind = t.Relay = void 0;
                const r = i(4102),
                    s = i(3837);
                class n {
                    constructor({
                        address: e,
                        username: t,
                        password: i,
                        kind: s
                    }) {
                        this.impl = new r.binding.Relay(e, t, i, s)
                    }
                    get address() {
                        return this.impl.address
                    }
                    get username() {
                        return this.impl.username
                    }
                    get password() {
                        return this.impl.password
                    }
                    get kind() {
                        return this.impl.kind
                    } [s.inspect.custom](e, t) {
                        return (0, s.inspect)(this.impl, Object.assign(Object.assign({}, t), {
                            depth: e
                        }))
                    }
                }
                var o;
                t.Relay = n,
                    function(e) {
                        e.TurnUDP = "turn-udp", e.TurnTCP = "turn-tcp", e.TurnTLS = "turn-tls"
                    }(o || (t.RelayKind = o = {}))
            },
            6966: (e, t, i) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.LogLevel = t.MessageType = t.ScriptRuntime = t.Script = void 0;
                const r = i(7849),
                    s = i(9989),
                    n = i(3837);
                class o {
                    constructor(e) {
                        this.impl = e, this.logHandlerImpl = g;
                        const t = new u(this, e.signals),
                            i = t;
                        this.exportsProxy = new d(i);
                        const r = t;
                        this.destroyed = new s.Signal(r, "destroyed"), this.message = new s.Signal(r, "message")
                    }
                    get isDestroyed() {
                        return this.impl.isDestroyed
                    }
                    get exports() {
                        return this.exportsProxy
                    }
                    get logHandler() {
                        return this.logHandlerImpl
                    }
                    set logHandler(e) {
                        this.logHandlerImpl = e
                    }
                    get defaultLogHandler() {
                        return g
                    }
                    load(e) {
                        return this.impl.load(e)
                    }
                    unload(e) {
                        return this.impl.unload(e)
                    }
                    eternalize(e) {
                        return this.impl.eternalize(e)
                    }
                    post(e, t = null) {
                        this.impl.post(e, t)
                    }
                    enableDebugger(e = {}, t) {
                        const {
                            port: i = 0
                        } = e;
                        return this.impl.enableDebugger(i, t)
                    }
                    disableDebugger(e) {
                        return this.impl.disableDebugger(e)
                    } [n.inspect.custom](e, t) {
                        return "Script {}"
                    }
                }
                var a, c, l, h;
                t.Script = o,
                    function(e) {
                        e.Default = "default", e.QJS = "qjs", e.V8 = "v8"
                    }(a || (t.ScriptRuntime = a = {})),
                    function(e) {
                        e.Send = "send", e.Error = "error"
                    }(c || (t.MessageType = c = {})),
                    function(e) {
                        e.Info = "info", e.Warning = "warning", e.Error = "error"
                    }(l || (t.LogLevel = l = {}));
                class u extends s.SignalAdapter {
                    constructor(e, t) {
                        super(t), this.script = e, this.pendingRequests = {}, this.nextRequestId = 1, this.onDestroyed = () => {
                            this.signals.disconnect("destroyed", this.onDestroyed), this.signals.disconnect("message", this.onMessage)
                        }, this.onMessage = (e, t) => {
                            if (e.type === c.Send && p(e)) {
                                const [, i, r, ...s] = e.payload;
                                this.onRpcMessage(i, r, s, t)
                            } else if (_(e)) {
                                const t = e;
                                this.script.logHandler(t.level, t.payload)
                            }
                        }, this.signals.connect("destroyed", this.onDestroyed), this.signals.connect("message", this.onMessage)
                    }
                    getProxy(e, t) {
                        return "message" === e ? (e, i) => {
                            (function(e) {
                                return function(e) {
                                    return e.type === c.Send && p(e)
                                }(e) || _(e)
                            })(e) || t(e, i)
                        } : null
                    }
                    request(e, t, i) {
                        return new Promise(((r, s) => {
                            const n = this.nextRequestId++,
                                o = (e, t) => {
                                    void 0 !== i && i.cancelled.disconnect(c), this.signals.disconnect("destroyed", a), delete this.pendingRequests[n], null === e ? r(t) : s(e)
                                };

                            function a() {
                                o(new Error("Script is destroyed"))
                            }

                            function c() {
                                o(new Error("Operation was cancelled"))
                            }
                            this.pendingRequests[n] = o, this.script.post(["frida:rpc", n, e].concat(t)), this.signals.connect("destroyed", a), void 0 !== i && (i.cancelled.connect(c), i.isCancelled) ? c() : this.script.isDestroyed && a()
                        }))
                    }
                    onRpcMessage(e, t, i, r) {
                        if (t === h.Ok || t === h.Error) {
                            const s = this.pendingRequests[e];
                            if (void 0 === s) return;
                            let n = null,
                                o = null;
                            if (t === h.Ok) n = null !== r ? r : i[0];
                            else {
                                const [e, t, r, s] = i;
                                o = new Error(e), o.name = t, o.stack = r, Object.assign(o, s)
                            }
                            s(o, n)
                        }
                    }
                }

                function d(e) {
                    return new Proxy(this, {
                        has: (e, t) => !m(t),
                        get: (t, i, s) => i in t ? t[i] : i === n.inspect.custom ? f : m(i) ? void 0 : (...t) => {
                            let s;
                            return t[t.length - 1] instanceof r.Cancellable && (s = t.pop()), e.request("call", [i, t], s)
                        },
                        set: (e, t, i, r) => (e[t] = i, !0),
                        ownKeys: e => Object.getOwnPropertyNames(e),
                        getOwnPropertyDescriptor: (e, t) => t in e ? Object.getOwnPropertyDescriptor(e, t) : m(t) ? void 0 : {
                            writable: !0,
                            configurable: !0,
                            enumerable: !0
                        }
                    })
                }

                function f() {
                    return "ScriptExportsProxy {}"
                }

                function p(e) {
                    const t = e.payload;
                    return !!Array.isArray(t) && "frida:rpc" === t[0]
                }

                function _(e) {
                    return "log" === e.type
                }

                function g(e, t) {
                    switch (e) {
                        case l.Info:
                            console.log(t);
                            break;
                        case l.Warning:
                            console.warn(t);
                            break;
                        case l.Error:
                            console.error(t)
                    }
                }! function(e) {
                    e.Ok = "ok", e.Error = "error"
                }(h || (h = {}));
                const v = new Set(["then", "catch", "finally"]);

                function m(e) {
                    return v.has(e.toString())
                }
            },
            9077: (e, t, i) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.SessionDetachReason = t.Session = void 0;
                const r = i(134),
                    s = i(6966),
                    n = i(9989),
                    o = i(3837);
                class a {
                    constructor(e) {
                        this.impl = e;
                        const {
                            signals: t
                        } = e;
                        this.detached = new n.Signal(t, "detached")
                    }
                    get pid() {
                        return this.impl.pid
                    }
                    get persistTimeout() {
                        return this.impl.persistTimeout
                    }
                    get isDetached() {
                        return this.impl.isDetached
                    }
                    detach(e) {
                        return this.impl.detach(e)
                    }
                    resume(e) {
                        return this.impl.resume(e)
                    }
                    enableChildGating(e) {
                        return this.impl.enableChildGating(e)
                    }
                    disableChildGating(e) {
                        return this.impl.disableChildGating(e)
                    }
                    async createScript(e, t = {}, i) {
                        const {
                            name: r = null,
                            snapshot: n = null,
                            runtime: o = null
                        } = t;
                        return new s.Script(await this.impl.createScript(e, r, n, o, i))
                    }
                    async createScriptFromBytes(e, t = {}, i) {
                        const {
                            name: r = null,
                            snapshot: n = null,
                            runtime: o = null
                        } = t;
                        return new s.Script(await this.impl.createScriptFromBytes(e, r, n, o, i))
                    }
                    compileScript(e, t = {}, i) {
                        const {
                            name: r = null,
                            runtime: s = null
                        } = t;
                        return this.impl.compileScript(e, r, s, i)
                    }
                    snapshotScript(e, t = {}, i) {
                        const {
                            warmupScript: r = null,
                            runtime: s = null
                        } = t;
                        return this.impl.snapshotScript(e, r, s, i)
                    }
                    setupPeerConnection(e = {}, t) {
                        const {
                            stunServer: i = null,
                            relays: r = []
                        } = e;
                        return this.impl.setupPeerConnection(i, r, t)
                    }
                    async joinPortal(e, t = {}, i) {
                        const {
                            certificate: s = null,
                            token: n = null,
                            acl: o = null
                        } = t;
                        return new r.PortalMembership(await this.impl.joinPortal(e, s, n, o, i))
                    } [o.inspect.custom](e, t) {
                        return "Session " + (0, o.inspect)({
                            pid: this.pid
                        }, t)
                    }
                }
                var c;
                t.Session = a,
                    function(e) {
                        e.ApplicationRequested = "application-requested", e.ProcessReplaced = "process-replaced", e.ProcessTerminated = "process-terminated", e.ConnectionTerminated = "connection-terminated", e.DeviceLost = "device-lost"
                    }(c || (t.SessionDetachReason = c = {}))
            },
            9989: (e, t) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.SignalAdapter = t.Signal = void 0;
                t.Signal = class {
                    constructor(e, t) {
                        this.signals = e, this.name = t
                    }
                    connect(e) {
                        this.signals.connect(this.name, e)
                    }
                    disconnect(e) {
                        this.signals.disconnect(this.name, e)
                    }
                };
                t.SignalAdapter = class {
                    constructor(e) {
                        this.signals = e, this.proxyHandlers = new Map
                    }
                    connect(e, t) {
                        const i = this.getProxy(e, t);
                        null !== i ? (this.proxyHandlers.set(t, i), this.signals.connect(e, i)) : this.signals.connect(e, t)
                    }
                    disconnect(e, t) {
                        const i = this.proxyHandlers.get(t);
                        this.signals.disconnect(e, void 0 !== i ? i : t)
                    }
                    getProxy(e, t) {
                        return null
                    }
                }
            },
            5151: e => {
                function t(e) {
                    return Array.isArray(e) ? e : [e]
                }
                const i = /^\s+$/,
                    r = /^\\!/,
                    s = /^\\#/,
                    n = /\r?\n/g,
                    o = /^\.*\/|^\.+$/,
                    a = "undefined" != typeof Symbol ? Symbol.for("node-ignore") : "node-ignore",
                    c = /([0-z])-([0-z])/g,
                    l = () => !1,
                    h = [
                        [/\\?\s+$/, e => 0 === e.indexOf("\\") ? " " : ""],
                        [/\\\s/g, () => " "],
                        [/[\\$.|*+(){^]/g, e => `\\${e}`],
                        [/(?!\\)\?/g, () => "[^/]"],
                        [/^\//, () => "^"],
                        [/\//g, () => "\\/"],
                        [/^\^*\\\*\\\*\\\//, () => "^(?:.*\\/)?"],
                        [/^(?=[^^])/, function() {
                            return /\/(?!$)/.test(this) ? "^" : "(?:^|\\/)"
                        }],
                        [/\\\/\\\*\\\*(?=\\\/|$)/g, (e, t, i) => t + 6 < i.length ? "(?:\\/[^\\/]+)*" : "\\/.+"],
                        [/(^|[^\\]+)\\\*(?=.+)/g, (e, t) => `${t}[^\\/]*`],
                        [/\\\\\\(?=[$.|*+(){^])/g, () => "\\"],
                        [/\\\\/g, () => "\\"],
                        [/(\\)?\[([^\]/]*?)(\\*)($|\])/g, (e, t, i, r, s) => "\\" === t ? `\\[${i}${(e=>{const{length:t}=e;return e.slice(0,t-t%2)})(r)}${s}` : "]" === s && r.length % 2 == 0 ? `[${(e=>e.replace(c,((e,t,i)=>t.charCodeAt(0)<=i.charCodeAt(0)?e:"")))(i)}${r}]` : "[]"],
                        [/(?:[^*])$/, e => /\/$/.test(e) ? `${e}$` : `${e}(?=$|\\/$)`],
                        [/(\^|\\\/)?\\\*$/, (e, t) => `${t?`${t}[^/]+`:"[^/]*"}(?=$|\\/$)`]
                    ],
                    u = Object.create(null),
                    d = e => "string" == typeof e;
                class f {
                    constructor(e, t, i, r) {
                        this.origin = e, this.pattern = t, this.negative = i, this.regex = r
                    }
                }
                const p = (e, t) => {
                        const i = e;
                        let n = !1;
                        0 === e.indexOf("!") && (n = !0, e = e.substr(1));
                        const o = ((e, t) => {
                            let i = u[e];
                            return i || (i = h.reduce(((t, i) => t.replace(i[0], i[1].bind(e))), e), u[e] = i), t ? new RegExp(i, "i") : new RegExp(i)
                        })(e = e.replace(r, "!").replace(s, "#"), t);
                        return new f(i, e, n, o)
                    },
                    _ = (e, t) => {
                        throw new t(e)
                    },
                    g = (e, t, i) => {
                        if (!d(e)) return i(`path must be a string, but got \`${t}\``, TypeError);
                        if (!e) return i("path must not be empty", TypeError);
                        if (g.isNotRelative(e)) {
                            return i(`path should be a ${"`path.relative()`d"} string, but got "${t}"`, RangeError)
                        }
                        return !0
                    },
                    v = e => o.test(e);
                g.isNotRelative = v, g.convert = e => e;
                class m {
                    constructor({
                        ignorecase: e = !0,
                        ignoreCase: t = e,
                        allowRelativePaths: i = !1
                    } = {}) {
                        var r, s, n;
                        r = this, s = a, n = !0, Object.defineProperty(r, s, {
                            value: n
                        }), this._rules = [], this._ignoreCase = t, this._allowRelativePaths = i, this._initCache()
                    }
                    _initCache() {
                        this._ignoreCache = Object.create(null), this._testCache = Object.create(null)
                    }
                    _addPattern(e) {
                        if (e && e[a]) return this._rules = this._rules.concat(e._rules), void(this._added = !0);
                        if ((e => e && d(e) && !i.test(e) && 0 !== e.indexOf("#"))(e)) {
                            const t = p(e, this._ignoreCase);
                            this._added = !0, this._rules.push(t)
                        }
                    }
                    add(e) {
                        return this._added = !1, t(d(e) ? (e => e.split(n))(e) : e).forEach(this._addPattern, this), this._added && this._initCache(), this
                    }
                    addPattern(e) {
                        return this.add(e)
                    }
                    _testOne(e, t) {
                        let i = !1,
                            r = !1;
                        return this._rules.forEach((s => {
                            const {
                                negative: n
                            } = s;
                            if (r === n && i !== r || n && !i && !r && !t) return;
                            s.regex.test(e) && (i = !n, r = n)
                        })), {
                            ignored: i,
                            unignored: r
                        }
                    }
                    _test(e, t, i, r) {
                        const s = e && g.convert(e);
                        return g(s, e, this._allowRelativePaths ? l : _), this._t(s, t, i, r)
                    }
                    _t(e, t, i, r) {
                        if (e in t) return t[e];
                        if (r || (r = e.split("/")), r.pop(), !r.length) return t[e] = this._testOne(e, i);
                        const s = this._t(r.join("/") + "/", t, i, r);
                        return t[e] = s.ignored ? s : this._testOne(e, i)
                    }
                    ignores(e) {
                        return this._test(e, this._ignoreCache, !1).ignored
                    }
                    createFilter() {
                        return e => !this.ignores(e)
                    }
                    filter(e) {
                        return t(e).filter(this.createFilter())
                    }
                    test(e) {
                        return this._test(e, this._testCache, !0)
                    }
                }
                const b = e => new m(e);
                if (b.isPathValid = e => g(e && g.convert(e), e, l), b.default = b, e.exports = b, "undefined" != typeof process && ({
                        NODE_ENV: "production",
                        BASE_URL: ""
                    }.IGNORE_TEST_WIN32 || "win32" === process.platform)) {
                    const e = e => /^\\\\\?\\/.test(e) || /["<>|\u0000-\u001F]+/u.test(e) ? e : e.replace(/\\/g, "/");
                    g.convert = e;
                    const t = /^[a-z]:\//i;
                    g.isNotRelative = e => t.test(e) || v(e)
                }
            },
            5717: e => {
                "function" == typeof Object.create ? e.exports = function(e, t) {
                    t && (e.super_ = t, e.prototype = Object.create(t.prototype, {
                        constructor: {
                            value: e,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }))
                } : e.exports = function(e, t) {
                    if (t) {
                        e.super_ = t;
                        var i = function() {};
                        i.prototype = t.prototype, e.prototype = new i, e.prototype.constructor = e
                    }
                }
            },
            9591: (e, t, i) => {
                "use strict";
                var r = {};
                (0, i(4236).assign)(r, i(4555), i(8843), i(1619)), e.exports = r
            },
            4555: (e, t, i) => {
                "use strict";
                var r = i(405),
                    s = i(4236),
                    n = i(9373),
                    o = i(8898),
                    a = i(2292),
                    c = Object.prototype.toString;

                function l(e) {
                    if (!(this instanceof l)) return new l(e);
                    this.options = s.assign({
                        level: -1,
                        method: 8,
                        chunkSize: 16384,
                        windowBits: 15,
                        memLevel: 8,
                        strategy: 0,
                        to: ""
                    }, e || {});
                    var t = this.options;
                    t.raw && t.windowBits > 0 ? t.windowBits = -t.windowBits : t.gzip && t.windowBits > 0 && t.windowBits < 16 && (t.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new a, this.strm.avail_out = 0;
                    var i = r.deflateInit2(this.strm, t.level, t.method, t.windowBits, t.memLevel, t.strategy);
                    if (0 !== i) throw new Error(o[i]);
                    if (t.header && r.deflateSetHeader(this.strm, t.header), t.dictionary) {
                        var h;
                        if (h = "string" == typeof t.dictionary ? n.string2buf(t.dictionary) : "[object ArrayBuffer]" === c.call(t.dictionary) ? new Uint8Array(t.dictionary) : t.dictionary, 0 !== (i = r.deflateSetDictionary(this.strm, h))) throw new Error(o[i]);
                        this._dict_set = !0
                    }
                }

                function h(e, t) {
                    var i = new l(t);
                    if (i.push(e, !0), i.err) throw i.msg || o[i.err];
                    return i.result
                }
                l.prototype.push = function(e, t) {
                    var i, o, a = this.strm,
                        l = this.options.chunkSize;
                    if (this.ended) return !1;
                    o = t === ~~t ? t : !0 === t ? 4 : 0, "string" == typeof e ? a.input = n.string2buf(e) : "[object ArrayBuffer]" === c.call(e) ? a.input = new Uint8Array(e) : a.input = e, a.next_in = 0, a.avail_in = a.input.length;
                    do {
                        if (0 === a.avail_out && (a.output = new s.Buf8(l), a.next_out = 0, a.avail_out = l), 1 !== (i = r.deflate(a, o)) && 0 !== i) return this.onEnd(i), this.ended = !0, !1;
                        0 !== a.avail_out && (0 !== a.avail_in || 4 !== o && 2 !== o) || ("string" === this.options.to ? this.onData(n.buf2binstring(s.shrinkBuf(a.output, a.next_out))) : this.onData(s.shrinkBuf(a.output, a.next_out)))
                    } while ((a.avail_in > 0 || 0 === a.avail_out) && 1 !== i);
                    return 4 === o ? (i = r.deflateEnd(this.strm), this.onEnd(i), this.ended = !0, 0 === i) : 2 !== o || (this.onEnd(0), a.avail_out = 0, !0)
                }, l.prototype.onData = function(e) {
                    this.chunks.push(e)
                }, l.prototype.onEnd = function(e) {
                    0 === e && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = s.flattenChunks(this.chunks)), this.chunks = [], this.err = e, this.msg = this.strm.msg
                }, t.Deflate = l, t.deflate = h, t.deflateRaw = function(e, t) {
                    return (t = t || {}).raw = !0, h(e, t)
                }, t.gzip = function(e, t) {
                    return (t = t || {}).gzip = !0, h(e, t)
                }
            },
            8843: (e, t, i) => {
                "use strict";
                var r = i(7948),
                    s = i(4236),
                    n = i(9373),
                    o = i(1619),
                    a = i(8898),
                    c = i(2292),
                    l = i(2401),
                    h = Object.prototype.toString;

                function u(e) {
                    if (!(this instanceof u)) return new u(e);
                    this.options = s.assign({
                        chunkSize: 16384,
                        windowBits: 0,
                        to: ""
                    }, e || {});
                    var t = this.options;
                    t.raw && t.windowBits >= 0 && t.windowBits < 16 && (t.windowBits = -t.windowBits, 0 === t.windowBits && (t.windowBits = -15)), !(t.windowBits >= 0 && t.windowBits < 16) || e && e.windowBits || (t.windowBits += 32), t.windowBits > 15 && t.windowBits < 48 && 0 == (15 & t.windowBits) && (t.windowBits |= 15), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new c, this.strm.avail_out = 0;
                    var i = r.inflateInit2(this.strm, t.windowBits);
                    if (i !== o.Z_OK) throw new Error(a[i]);
                    if (this.header = new l, r.inflateGetHeader(this.strm, this.header), t.dictionary && ("string" == typeof t.dictionary ? t.dictionary = n.string2buf(t.dictionary) : "[object ArrayBuffer]" === h.call(t.dictionary) && (t.dictionary = new Uint8Array(t.dictionary)), t.raw && (i = r.inflateSetDictionary(this.strm, t.dictionary)) !== o.Z_OK)) throw new Error(a[i])
                }

                function d(e, t) {
                    var i = new u(t);
                    if (i.push(e, !0), i.err) throw i.msg || a[i.err];
                    return i.result
                }
                u.prototype.push = function(e, t) {
                    var i, a, c, l, u, d = this.strm,
                        f = this.options.chunkSize,
                        p = this.options.dictionary,
                        _ = !1;
                    if (this.ended) return !1;
                    a = t === ~~t ? t : !0 === t ? o.Z_FINISH : o.Z_NO_FLUSH, "string" == typeof e ? d.input = n.binstring2buf(e) : "[object ArrayBuffer]" === h.call(e) ? d.input = new Uint8Array(e) : d.input = e, d.next_in = 0, d.avail_in = d.input.length;
                    do {
                        if (0 === d.avail_out && (d.output = new s.Buf8(f), d.next_out = 0, d.avail_out = f), (i = r.inflate(d, o.Z_NO_FLUSH)) === o.Z_NEED_DICT && p && (i = r.inflateSetDictionary(this.strm, p)), i === o.Z_BUF_ERROR && !0 === _ && (i = o.Z_OK, _ = !1), i !== o.Z_STREAM_END && i !== o.Z_OK) return this.onEnd(i), this.ended = !0, !1;
                        d.next_out && (0 !== d.avail_out && i !== o.Z_STREAM_END && (0 !== d.avail_in || a !== o.Z_FINISH && a !== o.Z_SYNC_FLUSH) || ("string" === this.options.to ? (c = n.utf8border(d.output, d.next_out), l = d.next_out - c, u = n.buf2string(d.output, c), d.next_out = l, d.avail_out = f - l, l && s.arraySet(d.output, d.output, c, l, 0), this.onData(u)) : this.onData(s.shrinkBuf(d.output, d.next_out)))), 0 === d.avail_in && 0 === d.avail_out && (_ = !0)
                    } while ((d.avail_in > 0 || 0 === d.avail_out) && i !== o.Z_STREAM_END);
                    return i === o.Z_STREAM_END && (a = o.Z_FINISH), a === o.Z_FINISH ? (i = r.inflateEnd(this.strm), this.onEnd(i), this.ended = !0, i === o.Z_OK) : a !== o.Z_SYNC_FLUSH || (this.onEnd(o.Z_OK), d.avail_out = 0, !0)
                }, u.prototype.onData = function(e) {
                    this.chunks.push(e)
                }, u.prototype.onEnd = function(e) {
                    e === o.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = s.flattenChunks(this.chunks)), this.chunks = [], this.err = e, this.msg = this.strm.msg
                }, t.Inflate = u, t.inflate = d, t.inflateRaw = function(e, t) {
                    return (t = t || {}).raw = !0, d(e, t)
                }, t.ungzip = d
            },
            4236: (e, t) => {
                "use strict";
                var i = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;

                function r(e, t) {
                    return Object.prototype.hasOwnProperty.call(e, t)
                }
                t.assign = function(e) {
                    for (var t = Array.prototype.slice.call(arguments, 1); t.length;) {
                        var i = t.shift();
                        if (i) {
                            if ("object" != typeof i) throw new TypeError(i + "must be non-object");
                            for (var s in i) r(i, s) && (e[s] = i[s])
                        }
                    }
                    return e
                }, t.shrinkBuf = function(e, t) {
                    return e.length === t ? e : e.subarray ? e.subarray(0, t) : (e.length = t, e)
                };
                var s = {
                        arraySet: function(e, t, i, r, s) {
                            if (t.subarray && e.subarray) e.set(t.subarray(i, i + r), s);
                            else
                                for (var n = 0; n < r; n++) e[s + n] = t[i + n]
                        },
                        flattenChunks: function(e) {
                            var t, i, r, s, n, o;
                            for (r = 0, t = 0, i = e.length; t < i; t++) r += e[t].length;
                            for (o = new Uint8Array(r), s = 0, t = 0, i = e.length; t < i; t++) n = e[t], o.set(n, s), s += n.length;
                            return o
                        }
                    },
                    n = {
                        arraySet: function(e, t, i, r, s) {
                            for (var n = 0; n < r; n++) e[s + n] = t[i + n]
                        },
                        flattenChunks: function(e) {
                            return [].concat.apply([], e)
                        }
                    };
                t.setTyped = function(e) {
                    e ? (t.Buf8 = Uint8Array, t.Buf16 = Uint16Array, t.Buf32 = Int32Array, t.assign(t, s)) : (t.Buf8 = Array, t.Buf16 = Array, t.Buf32 = Array, t.assign(t, n))
                }, t.setTyped(i)
            },
            9373: (e, t, i) => {
                "use strict";
                var r = i(4236),
                    s = !0,
                    n = !0;
                try {
                    String.fromCharCode.apply(null, [0])
                } catch (e) {
                    s = !1
                }
                try {
                    String.fromCharCode.apply(null, new Uint8Array(1))
                } catch (e) {
                    n = !1
                }
                for (var o = new r.Buf8(256), a = 0; a < 256; a++) o[a] = a >= 252 ? 6 : a >= 248 ? 5 : a >= 240 ? 4 : a >= 224 ? 3 : a >= 192 ? 2 : 1;

                function c(e, t) {
                    if (t < 65534 && (e.subarray && n || !e.subarray && s)) return String.fromCharCode.apply(null, r.shrinkBuf(e, t));
                    for (var i = "", o = 0; o < t; o++) i += String.fromCharCode(e[o]);
                    return i
                }
                o[254] = o[254] = 1, t.string2buf = function(e) {
                    var t, i, s, n, o, a = e.length,
                        c = 0;
                    for (n = 0; n < a; n++) 55296 == (64512 & (i = e.charCodeAt(n))) && n + 1 < a && 56320 == (64512 & (s = e.charCodeAt(n + 1))) && (i = 65536 + (i - 55296 << 10) + (s - 56320), n++), c += i < 128 ? 1 : i < 2048 ? 2 : i < 65536 ? 3 : 4;
                    for (t = new r.Buf8(c), o = 0, n = 0; o < c; n++) 55296 == (64512 & (i = e.charCodeAt(n))) && n + 1 < a && 56320 == (64512 & (s = e.charCodeAt(n + 1))) && (i = 65536 + (i - 55296 << 10) + (s - 56320), n++), i < 128 ? t[o++] = i : i < 2048 ? (t[o++] = 192 | i >>> 6, t[o++] = 128 | 63 & i) : i < 65536 ? (t[o++] = 224 | i >>> 12, t[o++] = 128 | i >>> 6 & 63, t[o++] = 128 | 63 & i) : (t[o++] = 240 | i >>> 18, t[o++] = 128 | i >>> 12 & 63, t[o++] = 128 | i >>> 6 & 63, t[o++] = 128 | 63 & i);
                    return t
                }, t.buf2binstring = function(e) {
                    return c(e, e.length)
                }, t.binstring2buf = function(e) {
                    for (var t = new r.Buf8(e.length), i = 0, s = t.length; i < s; i++) t[i] = e.charCodeAt(i);
                    return t
                }, t.buf2string = function(e, t) {
                    var i, r, s, n, a = t || e.length,
                        l = new Array(2 * a);
                    for (r = 0, i = 0; i < a;)
                        if ((s = e[i++]) < 128) l[r++] = s;
                        else if ((n = o[s]) > 4) l[r++] = 65533, i += n - 1;
                    else {
                        for (s &= 2 === n ? 31 : 3 === n ? 15 : 7; n > 1 && i < a;) s = s << 6 | 63 & e[i++], n--;
                        n > 1 ? l[r++] = 65533 : s < 65536 ? l[r++] = s : (s -= 65536, l[r++] = 55296 | s >> 10 & 1023, l[r++] = 56320 | 1023 & s)
                    }
                    return c(l, r)
                }, t.utf8border = function(e, t) {
                    var i;
                    for ((t = t || e.length) > e.length && (t = e.length), i = t - 1; i >= 0 && 128 == (192 & e[i]);) i--;
                    return i < 0 || 0 === i ? t : i + o[e[i]] > t ? i : t
                }
            },
            6069: e => {
                "use strict";
                e.exports = function(e, t, i, r) {
                    for (var s = 65535 & e | 0, n = e >>> 16 & 65535 | 0, o = 0; 0 !== i;) {
                        i -= o = i > 2e3 ? 2e3 : i;
                        do {
                            n = n + (s = s + t[r++] | 0) | 0
                        } while (--o);
                        s %= 65521, n %= 65521
                    }
                    return s | n << 16 | 0
                }
            },
            1619: e => {
                "use strict";
                e.exports = {
                    Z_NO_FLUSH: 0,
                    Z_PARTIAL_FLUSH: 1,
                    Z_SYNC_FLUSH: 2,
                    Z_FULL_FLUSH: 3,
                    Z_FINISH: 4,
                    Z_BLOCK: 5,
                    Z_TREES: 6,
                    Z_OK: 0,
                    Z_STREAM_END: 1,
                    Z_NEED_DICT: 2,
                    Z_ERRNO: -1,
                    Z_STREAM_ERROR: -2,
                    Z_DATA_ERROR: -3,
                    Z_BUF_ERROR: -5,
                    Z_NO_COMPRESSION: 0,
                    Z_BEST_SPEED: 1,
                    Z_BEST_COMPRESSION: 9,
                    Z_DEFAULT_COMPRESSION: -1,
                    Z_FILTERED: 1,
                    Z_HUFFMAN_ONLY: 2,
                    Z_RLE: 3,
                    Z_FIXED: 4,
                    Z_DEFAULT_STRATEGY: 0,
                    Z_BINARY: 0,
                    Z_TEXT: 1,
                    Z_UNKNOWN: 2,
                    Z_DEFLATED: 8
                }
            },
            2869: e => {
                "use strict";
                var t = function() {
                    for (var e, t = [], i = 0; i < 256; i++) {
                        e = i;
                        for (var r = 0; r < 8; r++) e = 1 & e ? 3988292384 ^ e >>> 1 : e >>> 1;
                        t[i] = e
                    }
                    return t
                }();
                e.exports = function(e, i, r, s) {
                    var n = t,
                        o = s + r;
                    e ^= -1;
                    for (var a = s; a < o; a++) e = e >>> 8 ^ n[255 & (e ^ i[a])];
                    return -1 ^ e
                }
            },
            405: (e, t, i) => {
                "use strict";
                var r, s = i(4236),
                    n = i(342),
                    o = i(6069),
                    a = i(2869),
                    c = i(8898),
                    l = -2,
                    h = 258,
                    u = 262,
                    d = 103,
                    f = 113,
                    p = 666;

                function _(e, t) {
                    return e.msg = c[t], t
                }

                function g(e) {
                    return (e << 1) - (e > 4 ? 9 : 0)
                }

                function v(e) {
                    for (var t = e.length; --t >= 0;) e[t] = 0
                }

                function m(e) {
                    var t = e.state,
                        i = t.pending;
                    i > e.avail_out && (i = e.avail_out), 0 !== i && (s.arraySet(e.output, t.pending_buf, t.pending_out, i, e.next_out), e.next_out += i, t.pending_out += i, e.total_out += i, e.avail_out -= i, t.pending -= i, 0 === t.pending && (t.pending_out = 0))
                }

                function b(e, t) {
                    n._tr_flush_block(e, e.block_start >= 0 ? e.block_start : -1, e.strstart - e.block_start, t), e.block_start = e.strstart, m(e.strm)
                }

                function w(e, t) {
                    e.pending_buf[e.pending++] = t
                }

                function y(e, t) {
                    e.pending_buf[e.pending++] = t >>> 8 & 255, e.pending_buf[e.pending++] = 255 & t
                }

                function S(e, t) {
                    var i, r, s = e.max_chain_length,
                        n = e.strstart,
                        o = e.prev_length,
                        a = e.nice_match,
                        c = e.strstart > e.w_size - u ? e.strstart - (e.w_size - u) : 0,
                        l = e.window,
                        d = e.w_mask,
                        f = e.prev,
                        p = e.strstart + h,
                        _ = l[n + o - 1],
                        g = l[n + o];
                    e.prev_length >= e.good_match && (s >>= 2), a > e.lookahead && (a = e.lookahead);
                    do {
                        if (l[(i = t) + o] === g && l[i + o - 1] === _ && l[i] === l[n] && l[++i] === l[n + 1]) {
                            n += 2, i++;
                            do {} while (l[++n] === l[++i] && l[++n] === l[++i] && l[++n] === l[++i] && l[++n] === l[++i] && l[++n] === l[++i] && l[++n] === l[++i] && l[++n] === l[++i] && l[++n] === l[++i] && n < p);
                            if (r = h - (p - n), n = p - h, r > o) {
                                if (e.match_start = t, o = r, r >= a) break;
                                _ = l[n + o - 1], g = l[n + o]
                            }
                        }
                    } while ((t = f[t & d]) > c && 0 != --s);
                    return o <= e.lookahead ? o : e.lookahead
                }

                function C(e) {
                    var t, i, r, n, c, l, h, d, f, p, _ = e.w_size;
                    do {
                        if (n = e.window_size - e.lookahead - e.strstart, e.strstart >= _ + (_ - u)) {
                            s.arraySet(e.window, e.window, _, _, 0), e.match_start -= _, e.strstart -= _, e.block_start -= _, t = i = e.hash_size;
                            do {
                                r = e.head[--t], e.head[t] = r >= _ ? r - _ : 0
                            } while (--i);
                            t = i = _;
                            do {
                                r = e.prev[--t], e.prev[t] = r >= _ ? r - _ : 0
                            } while (--i);
                            n += _
                        }
                        if (0 === e.strm.avail_in) break;
                        if (l = e.strm, h = e.window, d = e.strstart + e.lookahead, f = n, p = void 0, (p = l.avail_in) > f && (p = f), i = 0 === p ? 0 : (l.avail_in -= p, s.arraySet(h, l.input, l.next_in, p, d), 1 === l.state.wrap ? l.adler = o(l.adler, h, p, d) : 2 === l.state.wrap && (l.adler = a(l.adler, h, p, d)), l.next_in += p, l.total_in += p, p), e.lookahead += i, e.lookahead + e.insert >= 3)
                            for (c = e.strstart - e.insert, e.ins_h = e.window[c], e.ins_h = (e.ins_h << e.hash_shift ^ e.window[c + 1]) & e.hash_mask; e.insert && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[c + 3 - 1]) & e.hash_mask, e.prev[c & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = c, c++, e.insert--, !(e.lookahead + e.insert < 3)););
                    } while (e.lookahead < u && 0 !== e.strm.avail_in)
                }

                function x(e, t) {
                    for (var i, r;;) {
                        if (e.lookahead < u) {
                            if (C(e), e.lookahead < u && 0 === t) return 1;
                            if (0 === e.lookahead) break
                        }
                        if (i = 0, e.lookahead >= 3 && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + 3 - 1]) & e.hash_mask, i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart), 0 !== i && e.strstart - i <= e.w_size - u && (e.match_length = S(e, i)), e.match_length >= 3)
                            if (r = n._tr_tally(e, e.strstart - e.match_start, e.match_length - 3), e.lookahead -= e.match_length, e.match_length <= e.max_lazy_match && e.lookahead >= 3) {
                                e.match_length--;
                                do {
                                    e.strstart++, e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + 3 - 1]) & e.hash_mask, i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart
                                } while (0 != --e.match_length);
                                e.strstart++
                            } else e.strstart += e.match_length, e.match_length = 0, e.ins_h = e.window[e.strstart], e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + 1]) & e.hash_mask;
                        else r = n._tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++;
                        if (r && (b(e, !1), 0 === e.strm.avail_out)) return 1
                    }
                    return e.insert = e.strstart < 2 ? e.strstart : 2, 4 === t ? (b(e, !0), 0 === e.strm.avail_out ? 3 : 4) : e.last_lit && (b(e, !1), 0 === e.strm.avail_out) ? 1 : 2
                }

                function E(e, t) {
                    for (var i, r, s;;) {
                        if (e.lookahead < u) {
                            if (C(e), e.lookahead < u && 0 === t) return 1;
                            if (0 === e.lookahead) break
                        }
                        if (i = 0, e.lookahead >= 3 && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + 3 - 1]) & e.hash_mask, i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart), e.prev_length = e.match_length, e.prev_match = e.match_start, e.match_length = 2, 0 !== i && e.prev_length < e.max_lazy_match && e.strstart - i <= e.w_size - u && (e.match_length = S(e, i), e.match_length <= 5 && (1 === e.strategy || 3 === e.match_length && e.strstart - e.match_start > 4096) && (e.match_length = 2)), e.prev_length >= 3 && e.match_length <= e.prev_length) {
                            s = e.strstart + e.lookahead - 3, r = n._tr_tally(e, e.strstart - 1 - e.prev_match, e.prev_length - 3), e.lookahead -= e.prev_length - 1, e.prev_length -= 2;
                            do {
                                ++e.strstart <= s && (e.ins_h = (e.ins_h << e.hash_shift ^ e.window[e.strstart + 3 - 1]) & e.hash_mask, i = e.prev[e.strstart & e.w_mask] = e.head[e.ins_h], e.head[e.ins_h] = e.strstart)
                            } while (0 != --e.prev_length);
                            if (e.match_available = 0, e.match_length = 2, e.strstart++, r && (b(e, !1), 0 === e.strm.avail_out)) return 1
                        } else if (e.match_available) {
                            if ((r = n._tr_tally(e, 0, e.window[e.strstart - 1])) && b(e, !1), e.strstart++, e.lookahead--, 0 === e.strm.avail_out) return 1
                        } else e.match_available = 1, e.strstart++, e.lookahead--
                    }
                    return e.match_available && (r = n._tr_tally(e, 0, e.window[e.strstart - 1]), e.match_available = 0), e.insert = e.strstart < 2 ? e.strstart : 2, 4 === t ? (b(e, !0), 0 === e.strm.avail_out ? 3 : 4) : e.last_lit && (b(e, !1), 0 === e.strm.avail_out) ? 1 : 2
                }

                function O(e, t, i, r, s) {
                    this.good_length = e, this.max_lazy = t, this.nice_length = i, this.max_chain = r, this.func = s
                }

                function k() {
                    this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = 8, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new s.Buf16(1146), this.dyn_dtree = new s.Buf16(122), this.bl_tree = new s.Buf16(78), v(this.dyn_ltree), v(this.dyn_dtree), v(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new s.Buf16(16), this.heap = new s.Buf16(573), v(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new s.Buf16(573), v(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0
                }

                function L(e) {
                    var t;
                    return e && e.state ? (e.total_in = e.total_out = 0, e.data_type = 2, (t = e.state).pending = 0, t.pending_out = 0, t.wrap < 0 && (t.wrap = -t.wrap), t.status = t.wrap ? 42 : f, e.adler = 2 === t.wrap ? 0 : 1, t.last_flush = 0, n._tr_init(t), 0) : _(e, l)
                }

                function D(e) {
                    var t, i = L(e);
                    return 0 === i && ((t = e.state).window_size = 2 * t.w_size, v(t.head), t.max_lazy_match = r[t.level].max_lazy, t.good_match = r[t.level].good_length, t.nice_match = r[t.level].nice_length, t.max_chain_length = r[t.level].max_chain, t.strstart = 0, t.block_start = 0, t.lookahead = 0, t.insert = 0, t.match_length = t.prev_length = 2, t.match_available = 0, t.ins_h = 0), i
                }

                function M(e, t, i, r, n, o) {
                    if (!e) return l;
                    var a = 1;
                    if (-1 === t && (t = 6), r < 0 ? (a = 0, r = -r) : r > 15 && (a = 2, r -= 16), n < 1 || n > 9 || 8 !== i || r < 8 || r > 15 || t < 0 || t > 9 || o < 0 || o > 4) return _(e, l);
                    8 === r && (r = 9);
                    var c = new k;
                    return e.state = c, c.strm = e, c.wrap = a, c.gzhead = null, c.w_bits = r, c.w_size = 1 << c.w_bits, c.w_mask = c.w_size - 1, c.hash_bits = n + 7, c.hash_size = 1 << c.hash_bits, c.hash_mask = c.hash_size - 1, c.hash_shift = ~~((c.hash_bits + 3 - 1) / 3), c.window = new s.Buf8(2 * c.w_size), c.head = new s.Buf16(c.hash_size), c.prev = new s.Buf16(c.w_size), c.lit_bufsize = 1 << n + 6, c.pending_buf_size = 4 * c.lit_bufsize, c.pending_buf = new s.Buf8(c.pending_buf_size), c.d_buf = 1 * c.lit_bufsize, c.l_buf = 3 * c.lit_bufsize, c.level = t, c.strategy = o, c.method = i, D(e)
                }
                r = [new O(0, 0, 0, 0, (function(e, t) {
                    var i = 65535;
                    for (i > e.pending_buf_size - 5 && (i = e.pending_buf_size - 5);;) {
                        if (e.lookahead <= 1) {
                            if (C(e), 0 === e.lookahead && 0 === t) return 1;
                            if (0 === e.lookahead) break
                        }
                        e.strstart += e.lookahead, e.lookahead = 0;
                        var r = e.block_start + i;
                        if ((0 === e.strstart || e.strstart >= r) && (e.lookahead = e.strstart - r, e.strstart = r, b(e, !1), 0 === e.strm.avail_out)) return 1;
                        if (e.strstart - e.block_start >= e.w_size - u && (b(e, !1), 0 === e.strm.avail_out)) return 1
                    }
                    return e.insert = 0, 4 === t ? (b(e, !0), 0 === e.strm.avail_out ? 3 : 4) : (e.strstart > e.block_start && (b(e, !1), e.strm.avail_out), 1)
                })), new O(4, 4, 8, 4, x), new O(4, 5, 16, 8, x), new O(4, 6, 32, 32, x), new O(4, 4, 16, 16, E), new O(8, 16, 32, 32, E), new O(8, 16, 128, 128, E), new O(8, 32, 128, 256, E), new O(32, 128, 258, 1024, E), new O(32, 258, 258, 4096, E)], t.deflateInit = function(e, t) {
                    return M(e, t, 8, 15, 8, 0)
                }, t.deflateInit2 = M, t.deflateReset = D, t.deflateResetKeep = L, t.deflateSetHeader = function(e, t) {
                    return e && e.state ? 2 !== e.state.wrap ? l : (e.state.gzhead = t, 0) : l
                }, t.deflate = function(e, t) {
                    var i, s, o, c;
                    if (!e || !e.state || t > 5 || t < 0) return e ? _(e, l) : l;
                    if (s = e.state, !e.output || !e.input && 0 !== e.avail_in || s.status === p && 4 !== t) return _(e, 0 === e.avail_out ? -5 : l);
                    if (s.strm = e, i = s.last_flush, s.last_flush = t, 42 === s.status)
                        if (2 === s.wrap) e.adler = 0, w(s, 31), w(s, 139), w(s, 8), s.gzhead ? (w(s, (s.gzhead.text ? 1 : 0) + (s.gzhead.hcrc ? 2 : 0) + (s.gzhead.extra ? 4 : 0) + (s.gzhead.name ? 8 : 0) + (s.gzhead.comment ? 16 : 0)), w(s, 255 & s.gzhead.time), w(s, s.gzhead.time >> 8 & 255), w(s, s.gzhead.time >> 16 & 255), w(s, s.gzhead.time >> 24 & 255), w(s, 9 === s.level ? 2 : s.strategy >= 2 || s.level < 2 ? 4 : 0), w(s, 255 & s.gzhead.os), s.gzhead.extra && s.gzhead.extra.length && (w(s, 255 & s.gzhead.extra.length), w(s, s.gzhead.extra.length >> 8 & 255)), s.gzhead.hcrc && (e.adler = a(e.adler, s.pending_buf, s.pending, 0)), s.gzindex = 0, s.status = 69) : (w(s, 0), w(s, 0), w(s, 0), w(s, 0), w(s, 0), w(s, 9 === s.level ? 2 : s.strategy >= 2 || s.level < 2 ? 4 : 0), w(s, 3), s.status = f);
                        else {
                            var u = 8 + (s.w_bits - 8 << 4) << 8;
                            u |= (s.strategy >= 2 || s.level < 2 ? 0 : s.level < 6 ? 1 : 6 === s.level ? 2 : 3) << 6, 0 !== s.strstart && (u |= 32), u += 31 - u % 31, s.status = f, y(s, u), 0 !== s.strstart && (y(s, e.adler >>> 16), y(s, 65535 & e.adler)), e.adler = 1
                        } if (69 === s.status)
                        if (s.gzhead.extra) {
                            for (o = s.pending; s.gzindex < (65535 & s.gzhead.extra.length) && (s.pending !== s.pending_buf_size || (s.gzhead.hcrc && s.pending > o && (e.adler = a(e.adler, s.pending_buf, s.pending - o, o)), m(e), o = s.pending, s.pending !== s.pending_buf_size));) w(s, 255 & s.gzhead.extra[s.gzindex]), s.gzindex++;
                            s.gzhead.hcrc && s.pending > o && (e.adler = a(e.adler, s.pending_buf, s.pending - o, o)), s.gzindex === s.gzhead.extra.length && (s.gzindex = 0, s.status = 73)
                        } else s.status = 73;
                    if (73 === s.status)
                        if (s.gzhead.name) {
                            o = s.pending;
                            do {
                                if (s.pending === s.pending_buf_size && (s.gzhead.hcrc && s.pending > o && (e.adler = a(e.adler, s.pending_buf, s.pending - o, o)), m(e), o = s.pending, s.pending === s.pending_buf_size)) {
                                    c = 1;
                                    break
                                }
                                c = s.gzindex < s.gzhead.name.length ? 255 & s.gzhead.name.charCodeAt(s.gzindex++) : 0, w(s, c)
                            } while (0 !== c);
                            s.gzhead.hcrc && s.pending > o && (e.adler = a(e.adler, s.pending_buf, s.pending - o, o)), 0 === c && (s.gzindex = 0, s.status = 91)
                        } else s.status = 91;
                    if (91 === s.status)
                        if (s.gzhead.comment) {
                            o = s.pending;
                            do {
                                if (s.pending === s.pending_buf_size && (s.gzhead.hcrc && s.pending > o && (e.adler = a(e.adler, s.pending_buf, s.pending - o, o)), m(e), o = s.pending, s.pending === s.pending_buf_size)) {
                                    c = 1;
                                    break
                                }
                                c = s.gzindex < s.gzhead.comment.length ? 255 & s.gzhead.comment.charCodeAt(s.gzindex++) : 0, w(s, c)
                            } while (0 !== c);
                            s.gzhead.hcrc && s.pending > o && (e.adler = a(e.adler, s.pending_buf, s.pending - o, o)), 0 === c && (s.status = d)
                        } else s.status = d;
                    if (s.status === d && (s.gzhead.hcrc ? (s.pending + 2 > s.pending_buf_size && m(e), s.pending + 2 <= s.pending_buf_size && (w(s, 255 & e.adler), w(s, e.adler >> 8 & 255), e.adler = 0, s.status = f)) : s.status = f), 0 !== s.pending) {
                        if (m(e), 0 === e.avail_out) return s.last_flush = -1, 0
                    } else if (0 === e.avail_in && g(t) <= g(i) && 4 !== t) return _(e, -5);
                    if (s.status === p && 0 !== e.avail_in) return _(e, -5);
                    if (0 !== e.avail_in || 0 !== s.lookahead || 0 !== t && s.status !== p) {
                        var S = 2 === s.strategy ? function(e, t) {
                            for (var i;;) {
                                if (0 === e.lookahead && (C(e), 0 === e.lookahead)) {
                                    if (0 === t) return 1;
                                    break
                                }
                                if (e.match_length = 0, i = n._tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++, i && (b(e, !1), 0 === e.strm.avail_out)) return 1
                            }
                            return e.insert = 0, 4 === t ? (b(e, !0), 0 === e.strm.avail_out ? 3 : 4) : e.last_lit && (b(e, !1), 0 === e.strm.avail_out) ? 1 : 2
                        }(s, t) : 3 === s.strategy ? function(e, t) {
                            for (var i, r, s, o, a = e.window;;) {
                                if (e.lookahead <= h) {
                                    if (C(e), e.lookahead <= h && 0 === t) return 1;
                                    if (0 === e.lookahead) break
                                }
                                if (e.match_length = 0, e.lookahead >= 3 && e.strstart > 0 && (r = a[s = e.strstart - 1]) === a[++s] && r === a[++s] && r === a[++s]) {
                                    o = e.strstart + h;
                                    do {} while (r === a[++s] && r === a[++s] && r === a[++s] && r === a[++s] && r === a[++s] && r === a[++s] && r === a[++s] && r === a[++s] && s < o);
                                    e.match_length = h - (o - s), e.match_length > e.lookahead && (e.match_length = e.lookahead)
                                }
                                if (e.match_length >= 3 ? (i = n._tr_tally(e, 1, e.match_length - 3), e.lookahead -= e.match_length, e.strstart += e.match_length, e.match_length = 0) : (i = n._tr_tally(e, 0, e.window[e.strstart]), e.lookahead--, e.strstart++), i && (b(e, !1), 0 === e.strm.avail_out)) return 1
                            }
                            return e.insert = 0, 4 === t ? (b(e, !0), 0 === e.strm.avail_out ? 3 : 4) : e.last_lit && (b(e, !1), 0 === e.strm.avail_out) ? 1 : 2
                        }(s, t) : r[s.level].func(s, t);
                        if (3 !== S && 4 !== S || (s.status = p), 1 === S || 3 === S) return 0 === e.avail_out && (s.last_flush = -1), 0;
                        if (2 === S && (1 === t ? n._tr_align(s) : 5 !== t && (n._tr_stored_block(s, 0, 0, !1), 3 === t && (v(s.head), 0 === s.lookahead && (s.strstart = 0, s.block_start = 0, s.insert = 0))), m(e), 0 === e.avail_out)) return s.last_flush = -1, 0
                    }
                    return 4 !== t ? 0 : s.wrap <= 0 ? 1 : (2 === s.wrap ? (w(s, 255 & e.adler), w(s, e.adler >> 8 & 255), w(s, e.adler >> 16 & 255), w(s, e.adler >> 24 & 255), w(s, 255 & e.total_in), w(s, e.total_in >> 8 & 255), w(s, e.total_in >> 16 & 255), w(s, e.total_in >> 24 & 255)) : (y(s, e.adler >>> 16), y(s, 65535 & e.adler)), m(e), s.wrap > 0 && (s.wrap = -s.wrap), 0 !== s.pending ? 0 : 1)
                }, t.deflateEnd = function(e) {
                    var t;
                    return e && e.state ? 42 !== (t = e.state.status) && 69 !== t && 73 !== t && 91 !== t && t !== d && t !== f && t !== p ? _(e, l) : (e.state = null, t === f ? _(e, -3) : 0) : l
                }, t.deflateSetDictionary = function(e, t) {
                    var i, r, n, a, c, h, u, d, f = t.length;
                    if (!e || !e.state) return l;
                    if (2 === (a = (i = e.state).wrap) || 1 === a && 42 !== i.status || i.lookahead) return l;
                    for (1 === a && (e.adler = o(e.adler, t, f, 0)), i.wrap = 0, f >= i.w_size && (0 === a && (v(i.head), i.strstart = 0, i.block_start = 0, i.insert = 0), d = new s.Buf8(i.w_size), s.arraySet(d, t, f - i.w_size, i.w_size, 0), t = d, f = i.w_size), c = e.avail_in, h = e.next_in, u = e.input, e.avail_in = f, e.next_in = 0, e.input = t, C(i); i.lookahead >= 3;) {
                        r = i.strstart, n = i.lookahead - 2;
                        do {
                            i.ins_h = (i.ins_h << i.hash_shift ^ i.window[r + 3 - 1]) & i.hash_mask, i.prev[r & i.w_mask] = i.head[i.ins_h], i.head[i.ins_h] = r, r++
                        } while (--n);
                        i.strstart = r, i.lookahead = 2, C(i)
                    }
                    return i.strstart += i.lookahead, i.block_start = i.strstart, i.insert = i.lookahead, i.lookahead = 0, i.match_length = i.prev_length = 2, i.match_available = 0, e.next_in = h, e.input = u, e.avail_in = c, i.wrap = a, 0
                }, t.deflateInfo = "pako deflate (from Nodeca project)"
            },
            2401: e => {
                "use strict";
                e.exports = function() {
                    this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1
                }
            },
            4264: e => {
                "use strict";
                e.exports = function(e, t) {
                    var i, r, s, n, o, a, c, l, h, u, d, f, p, _, g, v, m, b, w, y, S, C, x, E, O;
                    i = e.state, r = e.next_in, E = e.input, s = r + (e.avail_in - 5), n = e.next_out, O = e.output, o = n - (t - e.avail_out), a = n + (e.avail_out - 257), c = i.dmax, l = i.wsize, h = i.whave, u = i.wnext, d = i.window, f = i.hold, p = i.bits, _ = i.lencode, g = i.distcode, v = (1 << i.lenbits) - 1, m = (1 << i.distbits) - 1;
                    e: do {
                        p < 15 && (f += E[r++] << p, p += 8, f += E[r++] << p, p += 8), b = _[f & v];
                        t: for (;;) {
                            if (f >>>= w = b >>> 24, p -= w, 0 === (w = b >>> 16 & 255)) O[n++] = 65535 & b;
                            else {
                                if (!(16 & w)) {
                                    if (0 == (64 & w)) {
                                        b = _[(65535 & b) + (f & (1 << w) - 1)];
                                        continue t
                                    }
                                    if (32 & w) {
                                        i.mode = 12;
                                        break e
                                    }
                                    e.msg = "invalid literal/length code", i.mode = 30;
                                    break e
                                }
                                y = 65535 & b, (w &= 15) && (p < w && (f += E[r++] << p, p += 8), y += f & (1 << w) - 1, f >>>= w, p -= w), p < 15 && (f += E[r++] << p, p += 8, f += E[r++] << p, p += 8), b = g[f & m];
                                i: for (;;) {
                                    if (f >>>= w = b >>> 24, p -= w, !(16 & (w = b >>> 16 & 255))) {
                                        if (0 == (64 & w)) {
                                            b = g[(65535 & b) + (f & (1 << w) - 1)];
                                            continue i
                                        }
                                        e.msg = "invalid distance code", i.mode = 30;
                                        break e
                                    }
                                    if (S = 65535 & b, p < (w &= 15) && (f += E[r++] << p, (p += 8) < w && (f += E[r++] << p, p += 8)), (S += f & (1 << w) - 1) > c) {
                                        e.msg = "invalid distance too far back", i.mode = 30;
                                        break e
                                    }
                                    if (f >>>= w, p -= w, S > (w = n - o)) {
                                        if ((w = S - w) > h && i.sane) {
                                            e.msg = "invalid distance too far back", i.mode = 30;
                                            break e
                                        }
                                        if (C = 0, x = d, 0 === u) {
                                            if (C += l - w, w < y) {
                                                y -= w;
                                                do {
                                                    O[n++] = d[C++]
                                                } while (--w);
                                                C = n - S, x = O
                                            }
                                        } else if (u < w) {
                                            if (C += l + u - w, (w -= u) < y) {
                                                y -= w;
                                                do {
                                                    O[n++] = d[C++]
                                                } while (--w);
                                                if (C = 0, u < y) {
                                                    y -= w = u;
                                                    do {
                                                        O[n++] = d[C++]
                                                    } while (--w);
                                                    C = n - S, x = O
                                                }
                                            }
                                        } else if (C += u - w, w < y) {
                                            y -= w;
                                            do {
                                                O[n++] = d[C++]
                                            } while (--w);
                                            C = n - S, x = O
                                        }
                                        for (; y > 2;) O[n++] = x[C++], O[n++] = x[C++], O[n++] = x[C++], y -= 3;
                                        y && (O[n++] = x[C++], y > 1 && (O[n++] = x[C++]))
                                    } else {
                                        C = n - S;
                                        do {
                                            O[n++] = O[C++], O[n++] = O[C++], O[n++] = O[C++], y -= 3
                                        } while (y > 2);
                                        y && (O[n++] = O[C++], y > 1 && (O[n++] = O[C++]))
                                    }
                                    break
                                }
                            }
                            break
                        }
                    } while (r < s && n < a);
                    r -= y = p >> 3, f &= (1 << (p -= y << 3)) - 1, e.next_in = r, e.next_out = n, e.avail_in = r < s ? s - r + 5 : 5 - (r - s), e.avail_out = n < a ? a - n + 257 : 257 - (n - a), i.hold = f, i.bits = p
                }
            },
            7948: (e, t, i) => {
                "use strict";
                var r = i(4236),
                    s = i(6069),
                    n = i(2869),
                    o = i(4264),
                    a = i(9241),
                    c = -2,
                    l = 12,
                    h = 30;

                function u(e) {
                    return (e >>> 24 & 255) + (e >>> 8 & 65280) + ((65280 & e) << 8) + ((255 & e) << 24)
                }

                function d() {
                    this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new r.Buf16(320), this.work = new r.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0
                }

                function f(e) {
                    var t;
                    return e && e.state ? (t = e.state, e.total_in = e.total_out = t.total = 0, e.msg = "", t.wrap && (e.adler = 1 & t.wrap), t.mode = 1, t.last = 0, t.havedict = 0, t.dmax = 32768, t.head = null, t.hold = 0, t.bits = 0, t.lencode = t.lendyn = new r.Buf32(852), t.distcode = t.distdyn = new r.Buf32(592), t.sane = 1, t.back = -1, 0) : c
                }

                function p(e) {
                    var t;
                    return e && e.state ? ((t = e.state).wsize = 0, t.whave = 0, t.wnext = 0, f(e)) : c
                }

                function _(e, t) {
                    var i, r;
                    return e && e.state ? (r = e.state, t < 0 ? (i = 0, t = -t) : (i = 1 + (t >> 4), t < 48 && (t &= 15)), t && (t < 8 || t > 15) ? c : (null !== r.window && r.wbits !== t && (r.window = null), r.wrap = i, r.wbits = t, p(e))) : c
                }

                function g(e, t) {
                    var i, r;
                    return e ? (r = new d, e.state = r, r.window = null, 0 !== (i = _(e, t)) && (e.state = null), i) : c
                }
                var v, m, b = !0;

                function w(e) {
                    if (b) {
                        var t;
                        for (v = new r.Buf32(512), m = new r.Buf32(32), t = 0; t < 144;) e.lens[t++] = 8;
                        for (; t < 256;) e.lens[t++] = 9;
                        for (; t < 280;) e.lens[t++] = 7;
                        for (; t < 288;) e.lens[t++] = 8;
                        for (a(1, e.lens, 0, 288, v, 0, e.work, {
                                bits: 9
                            }), t = 0; t < 32;) e.lens[t++] = 5;
                        a(2, e.lens, 0, 32, m, 0, e.work, {
                            bits: 5
                        }), b = !1
                    }
                    e.lencode = v, e.lenbits = 9, e.distcode = m, e.distbits = 5
                }

                function y(e, t, i, s) {
                    var n, o = e.state;
                    return null === o.window && (o.wsize = 1 << o.wbits, o.wnext = 0, o.whave = 0, o.window = new r.Buf8(o.wsize)), s >= o.wsize ? (r.arraySet(o.window, t, i - o.wsize, o.wsize, 0), o.wnext = 0, o.whave = o.wsize) : ((n = o.wsize - o.wnext) > s && (n = s), r.arraySet(o.window, t, i - s, n, o.wnext), (s -= n) ? (r.arraySet(o.window, t, i - s, s, 0), o.wnext = s, o.whave = o.wsize) : (o.wnext += n, o.wnext === o.wsize && (o.wnext = 0), o.whave < o.wsize && (o.whave += n))), 0
                }
                t.inflateReset = p, t.inflateReset2 = _, t.inflateResetKeep = f, t.inflateInit = function(e) {
                    return g(e, 15)
                }, t.inflateInit2 = g, t.inflate = function(e, t) {
                    var i, d, f, p, _, g, v, m, b, S, C, x, E, O, k, L, D, M, A, R, P, T, B, I, $ = 0,
                        j = new r.Buf8(4),
                        F = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
                    if (!e || !e.state || !e.output || !e.input && 0 !== e.avail_in) return c;
                    (i = e.state).mode === l && (i.mode = 13), _ = e.next_out, f = e.output, v = e.avail_out, p = e.next_in, d = e.input, g = e.avail_in, m = i.hold, b = i.bits, S = g, C = v, T = 0;
                    e: for (;;) switch (i.mode) {
                        case 1:
                            if (0 === i.wrap) {
                                i.mode = 13;
                                break
                            }
                            for (; b < 16;) {
                                if (0 === g) break e;
                                g--, m += d[p++] << b, b += 8
                            }
                            if (2 & i.wrap && 35615 === m) {
                                i.check = 0, j[0] = 255 & m, j[1] = m >>> 8 & 255, i.check = n(i.check, j, 2, 0), m = 0, b = 0, i.mode = 2;
                                break
                            }
                            if (i.flags = 0, i.head && (i.head.done = !1), !(1 & i.wrap) || (((255 & m) << 8) + (m >> 8)) % 31) {
                                e.msg = "incorrect header check", i.mode = h;
                                break
                            }
                            if (8 != (15 & m)) {
                                e.msg = "unknown compression method", i.mode = h;
                                break
                            }
                            if (b -= 4, P = 8 + (15 & (m >>>= 4)), 0 === i.wbits) i.wbits = P;
                            else if (P > i.wbits) {
                                e.msg = "invalid window size", i.mode = h;
                                break
                            }
                            i.dmax = 1 << P, e.adler = i.check = 1, i.mode = 512 & m ? 10 : l, m = 0, b = 0;
                            break;
                        case 2:
                            for (; b < 16;) {
                                if (0 === g) break e;
                                g--, m += d[p++] << b, b += 8
                            }
                            if (i.flags = m, 8 != (255 & i.flags)) {
                                e.msg = "unknown compression method", i.mode = h;
                                break
                            }
                            if (57344 & i.flags) {
                                e.msg = "unknown header flags set", i.mode = h;
                                break
                            }
                            i.head && (i.head.text = m >> 8 & 1), 512 & i.flags && (j[0] = 255 & m, j[1] = m >>> 8 & 255, i.check = n(i.check, j, 2, 0)), m = 0, b = 0, i.mode = 3;
                        case 3:
                            for (; b < 32;) {
                                if (0 === g) break e;
                                g--, m += d[p++] << b, b += 8
                            }
                            i.head && (i.head.time = m), 512 & i.flags && (j[0] = 255 & m, j[1] = m >>> 8 & 255, j[2] = m >>> 16 & 255, j[3] = m >>> 24 & 255, i.check = n(i.check, j, 4, 0)), m = 0, b = 0, i.mode = 4;
                        case 4:
                            for (; b < 16;) {
                                if (0 === g) break e;
                                g--, m += d[p++] << b, b += 8
                            }
                            i.head && (i.head.xflags = 255 & m, i.head.os = m >> 8), 512 & i.flags && (j[0] = 255 & m, j[1] = m >>> 8 & 255, i.check = n(i.check, j, 2, 0)), m = 0, b = 0, i.mode = 5;
                        case 5:
                            if (1024 & i.flags) {
                                for (; b < 16;) {
                                    if (0 === g) break e;
                                    g--, m += d[p++] << b, b += 8
                                }
                                i.length = m, i.head && (i.head.extra_len = m), 512 & i.flags && (j[0] = 255 & m, j[1] = m >>> 8 & 255, i.check = n(i.check, j, 2, 0)), m = 0, b = 0
                            } else i.head && (i.head.extra = null);
                            i.mode = 6;
                        case 6:
                            if (1024 & i.flags && ((x = i.length) > g && (x = g), x && (i.head && (P = i.head.extra_len - i.length, i.head.extra || (i.head.extra = new Array(i.head.extra_len)), r.arraySet(i.head.extra, d, p, x, P)), 512 & i.flags && (i.check = n(i.check, d, x, p)), g -= x, p += x, i.length -= x), i.length)) break e;
                            i.length = 0, i.mode = 7;
                        case 7:
                            if (2048 & i.flags) {
                                if (0 === g) break e;
                                x = 0;
                                do {
                                    P = d[p + x++], i.head && P && i.length < 65536 && (i.head.name += String.fromCharCode(P))
                                } while (P && x < g);
                                if (512 & i.flags && (i.check = n(i.check, d, x, p)), g -= x, p += x, P) break e
                            } else i.head && (i.head.name = null);
                            i.length = 0, i.mode = 8;
                        case 8:
                            if (4096 & i.flags) {
                                if (0 === g) break e;
                                x = 0;
                                do {
                                    P = d[p + x++], i.head && P && i.length < 65536 && (i.head.comment += String.fromCharCode(P))
                                } while (P && x < g);
                                if (512 & i.flags && (i.check = n(i.check, d, x, p)), g -= x, p += x, P) break e
                            } else i.head && (i.head.comment = null);
                            i.mode = 9;
                        case 9:
                            if (512 & i.flags) {
                                for (; b < 16;) {
                                    if (0 === g) break e;
                                    g--, m += d[p++] << b, b += 8
                                }
                                if (m !== (65535 & i.check)) {
                                    e.msg = "header crc mismatch", i.mode = h;
                                    break
                                }
                                m = 0, b = 0
                            }
                            i.head && (i.head.hcrc = i.flags >> 9 & 1, i.head.done = !0), e.adler = i.check = 0, i.mode = l;
                            break;
                        case 10:
                            for (; b < 32;) {
                                if (0 === g) break e;
                                g--, m += d[p++] << b, b += 8
                            }
                            e.adler = i.check = u(m), m = 0, b = 0, i.mode = 11;
                        case 11:
                            if (0 === i.havedict) return e.next_out = _, e.avail_out = v, e.next_in = p, e.avail_in = g, i.hold = m, i.bits = b, 2;
                            e.adler = i.check = 1, i.mode = l;
                        case l:
                            if (5 === t || 6 === t) break e;
                        case 13:
                            if (i.last) {
                                m >>>= 7 & b, b -= 7 & b, i.mode = 27;
                                break
                            }
                            for (; b < 3;) {
                                if (0 === g) break e;
                                g--, m += d[p++] << b, b += 8
                            }
                            switch (i.last = 1 & m, b -= 1, 3 & (m >>>= 1)) {
                                case 0:
                                    i.mode = 14;
                                    break;
                                case 1:
                                    if (w(i), i.mode = 20, 6 === t) {
                                        m >>>= 2, b -= 2;
                                        break e
                                    }
                                    break;
                                case 2:
                                    i.mode = 17;
                                    break;
                                case 3:
                                    e.msg = "invalid block type", i.mode = h
                            }
                            m >>>= 2, b -= 2;
                            break;
                        case 14:
                            for (m >>>= 7 & b, b -= 7 & b; b < 32;) {
                                if (0 === g) break e;
                                g--, m += d[p++] << b, b += 8
                            }
                            if ((65535 & m) != (m >>> 16 ^ 65535)) {
                                e.msg = "invalid stored block lengths", i.mode = h;
                                break
                            }
                            if (i.length = 65535 & m, m = 0, b = 0, i.mode = 15, 6 === t) break e;
                        case 15:
                            i.mode = 16;
                        case 16:
                            if (x = i.length) {
                                if (x > g && (x = g), x > v && (x = v), 0 === x) break e;
                                r.arraySet(f, d, p, x, _), g -= x, p += x, v -= x, _ += x, i.length -= x;
                                break
                            }
                            i.mode = l;
                            break;
                        case 17:
                            for (; b < 14;) {
                                if (0 === g) break e;
                                g--, m += d[p++] << b, b += 8
                            }
                            if (i.nlen = 257 + (31 & m), m >>>= 5, b -= 5, i.ndist = 1 + (31 & m), m >>>= 5, b -= 5, i.ncode = 4 + (15 & m), m >>>= 4, b -= 4, i.nlen > 286 || i.ndist > 30) {
                                e.msg = "too many length or distance symbols", i.mode = h;
                                break
                            }
                            i.have = 0, i.mode = 18;
                        case 18:
                            for (; i.have < i.ncode;) {
                                for (; b < 3;) {
                                    if (0 === g) break e;
                                    g--, m += d[p++] << b, b += 8
                                }
                                i.lens[F[i.have++]] = 7 & m, m >>>= 3, b -= 3
                            }
                            for (; i.have < 19;) i.lens[F[i.have++]] = 0;
                            if (i.lencode = i.lendyn, i.lenbits = 7, B = {
                                    bits: i.lenbits
                                }, T = a(0, i.lens, 0, 19, i.lencode, 0, i.work, B), i.lenbits = B.bits, T) {
                                e.msg = "invalid code lengths set", i.mode = h;
                                break
                            }
                            i.have = 0, i.mode = 19;
                        case 19:
                            for (; i.have < i.nlen + i.ndist;) {
                                for (; L = ($ = i.lencode[m & (1 << i.lenbits) - 1]) >>> 16 & 255, D = 65535 & $, !((k = $ >>> 24) <= b);) {
                                    if (0 === g) break e;
                                    g--, m += d[p++] << b, b += 8
                                }
                                if (D < 16) m >>>= k, b -= k, i.lens[i.have++] = D;
                                else {
                                    if (16 === D) {
                                        for (I = k + 2; b < I;) {
                                            if (0 === g) break e;
                                            g--, m += d[p++] << b, b += 8
                                        }
                                        if (m >>>= k, b -= k, 0 === i.have) {
                                            e.msg = "invalid bit length repeat", i.mode = h;
                                            break
                                        }
                                        P = i.lens[i.have - 1], x = 3 + (3 & m), m >>>= 2, b -= 2
                                    } else if (17 === D) {
                                        for (I = k + 3; b < I;) {
                                            if (0 === g) break e;
                                            g--, m += d[p++] << b, b += 8
                                        }
                                        b -= k, P = 0, x = 3 + (7 & (m >>>= k)), m >>>= 3, b -= 3
                                    } else {
                                        for (I = k + 7; b < I;) {
                                            if (0 === g) break e;
                                            g--, m += d[p++] << b, b += 8
                                        }
                                        b -= k, P = 0, x = 11 + (127 & (m >>>= k)), m >>>= 7, b -= 7
                                    }
                                    if (i.have + x > i.nlen + i.ndist) {
                                        e.msg = "invalid bit length repeat", i.mode = h;
                                        break
                                    }
                                    for (; x--;) i.lens[i.have++] = P
                                }
                            }
                            if (i.mode === h) break;
                            if (0 === i.lens[256]) {
                                e.msg = "invalid code -- missing end-of-block", i.mode = h;
                                break
                            }
                            if (i.lenbits = 9, B = {
                                    bits: i.lenbits
                                }, T = a(1, i.lens, 0, i.nlen, i.lencode, 0, i.work, B), i.lenbits = B.bits, T) {
                                e.msg = "invalid literal/lengths set", i.mode = h;
                                break
                            }
                            if (i.distbits = 6, i.distcode = i.distdyn, B = {
                                    bits: i.distbits
                                }, T = a(2, i.lens, i.nlen, i.ndist, i.distcode, 0, i.work, B), i.distbits = B.bits, T) {
                                e.msg = "invalid distances set", i.mode = h;
                                break
                            }
                            if (i.mode = 20, 6 === t) break e;
                        case 20:
                            i.mode = 21;
                        case 21:
                            if (g >= 6 && v >= 258) {
                                e.next_out = _, e.avail_out = v, e.next_in = p, e.avail_in = g, i.hold = m, i.bits = b, o(e, C), _ = e.next_out, f = e.output, v = e.avail_out, p = e.next_in, d = e.input, g = e.avail_in, m = i.hold, b = i.bits, i.mode === l && (i.back = -1);
                                break
                            }
                            for (i.back = 0; L = ($ = i.lencode[m & (1 << i.lenbits) - 1]) >>> 16 & 255, D = 65535 & $, !((k = $ >>> 24) <= b);) {
                                if (0 === g) break e;
                                g--, m += d[p++] << b, b += 8
                            }
                            if (L && 0 == (240 & L)) {
                                for (M = k, A = L, R = D; L = ($ = i.lencode[R + ((m & (1 << M + A) - 1) >> M)]) >>> 16 & 255, D = 65535 & $, !(M + (k = $ >>> 24) <= b);) {
                                    if (0 === g) break e;
                                    g--, m += d[p++] << b, b += 8
                                }
                                m >>>= M, b -= M, i.back += M
                            }
                            if (m >>>= k, b -= k, i.back += k, i.length = D, 0 === L) {
                                i.mode = 26;
                                break
                            }
                            if (32 & L) {
                                i.back = -1, i.mode = l;
                                break
                            }
                            if (64 & L) {
                                e.msg = "invalid literal/length code", i.mode = h;
                                break
                            }
                            i.extra = 15 & L, i.mode = 22;
                        case 22:
                            if (i.extra) {
                                for (I = i.extra; b < I;) {
                                    if (0 === g) break e;
                                    g--, m += d[p++] << b, b += 8
                                }
                                i.length += m & (1 << i.extra) - 1, m >>>= i.extra, b -= i.extra, i.back += i.extra
                            }
                            i.was = i.length, i.mode = 23;
                        case 23:
                            for (; L = ($ = i.distcode[m & (1 << i.distbits) - 1]) >>> 16 & 255, D = 65535 & $, !((k = $ >>> 24) <= b);) {
                                if (0 === g) break e;
                                g--, m += d[p++] << b, b += 8
                            }
                            if (0 == (240 & L)) {
                                for (M = k, A = L, R = D; L = ($ = i.distcode[R + ((m & (1 << M + A) - 1) >> M)]) >>> 16 & 255, D = 65535 & $, !(M + (k = $ >>> 24) <= b);) {
                                    if (0 === g) break e;
                                    g--, m += d[p++] << b, b += 8
                                }
                                m >>>= M, b -= M, i.back += M
                            }
                            if (m >>>= k, b -= k, i.back += k, 64 & L) {
                                e.msg = "invalid distance code", i.mode = h;
                                break
                            }
                            i.offset = D, i.extra = 15 & L, i.mode = 24;
                        case 24:
                            if (i.extra) {
                                for (I = i.extra; b < I;) {
                                    if (0 === g) break e;
                                    g--, m += d[p++] << b, b += 8
                                }
                                i.offset += m & (1 << i.extra) - 1, m >>>= i.extra, b -= i.extra, i.back += i.extra
                            }
                            if (i.offset > i.dmax) {
                                e.msg = "invalid distance too far back", i.mode = h;
                                break
                            }
                            i.mode = 25;
                        case 25:
                            if (0 === v) break e;
                            if (x = C - v, i.offset > x) {
                                if ((x = i.offset - x) > i.whave && i.sane) {
                                    e.msg = "invalid distance too far back", i.mode = h;
                                    break
                                }
                                x > i.wnext ? (x -= i.wnext, E = i.wsize - x) : E = i.wnext - x, x > i.length && (x = i.length), O = i.window
                            } else O = f, E = _ - i.offset, x = i.length;
                            x > v && (x = v), v -= x, i.length -= x;
                            do {
                                f[_++] = O[E++]
                            } while (--x);
                            0 === i.length && (i.mode = 21);
                            break;
                        case 26:
                            if (0 === v) break e;
                            f[_++] = i.length, v--, i.mode = 21;
                            break;
                        case 27:
                            if (i.wrap) {
                                for (; b < 32;) {
                                    if (0 === g) break e;
                                    g--, m |= d[p++] << b, b += 8
                                }
                                if (C -= v, e.total_out += C, i.total += C, C && (e.adler = i.check = i.flags ? n(i.check, f, C, _ - C) : s(i.check, f, C, _ - C)), C = v, (i.flags ? m : u(m)) !== i.check) {
                                    e.msg = "incorrect data check", i.mode = h;
                                    break
                                }
                                m = 0, b = 0
                            }
                            i.mode = 28;
                        case 28:
                            if (i.wrap && i.flags) {
                                for (; b < 32;) {
                                    if (0 === g) break e;
                                    g--, m += d[p++] << b, b += 8
                                }
                                if (m !== (4294967295 & i.total)) {
                                    e.msg = "incorrect length check", i.mode = h;
                                    break
                                }
                                m = 0, b = 0
                            }
                            i.mode = 29;
                        case 29:
                            T = 1;
                            break e;
                        case h:
                            T = -3;
                            break e;
                        case 31:
                            return -4;
                        default:
                            return c
                    }
                    return e.next_out = _, e.avail_out = v, e.next_in = p, e.avail_in = g, i.hold = m, i.bits = b, (i.wsize || C !== e.avail_out && i.mode < h && (i.mode < 27 || 4 !== t)) && y(e, e.output, e.next_out, C - e.avail_out) ? (i.mode = 31, -4) : (S -= e.avail_in, C -= e.avail_out, e.total_in += S, e.total_out += C, i.total += C, i.wrap && C && (e.adler = i.check = i.flags ? n(i.check, f, C, e.next_out - C) : s(i.check, f, C, e.next_out - C)), e.data_type = i.bits + (i.last ? 64 : 0) + (i.mode === l ? 128 : 0) + (20 === i.mode || 15 === i.mode ? 256 : 0), (0 === S && 0 === C || 4 === t) && 0 === T && (T = -5), T)
                }, t.inflateEnd = function(e) {
                    if (!e || !e.state) return c;
                    var t = e.state;
                    return t.window && (t.window = null), e.state = null, 0
                }, t.inflateGetHeader = function(e, t) {
                    var i;
                    return e && e.state ? 0 == (2 & (i = e.state).wrap) ? c : (i.head = t, t.done = !1, 0) : c
                }, t.inflateSetDictionary = function(e, t) {
                    var i, r = t.length;
                    return e && e.state ? 0 !== (i = e.state).wrap && 11 !== i.mode ? c : 11 === i.mode && s(1, t, r, 0) !== i.check ? -3 : y(e, t, r, r) ? (i.mode = 31, -4) : (i.havedict = 1, 0) : c
                }, t.inflateInfo = "pako inflate (from Nodeca project)"
            },
            9241: (e, t, i) => {
                "use strict";
                var r = i(4236),
                    s = 15,
                    n = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0],
                    o = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78],
                    a = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0],
                    c = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
                e.exports = function(e, t, i, l, h, u, d, f) {
                    var p, _, g, v, m, b, w, y, S, C = f.bits,
                        x = 0,
                        E = 0,
                        O = 0,
                        k = 0,
                        L = 0,
                        D = 0,
                        M = 0,
                        A = 0,
                        R = 0,
                        P = 0,
                        T = null,
                        B = 0,
                        I = new r.Buf16(16),
                        $ = new r.Buf16(16),
                        j = null,
                        F = 0;
                    for (x = 0; x <= s; x++) I[x] = 0;
                    for (E = 0; E < l; E++) I[t[i + E]]++;
                    for (L = C, k = s; k >= 1 && 0 === I[k]; k--);
                    if (L > k && (L = k), 0 === k) return h[u++] = 20971520, h[u++] = 20971520, f.bits = 1, 0;
                    for (O = 1; O < k && 0 === I[O]; O++);
                    for (L < O && (L = O), A = 1, x = 1; x <= s; x++)
                        if (A <<= 1, (A -= I[x]) < 0) return -1;
                    if (A > 0 && (0 === e || 1 !== k)) return -1;
                    for ($[1] = 0, x = 1; x < s; x++) $[x + 1] = $[x] + I[x];
                    for (E = 0; E < l; E++) 0 !== t[i + E] && (d[$[t[i + E]]++] = E);
                    if (0 === e ? (T = j = d, b = 19) : 1 === e ? (T = n, B -= 257, j = o, F -= 257, b = 256) : (T = a, j = c, b = -1), P = 0, E = 0, x = O, m = u, D = L, M = 0, g = -1, v = (R = 1 << L) - 1, 1 === e && R > 852 || 2 === e && R > 592) return 1;
                    for (;;) {
                        w = x - M, d[E] < b ? (y = 0, S = d[E]) : d[E] > b ? (y = j[F + d[E]], S = T[B + d[E]]) : (y = 96, S = 0), p = 1 << x - M, O = _ = 1 << D;
                        do {
                            h[m + (P >> M) + (_ -= p)] = w << 24 | y << 16 | S | 0
                        } while (0 !== _);
                        for (p = 1 << x - 1; P & p;) p >>= 1;
                        if (0 !== p ? (P &= p - 1, P += p) : P = 0, E++, 0 == --I[x]) {
                            if (x === k) break;
                            x = t[i + d[E]]
                        }
                        if (x > L && (P & v) !== g) {
                            for (0 === M && (M = L), m += O, A = 1 << (D = x - M); D + M < k && !((A -= I[D + M]) <= 0);) D++, A <<= 1;
                            if (R += 1 << D, 1 === e && R > 852 || 2 === e && R > 592) return 1;
                            h[g = P & v] = L << 24 | D << 16 | m - u | 0
                        }
                    }
                    return 0 !== P && (h[m + P] = x - M << 24 | 64 << 16 | 0), f.bits = L, 0
                }
            },
            8898: e => {
                "use strict";
                e.exports = {
                    2: "need dictionary",
                    1: "stream end",
                    0: "",
                    "-1": "file error",
                    "-2": "stream error",
                    "-3": "data error",
                    "-4": "insufficient memory",
                    "-5": "buffer error",
                    "-6": "incompatible version"
                }
            },
            342: (e, t, i) => {
                "use strict";
                var r = i(4236);

                function s(e) {
                    for (var t = e.length; --t >= 0;) e[t] = 0
                }
                var n = 256,
                    o = 286,
                    a = 30,
                    c = 15,
                    l = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0],
                    h = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13],
                    u = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7],
                    d = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],
                    f = new Array(576);
                s(f);
                var p = new Array(60);
                s(p);
                var _ = new Array(512);
                s(_);
                var g = new Array(256);
                s(g);
                var v = new Array(29);
                s(v);
                var m, b, w, y = new Array(a);

                function S(e, t, i, r, s) {
                    this.static_tree = e, this.extra_bits = t, this.extra_base = i, this.elems = r, this.max_length = s, this.has_stree = e && e.length
                }

                function C(e, t) {
                    this.dyn_tree = e, this.max_code = 0, this.stat_desc = t
                }

                function x(e) {
                    return e < 256 ? _[e] : _[256 + (e >>> 7)]
                }

                function E(e, t) {
                    e.pending_buf[e.pending++] = 255 & t, e.pending_buf[e.pending++] = t >>> 8 & 255
                }

                function O(e, t, i) {
                    e.bi_valid > 16 - i ? (e.bi_buf |= t << e.bi_valid & 65535, E(e, e.bi_buf), e.bi_buf = t >> 16 - e.bi_valid, e.bi_valid += i - 16) : (e.bi_buf |= t << e.bi_valid & 65535, e.bi_valid += i)
                }

                function k(e, t, i) {
                    O(e, i[2 * t], i[2 * t + 1])
                }

                function L(e, t) {
                    var i = 0;
                    do {
                        i |= 1 & e, e >>>= 1, i <<= 1
                    } while (--t > 0);
                    return i >>> 1
                }

                function D(e, t, i) {
                    var r, s, n = new Array(16),
                        o = 0;
                    for (r = 1; r <= c; r++) n[r] = o = o + i[r - 1] << 1;
                    for (s = 0; s <= t; s++) {
                        var a = e[2 * s + 1];
                        0 !== a && (e[2 * s] = L(n[a]++, a))
                    }
                }

                function M(e) {
                    var t;
                    for (t = 0; t < o; t++) e.dyn_ltree[2 * t] = 0;
                    for (t = 0; t < a; t++) e.dyn_dtree[2 * t] = 0;
                    for (t = 0; t < 19; t++) e.bl_tree[2 * t] = 0;
                    e.dyn_ltree[512] = 1, e.opt_len = e.static_len = 0, e.last_lit = e.matches = 0
                }

                function A(e) {
                    e.bi_valid > 8 ? E(e, e.bi_buf) : e.bi_valid > 0 && (e.pending_buf[e.pending++] = e.bi_buf), e.bi_buf = 0, e.bi_valid = 0
                }

                function R(e, t, i, r) {
                    var s = 2 * t,
                        n = 2 * i;
                    return e[s] < e[n] || e[s] === e[n] && r[t] <= r[i]
                }

                function P(e, t, i) {
                    for (var r = e.heap[i], s = i << 1; s <= e.heap_len && (s < e.heap_len && R(t, e.heap[s + 1], e.heap[s], e.depth) && s++, !R(t, r, e.heap[s], e.depth));) e.heap[i] = e.heap[s], i = s, s <<= 1;
                    e.heap[i] = r
                }

                function T(e, t, i) {
                    var r, s, o, a, c = 0;
                    if (0 !== e.last_lit)
                        do {
                            r = e.pending_buf[e.d_buf + 2 * c] << 8 | e.pending_buf[e.d_buf + 2 * c + 1], s = e.pending_buf[e.l_buf + c], c++, 0 === r ? k(e, s, t) : (k(e, (o = g[s]) + n + 1, t), 0 !== (a = l[o]) && O(e, s -= v[o], a), k(e, o = x(--r), i), 0 !== (a = h[o]) && O(e, r -= y[o], a))
                        } while (c < e.last_lit);
                    k(e, 256, t)
                }

                function B(e, t) {
                    var i, r, s, n = t.dyn_tree,
                        o = t.stat_desc.static_tree,
                        a = t.stat_desc.has_stree,
                        l = t.stat_desc.elems,
                        h = -1;
                    for (e.heap_len = 0, e.heap_max = 573, i = 0; i < l; i++) 0 !== n[2 * i] ? (e.heap[++e.heap_len] = h = i, e.depth[i] = 0) : n[2 * i + 1] = 0;
                    for (; e.heap_len < 2;) n[2 * (s = e.heap[++e.heap_len] = h < 2 ? ++h : 0)] = 1, e.depth[s] = 0, e.opt_len--, a && (e.static_len -= o[2 * s + 1]);
                    for (t.max_code = h, i = e.heap_len >> 1; i >= 1; i--) P(e, n, i);
                    s = l;
                    do {
                        i = e.heap[1], e.heap[1] = e.heap[e.heap_len--], P(e, n, 1), r = e.heap[1], e.heap[--e.heap_max] = i, e.heap[--e.heap_max] = r, n[2 * s] = n[2 * i] + n[2 * r], e.depth[s] = (e.depth[i] >= e.depth[r] ? e.depth[i] : e.depth[r]) + 1, n[2 * i + 1] = n[2 * r + 1] = s, e.heap[1] = s++, P(e, n, 1)
                    } while (e.heap_len >= 2);
                    e.heap[--e.heap_max] = e.heap[1],
                        function(e, t) {
                            var i, r, s, n, o, a, l = t.dyn_tree,
                                h = t.max_code,
                                u = t.stat_desc.static_tree,
                                d = t.stat_desc.has_stree,
                                f = t.stat_desc.extra_bits,
                                p = t.stat_desc.extra_base,
                                _ = t.stat_desc.max_length,
                                g = 0;
                            for (n = 0; n <= c; n++) e.bl_count[n] = 0;
                            for (l[2 * e.heap[e.heap_max] + 1] = 0, i = e.heap_max + 1; i < 573; i++)(n = l[2 * l[2 * (r = e.heap[i]) + 1] + 1] + 1) > _ && (n = _, g++), l[2 * r + 1] = n, r > h || (e.bl_count[n]++, o = 0, r >= p && (o = f[r - p]), a = l[2 * r], e.opt_len += a * (n + o), d && (e.static_len += a * (u[2 * r + 1] + o)));
                            if (0 !== g) {
                                do {
                                    for (n = _ - 1; 0 === e.bl_count[n];) n--;
                                    e.bl_count[n]--, e.bl_count[n + 1] += 2, e.bl_count[_]--, g -= 2
                                } while (g > 0);
                                for (n = _; 0 !== n; n--)
                                    for (r = e.bl_count[n]; 0 !== r;)(s = e.heap[--i]) > h || (l[2 * s + 1] !== n && (e.opt_len += (n - l[2 * s + 1]) * l[2 * s], l[2 * s + 1] = n), r--)
                            }
                        }(e, t), D(n, h, e.bl_count)
                }

                function I(e, t, i) {
                    var r, s, n = -1,
                        o = t[1],
                        a = 0,
                        c = 7,
                        l = 4;
                    for (0 === o && (c = 138, l = 3), t[2 * (i + 1) + 1] = 65535, r = 0; r <= i; r++) s = o, o = t[2 * (r + 1) + 1], ++a < c && s === o || (a < l ? e.bl_tree[2 * s] += a : 0 !== s ? (s !== n && e.bl_tree[2 * s]++, e.bl_tree[32]++) : a <= 10 ? e.bl_tree[34]++ : e.bl_tree[36]++, a = 0, n = s, 0 === o ? (c = 138, l = 3) : s === o ? (c = 6, l = 3) : (c = 7, l = 4))
                }

                function $(e, t, i) {
                    var r, s, n = -1,
                        o = t[1],
                        a = 0,
                        c = 7,
                        l = 4;
                    for (0 === o && (c = 138, l = 3), r = 0; r <= i; r++)
                        if (s = o, o = t[2 * (r + 1) + 1], !(++a < c && s === o)) {
                            if (a < l)
                                do {
                                    k(e, s, e.bl_tree)
                                } while (0 != --a);
                            else 0 !== s ? (s !== n && (k(e, s, e.bl_tree), a--), k(e, 16, e.bl_tree), O(e, a - 3, 2)) : a <= 10 ? (k(e, 17, e.bl_tree), O(e, a - 3, 3)) : (k(e, 18, e.bl_tree), O(e, a - 11, 7));
                            a = 0, n = s, 0 === o ? (c = 138, l = 3) : s === o ? (c = 6, l = 3) : (c = 7, l = 4)
                        }
                }
                s(y);
                var j = !1;

                function F(e, t, i, s) {
                    O(e, 0 + (s ? 1 : 0), 3),
                        function(e, t, i, s) {
                            A(e), s && (E(e, i), E(e, ~i)), r.arraySet(e.pending_buf, e.window, t, i, e.pending), e.pending += i
                        }(e, t, i, !0)
                }
                t._tr_init = function(e) {
                    j || (! function() {
                        var e, t, i, r, s, n = new Array(16);
                        for (i = 0, r = 0; r < 28; r++)
                            for (v[r] = i, e = 0; e < 1 << l[r]; e++) g[i++] = r;
                        for (g[i - 1] = r, s = 0, r = 0; r < 16; r++)
                            for (y[r] = s, e = 0; e < 1 << h[r]; e++) _[s++] = r;
                        for (s >>= 7; r < a; r++)
                            for (y[r] = s << 7, e = 0; e < 1 << h[r] - 7; e++) _[256 + s++] = r;
                        for (t = 0; t <= c; t++) n[t] = 0;
                        for (e = 0; e <= 143;) f[2 * e + 1] = 8, e++, n[8]++;
                        for (; e <= 255;) f[2 * e + 1] = 9, e++, n[9]++;
                        for (; e <= 279;) f[2 * e + 1] = 7, e++, n[7]++;
                        for (; e <= 287;) f[2 * e + 1] = 8, e++, n[8]++;
                        for (D(f, 287, n), e = 0; e < a; e++) p[2 * e + 1] = 5, p[2 * e] = L(e, 5);
                        m = new S(f, l, 257, o, c), b = new S(p, h, 0, a, c), w = new S(new Array(0), u, 0, 19, 7)
                    }(), j = !0), e.l_desc = new C(e.dyn_ltree, m), e.d_desc = new C(e.dyn_dtree, b), e.bl_desc = new C(e.bl_tree, w), e.bi_buf = 0, e.bi_valid = 0, M(e)
                }, t._tr_stored_block = F, t._tr_flush_block = function(e, t, i, r) {
                    var s, o, a = 0;
                    e.level > 0 ? (2 === e.strm.data_type && (e.strm.data_type = function(e) {
                        var t, i = 4093624447;
                        for (t = 0; t <= 31; t++, i >>>= 1)
                            if (1 & i && 0 !== e.dyn_ltree[2 * t]) return 0;
                        if (0 !== e.dyn_ltree[18] || 0 !== e.dyn_ltree[20] || 0 !== e.dyn_ltree[26]) return 1;
                        for (t = 32; t < n; t++)
                            if (0 !== e.dyn_ltree[2 * t]) return 1;
                        return 0
                    }(e)), B(e, e.l_desc), B(e, e.d_desc), a = function(e) {
                        var t;
                        for (I(e, e.dyn_ltree, e.l_desc.max_code), I(e, e.dyn_dtree, e.d_desc.max_code), B(e, e.bl_desc), t = 18; t >= 3 && 0 === e.bl_tree[2 * d[t] + 1]; t--);
                        return e.opt_len += 3 * (t + 1) + 5 + 5 + 4, t
                    }(e), s = e.opt_len + 3 + 7 >>> 3, (o = e.static_len + 3 + 7 >>> 3) <= s && (s = o)) : s = o = i + 5, i + 4 <= s && -1 !== t ? F(e, t, i, r) : 4 === e.strategy || o === s ? (O(e, 2 + (r ? 1 : 0), 3), T(e, f, p)) : (O(e, 4 + (r ? 1 : 0), 3), function(e, t, i, r) {
                        var s;
                        for (O(e, t - 257, 5), O(e, i - 1, 5), O(e, r - 4, 4), s = 0; s < r; s++) O(e, e.bl_tree[2 * d[s] + 1], 3);
                        $(e, e.dyn_ltree, t - 1), $(e, e.dyn_dtree, i - 1)
                    }(e, e.l_desc.max_code + 1, e.d_desc.max_code + 1, a + 1), T(e, e.dyn_ltree, e.dyn_dtree)), M(e), r && A(e)
                }, t._tr_tally = function(e, t, i) {
                    return e.pending_buf[e.d_buf + 2 * e.last_lit] = t >>> 8 & 255, e.pending_buf[e.d_buf + 2 * e.last_lit + 1] = 255 & t, e.pending_buf[e.l_buf + e.last_lit] = 255 & i, e.last_lit++, 0 === t ? e.dyn_ltree[2 * i]++ : (e.matches++, t--, e.dyn_ltree[2 * (g[i] + n + 1)]++, e.dyn_dtree[2 * x(t)]++), e.last_lit === e.lit_bufsize - 1
                }, t._tr_align = function(e) {
                    O(e, 2, 3), k(e, 256, f),
                        function(e) {
                            16 === e.bi_valid ? (E(e, e.bi_buf), e.bi_buf = 0, e.bi_valid = 0) : e.bi_valid >= 8 && (e.pending_buf[e.pending++] = 255 & e.bi_buf, e.bi_buf >>= 8, e.bi_valid -= 8)
                        }(e)
                }
            },
            2292: e => {
                "use strict";
                e.exports = function() {
                    this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0
                }
            },
            2352: e => {
                "use strict";
                const t = (e, t) => function(...i) {
                    return new(0, t.promiseModule)(((r, s) => {
                        t.multiArgs ? i.push(((...e) => {
                            t.errorFirst ? e[0] ? s(e) : (e.shift(), r(e)) : r(e)
                        })) : t.errorFirst ? i.push(((e, t) => {
                            e ? s(e) : r(t)
                        })) : i.push(r), e.apply(this, i)
                    }))
                };
                e.exports = (e, i) => {
                    i = Object.assign({
                        exclude: [/.+(Sync|Stream)$/],
                        errorFirst: !0,
                        promiseModule: Promise
                    }, i);
                    const r = typeof e;
                    if (null === e || "object" !== r && "function" !== r) throw new TypeError(`Expected \`input\` to be a \`Function\` or \`Object\`, got \`${null===e?"null":r}\``);
                    const s = e => {
                        const t = t => "string" == typeof t ? e === t : t.test(e);
                        return i.include ? i.include.some(t) : !i.exclude.some(t)
                    };
                    let n;
                    n = "function" === r ? function(...r) {
                        return i.excludeMain ? e(...r) : t(e, i).apply(this, r)
                    } : Object.create(Object.getPrototypeOf(e));
                    for (const r in e) {
                        const o = e[r];
                        n[r] = "function" == typeof o && s(r) ? t(o, i) : o
                    }
                    return n
                }
            },
            9509: (e, t, i) => {
                var r = i(4300),
                    s = r.Buffer;

                function n(e, t) {
                    for (var i in e) t[i] = e[i]
                }

                function o(e, t, i) {
                    return s(e, t, i)
                }
                s.from && s.alloc && s.allocUnsafe && s.allocUnsafeSlow ? e.exports = r : (n(r, t), t.Buffer = o), o.prototype = Object.create(s.prototype), n(s, o), o.from = function(e, t, i) {
                    if ("number" == typeof e) throw new TypeError("Argument must not be a number");
                    return s(e, t, i)
                }, o.alloc = function(e, t, i) {
                    if ("number" != typeof e) throw new TypeError("Argument must be a number");
                    var r = s(e);
                    return void 0 !== t ? "string" == typeof i ? r.fill(t, i) : r.fill(t) : r.fill(0), r
                }, o.allocUnsafe = function(e) {
                    if ("number" != typeof e) throw new TypeError("Argument must be a number");
                    return s(e)
                }, o.allocUnsafeSlow = function(e) {
                    if ("number" != typeof e) throw new TypeError("Argument must be a number");
                    return r.SlowBuffer(e)
                }
            },
            4189: (e, t, i) => {
                var r = i(9509).Buffer;

                function s(e, t) {
                    this._block = r.alloc(e), this._finalSize = t, this._blockSize = e, this._len = 0
                }
                s.prototype.update = function(e, t) {
                    "string" == typeof e && (t = t || "utf8", e = r.from(e, t));
                    for (var i = this._block, s = this._blockSize, n = e.length, o = this._len, a = 0; a < n;) {
                        for (var c = o % s, l = Math.min(n - a, s - c), h = 0; h < l; h++) i[c + h] = e[a + h];
                        a += l, (o += l) % s == 0 && this._update(i)
                    }
                    return this._len += n, this
                }, s.prototype.digest = function(e) {
                    var t = this._len % this._blockSize;
                    this._block[t] = 128, this._block.fill(0, t + 1), t >= this._finalSize && (this._update(this._block), this._block.fill(0));
                    var i = 8 * this._len;
                    if (i <= 4294967295) this._block.writeUInt32BE(i, this._blockSize - 4);
                    else {
                        var r = (4294967295 & i) >>> 0,
                            s = (i - r) / 4294967296;
                        this._block.writeUInt32BE(s, this._blockSize - 8), this._block.writeUInt32BE(r, this._blockSize - 4)
                    }
                    this._update(this._block);
                    var n = this._hash();
                    return e ? n.toString(e) : n
                }, s.prototype._update = function() {
                    throw new Error("_update must be implemented by subclass")
                }, e.exports = s
            },
            8336: (e, t, i) => {
                var r = i(5717),
                    s = i(4189),
                    n = i(9509).Buffer,
                    o = [1518500249, 1859775393, -1894007588, -899497514],
                    a = new Array(80);

                function c() {
                    this.init(), this._w = a, s.call(this, 64, 56)
                }

                function l(e) {
                    return e << 5 | e >>> 27
                }

                function h(e) {
                    return e << 30 | e >>> 2
                }

                function u(e, t, i, r) {
                    return 0 === e ? t & i | ~t & r : 2 === e ? t & i | t & r | i & r : t ^ i ^ r
                }
                r(c, s), c.prototype.init = function() {
                    return this._a = 1732584193, this._b = 4023233417, this._c = 2562383102, this._d = 271733878, this._e = 3285377520, this
                }, c.prototype._update = function(e) {
                    for (var t, i = this._w, r = 0 | this._a, s = 0 | this._b, n = 0 | this._c, a = 0 | this._d, c = 0 | this._e, d = 0; d < 16; ++d) i[d] = e.readInt32BE(4 * d);
                    for (; d < 80; ++d) i[d] = (t = i[d - 3] ^ i[d - 8] ^ i[d - 14] ^ i[d - 16]) << 1 | t >>> 31;
                    for (var f = 0; f < 80; ++f) {
                        var p = ~~(f / 20),
                            _ = l(r) + u(p, s, n, a) + c + i[f] + o[p] | 0;
                        c = a, a = n, n = h(s), s = r, r = _
                    }
                    this._a = r + this._a | 0, this._b = s + this._b | 0, this._c = n + this._c | 0, this._d = a + this._d | 0, this._e = c + this._e | 0
                }, c.prototype._hash = function() {
                    var e = n.allocUnsafe(20);
                    return e.writeInt32BE(0 | this._a, 0), e.writeInt32BE(0 | this._b, 4), e.writeInt32BE(0 | this._c, 8), e.writeInt32BE(0 | this._d, 12), e.writeInt32BE(0 | this._e, 16), e
                }, e.exports = c
            },
            5440: (e, t, i) => {
                "use strict";
                i(2809), t.parse = i(5313)
            },
            5313: e => {
                "use strict";
                for (var t = "(?:" + ["\\|\\|", "\\&\\&", ";;", "\\|\\&", "\\<\\(", "\\<\\<\\<", ">>", ">\\&", "<\\&", "[&;()|<>]"].join("|") + ")", i = new RegExp("^" + t + "$"), r = "|&;()<> \\t", s = /^#$/, n = "", o = 0; o < 4; o++) n += (4294967296 * Math.random()).toString(16);
                var a = new RegExp("^" + n);

                function c(e, o, a) {
                    a || (a = {});
                    var c = a.escape || "\\",
                        l = new RegExp(["(" + t + ")", "(" + ("(\\" + c + "['\"" + r + "]|[^\\s'\"" + r + "])+") + "|\"((\\\\\"|[^\"])*?)\"|'((\\\\'|[^'])*?)')+"].join("|"), "g"),
                        h = function(e, t) {
                            for (var i, r = t.lastIndex, s = []; i = t.exec(e);) s.push(i), t.lastIndex === i.index && (t.lastIndex += 1);
                            return t.lastIndex = r, s
                        }(e, l);
                    if (0 === h.length) return [];
                    o || (o = {});
                    var u = !1;
                    return h.map((function(t) {
                        var r = t[0];
                        if (r && !u) {
                            if (i.test(r)) return {
                                op: r
                            };
                            var a, l = !1,
                                h = !1,
                                d = "",
                                f = !1;
                            for (a = 0; a < r.length; a++) {
                                var p = r.charAt(a);
                                if (f = f || !l && ("*" === p || "?" === p), h) d += p, h = !1;
                                else if (l) p === l ? l = !1 : "'" == l ? d += p : p === c ? (a += 1, d += '"' === (p = r.charAt(a)) || p === c || "$" === p ? p : c + p) : d += "$" === p ? g() : p;
                                else if ('"' === p || "'" === p) l = p;
                                else {
                                    if (i.test(p)) return {
                                        op: r
                                    };
                                    if (s.test(p)) {
                                        u = !0;
                                        var _ = {
                                            comment: e.slice(t.index + a + 1)
                                        };
                                        return d.length ? [d, _] : [_]
                                    }
                                    p === c ? h = !0 : d += "$" === p ? g() : p
                                }
                            }
                            return f ? {
                                op: "glob",
                                pattern: d
                            } : d
                        }

                        function g() {
                            var e, t;
                            a += 1;
                            var i = r.charAt(a);
                            if ("{" === i) {
                                if (a += 1, "}" === r.charAt(a)) throw new Error("Bad substitution: " + r.slice(a - 2, a + 1));
                                if ((e = r.indexOf("}", a)) < 0) throw new Error("Bad substitution: " + r.slice(a));
                                t = r.slice(a, e), a = e
                            } else if (/[*@#?$!_-]/.test(i)) t = i, a += 1;
                            else {
                                var s = r.slice(a);
                                (e = s.match(/[^\w\d_]/)) ? (t = s.slice(0, e.index), a += e.index - 1) : (t = s, a = r.length)
                            }
                            return function(e, t, i) {
                                var r = "function" == typeof e ? e(i) : e[i];
                                return void 0 === r && "" != i ? r = "" : void 0 === r && (r = "$"), "object" == typeof r ? t + n + JSON.stringify(r) + n : t + r
                            }(o, "", t)
                        }
                    })).reduce((function(e, t) {
                        return void 0 === t ? e : e.concat(t)
                    }), [])
                }
                e.exports = function(e, t, i) {
                    var r = c(e, t, i);
                    return "function" != typeof t ? r : r.reduce((function(e, t) {
                        if ("object" == typeof t) return e.concat(t);
                        var i = t.split(RegExp("(" + n + ".*?" + n + ")", "g"));
                        return 1 === i.length ? e.concat(i[0]) : e.concat(i.filter(Boolean).map((function(e) {
                            return a.test(e) ? JSON.parse(e.split(n)[1]) : e
                        })))
                    }), [])
                }
            },
            2809: e => {
                "use strict";
                e.exports = function(e) {
                    return e.map((function(e) {
                        return e && "object" == typeof e ? e.op.replace(/(.)/g, "\\$1") : /["\s]/.test(e) && !/'/.test(e) ? "'" + e.replace(/(['\\])/g, "\\$1") + "'" : /["'\s]/.test(e) ? '"' + e.replace(/(["\\$`!])/g, "\\$1") + '"' : String(e).replace(/([A-Za-z]:)?([#!"$&'()*,:;<=>?@[\\\]^`{|}])/g, "$1\\$2")
                    })).join(" ")
                }
            },
            9938: function(e) {
                "undefined" != typeof self && self, e.exports = (() => {
                    var e = {
                            646: e => {
                                e.exports = function(e) {
                                    if (Array.isArray(e)) {
                                        for (var t = 0, i = new Array(e.length); t < e.length; t++) i[t] = e[t];
                                        return i
                                    }
                                }
                            },
                            713: e => {
                                e.exports = function(e, t, i) {
                                    return t in e ? Object.defineProperty(e, t, {
                                        value: i,
                                        enumerable: !0,
                                        configurable: !0,
                                        writable: !0
                                    }) : e[t] = i, e
                                }
                            },
                            860: e => {
                                e.exports = function(e) {
                                    if (Symbol.iterator in Object(e) || "[object Arguments]" === Object.prototype.toString.call(e)) return Array.from(e)
                                }
                            },
                            206: e => {
                                e.exports = function() {
                                    throw new TypeError("Invalid attempt to spread non-iterable instance")
                                }
                            },
                            319: (e, t, i) => {
                                var r = i(646),
                                    s = i(860),
                                    n = i(206);
                                e.exports = function(e) {
                                    return r(e) || s(e) || n()
                                }
                            },
                            8: e => {
                                function t(i) {
                                    return "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? e.exports = t = function(e) {
                                        return typeof e
                                    } : e.exports = t = function(e) {
                                        return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                                    }, t(i)
                                }
                                e.exports = t
                            }
                        },
                        t = {};

                    function i(r) {
                        var s = t[r];
                        if (void 0 !== s) return s.exports;
                        var n = t[r] = {
                            exports: {}
                        };
                        return e[r](n, n.exports, i), n.exports
                    }
                    i.n = e => {
                        var t = e && e.__esModule ? () => e.default : () => e;
                        return i.d(t, {
                            a: t
                        }), t
                    }, i.d = (e, t) => {
                        for (var r in t) i.o(t, r) && !i.o(e, r) && Object.defineProperty(e, r, {
                            enumerable: !0,
                            get: t[r]
                        })
                    }, i.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), i.r = e => {
                        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
                            value: "Module"
                        }), Object.defineProperty(e, "__esModule", {
                            value: !0
                        })
                    };
                    var r = {};
                    return (() => {
                        "use strict";
                        i.r(r), i.d(r, {
                            VueSelect: () => b,
                            default: () => y,
                            mixins: () => w
                        });
                        var e = i(319),
                            t = i.n(e),
                            s = i(8),
                            n = i.n(s),
                            o = i(713),
                            a = i.n(o);
                        const c = {
                                props: {
                                    autoscroll: {
                                        type: Boolean,
                                        default: !0
                                    }
                                },
                                watch: {
                                    typeAheadPointer: function() {
                                        this.autoscroll && this.maybeAdjustScroll()
                                    },
                                    open: function(e) {
                                        var t = this;
                                        this.autoscroll && e && this.$nextTick((function() {
                                            return t.maybeAdjustScroll()
                                        }))
                                    }
                                },
                                methods: {
                                    maybeAdjustScroll: function() {
                                        var e, t = (null === (e = this.$refs.dropdownMenu) || void 0 === e ? void 0 : e.children[this.typeAheadPointer]) || !1;
                                        if (t) {
                                            var i = this.getDropdownViewport(),
                                                r = t.getBoundingClientRect(),
                                                s = r.top,
                                                n = r.bottom,
                                                o = r.height;
                                            if (s < i.top) return this.$refs.dropdownMenu.scrollTop = t.offsetTop;
                                            if (n > i.bottom) return this.$refs.dropdownMenu.scrollTop = t.offsetTop - (i.height - o)
                                        }
                                    },
                                    getDropdownViewport: function() {
                                        return this.$refs.dropdownMenu ? this.$refs.dropdownMenu.getBoundingClientRect() : {
                                            height: 0,
                                            top: 0,
                                            bottom: 0
                                        }
                                    }
                                }
                            },
                            l = {
                                data: function() {
                                    return {
                                        typeAheadPointer: -1
                                    }
                                },
                                watch: {
                                    filteredOptions: function() {
                                        for (var e = 0; e < this.filteredOptions.length; e++)
                                            if (this.selectable(this.filteredOptions[e])) {
                                                this.typeAheadPointer = e;
                                                break
                                            }
                                    },
                                    open: function(e) {
                                        e && this.typeAheadToLastSelected()
                                    },
                                    selectedValue: function() {
                                        this.open && this.typeAheadToLastSelected()
                                    }
                                },
                                methods: {
                                    typeAheadUp: function() {
                                        for (var e = this.typeAheadPointer - 1; e >= 0; e--)
                                            if (this.selectable(this.filteredOptions[e])) {
                                                this.typeAheadPointer = e;
                                                break
                                            }
                                    },
                                    typeAheadDown: function() {
                                        for (var e = this.typeAheadPointer + 1; e < this.filteredOptions.length; e++)
                                            if (this.selectable(this.filteredOptions[e])) {
                                                this.typeAheadPointer = e;
                                                break
                                            }
                                    },
                                    typeAheadSelect: function() {
                                        var e = this.filteredOptions[this.typeAheadPointer];
                                        e && this.selectable(e) && this.select(e)
                                    },
                                    typeAheadToLastSelected: function() {
                                        var e = 0 !== this.selectedValue.length ? this.filteredOptions.indexOf(this.selectedValue[this.selectedValue.length - 1]) : -1; - 1 !== e && (this.typeAheadPointer = e)
                                    }
                                }
                            },
                            h = {
                                props: {
                                    loading: {
                                        type: Boolean,
                                        default: !1
                                    }
                                },
                                data: function() {
                                    return {
                                        mutableLoading: !1
                                    }
                                },
                                watch: {
                                    search: function() {
                                        this.$emit("search", this.search, this.toggleLoading)
                                    },
                                    loading: function(e) {
                                        this.mutableLoading = e
                                    }
                                },
                                methods: {
                                    toggleLoading: function() {
                                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
                                        return this.mutableLoading = null == e ? !this.mutableLoading : e
                                    }
                                }
                            };

                        function u(e, t, i, r, s, n, o, a) {
                            var c, l = "function" == typeof e ? e.options : e;
                            if (t && (l.render = t, l.staticRenderFns = i, l._compiled = !0), r && (l.functional = !0), n && (l._scopeId = "data-v-" + n), o ? (c = function(e) {
                                    (e = e || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) || "undefined" == typeof __VUE_SSR_CONTEXT__ || (e = __VUE_SSR_CONTEXT__), s && s.call(this, e), e && e._registeredComponents && e._registeredComponents.add(o)
                                }, l._ssrRegister = c) : s && (c = a ? function() {
                                    s.call(this, (l.functional ? this.parent : this).$root.$options.shadowRoot)
                                } : s), c)
                                if (l.functional) {
                                    l._injectStyles = c;
                                    var h = l.render;
                                    l.render = function(e, t) {
                                        return c.call(t), h(e, t)
                                    }
                                } else {
                                    var u = l.beforeCreate;
                                    l.beforeCreate = u ? [].concat(u, c) : [c]
                                } return {
                                exports: e,
                                options: l
                            }
                        }
                        const d = {
                                Deselect: u({}, (function() {
                                    var e = this.$createElement,
                                        t = this._self._c || e;
                                    return t("svg", {
                                        attrs: {
                                            xmlns: "http://www.w3.org/2000/svg",
                                            width: "10",
                                            height: "10"
                                        }
                                    }, [t("path", {
                                        attrs: {
                                            d: "M6.895455 5l2.842897-2.842898c.348864-.348863.348864-.914488 0-1.263636L9.106534.261648c-.348864-.348864-.914489-.348864-1.263636 0L5 3.104545 2.157102.261648c-.348863-.348864-.914488-.348864-1.263636 0L.261648.893466c-.348864.348864-.348864.914489 0 1.263636L3.104545 5 .261648 7.842898c-.348864.348863-.348864.914488 0 1.263636l.631818.631818c.348864.348864.914773.348864 1.263636 0L5 6.895455l2.842898 2.842897c.348863.348864.914772.348864 1.263636 0l.631818-.631818c.348864-.348864.348864-.914489 0-1.263636L6.895455 5z"
                                        }
                                    })])
                                }), [], !1, null, null, null).exports,
                                OpenIndicator: u({}, (function() {
                                    var e = this.$createElement,
                                        t = this._self._c || e;
                                    return t("svg", {
                                        attrs: {
                                            xmlns: "http://www.w3.org/2000/svg",
                                            width: "14",
                                            height: "10"
                                        }
                                    }, [t("path", {
                                        attrs: {
                                            d: "M9.211364 7.59931l4.48338-4.867229c.407008-.441854.407008-1.158247 0-1.60046l-.73712-.80023c-.407008-.441854-1.066904-.441854-1.474243 0L7 5.198617 2.51662.33139c-.407008-.441853-1.066904-.441853-1.474243 0l-.737121.80023c-.407008.441854-.407008 1.158248 0 1.600461l4.48338 4.867228L7 10l2.211364-2.40069z"
                                        }
                                    })])
                                }), [], !1, null, null, null).exports
                            },
                            f = {
                                inserted: function(e, t, i) {
                                    var r = i.context;
                                    if (r.appendToBody) {
                                        var s = r.$refs.toggle.getBoundingClientRect(),
                                            n = s.height,
                                            o = s.top,
                                            a = s.left,
                                            c = s.width,
                                            l = window.scrollX || window.pageXOffset,
                                            h = window.scrollY || window.pageYOffset;
                                        e.unbindPosition = r.calculatePosition(e, r, {
                                            width: c + "px",
                                            left: l + a + "px",
                                            top: h + o + n + "px"
                                        }), document.body.appendChild(e)
                                    }
                                },
                                unbind: function(e, t, i) {
                                    i.context.appendToBody && (e.unbindPosition && "function" == typeof e.unbindPosition && e.unbindPosition(), e.parentNode && e.parentNode.removeChild(e))
                                }
                            },
                            p = function(e) {
                                var t = {};
                                return Object.keys(e).sort().forEach((function(i) {
                                    t[i] = e[i]
                                })), JSON.stringify(t)
                            };
                        var _ = 0;
                        const g = function() {
                            return ++_
                        };

                        function v(e, t) {
                            var i = Object.keys(e);
                            if (Object.getOwnPropertySymbols) {
                                var r = Object.getOwnPropertySymbols(e);
                                t && (r = r.filter((function(t) {
                                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                                }))), i.push.apply(i, r)
                            }
                            return i
                        }

                        function m(e) {
                            for (var t = 1; t < arguments.length; t++) {
                                var i = null != arguments[t] ? arguments[t] : {};
                                t % 2 ? v(Object(i), !0).forEach((function(t) {
                                    a()(e, t, i[t])
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : v(Object(i)).forEach((function(t) {
                                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                                }))
                            }
                            return e
                        }
                        const b = u({
                                components: m({}, d),
                                directives: {
                                    appendToBody: f
                                },
                                mixins: [c, l, h],
                                props: {
                                    value: {},
                                    components: {
                                        type: Object,
                                        default: function() {
                                            return {}
                                        }
                                    },
                                    options: {
                                        type: Array,
                                        default: function() {
                                            return []
                                        }
                                    },
                                    disabled: {
                                        type: Boolean,
                                        default: !1
                                    },
                                    clearable: {
                                        type: Boolean,
                                        default: !0
                                    },
                                    deselectFromDropdown: {
                                        type: Boolean,
                                        default: !1
                                    },
                                    searchable: {
                                        type: Boolean,
                                        default: !0
                                    },
                                    multiple: {
                                        type: Boolean,
                                        default: !1
                                    },
                                    placeholder: {
                                        type: String,
                                        default: ""
                                    },
                                    transition: {
                                        type: String,
                                        default: "vs__fade"
                                    },
                                    clearSearchOnSelect: {
                                        type: Boolean,
                                        default: !0
                                    },
                                    closeOnSelect: {
                                        type: Boolean,
                                        default: !0
                                    },
                                    label: {
                                        type: String,
                                        default: "label"
                                    },
                                    autocomplete: {
                                        type: String,
                                        default: "off"
                                    },
                                    reduce: {
                                        type: Function,
                                        default: function(e) {
                                            return e
                                        }
                                    },
                                    selectable: {
                                        type: Function,
                                        default: function(e) {
                                            return !0
                                        }
                                    },
                                    getOptionLabel: {
                                        type: Function,
                                        default: function(e) {
                                            return "object" === n()(e) ? e.hasOwnProperty(this.label) ? e[this.label] : console.warn('[vue-select warn]: Label key "option.'.concat(this.label, '" does not') + " exist in options object ".concat(JSON.stringify(e), ".\n") + "https://vue-select.org/api/props.html#getoptionlabel") : e
                                        }
                                    },
                                    getOptionKey: {
                                        type: Function,
                                        default: function(e) {
                                            if ("object" !== n()(e)) return e;
                                            try {
                                                return e.hasOwnProperty("id") ? e.id : p(e)
                                            } catch (t) {
                                                return console.warn("[vue-select warn]: Could not stringify this option to generate unique key. Please provide'getOptionKey' prop to return a unique key for each option.\nhttps://vue-select.org/api/props.html#getoptionkey", e, t)
                                            }
                                        }
                                    },
                                    onTab: {
                                        type: Function,
                                        default: function() {
                                            this.selectOnTab && !this.isComposing && this.typeAheadSelect()
                                        }
                                    },
                                    taggable: {
                                        type: Boolean,
                                        default: !1
                                    },
                                    tabindex: {
                                        type: Number,
                                        default: null
                                    },
                                    pushTags: {
                                        type: Boolean,
                                        default: !1
                                    },
                                    filterable: {
                                        type: Boolean,
                                        default: !0
                                    },
                                    filterBy: {
                                        type: Function,
                                        default: function(e, t, i) {
                                            return (t || "").toLocaleLowerCase().indexOf(i.toLocaleLowerCase()) > -1
                                        }
                                    },
                                    filter: {
                                        type: Function,
                                        default: function(e, t) {
                                            var i = this;
                                            return e.filter((function(e) {
                                                var r = i.getOptionLabel(e);
                                                return "number" == typeof r && (r = r.toString()), i.filterBy(e, r, t)
                                            }))
                                        }
                                    },
                                    createOption: {
                                        type: Function,
                                        default: function(e) {
                                            return "object" === n()(this.optionList[0]) ? a()({}, this.label, e) : e
                                        }
                                    },
                                    resetOnOptionsChange: {
                                        default: !1,
                                        validator: function(e) {
                                            return ["function", "boolean"].includes(n()(e))
                                        }
                                    },
                                    clearSearchOnBlur: {
                                        type: Function,
                                        default: function(e) {
                                            var t = e.clearSearchOnSelect,
                                                i = e.multiple;
                                            return t && !i
                                        }
                                    },
                                    noDrop: {
                                        type: Boolean,
                                        default: !1
                                    },
                                    inputId: {
                                        type: String
                                    },
                                    dir: {
                                        type: String,
                                        default: "auto"
                                    },
                                    selectOnTab: {
                                        type: Boolean,
                                        default: !1
                                    },
                                    selectOnKeyCodes: {
                                        type: Array,
                                        default: function() {
                                            return [13]
                                        }
                                    },
                                    searchInputQuerySelector: {
                                        type: String,
                                        default: "[type=search]"
                                    },
                                    mapKeydown: {
                                        type: Function,
                                        default: function(e, t) {
                                            return e
                                        }
                                    },
                                    appendToBody: {
                                        type: Boolean,
                                        default: !1
                                    },
                                    calculatePosition: {
                                        type: Function,
                                        default: function(e, t, i) {
                                            var r = i.width,
                                                s = i.top,
                                                n = i.left;
                                            e.style.top = s, e.style.left = n, e.style.width = r
                                        }
                                    },
                                    dropdownShouldOpen: {
                                        type: Function,
                                        default: function(e) {
                                            var t = e.noDrop,
                                                i = e.open,
                                                r = e.mutableLoading;
                                            return !t && i && !r
                                        }
                                    },
                                    uid: {
                                        type: [String, Number],
                                        default: function() {
                                            return g()
                                        }
                                    }
                                },
                                data: function() {
                                    return {
                                        search: "",
                                        open: !1,
                                        isComposing: !1,
                                        pushedTags: [],
                                        _value: []
                                    }
                                },
                                computed: {
                                    isTrackingValues: function() {
                                        return void 0 === this.value || this.$options.propsData.hasOwnProperty("reduce")
                                    },
                                    selectedValue: function() {
                                        var e = this.value;
                                        return this.isTrackingValues && (e = this.$data._value), null != e && "" !== e ? [].concat(e) : []
                                    },
                                    optionList: function() {
                                        return this.options.concat(this.pushTags ? this.pushedTags : [])
                                    },
                                    searchEl: function() {
                                        return this.$scopedSlots.search ? this.$refs.selectedOptions.querySelector(this.searchInputQuerySelector) : this.$refs.search
                                    },
                                    scope: function() {
                                        var e = this,
                                            t = {
                                                search: this.search,
                                                loading: this.loading,
                                                searching: this.searching,
                                                filteredOptions: this.filteredOptions
                                            };
                                        return {
                                            search: {
                                                attributes: m({
                                                    disabled: this.disabled,
                                                    placeholder: this.searchPlaceholder,
                                                    tabindex: this.tabindex,
                                                    readonly: !this.searchable,
                                                    id: this.inputId,
                                                    "aria-autocomplete": "list",
                                                    "aria-labelledby": "vs".concat(this.uid, "__combobox"),
                                                    "aria-controls": "vs".concat(this.uid, "__listbox"),
                                                    ref: "search",
                                                    type: "search",
                                                    autocomplete: this.autocomplete,
                                                    value: this.search
                                                }, this.dropdownOpen && this.filteredOptions[this.typeAheadPointer] ? {
                                                    "aria-activedescendant": "vs".concat(this.uid, "__option-").concat(this.typeAheadPointer)
                                                } : {}),
                                                events: {
                                                    compositionstart: function() {
                                                        return e.isComposing = !0
                                                    },
                                                    compositionend: function() {
                                                        return e.isComposing = !1
                                                    },
                                                    keydown: this.onSearchKeyDown,
                                                    keypress: this.onSearchKeyPress,
                                                    blur: this.onSearchBlur,
                                                    focus: this.onSearchFocus,
                                                    input: function(t) {
                                                        return e.search = t.target.value
                                                    }
                                                }
                                            },
                                            spinner: {
                                                loading: this.mutableLoading
                                            },
                                            noOptions: {
                                                search: this.search,
                                                loading: this.mutableLoading,
                                                searching: this.searching
                                            },
                                            openIndicator: {
                                                attributes: {
                                                    ref: "openIndicator",
                                                    role: "presentation",
                                                    class: "vs__open-indicator"
                                                }
                                            },
                                            listHeader: t,
                                            listFooter: t,
                                            header: m({}, t, {
                                                deselect: this.deselect
                                            }),
                                            footer: m({}, t, {
                                                deselect: this.deselect
                                            })
                                        }
                                    },
                                    childComponents: function() {
                                        return m({}, d, {}, this.components)
                                    },
                                    stateClasses: function() {
                                        return {
                                            "vs--open": this.dropdownOpen,
                                            "vs--single": !this.multiple,
                                            "vs--multiple": this.multiple,
                                            "vs--searching": this.searching && !this.noDrop,
                                            "vs--searchable": this.searchable && !this.noDrop,
                                            "vs--unsearchable": !this.searchable,
                                            "vs--loading": this.mutableLoading,
                                            "vs--disabled": this.disabled
                                        }
                                    },
                                    searching: function() {
                                        return !!this.search
                                    },
                                    dropdownOpen: function() {
                                        return this.dropdownShouldOpen(this)
                                    },
                                    searchPlaceholder: function() {
                                        return this.isValueEmpty && this.placeholder ? this.placeholder : void 0
                                    },
                                    filteredOptions: function() {
                                        var e = [].concat(this.optionList);
                                        if (!this.filterable && !this.taggable) return e;
                                        var t = this.search.length ? this.filter(e, this.search, this) : e;
                                        if (this.taggable && this.search.length) {
                                            var i = this.createOption(this.search);
                                            this.optionExists(i) || t.unshift(i)
                                        }
                                        return t
                                    },
                                    isValueEmpty: function() {
                                        return 0 === this.selectedValue.length
                                    },
                                    showClearButton: function() {
                                        return !this.multiple && this.clearable && !this.open && !this.isValueEmpty
                                    }
                                },
                                watch: {
                                    options: function(e, t) {
                                        var i = this;
                                        !this.taggable && ("function" == typeof i.resetOnOptionsChange ? i.resetOnOptionsChange(e, t, i.selectedValue) : i.resetOnOptionsChange) && this.clearSelection(), this.value && this.isTrackingValues && this.setInternalValueFromOptions(this.value)
                                    },
                                    value: {
                                        immediate: !0,
                                        handler: function(e) {
                                            this.isTrackingValues && this.setInternalValueFromOptions(e)
                                        }
                                    },
                                    multiple: function() {
                                        this.clearSelection()
                                    },
                                    open: function(e) {
                                        this.$emit(e ? "open" : "close")
                                    },
                                    search: function(e) {
                                        e.length && (this.open = !0)
                                    }
                                },
                                created: function() {
                                    this.mutableLoading = this.loading, this.$on("option:created", this.pushTag)
                                },
                                methods: {
                                    setInternalValueFromOptions: function(e) {
                                        var t = this;
                                        Array.isArray(e) ? this.$data._value = e.map((function(e) {
                                            return t.findOptionFromReducedValue(e)
                                        })) : this.$data._value = this.findOptionFromReducedValue(e)
                                    },
                                    select: function(e) {
                                        this.$emit("option:selecting", e), this.isOptionSelected(e) ? this.deselectFromDropdown && (this.clearable || this.multiple && this.selectedValue.length > 1) && this.deselect(e) : (this.taggable && !this.optionExists(e) && this.$emit("option:created", e), this.multiple && (e = this.selectedValue.concat(e)), this.updateValue(e), this.$emit("option:selected", e)), this.onAfterSelect(e)
                                    },
                                    deselect: function(e) {
                                        var t = this;
                                        this.$emit("option:deselecting", e), this.updateValue(this.selectedValue.filter((function(i) {
                                            return !t.optionComparator(i, e)
                                        }))), this.$emit("option:deselected", e)
                                    },
                                    clearSelection: function() {
                                        this.updateValue(this.multiple ? [] : null)
                                    },
                                    onAfterSelect: function(e) {
                                        var t = this;
                                        this.closeOnSelect && (this.open = !this.open), this.clearSearchOnSelect && (this.search = ""), this.noDrop && this.multiple && this.$nextTick((function() {
                                            return t.$refs.search.focus()
                                        }))
                                    },
                                    updateValue: function(e) {
                                        var t = this;
                                        void 0 === this.value && (this.$data._value = e), null !== e && (e = Array.isArray(e) ? e.map((function(e) {
                                            return t.reduce(e)
                                        })) : this.reduce(e)), this.$emit("input", e)
                                    },
                                    toggleDropdown: function(e) {
                                        var i = e.target !== this.searchEl;
                                        i && e.preventDefault();
                                        var r = [].concat(t()(this.$refs.deselectButtons || []), t()([this.$refs.clearButton] || 0));
                                        void 0 === this.searchEl || r.filter(Boolean).some((function(t) {
                                            return t.contains(e.target) || t === e.target
                                        })) ? e.preventDefault() : this.open && i ? this.searchEl.blur() : this.disabled || (this.open = !0, this.searchEl.focus())
                                    },
                                    isOptionSelected: function(e) {
                                        var t = this;
                                        return this.selectedValue.some((function(i) {
                                            return t.optionComparator(i, e)
                                        }))
                                    },
                                    isOptionDeselectable: function(e) {
                                        return this.isOptionSelected(e) && this.deselectFromDropdown
                                    },
                                    optionComparator: function(e, t) {
                                        return this.getOptionKey(e) === this.getOptionKey(t)
                                    },
                                    findOptionFromReducedValue: function(e) {
                                        var i = this,
                                            r = [].concat(t()(this.options), t()(this.pushedTags)).filter((function(t) {
                                                return JSON.stringify(i.reduce(t)) === JSON.stringify(e)
                                            }));
                                        return 1 === r.length ? r[0] : r.find((function(e) {
                                            return i.optionComparator(e, i.$data._value)
                                        })) || e
                                    },
                                    closeSearchOptions: function() {
                                        this.open = !1, this.$emit("search:blur")
                                    },
                                    maybeDeleteValue: function() {
                                        if (!this.searchEl.value.length && this.selectedValue && this.selectedValue.length && this.clearable) {
                                            var e = null;
                                            this.multiple && (e = t()(this.selectedValue.slice(0, this.selectedValue.length - 1))), this.updateValue(e)
                                        }
                                    },
                                    optionExists: function(e) {
                                        var t = this;
                                        return this.optionList.some((function(i) {
                                            return t.optionComparator(i, e)
                                        }))
                                    },
                                    normalizeOptionForSlot: function(e) {
                                        return "object" === n()(e) ? e : a()({}, this.label, e)
                                    },
                                    pushTag: function(e) {
                                        this.pushedTags.push(e)
                                    },
                                    onEscape: function() {
                                        this.search.length ? this.search = "" : this.open = !1
                                    },
                                    onSearchBlur: function() {
                                        if (!this.mousedown || this.searching) {
                                            var e = this.clearSearchOnSelect,
                                                t = this.multiple;
                                            return this.clearSearchOnBlur({
                                                clearSearchOnSelect: e,
                                                multiple: t
                                            }) && (this.search = ""), void this.closeSearchOptions()
                                        }
                                        this.mousedown = !1, 0 !== this.search.length || 0 !== this.options.length || this.closeSearchOptions()
                                    },
                                    onSearchFocus: function() {
                                        this.open = !0, this.$emit("search:focus")
                                    },
                                    onMousedown: function() {
                                        this.mousedown = !0
                                    },
                                    onMouseUp: function() {
                                        this.mousedown = !1
                                    },
                                    onSearchKeyDown: function(e) {
                                        var t = this,
                                            i = function(e) {
                                                return e.preventDefault(), !t.isComposing && t.typeAheadSelect()
                                            },
                                            r = {
                                                8: function(e) {
                                                    return t.maybeDeleteValue()
                                                },
                                                9: function(e) {
                                                    return t.onTab()
                                                },
                                                27: function(e) {
                                                    return t.onEscape()
                                                },
                                                38: function(e) {
                                                    if (e.preventDefault(), t.open) return t.typeAheadUp();
                                                    t.open = !0
                                                },
                                                40: function(e) {
                                                    if (e.preventDefault(), t.open) return t.typeAheadDown();
                                                    t.open = !0
                                                }
                                            };
                                        this.selectOnKeyCodes.forEach((function(e) {
                                            return r[e] = i
                                        }));
                                        var s = this.mapKeydown(r, this);
                                        if ("function" == typeof s[e.keyCode]) return s[e.keyCode](e)
                                    },
                                    onSearchKeyPress: function(e) {
                                        this.open || 32 !== e.keyCode || (e.preventDefault(), this.open = !0)
                                    }
                                }
                            }, (function() {
                                var e = this,
                                    t = e.$createElement,
                                    i = e._self._c || t;
                                return i("div", {
                                    staticClass: "v-select",
                                    class: e.stateClasses,
                                    attrs: {
                                        dir: e.dir
                                    }
                                }, [e._t("header", null, null, e.scope.header), e._v(" "), i("div", {
                                    ref: "toggle",
                                    staticClass: "vs__dropdown-toggle",
                                    attrs: {
                                        id: "vs" + e.uid + "__combobox",
                                        role: "combobox",
                                        "aria-expanded": e.dropdownOpen.toString(),
                                        "aria-owns": "vs" + e.uid + "__listbox",
                                        "aria-label": "Search for option"
                                    },
                                    on: {
                                        mousedown: function(t) {
                                            return e.toggleDropdown(t)
                                        }
                                    }
                                }, [i("div", {
                                    ref: "selectedOptions",
                                    staticClass: "vs__selected-options"
                                }, [e._l(e.selectedValue, (function(t) {
                                    return e._t("selected-option-container", [i("span", {
                                        key: e.getOptionKey(t),
                                        staticClass: "vs__selected"
                                    }, [e._t("selected-option", [e._v("\n            " + e._s(e.getOptionLabel(t)) + "\n          ")], null, e.normalizeOptionForSlot(t)), e._v(" "), e.multiple ? i("button", {
                                        ref: "deselectButtons",
                                        refInFor: !0,
                                        staticClass: "vs__deselect",
                                        attrs: {
                                            disabled: e.disabled,
                                            type: "button",
                                            title: "Deselect " + e.getOptionLabel(t),
                                            "aria-label": "Deselect " + e.getOptionLabel(t)
                                        },
                                        on: {
                                            click: function(i) {
                                                return e.deselect(t)
                                            }
                                        }
                                    }, [i(e.childComponents.Deselect, {
                                        tag: "component"
                                    })], 1) : e._e()], 2)], {
                                        option: e.normalizeOptionForSlot(t),
                                        deselect: e.deselect,
                                        multiple: e.multiple,
                                        disabled: e.disabled
                                    })
                                })), e._v(" "), e._t("search", [i("input", e._g(e._b({
                                    staticClass: "vs__search"
                                }, "input", e.scope.search.attributes, !1), e.scope.search.events))], null, e.scope.search)], 2), e._v(" "), i("div", {
                                    ref: "actions",
                                    staticClass: "vs__actions"
                                }, [i("button", {
                                    directives: [{
                                        name: "show",
                                        rawName: "v-show",
                                        value: e.showClearButton,
                                        expression: "showClearButton"
                                    }],
                                    ref: "clearButton",
                                    staticClass: "vs__clear",
                                    attrs: {
                                        disabled: e.disabled,
                                        type: "button",
                                        title: "Clear Selected",
                                        "aria-label": "Clear Selected"
                                    },
                                    on: {
                                        click: e.clearSelection
                                    }
                                }, [i(e.childComponents.Deselect, {
                                    tag: "component"
                                })], 1), e._v(" "), e._t("open-indicator", [e.noDrop ? e._e() : i(e.childComponents.OpenIndicator, e._b({
                                    tag: "component"
                                }, "component", e.scope.openIndicator.attributes, !1))], null, e.scope.openIndicator), e._v(" "), e._t("spinner", [i("div", {
                                    directives: [{
                                        name: "show",
                                        rawName: "v-show",
                                        value: e.mutableLoading,
                                        expression: "mutableLoading"
                                    }],
                                    staticClass: "vs__spinner"
                                }, [e._v("Loading...")])], null, e.scope.spinner)], 2)]), e._v(" "), i("transition", {
                                    attrs: {
                                        name: e.transition
                                    }
                                }, [e.dropdownOpen ? i("ul", {
                                    directives: [{
                                        name: "append-to-body",
                                        rawName: "v-append-to-body"
                                    }],
                                    key: "vs" + e.uid + "__listbox",
                                    ref: "dropdownMenu",
                                    staticClass: "vs__dropdown-menu",
                                    attrs: {
                                        id: "vs" + e.uid + "__listbox",
                                        role: "listbox",
                                        tabindex: "-1"
                                    },
                                    on: {
                                        mousedown: function(t) {
                                            return t.preventDefault(), e.onMousedown(t)
                                        },
                                        mouseup: e.onMouseUp
                                    }
                                }, [e._t("list-header", null, null, e.scope.listHeader), e._v(" "), e._l(e.filteredOptions, (function(t, r) {
                                    return i("li", {
                                        key: e.getOptionKey(t),
                                        staticClass: "vs__dropdown-option",
                                        class: {
                                            "vs__dropdown-option--deselect": e.isOptionDeselectable(t) && r === e.typeAheadPointer,
                                            "vs__dropdown-option--selected": e.isOptionSelected(t),
                                            "vs__dropdown-option--highlight": r === e.typeAheadPointer,
                                            "vs__dropdown-option--disabled": !e.selectable(t)
                                        },
                                        attrs: {
                                            id: "vs" + e.uid + "__option-" + r,
                                            role: "option",
                                            "aria-selected": r === e.typeAheadPointer || null
                                        },
                                        on: {
                                            mouseover: function(i) {
                                                e.selectable(t) && (e.typeAheadPointer = r)
                                            },
                                            click: function(i) {
                                                i.preventDefault(), i.stopPropagation(), e.selectable(t) && e.select(t)
                                            }
                                        }
                                    }, [e._t("option", [e._v("\n          " + e._s(e.getOptionLabel(t)) + "\n        ")], null, e.normalizeOptionForSlot(t))], 2)
                                })), e._v(" "), 0 === e.filteredOptions.length ? i("li", {
                                    staticClass: "vs__no-options"
                                }, [e._t("no-options", [e._v("\n          Sorry, no matching options.\n        ")], null, e.scope.noOptions)], 2) : e._e(), e._v(" "), e._t("list-footer", null, null, e.scope.listFooter)], 2) : i("ul", {
                                    staticStyle: {
                                        display: "none",
                                        visibility: "hidden"
                                    },
                                    attrs: {
                                        id: "vs" + e.uid + "__listbox",
                                        role: "listbox"
                                    }
                                })]), e._v(" "), e._t("footer", null, null, e.scope.footer)], 2)
                            }), [], !1, null, null, null).exports,
                            w = {
                                ajax: h,
                                pointer: l,
                                pointerScroll: c
                            },
                            y = b
                    })(), r
                })()
            },
            8777: (e, t, i) => {
                "use strict";
                const r = i(8762);
                r.createWebSocketStream = i(404), r.Server = i(9284), r.Receiver = i(2957), r.Sender = i(7330), r.WebSocket = r, r.WebSocketServer = r.Server, e.exports = r
            },
            977: (e, t, i) => {
                "use strict";
                const {
                    EMPTY_BUFFER: r
                } = i(1872), s = Buffer[Symbol.species];

                function n(e, t, i, r, s) {
                    for (let n = 0; n < s; n++) i[r + n] = e[n] ^ t[3 & n]
                }

                function o(e, t) {
                    for (let i = 0; i < e.length; i++) e[i] ^= t[3 & i]
                }
                if (e.exports = {
                        concat: function(e, t) {
                            if (0 === e.length) return r;
                            if (1 === e.length) return e[0];
                            const i = Buffer.allocUnsafe(t);
                            let n = 0;
                            for (let t = 0; t < e.length; t++) {
                                const r = e[t];
                                i.set(r, n), n += r.length
                            }
                            return n < t ? new s(i.buffer, i.byteOffset, n) : i
                        },
                        mask: n,
                        toArrayBuffer: function(e) {
                            return e.length === e.buffer.byteLength ? e.buffer : e.buffer.slice(e.byteOffset, e.byteOffset + e.length)
                        },
                        toBuffer: function e(t) {
                            if (e.readOnly = !0, Buffer.isBuffer(t)) return t;
                            let i;
                            return t instanceof ArrayBuffer ? i = new s(t) : ArrayBuffer.isView(t) ? i = new s(t.buffer, t.byteOffset, t.byteLength) : (i = Buffer.from(t), e.readOnly = !1), i
                        },
                        unmask: o
                    }, !{
                        NODE_ENV: "production",
                        BASE_URL: ""
                    }.WS_NO_BUFFER_UTIL) try {
                    const t = i(8447);
                    e.exports.mask = function(e, i, r, s, o) {
                        o < 48 ? n(e, i, r, s, o) : t.mask(e, i, r, s, o)
                    }, e.exports.unmask = function(e, i) {
                        e.length < 32 ? o(e, i) : t.unmask(e, i)
                    }
                } catch (e) {}
            },
            1872: e => {
                "use strict";
                e.exports = {
                    BINARY_TYPES: ["nodebuffer", "arraybuffer", "fragments"],
                    EMPTY_BUFFER: Buffer.alloc(0),
                    GUID: "258EAFA5-E914-47DA-95CA-C5AB0DC85B11",
                    kForOnEventAttribute: Symbol("kIsForOnEventAttribute"),
                    kListener: Symbol("kListener"),
                    kStatusCode: Symbol("status-code"),
                    kWebSocket: Symbol("websocket"),
                    NOOP: () => {}
                }
            },
            62: (e, t, i) => {
                "use strict";
                const {
                    kForOnEventAttribute: r,
                    kListener: s
                } = i(1872), n = Symbol("kCode"), o = Symbol("kData"), a = Symbol("kError"), c = Symbol("kMessage"), l = Symbol("kReason"), h = Symbol("kTarget"), u = Symbol("kType"), d = Symbol("kWasClean");
                class f {
                    constructor(e) {
                        this[h] = null, this[u] = e
                    }
                    get target() {
                        return this[h]
                    }
                    get type() {
                        return this[u]
                    }
                }
                Object.defineProperty(f.prototype, "target", {
                    enumerable: !0
                }), Object.defineProperty(f.prototype, "type", {
                    enumerable: !0
                });
                class p extends f {
                    constructor(e, t = {}) {
                        super(e), this[n] = void 0 === t.code ? 0 : t.code, this[l] = void 0 === t.reason ? "" : t.reason, this[d] = void 0 !== t.wasClean && t.wasClean
                    }
                    get code() {
                        return this[n]
                    }
                    get reason() {
                        return this[l]
                    }
                    get wasClean() {
                        return this[d]
                    }
                }
                Object.defineProperty(p.prototype, "code", {
                    enumerable: !0
                }), Object.defineProperty(p.prototype, "reason", {
                    enumerable: !0
                }), Object.defineProperty(p.prototype, "wasClean", {
                    enumerable: !0
                });
                class _ extends f {
                    constructor(e, t = {}) {
                        super(e), this[a] = void 0 === t.error ? null : t.error, this[c] = void 0 === t.message ? "" : t.message
                    }
                    get error() {
                        return this[a]
                    }
                    get message() {
                        return this[c]
                    }
                }
                Object.defineProperty(_.prototype, "error", {
                    enumerable: !0
                }), Object.defineProperty(_.prototype, "message", {
                    enumerable: !0
                });
                class g extends f {
                    constructor(e, t = {}) {
                        super(e), this[o] = void 0 === t.data ? null : t.data
                    }
                    get data() {
                        return this[o]
                    }
                }
                Object.defineProperty(g.prototype, "data", {
                    enumerable: !0
                });
                const v = {
                    addEventListener(e, t, i = {}) {
                        for (const n of this.listeners(e))
                            if (!i[r] && n[s] === t && !n[r]) return;
                        let n;
                        if ("message" === e) n = function(e, i) {
                            const r = new g("message", {
                                data: i ? e : e.toString()
                            });
                            r[h] = this, m(t, this, r)
                        };
                        else if ("close" === e) n = function(e, i) {
                            const r = new p("close", {
                                code: e,
                                reason: i.toString(),
                                wasClean: this._closeFrameReceived && this._closeFrameSent
                            });
                            r[h] = this, m(t, this, r)
                        };
                        else if ("error" === e) n = function(e) {
                            const i = new _("error", {
                                error: e,
                                message: e.message
                            });
                            i[h] = this, m(t, this, i)
                        };
                        else {
                            if ("open" !== e) return;
                            n = function() {
                                const e = new f("open");
                                e[h] = this, m(t, this, e)
                            }
                        }
                        n[r] = !!i[r], n[s] = t, i.once ? this.once(e, n) : this.on(e, n)
                    },
                    removeEventListener(e, t) {
                        for (const i of this.listeners(e))
                            if (i[s] === t && !i[r]) {
                                this.removeListener(e, i);
                                break
                            }
                    }
                };

                function m(e, t, i) {
                    "object" == typeof e && e.handleEvent ? e.handleEvent.call(e, i) : e.call(t, i)
                }
                e.exports = {
                    CloseEvent: p,
                    ErrorEvent: _,
                    Event: f,
                    EventTarget: v,
                    MessageEvent: g
                }
            },
            1503: (e, t, i) => {
                "use strict";
                const {
                    tokenChars: r
                } = i(6746);

                function s(e, t, i) {
                    void 0 === e[t] ? e[t] = [i] : e[t].push(i)
                }
                e.exports = {
                    format: function(e) {
                        return Object.keys(e).map((t => {
                            let i = e[t];
                            return Array.isArray(i) || (i = [i]), i.map((e => [t].concat(Object.keys(e).map((t => {
                                let i = e[t];
                                return Array.isArray(i) || (i = [i]), i.map((e => !0 === e ? t : `${t}=${e}`)).join("; ")
                            }))).join("; "))).join(", ")
                        })).join(", ")
                    },
                    parse: function(e) {
                        const t = Object.create(null);
                        let i, n, o = Object.create(null),
                            a = !1,
                            c = !1,
                            l = !1,
                            h = -1,
                            u = -1,
                            d = -1,
                            f = 0;
                        for (; f < e.length; f++)
                            if (u = e.charCodeAt(f), void 0 === i)
                                if (-1 === d && 1 === r[u]) - 1 === h && (h = f);
                                else if (0 === f || 32 !== u && 9 !== u) {
                            if (59 !== u && 44 !== u) throw new SyntaxError(`Unexpected character at index ${f}`);
                            {
                                if (-1 === h) throw new SyntaxError(`Unexpected character at index ${f}`); - 1 === d && (d = f);
                                const r = e.slice(h, d);
                                44 === u ? (s(t, r, o), o = Object.create(null)) : i = r, h = d = -1
                            }
                        } else - 1 === d && -1 !== h && (d = f);
                        else if (void 0 === n)
                            if (-1 === d && 1 === r[u]) - 1 === h && (h = f);
                            else if (32 === u || 9 === u) - 1 === d && -1 !== h && (d = f);
                        else if (59 === u || 44 === u) {
                            if (-1 === h) throw new SyntaxError(`Unexpected character at index ${f}`); - 1 === d && (d = f), s(o, e.slice(h, d), !0), 44 === u && (s(t, i, o), o = Object.create(null), i = void 0), h = d = -1
                        } else {
                            if (61 !== u || -1 === h || -1 !== d) throw new SyntaxError(`Unexpected character at index ${f}`);
                            n = e.slice(h, f), h = d = -1
                        } else if (c) {
                            if (1 !== r[u]) throw new SyntaxError(`Unexpected character at index ${f}`); - 1 === h ? h = f : a || (a = !0), c = !1
                        } else if (l)
                            if (1 === r[u]) - 1 === h && (h = f);
                            else if (34 === u && -1 !== h) l = !1, d = f;
                        else {
                            if (92 !== u) throw new SyntaxError(`Unexpected character at index ${f}`);
                            c = !0
                        } else if (34 === u && 61 === e.charCodeAt(f - 1)) l = !0;
                        else if (-1 === d && 1 === r[u]) - 1 === h && (h = f);
                        else if (-1 === h || 32 !== u && 9 !== u) {
                            if (59 !== u && 44 !== u) throw new SyntaxError(`Unexpected character at index ${f}`);
                            {
                                if (-1 === h) throw new SyntaxError(`Unexpected character at index ${f}`); - 1 === d && (d = f);
                                let r = e.slice(h, d);
                                a && (r = r.replace(/\\/g, ""), a = !1), s(o, n, r), 44 === u && (s(t, i, o), o = Object.create(null), i = void 0), n = void 0, h = d = -1
                            }
                        } else - 1 === d && (d = f);
                        if (-1 === h || l || 32 === u || 9 === u) throw new SyntaxError("Unexpected end of input"); - 1 === d && (d = f);
                        const p = e.slice(h, d);
                        return void 0 === i ? s(t, p, o) : (void 0 === n ? s(o, p, !0) : s(o, n, a ? p.replace(/\\/g, "") : p), s(t, i, o)), t
                    }
                }
            },
            305: e => {
                "use strict";
                const t = Symbol("kDone"),
                    i = Symbol("kRun");
                e.exports = class {
                    constructor(e) {
                        this[t] = () => {
                            this.pending--, this[i]()
                        }, this.concurrency = e || 1 / 0, this.jobs = [], this.pending = 0
                    }
                    add(e) {
                        this.jobs.push(e), this[i]()
                    } [i]() {
                        if (this.pending !== this.concurrency && this.jobs.length) {
                            const e = this.jobs.shift();
                            this.pending++, e(this[t])
                        }
                    }
                }
            },
            5196: (e, t, i) => {
                "use strict";
                const r = i(9796),
                    s = i(977),
                    n = i(305),
                    {
                        kStatusCode: o
                    } = i(1872),
                    a = Buffer[Symbol.species],
                    c = Buffer.from([0, 0, 255, 255]),
                    l = Symbol("permessage-deflate"),
                    h = Symbol("total-length"),
                    u = Symbol("callback"),
                    d = Symbol("buffers"),
                    f = Symbol("error");
                let p;

                function _(e) {
                    this[d].push(e), this[h] += e.length
                }

                function g(e) {
                    this[h] += e.length, this[l]._maxPayload < 1 || this[h] <= this[l]._maxPayload ? this[d].push(e) : (this[f] = new RangeError("Max payload size exceeded"), this[f].code = "WS_ERR_UNSUPPORTED_MESSAGE_LENGTH", this[f][o] = 1009, this.removeListener("data", g), this.reset())
                }

                function v(e) {
                    this[l]._inflate = null, e[o] = 1007, this[u](e)
                }
                e.exports = class {
                    constructor(e, t, i) {
                        if (this._maxPayload = 0 | i, this._options = e || {}, this._threshold = void 0 !== this._options.threshold ? this._options.threshold : 1024, this._isServer = !!t, this._deflate = null, this._inflate = null, this.params = null, !p) {
                            const e = void 0 !== this._options.concurrencyLimit ? this._options.concurrencyLimit : 10;
                            p = new n(e)
                        }
                    }
                    static get extensionName() {
                        return "permessage-deflate"
                    }
                    offer() {
                        const e = {};
                        return this._options.serverNoContextTakeover && (e.server_no_context_takeover = !0), this._options.clientNoContextTakeover && (e.client_no_context_takeover = !0), this._options.serverMaxWindowBits && (e.server_max_window_bits = this._options.serverMaxWindowBits), this._options.clientMaxWindowBits ? e.client_max_window_bits = this._options.clientMaxWindowBits : null == this._options.clientMaxWindowBits && (e.client_max_window_bits = !0), e
                    }
                    accept(e) {
                        return e = this.normalizeParams(e), this.params = this._isServer ? this.acceptAsServer(e) : this.acceptAsClient(e), this.params
                    }
                    cleanup() {
                        if (this._inflate && (this._inflate.close(), this._inflate = null), this._deflate) {
                            const e = this._deflate[u];
                            this._deflate.close(), this._deflate = null, e && e(new Error("The deflate stream was closed while data was being processed"))
                        }
                    }
                    acceptAsServer(e) {
                        const t = this._options,
                            i = e.find((e => !(!1 === t.serverNoContextTakeover && e.server_no_context_takeover || e.server_max_window_bits && (!1 === t.serverMaxWindowBits || "number" == typeof t.serverMaxWindowBits && t.serverMaxWindowBits > e.server_max_window_bits) || "number" == typeof t.clientMaxWindowBits && !e.client_max_window_bits)));
                        if (!i) throw new Error("None of the extension offers can be accepted");
                        return t.serverNoContextTakeover && (i.server_no_context_takeover = !0), t.clientNoContextTakeover && (i.client_no_context_takeover = !0), "number" == typeof t.serverMaxWindowBits && (i.server_max_window_bits = t.serverMaxWindowBits), "number" == typeof t.clientMaxWindowBits ? i.client_max_window_bits = t.clientMaxWindowBits : !0 !== i.client_max_window_bits && !1 !== t.clientMaxWindowBits || delete i.client_max_window_bits, i
                    }
                    acceptAsClient(e) {
                        const t = e[0];
                        if (!1 === this._options.clientNoContextTakeover && t.client_no_context_takeover) throw new Error('Unexpected parameter "client_no_context_takeover"');
                        if (t.client_max_window_bits) {
                            if (!1 === this._options.clientMaxWindowBits || "number" == typeof this._options.clientMaxWindowBits && t.client_max_window_bits > this._options.clientMaxWindowBits) throw new Error('Unexpected or invalid parameter "client_max_window_bits"')
                        } else "number" == typeof this._options.clientMaxWindowBits && (t.client_max_window_bits = this._options.clientMaxWindowBits);
                        return t
                    }
                    normalizeParams(e) {
                        return e.forEach((e => {
                            Object.keys(e).forEach((t => {
                                let i = e[t];
                                if (i.length > 1) throw new Error(`Parameter "${t}" must have only a single value`);
                                if (i = i[0], "client_max_window_bits" === t) {
                                    if (!0 !== i) {
                                        const e = +i;
                                        if (!Number.isInteger(e) || e < 8 || e > 15) throw new TypeError(`Invalid value for parameter "${t}": ${i}`);
                                        i = e
                                    } else if (!this._isServer) throw new TypeError(`Invalid value for parameter "${t}": ${i}`)
                                } else if ("server_max_window_bits" === t) {
                                    const e = +i;
                                    if (!Number.isInteger(e) || e < 8 || e > 15) throw new TypeError(`Invalid value for parameter "${t}": ${i}`);
                                    i = e
                                } else {
                                    if ("client_no_context_takeover" !== t && "server_no_context_takeover" !== t) throw new Error(`Unknown parameter "${t}"`);
                                    if (!0 !== i) throw new TypeError(`Invalid value for parameter "${t}": ${i}`)
                                }
                                e[t] = i
                            }))
                        })), e
                    }
                    decompress(e, t, i) {
                        p.add((r => {
                            this._decompress(e, t, ((e, t) => {
                                r(), i(e, t)
                            }))
                        }))
                    }
                    compress(e, t, i) {
                        p.add((r => {
                            this._compress(e, t, ((e, t) => {
                                r(), i(e, t)
                            }))
                        }))
                    }
                    _decompress(e, t, i) {
                        const n = this._isServer ? "client" : "server";
                        if (!this._inflate) {
                            const e = `${n}_max_window_bits`,
                                t = "number" != typeof this.params[e] ? r.Z_DEFAULT_WINDOWBITS : this.params[e];
                            this._inflate = r.createInflateRaw({
                                ...this._options.zlibInflateOptions,
                                windowBits: t
                            }), this._inflate[l] = this, this._inflate[h] = 0, this._inflate[d] = [], this._inflate.on("error", v), this._inflate.on("data", g)
                        }
                        this._inflate[u] = i, this._inflate.write(e), t && this._inflate.write(c), this._inflate.flush((() => {
                            const e = this._inflate[f];
                            if (e) return this._inflate.close(), this._inflate = null, void i(e);
                            const r = s.concat(this._inflate[d], this._inflate[h]);
                            this._inflate._readableState.endEmitted ? (this._inflate.close(), this._inflate = null) : (this._inflate[h] = 0, this._inflate[d] = [], t && this.params[`${n}_no_context_takeover`] && this._inflate.reset()), i(null, r)
                        }))
                    }
                    _compress(e, t, i) {
                        const n = this._isServer ? "server" : "client";
                        if (!this._deflate) {
                            const e = `${n}_max_window_bits`,
                                t = "number" != typeof this.params[e] ? r.Z_DEFAULT_WINDOWBITS : this.params[e];
                            this._deflate = r.createDeflateRaw({
                                ...this._options.zlibDeflateOptions,
                                windowBits: t
                            }), this._deflate[h] = 0, this._deflate[d] = [], this._deflate.on("data", _)
                        }
                        this._deflate[u] = i, this._deflate.write(e), this._deflate.flush(r.Z_SYNC_FLUSH, (() => {
                            if (!this._deflate) return;
                            let e = s.concat(this._deflate[d], this._deflate[h]);
                            t && (e = new a(e.buffer, e.byteOffset, e.length - 4)), this._deflate[u] = null, this._deflate[h] = 0, this._deflate[d] = [], t && this.params[`${n}_no_context_takeover`] && this._deflate.reset(), i(null, e)
                        }))
                    }
                }
            },
            2957: (e, t, i) => {
                "use strict";
                const {
                    Writable: r
                } = i(2781), s = i(5196), {
                    BINARY_TYPES: n,
                    EMPTY_BUFFER: o,
                    kStatusCode: a,
                    kWebSocket: c
                } = i(1872), {
                    concat: l,
                    toArrayBuffer: h,
                    unmask: u
                } = i(977), {
                    isValidStatusCode: d,
                    isValidUTF8: f
                } = i(6746), p = Buffer[Symbol.species], _ = Promise.resolve(), g = "function" == typeof queueMicrotask ? queueMicrotask : function(e) {
                    _.then(e).catch(m)
                };

                function v(e) {
                    throw e
                }

                function m(e) {
                    process.nextTick(v, e)
                }
                e.exports = class extends r {
                    constructor(e = {}) {
                        super(), this._allowSynchronousEvents = !!e.allowSynchronousEvents, this._binaryType = e.binaryType || n[0], this._extensions = e.extensions || {}, this._isServer = !!e.isServer, this._maxPayload = 0 | e.maxPayload, this._skipUTF8Validation = !!e.skipUTF8Validation, this[c] = void 0, this._bufferedBytes = 0, this._buffers = [], this._compressed = !1, this._payloadLength = 0, this._mask = void 0, this._fragmented = 0, this._masked = !1, this._fin = !1, this._opcode = 0, this._totalPayloadLength = 0, this._messageLength = 0, this._fragments = [], this._errored = !1, this._loop = !1, this._state = 0
                    }
                    _write(e, t, i) {
                        if (8 === this._opcode && 0 == this._state) return i();
                        this._bufferedBytes += e.length, this._buffers.push(e), this.startLoop(i)
                    }
                    consume(e) {
                        if (this._bufferedBytes -= e, e === this._buffers[0].length) return this._buffers.shift();
                        if (e < this._buffers[0].length) {
                            const t = this._buffers[0];
                            return this._buffers[0] = new p(t.buffer, t.byteOffset + e, t.length - e), new p(t.buffer, t.byteOffset, e)
                        }
                        const t = Buffer.allocUnsafe(e);
                        do {
                            const i = this._buffers[0],
                                r = t.length - e;
                            e >= i.length ? t.set(this._buffers.shift(), r) : (t.set(new Uint8Array(i.buffer, i.byteOffset, e), r), this._buffers[0] = new p(i.buffer, i.byteOffset + e, i.length - e)), e -= i.length
                        } while (e > 0);
                        return t
                    }
                    startLoop(e) {
                        this._loop = !0;
                        do {
                            switch (this._state) {
                                case 0:
                                    this.getInfo(e);
                                    break;
                                case 1:
                                    this.getPayloadLength16(e);
                                    break;
                                case 2:
                                    this.getPayloadLength64(e);
                                    break;
                                case 3:
                                    this.getMask();
                                    break;
                                case 4:
                                    this.getData(e);
                                    break;
                                case 5:
                                case 6:
                                    return void(this._loop = !1)
                            }
                        } while (this._loop);
                        this._errored || e()
                    }
                    getInfo(e) {
                        if (this._bufferedBytes < 2) return void(this._loop = !1);
                        const t = this.consume(2);
                        if (0 != (48 & t[0])) {
                            return void e(this.createError(RangeError, "RSV2 and RSV3 must be clear", !0, 1002, "WS_ERR_UNEXPECTED_RSV_2_3"))
                        }
                        const i = 64 == (64 & t[0]);
                        if (!i || this._extensions[s.extensionName]) {
                            if (this._fin = 128 == (128 & t[0]), this._opcode = 15 & t[0], this._payloadLength = 127 & t[1], 0 === this._opcode) {
                                if (i) {
                                    return void e(this.createError(RangeError, "RSV1 must be clear", !0, 1002, "WS_ERR_UNEXPECTED_RSV_1"))
                                }
                                if (!this._fragmented) {
                                    return void e(this.createError(RangeError, "invalid opcode 0", !0, 1002, "WS_ERR_INVALID_OPCODE"))
                                }
                                this._opcode = this._fragmented
                            } else if (1 === this._opcode || 2 === this._opcode) {
                                if (this._fragmented) {
                                    return void e(this.createError(RangeError, `invalid opcode ${this._opcode}`, !0, 1002, "WS_ERR_INVALID_OPCODE"))
                                }
                                this._compressed = i
                            } else {
                                if (!(this._opcode > 7 && this._opcode < 11)) {
                                    return void e(this.createError(RangeError, `invalid opcode ${this._opcode}`, !0, 1002, "WS_ERR_INVALID_OPCODE"))
                                }
                                if (!this._fin) {
                                    return void e(this.createError(RangeError, "FIN must be set", !0, 1002, "WS_ERR_EXPECTED_FIN"))
                                }
                                if (i) {
                                    return void e(this.createError(RangeError, "RSV1 must be clear", !0, 1002, "WS_ERR_UNEXPECTED_RSV_1"))
                                }
                                if (this._payloadLength > 125 || 8 === this._opcode && 1 === this._payloadLength) {
                                    return void e(this.createError(RangeError, `invalid payload length ${this._payloadLength}`, !0, 1002, "WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH"))
                                }
                            }
                            if (this._fin || this._fragmented || (this._fragmented = this._opcode), this._masked = 128 == (128 & t[1]), this._isServer) {
                                if (!this._masked) {
                                    return void e(this.createError(RangeError, "MASK must be set", !0, 1002, "WS_ERR_EXPECTED_MASK"))
                                }
                            } else if (this._masked) {
                                return void e(this.createError(RangeError, "MASK must be clear", !0, 1002, "WS_ERR_UNEXPECTED_MASK"))
                            }
                            126 === this._payloadLength ? this._state = 1 : 127 === this._payloadLength ? this._state = 2 : this.haveLength(e)
                        } else {
                            e(this.createError(RangeError, "RSV1 must be clear", !0, 1002, "WS_ERR_UNEXPECTED_RSV_1"))
                        }
                    }
                    getPayloadLength16(e) {
                        this._bufferedBytes < 2 ? this._loop = !1 : (this._payloadLength = this.consume(2).readUInt16BE(0), this.haveLength(e))
                    }
                    getPayloadLength64(e) {
                        if (this._bufferedBytes < 8) return void(this._loop = !1);
                        const t = this.consume(8),
                            i = t.readUInt32BE(0);
                        if (i > Math.pow(2, 21) - 1) {
                            e(this.createError(RangeError, "Unsupported WebSocket frame: payload length > 2^53 - 1", !1, 1009, "WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH"))
                        } else this._payloadLength = i * Math.pow(2, 32) + t.readUInt32BE(4), this.haveLength(e)
                    }
                    haveLength(e) {
                        if (this._payloadLength && this._opcode < 8 && (this._totalPayloadLength += this._payloadLength, this._totalPayloadLength > this._maxPayload && this._maxPayload > 0)) {
                            e(this.createError(RangeError, "Max payload size exceeded", !1, 1009, "WS_ERR_UNSUPPORTED_MESSAGE_LENGTH"))
                        } else this._masked ? this._state = 3 : this._state = 4
                    }
                    getMask() {
                        this._bufferedBytes < 4 ? this._loop = !1 : (this._mask = this.consume(4), this._state = 4)
                    }
                    getData(e) {
                        let t = o;
                        if (this._payloadLength) {
                            if (this._bufferedBytes < this._payloadLength) return void(this._loop = !1);
                            t = this.consume(this._payloadLength), this._masked && 0 != (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) && u(t, this._mask)
                        }
                        if (this._opcode > 7) this.controlMessage(t, e);
                        else {
                            if (this._compressed) return this._state = 5, void this.decompress(t, e);
                            t.length && (this._messageLength = this._totalPayloadLength, this._fragments.push(t)), this.dataMessage(e)
                        }
                    }
                    decompress(e, t) {
                        this._extensions[s.extensionName].decompress(e, this._fin, ((e, i) => {
                            if (e) return t(e);
                            if (i.length) {
                                if (this._messageLength += i.length, this._messageLength > this._maxPayload && this._maxPayload > 0) {
                                    const e = this.createError(RangeError, "Max payload size exceeded", !1, 1009, "WS_ERR_UNSUPPORTED_MESSAGE_LENGTH");
                                    return void t(e)
                                }
                                this._fragments.push(i)
                            }
                            this.dataMessage(t), 0 === this._state && this.startLoop(t)
                        }))
                    }
                    dataMessage(e) {
                        if (!this._fin) return void(this._state = 0);
                        const t = this._messageLength,
                            i = this._fragments;
                        if (this._totalPayloadLength = 0, this._messageLength = 0, this._fragmented = 0, this._fragments = [], 2 === this._opcode) {
                            let r;
                            r = "nodebuffer" === this._binaryType ? l(i, t) : "arraybuffer" === this._binaryType ? h(l(i, t)) : i, 5 === this._state || this._allowSynchronousEvents ? (this.emit("message", r, !0), this._state = 0) : (this._state = 6, g((() => {
                                this.emit("message", r, !0), this._state = 0, this.startLoop(e)
                            })))
                        } else {
                            const r = l(i, t);
                            if (!this._skipUTF8Validation && !f(r)) {
                                const t = this.createError(Error, "invalid UTF-8 sequence", !0, 1007, "WS_ERR_INVALID_UTF8");
                                return void e(t)
                            }
                            5 === this._state || this._allowSynchronousEvents ? (this.emit("message", r, !1), this._state = 0) : (this._state = 6, g((() => {
                                this.emit("message", r, !1), this._state = 0, this.startLoop(e)
                            })))
                        }
                    }
                    controlMessage(e, t) {
                        if (8 !== this._opcode) this._allowSynchronousEvents ? (this.emit(9 === this._opcode ? "ping" : "pong", e), this._state = 0) : (this._state = 6, g((() => {
                            this.emit(9 === this._opcode ? "ping" : "pong", e), this._state = 0, this.startLoop(t)
                        })));
                        else {
                            if (0 === e.length) this._loop = !1, this.emit("conclude", 1005, o), this.end();
                            else {
                                const i = e.readUInt16BE(0);
                                if (!d(i)) {
                                    const e = this.createError(RangeError, `invalid status code ${i}`, !0, 1002, "WS_ERR_INVALID_CLOSE_CODE");
                                    return void t(e)
                                }
                                const r = new p(e.buffer, e.byteOffset + 2, e.length - 2);
                                if (!this._skipUTF8Validation && !f(r)) {
                                    const e = this.createError(Error, "invalid UTF-8 sequence", !0, 1007, "WS_ERR_INVALID_UTF8");
                                    return void t(e)
                                }
                                this._loop = !1, this.emit("conclude", i, r), this.end()
                            }
                            this._state = 0
                        }
                    }
                    createError(e, t, i, r, s) {
                        this._loop = !1, this._errored = !0;
                        const n = new e(i ? `Invalid WebSocket frame: ${t}` : t);
                        return Error.captureStackTrace(n, this.createError), n.code = s, n[a] = r, n
                    }
                }
            },
            7330: (e, t, i) => {
                "use strict";
                const {
                    Duplex: r
                } = i(2781), {
                    randomFillSync: s
                } = i(6113), n = i(5196), {
                    EMPTY_BUFFER: o
                } = i(1872), {
                    isValidStatusCode: a
                } = i(6746), {
                    mask: c,
                    toBuffer: l
                } = i(977), h = Symbol("kByteLength"), u = Buffer.alloc(4);
                class d {
                    constructor(e, t, i) {
                        this._extensions = t || {}, i && (this._generateMask = i, this._maskBuffer = Buffer.alloc(4)), this._socket = e, this._firstFragment = !0, this._compress = !1, this._bufferedBytes = 0, this._deflating = !1, this._queue = []
                    }
                    static frame(e, t) {
                        let i, r, n = !1,
                            o = 2,
                            a = !1;
                        t.mask && (i = t.maskBuffer || u, t.generateMask ? t.generateMask(i) : s(i, 0, 4), a = 0 == (i[0] | i[1] | i[2] | i[3]), o = 6), "string" == typeof e ? r = t.mask && !a || void 0 === t[h] ? (e = Buffer.from(e)).length : t[h] : (r = e.length, n = t.mask && t.readOnly && !a);
                        let l = r;
                        r >= 65536 ? (o += 8, l = 127) : r > 125 && (o += 2, l = 126);
                        const d = Buffer.allocUnsafe(n ? r + o : o);
                        return d[0] = t.fin ? 128 | t.opcode : t.opcode, t.rsv1 && (d[0] |= 64), d[1] = l, 126 === l ? d.writeUInt16BE(r, 2) : 127 === l && (d[2] = d[3] = 0, d.writeUIntBE(r, 4, 6)), t.mask ? (d[1] |= 128, d[o - 4] = i[0], d[o - 3] = i[1], d[o - 2] = i[2], d[o - 1] = i[3], a ? [d, e] : n ? (c(e, i, d, o, r), [d]) : (c(e, i, e, 0, r), [d, e])) : [d, e]
                    }
                    close(e, t, i, r) {
                        let s;
                        if (void 0 === e) s = o;
                        else {
                            if ("number" != typeof e || !a(e)) throw new TypeError("First argument must be a valid error code number");
                            if (void 0 !== t && t.length) {
                                const i = Buffer.byteLength(t);
                                if (i > 123) throw new RangeError("The message must not be greater than 123 bytes");
                                s = Buffer.allocUnsafe(2 + i), s.writeUInt16BE(e, 0), "string" == typeof t ? s.write(t, 2) : s.set(t, 2)
                            } else s = Buffer.allocUnsafe(2), s.writeUInt16BE(e, 0)
                        }
                        const n = {
                            [h]: s.length,
                            fin: !0,
                            generateMask: this._generateMask,
                            mask: i,
                            maskBuffer: this._maskBuffer,
                            opcode: 8,
                            readOnly: !1,
                            rsv1: !1
                        };
                        this._deflating ? this.enqueue([this.dispatch, s, !1, n, r]) : this.sendFrame(d.frame(s, n), r)
                    }
                    ping(e, t, i) {
                        let r, s;
                        if ("string" == typeof e ? (r = Buffer.byteLength(e), s = !1) : (r = (e = l(e)).length, s = l.readOnly), r > 125) throw new RangeError("The data size must not be greater than 125 bytes");
                        const n = {
                            [h]: r,
                            fin: !0,
                            generateMask: this._generateMask,
                            mask: t,
                            maskBuffer: this._maskBuffer,
                            opcode: 9,
                            readOnly: s,
                            rsv1: !1
                        };
                        this._deflating ? this.enqueue([this.dispatch, e, !1, n, i]) : this.sendFrame(d.frame(e, n), i)
                    }
                    pong(e, t, i) {
                        let r, s;
                        if ("string" == typeof e ? (r = Buffer.byteLength(e), s = !1) : (r = (e = l(e)).length, s = l.readOnly), r > 125) throw new RangeError("The data size must not be greater than 125 bytes");
                        const n = {
                            [h]: r,
                            fin: !0,
                            generateMask: this._generateMask,
                            mask: t,
                            maskBuffer: this._maskBuffer,
                            opcode: 10,
                            readOnly: s,
                            rsv1: !1
                        };
                        this._deflating ? this.enqueue([this.dispatch, e, !1, n, i]) : this.sendFrame(d.frame(e, n), i)
                    }
                    send(e, t, i) {
                        const r = this._extensions[n.extensionName];
                        let s, o, a = t.binary ? 2 : 1,
                            c = t.compress;
                        if ("string" == typeof e ? (s = Buffer.byteLength(e), o = !1) : (s = (e = l(e)).length, o = l.readOnly), this._firstFragment ? (this._firstFragment = !1, c && r && r.params[r._isServer ? "server_no_context_takeover" : "client_no_context_takeover"] && (c = s >= r._threshold), this._compress = c) : (c = !1, a = 0), t.fin && (this._firstFragment = !0), r) {
                            const r = {
                                [h]: s,
                                fin: t.fin,
                                generateMask: this._generateMask,
                                mask: t.mask,
                                maskBuffer: this._maskBuffer,
                                opcode: a,
                                readOnly: o,
                                rsv1: c
                            };
                            this._deflating ? this.enqueue([this.dispatch, e, this._compress, r, i]) : this.dispatch(e, this._compress, r, i)
                        } else this.sendFrame(d.frame(e, {
                            [h]: s,
                            fin: t.fin,
                            generateMask: this._generateMask,
                            mask: t.mask,
                            maskBuffer: this._maskBuffer,
                            opcode: a,
                            readOnly: o,
                            rsv1: !1
                        }), i)
                    }
                    dispatch(e, t, i, r) {
                        if (!t) return void this.sendFrame(d.frame(e, i), r);
                        const s = this._extensions[n.extensionName];
                        this._bufferedBytes += i[h], this._deflating = !0, s.compress(e, i.fin, ((e, t) => {
                            if (this._socket.destroyed) {
                                const e = new Error("The socket was closed while data was being compressed");
                                "function" == typeof r && r(e);
                                for (let t = 0; t < this._queue.length; t++) {
                                    const i = this._queue[t],
                                        r = i[i.length - 1];
                                    "function" == typeof r && r(e)
                                }
                            } else this._bufferedBytes -= i[h], this._deflating = !1, i.readOnly = !1, this.sendFrame(d.frame(t, i), r), this.dequeue()
                        }))
                    }
                    dequeue() {
                        for (; !this._deflating && this._queue.length;) {
                            const e = this._queue.shift();
                            this._bufferedBytes -= e[3][h], Reflect.apply(e[0], this, e.slice(1))
                        }
                    }
                    enqueue(e) {
                        this._bufferedBytes += e[3][h], this._queue.push(e)
                    }
                    sendFrame(e, t) {
                        2 === e.length ? (this._socket.cork(), this._socket.write(e[0]), this._socket.write(e[1], t), this._socket.uncork()) : this._socket.write(e[0], t)
                    }
                }
                e.exports = d
            },
            404: (e, t, i) => {
                "use strict";
                const {
                    Duplex: r
                } = i(2781);

                function s(e) {
                    e.emit("close")
                }

                function n() {
                    !this.destroyed && this._writableState.finished && this.destroy()
                }

                function o(e) {
                    this.removeListener("error", o), this.destroy(), 0 === this.listenerCount("error") && this.emit("error", e)
                }
                e.exports = function(e, t) {
                    let i = !0;
                    const a = new r({
                        ...t,
                        autoDestroy: !1,
                        emitClose: !1,
                        objectMode: !1,
                        writableObjectMode: !1
                    });
                    return e.on("message", (function(t, i) {
                        const r = !i && a._readableState.objectMode ? t.toString() : t;
                        a.push(r) || e.pause()
                    })), e.once("error", (function(e) {
                        a.destroyed || (i = !1, a.destroy(e))
                    })), e.once("close", (function() {
                        a.destroyed || a.push(null)
                    })), a._destroy = function(t, r) {
                        if (e.readyState === e.CLOSED) return r(t), void process.nextTick(s, a);
                        let n = !1;
                        e.once("error", (function(e) {
                            n = !0, r(e)
                        })), e.once("close", (function() {
                            n || r(t), process.nextTick(s, a)
                        })), i && e.terminate()
                    }, a._final = function(t) {
                        e.readyState !== e.CONNECTING ? null !== e._socket && (e._socket._writableState.finished ? (t(), a._readableState.endEmitted && a.destroy()) : (e._socket.once("finish", (function() {
                            t()
                        })), e.close())) : e.once("open", (function() {
                            a._final(t)
                        }))
                    }, a._read = function() {
                        e.isPaused && e.resume()
                    }, a._write = function(t, i, r) {
                        e.readyState !== e.CONNECTING ? e.send(t, r) : e.once("open", (function() {
                            a._write(t, i, r)
                        }))
                    }, a.on("end", n), a.on("error", o), a
                }
            },
            640: (e, t, i) => {
                "use strict";
                const {
                    tokenChars: r
                } = i(6746);
                e.exports = {
                    parse: function(e) {
                        const t = new Set;
                        let i = -1,
                            s = -1,
                            n = 0;
                        for (; n < e.length; n++) {
                            const o = e.charCodeAt(n);
                            if (-1 === s && 1 === r[o]) - 1 === i && (i = n);
                            else if (0 === n || 32 !== o && 9 !== o) {
                                if (44 !== o) throw new SyntaxError(`Unexpected character at index ${n}`);
                                {
                                    if (-1 === i) throw new SyntaxError(`Unexpected character at index ${n}`); - 1 === s && (s = n);
                                    const r = e.slice(i, s);
                                    if (t.has(r)) throw new SyntaxError(`The "${r}" subprotocol is duplicated`);
                                    t.add(r), i = s = -1
                                }
                            } else - 1 === s && -1 !== i && (s = n)
                        }
                        if (-1 === i || -1 !== s) throw new SyntaxError("Unexpected end of input");
                        const o = e.slice(i, n);
                        if (t.has(o)) throw new SyntaxError(`The "${o}" subprotocol is duplicated`);
                        return t.add(o), t
                    }
                }
            },
            6746: (e, t, i) => {
                "use strict";
                const {
                    isUtf8: r
                } = i(4300);

                function s(e) {
                    const t = e.length;
                    let i = 0;
                    for (; i < t;)
                        if (0 == (128 & e[i])) i++;
                        else if (192 == (224 & e[i])) {
                        if (i + 1 === t || 128 != (192 & e[i + 1]) || 192 == (254 & e[i])) return !1;
                        i += 2
                    } else if (224 == (240 & e[i])) {
                        if (i + 2 >= t || 128 != (192 & e[i + 1]) || 128 != (192 & e[i + 2]) || 224 === e[i] && 128 == (224 & e[i + 1]) || 237 === e[i] && 160 == (224 & e[i + 1])) return !1;
                        i += 3
                    } else {
                        if (240 != (248 & e[i])) return !1;
                        if (i + 3 >= t || 128 != (192 & e[i + 1]) || 128 != (192 & e[i + 2]) || 128 != (192 & e[i + 3]) || 240 === e[i] && 128 == (240 & e[i + 1]) || 244 === e[i] && e[i + 1] > 143 || e[i] > 244) return !1;
                        i += 4
                    }
                    return !0
                }
                if (e.exports = {
                        isValidStatusCode: function(e) {
                            return e >= 1e3 && e <= 1014 && 1004 !== e && 1005 !== e && 1006 !== e || e >= 3e3 && e <= 4999
                        },
                        isValidUTF8: s,
                        tokenChars: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0]
                    }, r) e.exports.isValidUTF8 = function(e) {
                    return e.length < 24 ? s(e) : r(e)
                };
                else if (!{
                        NODE_ENV: "production",
                        BASE_URL: ""
                    }.WS_NO_UTF_8_VALIDATE) try {
                    const t = i(7838);
                    e.exports.isValidUTF8 = function(e) {
                        return e.length < 32 ? s(e) : t(e)
                    }
                } catch (e) {}
            },
            9284: (e, t, i) => {
                "use strict";
                const r = i(2361),
                    s = i(3685),
                    {
                        Duplex: n
                    } = i(2781),
                    {
                        createHash: o
                    } = i(6113),
                    a = i(1503),
                    c = i(5196),
                    l = i(640),
                    h = i(8762),
                    {
                        GUID: u,
                        kWebSocket: d
                    } = i(1872),
                    f = /^[+/0-9A-Za-z]{22}==$/;

                function p(e) {
                    e._state = 2, e.emit("close")
                }

                function _() {
                    this.destroy()
                }

                function g(e, t, i, r) {
                    i = i || s.STATUS_CODES[t], r = {
                        Connection: "close",
                        "Content-Type": "text/html",
                        "Content-Length": Buffer.byteLength(i),
                        ...r
                    }, e.once("finish", e.destroy), e.end(`HTTP/1.1 ${t} ${s.STATUS_CODES[t]}\r\n` + Object.keys(r).map((e => `${e}: ${r[e]}`)).join("\r\n") + "\r\n\r\n" + i)
                }

                function v(e, t, i, r, s) {
                    if (e.listenerCount("wsClientError")) {
                        const r = new Error(s);
                        Error.captureStackTrace(r, v), e.emit("wsClientError", r, i, t)
                    } else g(i, r, s)
                }
                e.exports = class extends r {
                    constructor(e, t) {
                        if (super(), null == (e = {
                                allowSynchronousEvents: !1,
                                autoPong: !0,
                                maxPayload: 104857600,
                                skipUTF8Validation: !1,
                                perMessageDeflate: !1,
                                handleProtocols: null,
                                clientTracking: !0,
                                verifyClient: null,
                                noServer: !1,
                                backlog: null,
                                server: null,
                                host: null,
                                path: null,
                                port: null,
                                WebSocket: h,
                                ...e
                            }).port && !e.server && !e.noServer || null != e.port && (e.server || e.noServer) || e.server && e.noServer) throw new TypeError('One and only one of the "port", "server", or "noServer" options must be specified');
                        if (null != e.port ? (this._server = s.createServer(((e, t) => {
                                const i = s.STATUS_CODES[426];
                                t.writeHead(426, {
                                    "Content-Length": i.length,
                                    "Content-Type": "text/plain"
                                }), t.end(i)
                            })), this._server.listen(e.port, e.host, e.backlog, t)) : e.server && (this._server = e.server), this._server) {
                            const e = this.emit.bind(this, "connection");
                            this._removeListeners = function(e, t) {
                                for (const i of Object.keys(t)) e.on(i, t[i]);
                                return function() {
                                    for (const i of Object.keys(t)) e.removeListener(i, t[i])
                                }
                            }(this._server, {
                                listening: this.emit.bind(this, "listening"),
                                error: this.emit.bind(this, "error"),
                                upgrade: (t, i, r) => {
                                    this.handleUpgrade(t, i, r, e)
                                }
                            })
                        }!0 === e.perMessageDeflate && (e.perMessageDeflate = {}), e.clientTracking && (this.clients = new Set, this._shouldEmitClose = !1), this.options = e, this._state = 0
                    }
                    address() {
                        if (this.options.noServer) throw new Error('The server is operating in "noServer" mode');
                        return this._server ? this._server.address() : null
                    }
                    close(e) {
                        if (2 === this._state) return e && this.once("close", (() => {
                            e(new Error("The server is not running"))
                        })), void process.nextTick(p, this);
                        if (e && this.once("close", e), 1 !== this._state)
                            if (this._state = 1, this.options.noServer || this.options.server) this._server && (this._removeListeners(), this._removeListeners = this._server = null), this.clients && this.clients.size ? this._shouldEmitClose = !0 : process.nextTick(p, this);
                            else {
                                const e = this._server;
                                this._removeListeners(), this._removeListeners = this._server = null, e.close((() => {
                                    p(this)
                                }))
                            }
                    }
                    shouldHandle(e) {
                        if (this.options.path) {
                            const t = e.url.indexOf("?");
                            if ((-1 !== t ? e.url.slice(0, t) : e.url) !== this.options.path) return !1
                        }
                        return !0
                    }
                    handleUpgrade(e, t, i, r) {
                        t.on("error", _);
                        const s = e.headers["sec-websocket-key"],
                            n = +e.headers["sec-websocket-version"];
                        if ("GET" !== e.method) {
                            return void v(this, e, t, 405, "Invalid HTTP method")
                        }
                        if ("websocket" !== e.headers.upgrade.toLowerCase()) {
                            return void v(this, e, t, 400, "Invalid Upgrade header")
                        }
                        if (!s || !f.test(s)) {
                            return void v(this, e, t, 400, "Missing or invalid Sec-WebSocket-Key header")
                        }
                        if (8 !== n && 13 !== n) {
                            return void v(this, e, t, 400, "Missing or invalid Sec-WebSocket-Version header")
                        }
                        if (!this.shouldHandle(e)) return void g(t, 400);
                        const o = e.headers["sec-websocket-protocol"];
                        let h = new Set;
                        if (void 0 !== o) try {
                            h = l.parse(o)
                        } catch (i) {
                            return void v(this, e, t, 400, "Invalid Sec-WebSocket-Protocol header")
                        }
                        const u = e.headers["sec-websocket-extensions"],
                            d = {};
                        if (this.options.perMessageDeflate && void 0 !== u) {
                            const i = new c(this.options.perMessageDeflate, !0, this.options.maxPayload);
                            try {
                                const e = a.parse(u);
                                e[c.extensionName] && (i.accept(e[c.extensionName]), d[c.extensionName] = i)
                            } catch (i) {
                                return void v(this, e, t, 400, "Invalid or unacceptable Sec-WebSocket-Extensions header")
                            }
                        }
                        if (this.options.verifyClient) {
                            const o = {
                                origin: e.headers["" + (8 === n ? "sec-websocket-origin" : "origin")],
                                secure: !(!e.socket.authorized && !e.socket.encrypted),
                                req: e
                            };
                            if (2 === this.options.verifyClient.length) return void this.options.verifyClient(o, ((n, o, a, c) => {
                                if (!n) return g(t, o || 401, a, c);
                                this.completeUpgrade(d, s, h, e, t, i, r)
                            }));
                            if (!this.options.verifyClient(o)) return g(t, 401)
                        }
                        this.completeUpgrade(d, s, h, e, t, i, r)
                    }
                    completeUpgrade(e, t, i, r, s, n, l) {
                        if (!s.readable || !s.writable) return s.destroy();
                        if (s[d]) throw new Error("server.handleUpgrade() was called more than once with the same socket, possibly due to a misconfiguration");
                        if (this._state > 0) return g(s, 503);
                        const h = ["HTTP/1.1 101 Switching Protocols", "Upgrade: websocket", "Connection: Upgrade", `Sec-WebSocket-Accept: ${o("sha1").update(t+u).digest("base64")}`],
                            f = new this.options.WebSocket(null, void 0, this.options);
                        if (i.size) {
                            const e = this.options.handleProtocols ? this.options.handleProtocols(i, r) : i.values().next().value;
                            e && (h.push(`Sec-WebSocket-Protocol: ${e}`), f._protocol = e)
                        }
                        if (e[c.extensionName]) {
                            const t = e[c.extensionName].params,
                                i = a.format({
                                    [c.extensionName]: [t]
                                });
                            h.push(`Sec-WebSocket-Extensions: ${i}`), f._extensions = e
                        }
                        this.emit("headers", h, r), s.write(h.concat("\r\n").join("\r\n")), s.removeListener("error", _), f.setSocket(s, n, {
                            allowSynchronousEvents: this.options.allowSynchronousEvents,
                            maxPayload: this.options.maxPayload,
                            skipUTF8Validation: this.options.skipUTF8Validation
                        }), this.clients && (this.clients.add(f), f.on("close", (() => {
                            this.clients.delete(f), this._shouldEmitClose && !this.clients.size && process.nextTick(p, this)
                        }))), l(f, r)
                    }
                }
            },
            8762: (e, t, i) => {
                "use strict";
                const r = i(2361),
                    s = i(5687),
                    n = i(3685),
                    o = i(1808),
                    a = i(4404),
                    {
                        randomBytes: c,
                        createHash: l
                    } = i(6113),
                    {
                        Duplex: h,
                        Readable: u
                    } = i(2781),
                    {
                        URL: d
                    } = i(7310),
                    f = i(5196),
                    p = i(2957),
                    _ = i(7330),
                    {
                        BINARY_TYPES: g,
                        EMPTY_BUFFER: v,
                        GUID: m,
                        kForOnEventAttribute: b,
                        kListener: w,
                        kStatusCode: y,
                        kWebSocket: S,
                        NOOP: C
                    } = i(1872),
                    {
                        EventTarget: {
                            addEventListener: x,
                            removeEventListener: E
                        }
                    } = i(62),
                    {
                        format: O,
                        parse: k
                    } = i(1503),
                    {
                        toBuffer: L
                    } = i(977),
                    D = Symbol("kAborted"),
                    M = [8, 13],
                    A = ["CONNECTING", "OPEN", "CLOSING", "CLOSED"],
                    R = /^[!#$%&'*+\-.0-9A-Z^_`|a-z~]+$/;
                class P extends r {
                    constructor(e, t, i) {
                        super(), this._binaryType = g[0], this._closeCode = 1006, this._closeFrameReceived = !1, this._closeFrameSent = !1, this._closeMessage = v, this._closeTimer = null, this._extensions = {}, this._paused = !1, this._protocol = "", this._readyState = P.CONNECTING, this._receiver = null, this._sender = null, this._socket = null, null !== e ? (this._bufferedAmount = 0, this._isServer = !1, this._redirects = 0, void 0 === t ? t = [] : Array.isArray(t) || ("object" == typeof t && null !== t ? (i = t, t = []) : t = [t]), T(this, e, t, i)) : (this._autoPong = i.autoPong, this._isServer = !0)
                    }
                    get binaryType() {
                        return this._binaryType
                    }
                    set binaryType(e) {
                        g.includes(e) && (this._binaryType = e, this._receiver && (this._receiver._binaryType = e))
                    }
                    get bufferedAmount() {
                        return this._socket ? this._socket._writableState.length + this._sender._bufferedBytes : this._bufferedAmount
                    }
                    get extensions() {
                        return Object.keys(this._extensions).join()
                    }
                    get isPaused() {
                        return this._paused
                    }
                    get onclose() {
                        return null
                    }
                    get onerror() {
                        return null
                    }
                    get onopen() {
                        return null
                    }
                    get onmessage() {
                        return null
                    }
                    get protocol() {
                        return this._protocol
                    }
                    get readyState() {
                        return this._readyState
                    }
                    get url() {
                        return this._url
                    }
                    setSocket(e, t, i) {
                        const r = new p({
                            allowSynchronousEvents: i.allowSynchronousEvents,
                            binaryType: this.binaryType,
                            extensions: this._extensions,
                            isServer: this._isServer,
                            maxPayload: i.maxPayload,
                            skipUTF8Validation: i.skipUTF8Validation
                        });
                        this._sender = new _(e, this._extensions, i.generateMask), this._receiver = r, this._socket = e, r[S] = this, e[S] = this, r.on("conclude", N), r.on("drain", W), r.on("error", H), r.on("message", z), r.on("ping", G), r.on("pong", V), e.setTimeout && e.setTimeout(0), e.setNoDelay && e.setNoDelay(), t.length > 0 && e.unshift(t), e.on("close", K), e.on("data", X), e.on("end", J), e.on("error", Y), this._readyState = P.OPEN, this.emit("open")
                    }
                    emitClose() {
                        if (!this._socket) return this._readyState = P.CLOSED, void this.emit("close", this._closeCode, this._closeMessage);
                        this._extensions[f.extensionName] && this._extensions[f.extensionName].cleanup(), this._receiver.removeAllListeners(), this._readyState = P.CLOSED, this.emit("close", this._closeCode, this._closeMessage)
                    }
                    close(e, t) {
                        if (this.readyState !== P.CLOSED)
                            if (this.readyState !== P.CONNECTING) this.readyState !== P.CLOSING ? (this._readyState = P.CLOSING, this._sender.close(e, t, !this._isServer, (e => {
                                e || (this._closeFrameSent = !0, (this._closeFrameReceived || this._receiver._writableState.errorEmitted) && this._socket.end())
                            })), this._closeTimer = setTimeout(this._socket.destroy.bind(this._socket), 3e4)) : this._closeFrameSent && (this._closeFrameReceived || this._receiver._writableState.errorEmitted) && this._socket.end();
                            else {
                                const e = "WebSocket was closed before the connection was established";
                                j(this, this._req, e)
                            }
                    }
                    pause() {
                        this.readyState !== P.CONNECTING && this.readyState !== P.CLOSED && (this._paused = !0, this._socket.pause())
                    }
                    ping(e, t, i) {
                        if (this.readyState === P.CONNECTING) throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");
                        "function" == typeof e ? (i = e, e = t = void 0) : "function" == typeof t && (i = t, t = void 0), "number" == typeof e && (e = e.toString()), this.readyState === P.OPEN ? (void 0 === t && (t = !this._isServer), this._sender.ping(e || v, t, i)) : F(this, e, i)
                    }
                    pong(e, t, i) {
                        if (this.readyState === P.CONNECTING) throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");
                        "function" == typeof e ? (i = e, e = t = void 0) : "function" == typeof t && (i = t, t = void 0), "number" == typeof e && (e = e.toString()), this.readyState === P.OPEN ? (void 0 === t && (t = !this._isServer), this._sender.pong(e || v, t, i)) : F(this, e, i)
                    }
                    resume() {
                        this.readyState !== P.CONNECTING && this.readyState !== P.CLOSED && (this._paused = !1, this._receiver._writableState.needDrain || this._socket.resume())
                    }
                    send(e, t, i) {
                        if (this.readyState === P.CONNECTING) throw new Error("WebSocket is not open: readyState 0 (CONNECTING)");
                        if ("function" == typeof t && (i = t, t = {}), "number" == typeof e && (e = e.toString()), this.readyState !== P.OPEN) return void F(this, e, i);
                        const r = {
                            binary: "string" != typeof e,
                            mask: !this._isServer,
                            compress: !0,
                            fin: !0,
                            ...t
                        };
                        this._extensions[f.extensionName] || (r.compress = !1), this._sender.send(e || v, r, i)
                    }
                    terminate() {
                        if (this.readyState !== P.CLOSED)
                            if (this.readyState !== P.CONNECTING) this._socket && (this._readyState = P.CLOSING, this._socket.destroy());
                            else {
                                const e = "WebSocket was closed before the connection was established";
                                j(this, this._req, e)
                            }
                    }
                }

                function T(e, t, i, r) {
                    const o = {
                        allowSynchronousEvents: !1,
                        autoPong: !0,
                        protocolVersion: M[1],
                        maxPayload: 104857600,
                        skipUTF8Validation: !1,
                        perMessageDeflate: !0,
                        followRedirects: !1,
                        maxRedirects: 10,
                        ...r,
                        createConnection: void 0,
                        socketPath: void 0,
                        hostname: void 0,
                        protocol: void 0,
                        timeout: void 0,
                        method: "GET",
                        host: void 0,
                        path: void 0,
                        port: void 0
                    };
                    if (e._autoPong = o.autoPong, !M.includes(o.protocolVersion)) throw new RangeError(`Unsupported protocol version: ${o.protocolVersion} (supported versions: ${M.join(", ")})`);
                    let a;
                    if (t instanceof d) a = t;
                    else try {
                        a = new d(t)
                    } catch (e) {
                        throw new SyntaxError(`Invalid URL: ${t}`)
                    }
                    "http:" === a.protocol ? a.protocol = "ws:" : "https:" === a.protocol && (a.protocol = "wss:"), e._url = a.href;
                    const h = "wss:" === a.protocol,
                        u = "ws+unix:" === a.protocol;
                    let p;
                    if ("ws:" === a.protocol || h || u ? u && !a.pathname ? p = "The URL's pathname is empty" : a.hash && (p = "The URL contains a fragment identifier") : p = 'The URL\'s protocol must be one of "ws:", "wss:", "http:", "https", or "ws+unix:"', p) {
                        const t = new SyntaxError(p);
                        if (0 === e._redirects) throw t;
                        return void B(e, t)
                    }
                    const _ = h ? 443 : 80,
                        g = c(16).toString("base64"),
                        v = h ? s.request : n.request,
                        b = new Set;
                    let w, y;
                    if (o.createConnection = h ? $ : I, o.defaultPort = o.defaultPort || _, o.port = a.port || _, o.host = a.hostname.startsWith("[") ? a.hostname.slice(1, -1) : a.hostname, o.headers = {
                            ...o.headers,
                            "Sec-WebSocket-Version": o.protocolVersion,
                            "Sec-WebSocket-Key": g,
                            Connection: "Upgrade",
                            Upgrade: "websocket"
                        }, o.path = a.pathname + a.search, o.timeout = o.handshakeTimeout, o.perMessageDeflate && (w = new f(!0 !== o.perMessageDeflate ? o.perMessageDeflate : {}, !1, o.maxPayload), o.headers["Sec-WebSocket-Extensions"] = O({
                            [f.extensionName]: w.offer()
                        })), i.length) {
                        for (const e of i) {
                            if ("string" != typeof e || !R.test(e) || b.has(e)) throw new SyntaxError("An invalid or duplicated subprotocol was specified");
                            b.add(e)
                        }
                        o.headers["Sec-WebSocket-Protocol"] = i.join(",")
                    }
                    if (o.origin && (o.protocolVersion < 13 ? o.headers["Sec-WebSocket-Origin"] = o.origin : o.headers.Origin = o.origin), (a.username || a.password) && (o.auth = `${a.username}:${a.password}`), u) {
                        const e = o.path.split(":");
                        o.socketPath = e[0], o.path = e[1]
                    }
                    if (o.followRedirects) {
                        if (0 === e._redirects) {
                            e._originalIpc = u, e._originalSecure = h, e._originalHostOrSocketPath = u ? o.socketPath : a.host;
                            const t = r && r.headers;
                            if (r = {
                                    ...r,
                                    headers: {}
                                }, t)
                                for (const [e, i] of Object.entries(t)) r.headers[e.toLowerCase()] = i
                        } else if (0 === e.listenerCount("redirect")) {
                            const t = u ? !!e._originalIpc && o.socketPath === e._originalHostOrSocketPath : !e._originalIpc && a.host === e._originalHostOrSocketPath;
                            (!t || e._originalSecure && !h) && (delete o.headers.authorization, delete o.headers.cookie, t || delete o.headers.host, o.auth = void 0)
                        }
                        o.auth && !r.headers.authorization && (r.headers.authorization = "Basic " + Buffer.from(o.auth).toString("base64")), y = e._req = v(o), e._redirects && e.emit("redirect", e.url, y)
                    } else y = e._req = v(o);
                    o.timeout && y.on("timeout", (() => {
                        j(e, y, "Opening handshake has timed out")
                    })), y.on("error", (t => {
                        null === y || y[D] || (y = e._req = null, B(e, t))
                    })), y.on("response", (s => {
                        const n = s.headers.location,
                            a = s.statusCode;
                        if (n && o.followRedirects && a >= 300 && a < 400) {
                            if (++e._redirects > o.maxRedirects) return void j(e, y, "Maximum redirects exceeded");
                            let s;
                            y.abort();
                            try {
                                s = new d(n, t)
                            } catch (t) {
                                const i = new SyntaxError(`Invalid URL: ${n}`);
                                return void B(e, i)
                            }
                            T(e, s, i, r)
                        } else e.emit("unexpected-response", y, s) || j(e, y, `Unexpected server response: ${s.statusCode}`)
                    })), y.on("upgrade", ((t, i, r) => {
                        if (e.emit("upgrade", t), e.readyState !== P.CONNECTING) return;
                        if (y = e._req = null, "websocket" !== t.headers.upgrade.toLowerCase()) return void j(e, i, "Invalid Upgrade header");
                        const s = l("sha1").update(g + m).digest("base64");
                        if (t.headers["sec-websocket-accept"] !== s) return void j(e, i, "Invalid Sec-WebSocket-Accept header");
                        const n = t.headers["sec-websocket-protocol"];
                        let a;
                        if (void 0 !== n ? b.size ? b.has(n) || (a = "Server sent an invalid subprotocol") : a = "Server sent a subprotocol but none was requested" : b.size && (a = "Server sent no subprotocol"), a) return void j(e, i, a);
                        n && (e._protocol = n);
                        const c = t.headers["sec-websocket-extensions"];
                        if (void 0 !== c) {
                            if (!w) {
                                return void j(e, i, "Server sent a Sec-WebSocket-Extensions header but no extension was requested")
                            }
                            let t;
                            try {
                                t = k(c)
                            } catch (t) {
                                return void j(e, i, "Invalid Sec-WebSocket-Extensions header")
                            }
                            const r = Object.keys(t);
                            if (1 !== r.length || r[0] !== f.extensionName) {
                                return void j(e, i, "Server indicated an extension that was not requested")
                            }
                            try {
                                w.accept(t[f.extensionName])
                            } catch (t) {
                                return void j(e, i, "Invalid Sec-WebSocket-Extensions header")
                            }
                            e._extensions[f.extensionName] = w
                        }
                        e.setSocket(i, r, {
                            allowSynchronousEvents: o.allowSynchronousEvents,
                            generateMask: o.generateMask,
                            maxPayload: o.maxPayload,
                            skipUTF8Validation: o.skipUTF8Validation
                        })
                    })), o.finishRequest ? o.finishRequest(y, e) : y.end()
                }

                function B(e, t) {
                    e._readyState = P.CLOSING, e.emit("error", t), e.emitClose()
                }

                function I(e) {
                    return e.path = e.socketPath, o.connect(e)
                }

                function $(e) {
                    return e.path = void 0, e.servername || "" === e.servername || (e.servername = o.isIP(e.host) ? "" : e.host), a.connect(e)
                }

                function j(e, t, i) {
                    e._readyState = P.CLOSING;
                    const r = new Error(i);
                    Error.captureStackTrace(r, j), t.setHeader ? (t[D] = !0, t.abort(), t.socket && !t.socket.destroyed && t.socket.destroy(), process.nextTick(B, e, r)) : (t.destroy(r), t.once("error", e.emit.bind(e, "error")), t.once("close", e.emitClose.bind(e)))
                }

                function F(e, t, i) {
                    if (t) {
                        const i = L(t).length;
                        e._socket ? e._sender._bufferedBytes += i : e._bufferedAmount += i
                    }
                    if (i) {
                        const t = new Error(`WebSocket is not open: readyState ${e.readyState} (${A[e.readyState]})`);
                        process.nextTick(i, t)
                    }
                }

                function N(e, t) {
                    const i = this[S];
                    i._closeFrameReceived = !0, i._closeMessage = t, i._closeCode = e, void 0 !== i._socket[S] && (i._socket.removeListener("data", X), process.nextTick(q, i._socket), 1005 === e ? i.close() : i.close(e, t))
                }

                function W() {
                    const e = this[S];
                    e.isPaused || e._socket.resume()
                }

                function H(e) {
                    const t = this[S];
                    void 0 !== t._socket[S] && (t._socket.removeListener("data", X), process.nextTick(q, t._socket), t.close(e[y])), t.emit("error", e)
                }

                function U() {
                    this[S].emitClose()
                }

                function z(e, t) {
                    this[S].emit("message", e, t)
                }

                function G(e) {
                    const t = this[S];
                    t._autoPong && t.pong(e, !this._isServer, C), t.emit("ping", e)
                }

                function V(e) {
                    this[S].emit("pong", e)
                }

                function q(e) {
                    e.resume()
                }

                function K() {
                    const e = this[S];
                    let t;
                    this.removeListener("close", K), this.removeListener("data", X), this.removeListener("end", J), e._readyState = P.CLOSING, this._readableState.endEmitted || e._closeFrameReceived || e._receiver._writableState.errorEmitted || null === (t = e._socket.read()) || e._receiver.write(t), e._receiver.end(), this[S] = void 0, clearTimeout(e._closeTimer), e._receiver._writableState.finished || e._receiver._writableState.errorEmitted ? e.emitClose() : (e._receiver.on("error", U), e._receiver.on("finish", U))
                }

                function X(e) {
                    this[S]._receiver.write(e) || this.pause()
                }

                function J() {
                    const e = this[S];
                    e._readyState = P.CLOSING, e._receiver.end(), this.end()
                }

                function Y() {
                    const e = this[S];
                    this.removeListener("error", Y), this.on("error", C), e && (e._readyState = P.CLOSING, this.destroy())
                }
                Object.defineProperty(P, "CONNECTING", {
                    enumerable: !0,
                    value: A.indexOf("CONNECTING")
                }), Object.defineProperty(P.prototype, "CONNECTING", {
                    enumerable: !0,
                    value: A.indexOf("CONNECTING")
                }), Object.defineProperty(P, "OPEN", {
                    enumerable: !0,
                    value: A.indexOf("OPEN")
                }), Object.defineProperty(P.prototype, "OPEN", {
                    enumerable: !0,
                    value: A.indexOf("OPEN")
                }), Object.defineProperty(P, "CLOSING", {
                    enumerable: !0,
                    value: A.indexOf("CLOSING")
                }), Object.defineProperty(P.prototype, "CLOSING", {
                    enumerable: !0,
                    value: A.indexOf("CLOSING")
                }), Object.defineProperty(P, "CLOSED", {
                    enumerable: !0,
                    value: A.indexOf("CLOSED")
                }), Object.defineProperty(P.prototype, "CLOSED", {
                    enumerable: !0,
                    value: A.indexOf("CLOSED")
                }), ["binaryType", "bufferedAmount", "extensions", "isPaused", "protocol", "readyState", "url"].forEach((e => {
                    Object.defineProperty(P.prototype, e, {
                        enumerable: !0
                    })
                })), ["open", "error", "close", "message"].forEach((e => {
                    Object.defineProperty(P.prototype, `on${e}`, {
                        enumerable: !0,
                        get() {
                            for (const t of this.listeners(e))
                                if (t[b]) return t[w];
                            return null
                        },
                        set(t) {
                            for (const t of this.listeners(e))
                                if (t[b]) {
                                    this.removeListener(e, t);
                                    break
                                }
                            "function" == typeof t && this.addEventListener(e, t, {
                                [b]: !0
                            })
                        }
                    })
                })), P.prototype.addEventListener = x, P.prototype.removeEventListener = E, e.exports = P
            },
            9751: (__unused_webpack_module, __webpack_exports__, __webpack_require__) => {
                "use strict";
                __webpack_require__.r(__webpack_exports__), __webpack_require__.d(__webpack_exports__, {
                    attach: () => attach,
                    detach: () => detach,
                    detachAll: () => detachAll,
                    getDevice: () => getDevice,
                    init: () => init,
                    run: () => run,
                    setLog: () => setLog,
                    windowInfo: () => windowInfo,
                    windowInfoRemote: () => windowInfoRemote
                });
                var fs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(7147),
                    fs__WEBPACK_IMPORTED_MODULE_0___default = __webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_0__),
                    os__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(2037),
                    os__WEBPACK_IMPORTED_MODULE_1___default = __webpack_require__.n(os__WEBPACK_IMPORTED_MODULE_1__),
                    path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(1017),
                    path__WEBPACK_IMPORTED_MODULE_2___default = __webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__),
                    frida__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(9495);
                const isMobile = "android" === process.platform,
                    isWin32 = "win32" === process.platform,
                    isMac = "darwin" === process.platform,
                    windowInfo = !0 === isWin32 || !0 === isMac ? windowInfoWin : !1 === isMobile ? windowInfoUnix() : null;
                let targets = Object.create(null),
                    term = console,
                    holder, systemScript;

                function getArgv(e) {
                    if (void 0 !== e.args) {
                        if ("string" == typeof e.args && "" !== e.args) {
                            const t = (0, __webpack_require__(5440).parse)(e.args);
                            return t.unshift(e.target), t
                        }
                        if (e.args.constructor === Array && 0 !== e.args.length) {
                            const t = e.args;
                            return t.unshift(e.target), t
                        }
                    }
                }
                async function getDevice(e) {
                    let t;
                    if ("string" == typeof e.target) {
                        let i = e.target.match(/^(\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}(?:\:\d{1,5})?)(\|.*)?$/);
                        if (null !== i) {
                            if (t = await frida__WEBPACK_IMPORTED_MODULE_3__.e3().addRemoteDevice(i[1]), null === e.run) return t;
                            const r = i[2];
                            if (void 0 !== r && r.length > 1)
                                if (":" === r[1])
                                    if (":" === r[2]) e.target = r.substring(3), e.run = !0;
                                    else {
                                        const t = r.substring(2).split(":")[0];
                                        !0 === isNaN(t) ? (e.target = t, e.run = !0) : e.target = parseInt(t)
                                    }
                            else e.target = r.substring(1);
                            else {
                                const i = await t.enumerateProcesses();
                                if (1 === i.length) e.target = i[0].pid;
                                else try {
                                    const i = await t.getFrontmostApplication();
                                    if (null === i) throw new Error("[" + t.type + "] " + t.name + ": no FrontmostApplication");
                                    e.target = i.pid, term.log('App name:       "' + i.name + '"'), term.log('App identifier: "' + i.identifier + '"')
                                } catch (e) {
                                    throw new Error("[" + t.type + "] " + t.name + ": no FrontmostApplication (" + e.message + ")")
                                }
                            }
                        } else if (null !== (i = e.target.match(/^usb(\|.*)?$/))) {
                            if (t = await frida__WEBPACK_IMPORTED_MODULE_3__.Ru(), t = await frida__WEBPACK_IMPORTED_MODULE_3__.Wp({
                                    timeout: 1e3
                                }), null === e.run) return t;
                            const r = i[0];
                            if (r.length > 4) {
                                const t = r.substring(4);
                                if (":" === t[0])
                                    if (":" === t[1]) e.target = t.substring(2), e.run = !0;
                                    else {
                                        const i = t.substring(1).split(":")[0];
                                        !0 === isNaN(i) ? (e.target = i, e.run = !0) : e.target = parseInt(i)
                                    }
                                else e.target = t
                            } else try {
                                const i = await t.getFrontmostApplication();
                                if (null === i) throw new Error(t.name + ": no FrontmostApplication");
                                e.target = i.pid, term.log('App name:       "' + i.name + '"'), term.log('App identifier: "' + i.identifier + '"')
                            } catch (e) {
                                throw new Error("[" + t.type + "] " + t.name + ": no FrontmostApplication (" + e.message + ")")
                            }
                        } else "usb" === e.type ? (t = await frida__WEBPACK_IMPORTED_MODULE_3__.Ru(), t = await frida__WEBPACK_IMPORTED_MODULE_3__.Wp({
                            timeout: 1e3
                        })) : t = "remote" === e.type ? void 0 !== e.ip ? await frida__WEBPACK_IMPORTED_MODULE_3__.e3().addRemoteDevice(e.ip) : await frida__WEBPACK_IMPORTED_MODULE_3__.bK() : !0 === isMobile ? await frida__WEBPACK_IMPORTED_MODULE_3__.bK() : await frida__WEBPACK_IMPORTED_MODULE_3__.K0()
                    } else t = !0 === isMobile ? await frida__WEBPACK_IMPORTED_MODULE_3__.bK() : await frida__WEBPACK_IMPORTED_MODULE_3__.K0();
                    return t
                }
                async function run(e, t) {
                    const i = t ?? await getDevice(e),
                        r = await i.spawn(e.target, {
                            argv: getArgv(e)
                        });
                    if (null == e.delay || 0 === e.delay) {
                        e.target = r;
                        const t = await attach(e, i);
                        return await i.resume(r), t
                    }
                    await i.resume(r), term.log("> sleep " + e.delay), await new Promise((t => setTimeout(t, e.delay))), void 0 !== e.pname && "" !== e.pname ? e.target = e.pname : e.target = r;
                    return await attach(e, i)
                }
                const processStorages = {};
                async function attach(e, t) {
                    const i = t ?? await getDevice(e);
                    if (!0 === e.run) return term.log('> exec "' + e.target + '"'), e.run = !1, run(e, i);
                    let r = e.target;
                    const s = e.script;
                    if (term.log("Device:     [" + i.type + "] " + i.name), !0 !== e.attach ? detachAll() : term.warn("Session:    " + (Object.keys(targets).length + 1)), "string" == typeof r) {
                        term.log('> getProcess "' + r + '"');
                        try {
                            const t = await i.getProcess(r);
                            r = t.pid, e.target = r
                        } catch (t) {
                            var n = !1;
                            try {
                                const t = await i.enumerateApplications({
                                    identifiers: [r]
                                });
                                if (1 === t.length) {
                                    n = !0;
                                    const i = t[0];
                                    r = i.pid, e.target = r
                                }
                            } catch {}
                            if (!1 === n) {
                                if ("remote" === i.type) {
                                    const t = await i.enumerateProcesses();
                                    if (1 === t.length) {
                                        n = !0;
                                        const i = t[0];
                                        r = i.pid, e.target = r
                                    }
                                }
                                if (!1 !== isNaN(r)) return term.error(t.message), !1;
                                r = parseInt(r)
                            }
                        }
                    }
                    let o;
                    term.log("TargetPID:  " + r);
                    try {
                        o = await i.attach(r, {
                            realm: !0 === e.isEmu ? "emulated" : "native"
                        })
                    } catch (e) {
                        if (!0 !== e.message.startsWith("Emulated realm")) throw e;
                        term.warn(e.message), o = await i.attach(r)
                    }
                    o.detached.connect((e => {
                        term.log(`[*] Detached from process (reason=${e})`), ("string" == typeof e && "application-requested" !== e || "number" == typeof e && 1 !== e) && (holder.isAttach < 0 && (holder.isAttach = -holder.isAttach, delete targets[r]), !0 === holder.isCMD && setTimeout((() => {
                            window.close()
                        }), 1e3))
                    }));
                    const a = targets[r];
                    let c;
                    void 0 !== a && (targets[r + "_" + Date.now()] = a), targets[r] = {
                        session: o
                    };
                    const l = !0 === (!0 === isMobile && void 0 === holder.usePicker) ? "libLoaderSelf.js" : "libLoader.js",
                        h = path__WEBPACK_IMPORTED_MODULE_2___default().resolve("data", "scripts", l),
                        u = path__WEBPACK_IMPORTED_MODULE_2___default().dirname(h),
                        d = path__WEBPACK_IMPORTED_MODULE_2___default().resolve(s),
                        f = initSharedFunction(u, d);
                    f._ipc = {}, f._ipcOn = {};
                    const p = holder.opt_runtime ? "v8" : "qjs";
                    let _;
                    if ("v8" === p) {
                        c = fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(h, "utf8") + ` //@ sourceURL=file:///${h.replace(/\\/g,"/")}`;
                        const e = h + ".cjs";
                        _ = await o.createScript(c, {
                            name: "agent",
                            runtime: p,
                            snapshot: !0 === fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(e) ? fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(e) : void 0
                        })
                    } else {
                        const e = h + ".qjs";
                        !0 === fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(e) ? (c = fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(h + ".qjs"), _ = await o.createScriptFromBytes(c, {
                            name: "agent",
                            runtime: p
                        })) : (c = fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(h, "utf8") + ` //@ sourceURL=file:///${h.replace(/\\/g,"/")}`, _ = await o.createScript(c, {
                            name: "agent",
                            runtime: p
                        }))
                    }

                    function g(e) {
                        this.id = e;
                        let t = this.dict = new Map;
                        this.getItem = e => t.get(e), this.setItem = (e, i) => t.set(e, i), this.removeItem = e => {
                            t.delete(e)
                        }, this.clear = () => {
                            t.clear()
                        }, this.key = e => Array.from(t.keys())[e]
                    }

                    function v(e) {
                        let t = processStorages[e];
                        return (void 0 === t || t.id !== r) && (t = processStorages[e] = new g(r)), globalThis.__localStorage = t
                    }
                    targets[r].script = _, 2 === holder.opt_runtime && await _.enableDebugger(), Object.defineProperty(g.prototype, "length", {
                        get() {
                            return this.dict.size
                        }
                    });
                    let m = v(d);
                    return _.logHandler = (e, t) => {
                        switch (e) {
                            case "info":
                                term.log(t);
                                break;
                            case "warning":
                                term.warn(t);
                                break;
                            case "error":
                                term.error(t.replace(/    at <anonymous> \(\/agent\.js\)\n/g, ""))
                        }
                    }, _.message.connect(((e, t) => {
                        let i;
                        if ("error" === e.type) return void(e.stack ? term.error(e.stack.replace(/    at <anonymous> \(\/agent\.js\)\n/g, "")) : term.error(JSON.stringify(e, null, 2)));
                        if (void 0 === (i = e.payload)) return void term.error(JSON.stringify(e, null, 2));
                        const r = i.key;
                        switch (i.cmd) {
                            case "loadHtml": {
                                const e = i.fileName ? path__WEBPACK_IMPORTED_MODULE_2___default().dirname(i.fileName) : void 0,
                                    t = i.text;
                                if (!0 === isMobile) {
                                    document.open();
                                    const i = document.createElement("html");
                                    i.innerHTML = t;
                                    const r = document.createElement("base");
                                    r.href = e ?? process.cwd() + "/data/scripts", i.getElementsByTagName("head")[0].appendChild(r), document.write(i.outerHTML), document.close()
                                } else holder.showTab(t, e)
                            }
                            break;
                            case "rpc_send": {
                                const e = i.func,
                                    r = f._ipcOn[e];
                                if (void 0 !== r) {
                                    const e = i.args;
                                    null !== t && e.push(t), r.apply(null, e)
                                }
                            }
                            break;
                            case "rpc_invoke": {
                                const e = i.func,
                                    s = f._ipc[e];
                                if (void 0 !== s) {
                                    const e = i.args;
                                    null !== t && e.push(t);
                                    const n = s.apply(null, e);
                                    Promise.resolve(n).then((function(e) {
                                        Buffer.isBuffer(e) ? _.post({
                                            type: r
                                        }, e) : _.post({
                                            type: r,
                                            result: e
                                        })
                                    })).catch((e => {
                                        _.post({
                                            type: r,
                                            result: e
                                        })
                                    }))
                                } else _.post({
                                    type: r,
                                    result: null
                                })
                            }
                            break;
                            case "detach":
                                holder.fridaAction();
                                break;
                            case "re_attach": {
                                const e = i.script;
                                holder.fridaAction((() => {
                                    void 0 !== _ && (holder.script = e), holder.fridaAction()
                                }))
                            }
                            break;
                            case "copy":
                                holder.copy(i.text);
                                break;
                            case "prompt": {
                                let e = i.text,
                                    t = i.default;
                                const s = holder.$createElement;
                                let n = "";
                                const o = s("div", [s("span", {
                                    style: "white-space: break-spaces;"
                                }, e), s("b-form-textarea", {
                                    class: "mt-3",
                                    props: {
                                        placeholder: "Enter something...",
                                        rows: 3,
                                        "max-rows": 6,
                                        value: t
                                    },
                                    on: {
                                        input: function(e) {
                                            n = e
                                        }
                                    },
                                    hook: {
                                        insert(e) {
                                            setTimeout((function() {
                                                e.elm.focus()
                                            }), 100)
                                        }
                                    }
                                })]);
                                holder.$bvModal.msgBoxConfirm([o], {
                                    centered: !isMobile
                                }).then((e => {
                                    const t = !0 === e ? n : null;
                                    _.post({
                                        type: r,
                                        result: t
                                    })
                                }))
                            }
                            break;
                            case "eval": {
                                const e = i.func,
                                    t = f[e];
                                let s = null;
                                if (void 0 !== t) {
                                    const e = i.args;
                                    s = t.apply(null, e);
                                    if (!0 === Buffer.isBuffer(s)) {
                                        _.post({
                                            type: r
                                        }, s);
                                        break
                                    }
                                }
                                _.post({
                                    type: r,
                                    result: s
                                })
                            }
                            break;
                            case "writeBytes": {
                                const e = i.path,
                                    s = f.fs_writeFileSync(e, t);
                                _.post({
                                    type: r,
                                    result: s
                                })
                            }
                            break;
                            case "getScripts":
                                _.post({
                                    type: r,
                                    result: holder.getAllScript()
                                });
                                break;
                            case "setTargetID": {
                                const e = i.id;
                                holder._target = e, m = v(e)
                            }
                            break;
                            case "localStorage_setItem": {
                                const [e, t] = i.args;
                                localStorage.setItem(e, t)
                            }
                            break;
                            case "localStorage_getItem": {
                                const [e] = i.args, t = localStorage.getItem(e);
                                _.post({
                                    type: r,
                                    result: t
                                })
                            }
                            break;
                            case "localStorage_removeItem": {
                                const [e] = i.args;
                                localStorage.removeItem(e)
                            }
                            break;
                            case "localStorage_clear":
                                localStorage.clear();
                                break;
                            case "localStorage_key": {
                                const [e] = i.args, t = localStorage.key(e);
                                _.post({
                                    type: r,
                                    result: t
                                })
                            }
                            break;
                            case "localStorage_length": {
                                const e = localStorage.length;
                                _.post({
                                    type: r,
                                    result: e
                                })
                            }
                            break;
                            case "localStorage_keys": {
                                const e = Object.keys(localStorage);
                                _.post({
                                    type: r,
                                    result: e
                                })
                            }
                            break;
                            case "sessionStorage_setItem": {
                                const [e, t] = i.args;
                                m.setItem(e, t)
                            }
                            break;
                            case "sessionStorage_getItem": {
                                const [e] = i.args, t = m.getItem(e);
                                _.post({
                                    type: r,
                                    result: t
                                })
                            }
                            break;
                            case "sessionStorage_removeItem": {
                                const [e] = i.args;
                                m.removeItem(e)
                            }
                            break;
                            case "sessionStorage_clear":
                                m.clear();
                                break;
                            case "sessionStorage_key": {
                                const [e] = i.args, t = m.key(e);
                                _.post({
                                    type: r,
                                    result: t
                                })
                            }
                            break;
                            case "sessionStorage_length": {
                                const e = m.length;
                                _.post({
                                    type: r,
                                    result: e
                                })
                            }
                            break;
                            case "sessionStorage_keys": {
                                const e = Array.from(m.dict.keys());
                                _.post({
                                    type: r,
                                    result: e
                                })
                            }
                            break;
                            default:
                                _.post({
                                    type: r
                                })
                        }
                    })), globalThis.rpc = {
                        exports: _.exports,
                        on: function(e, t) {
                            f._ipcOn[e] = t
                        },
                        handle: function(e, t) {
                            f._ipc[e] = t
                        }
                    }, !1 === isMobile && _.destroyed.connect((function() {
                        holder.removeTab()
                    })), await _.load(), !0
                }
                async function detach(e) {
                    const t = targets[e.target];
                    return t && (delete targets[e.target], detachAll(), await t.session.detach()), !0
                }

                function detachAll() {
                    for (const e in targets) try {
                        const t = targets[e];
                        t && t.session.detach()
                    } catch {}
                    targets = Object.create(null)
                }
                globalThis.__localStorageS = processStorages;
                const pickerScriptMacOS = "\nlet pCGWindowListCopyWindowInfo = Module.findExportByName('SkyLight', 'CGWindowListCopyWindowInfo');\nif (pCGWindowListCopyWindowInfo === null) {\n    pCGWindowListCopyWindowInfo = Module.findExportByName(null, 'CGWindowListCopyWindowInfo');\n}\nconst CGWindowListCopyWindowInfo = new NativeFunction(pCGWindowListCopyWindowInfo, 'pointer', ['uint', 'uint']);\nrpc.exports = {\n  ProcessFromPoint(x, y) {\n    const ret = CGWindowListCopyWindowInfo((1 << 0) | (1 << 4), 0);\n      const jsonObj = ObjC.classes.NSJSONSerialization.dataWithJSONObject_options_error_(ret, 0, ptr(0));\n      const jsonStr = jsonObj.bytes().readCString(jsonObj.length());\n      const objJS = JSON.parse(jsonStr);\n\n      const level = objJS.find(obj => (obj.kCGWindowOwnerPID === Process.id)) ?? 0;\n      const windw = objJS.find(obj => {\n        if (obj.kCGWindowLayer === level) {\n          const bound = obj.kCGWindowBounds;\n            return x >= bound.X && x <= bound.X + bound.Width && y >= bound.Y && y <= bound.Y + bound.Height;\n        }\n        return false;\n      });\n\n      return windw !== undefined ? {pid: windw.kCGWindowOwnerPID, title: windw.kCGWindowOwnerName } : {pid: -1};\n  }\n}\n",
                    pickerScriptWin = "\nconst cm = new CModule(`\ntypedef unsigned long DWORD;\ntypedef DWORD* LPDWORD;\ntypedef void* HWND;\ntypedef long LONG;\ntypedef struct POINT { LONG  x; LONG  y; } POINT;\n\nextern HWND WindowFromPoint(POINT);\nextern HWND GetWindowThreadProcessId(HWND, LPDWORD);\n\nDWORD ProcessIdFromPoint(LONG x, LONG y) {\nPOINT p = {x, y};\nHWND foundWindow = WindowFromPoint(p);\n\nDWORD pid = 0;\nGetWindowThreadProcessId(foundWindow, &pid);\nreturn pid;\n}\n\n#define FALSE               0\n#define TRUE                1\n#define GWL_STYLE           (-16)\n#define WS_VISIBLE          0x10000000L\ntypedef int BOOL;\ntypedef void* LPARAM;\ntypedef struct FindMainWindowCtx {\nDWORD pid;\nHWND main_window;\n} FindMainWindowCtx;\n\nextern BOOL EnumWindows(void*, LPARAM);\nextern LONG GetWindowLong(HWND, int);\n\nBOOL inspect_window(HWND hwnd, LPARAM lparam) {\nif ((GetWindowLong(hwnd, GWL_STYLE) & WS_VISIBLE) != 0)\n{\n    FindMainWindowCtx* ctx = (FindMainWindowCtx*)lparam;\n    DWORD pid;\n    GetWindowThreadProcessId(hwnd, &pid);\n    if (pid == ctx->pid)\n    {\n      ctx->main_window = hwnd;\n      return FALSE;\n    }\n}\n\nreturn TRUE;\n}\nHWND MainWindowHandle(DWORD pid) {\nFindMainWindowCtx ctx = {pid, 0};\nEnumWindows(&inspect_window, &ctx);\nreturn ctx.main_window;\n}\n\nextern int GetWindowTextW (HWND, void*, int);\n//extern DWORD GetLastError();\nvoid ___dummy() {\nvoid* _ = &GetWindowTextW;\n//_ = &GetLastError;\n}\n`, {\nWindowFromPoint: Module.findExportByName('user32', 'WindowFromPoint'),\nGetWindowThreadProcessId: Module.findExportByName('user32', 'GetWindowThreadProcessId'),\nEnumWindows: Module.findExportByName('user32', 'EnumWindows'),\nGetWindowLong: Module.findExportByName('user32', 'GetWindowLongW'),\nGetWindowTextW: Module.findExportByName('user32', 'GetWindowTextW'),\n//GetLastError: Module.findExportByName('kernel32', 'GetLastError')\n});\n\nconst cmProcessIdFromPoint = new NativeFunction(cm.ProcessIdFromPoint, 'ulong', ['long', 'long']);\nconst cmMainWindowHandle = new NativeFunction(cm.MainWindowHandle, 'uint', ['ulong']);\n//const cmGetLastError = new NativeFunction(cm.GetLastError, 'uint', []);\nconst cmGetWindowTextW = new NativeFunction(cm.GetWindowTextW, 'int', ['pointer', 'pointer', 'int']);\n\n//console.log(JSON.stringify(cm, null, 2));\n\nfunction _GetWindowTextW(hwnd) {\n    const mem = Memory.alloc(1024*2);\n    cmGetWindowTextW(ptr(hwnd), mem, 1023);\n    return mem.readUtf16String();\n}\n\nrpc.exports = {\nProcessIdFromPoint(x, y) {\n    return cmProcessIdFromPoint(x, y);\n},\nMainWindowHandle(pid) {\n    return cmMainWindowHandle(pid);\n},\nGetWindowTextW(hwnd) {\n    return _GetWindowTextW(hwnd);\n},\nProcessFromPoint(x, y) {\n    const pid = cmProcessIdFromPoint(x, y);\n    const hwnd = cmMainWindowHandle(pid);\n    if (hwnd) {\n        const title = _GetWindowTextW(hwnd);\n        return { pid, title };\n    }\n    return { pid };\n}\n}\n";

                function init(e) {
                    return holder = e, 0 == Object.keys(e).length || !1 === e.usePicker || (setImmediate(debloat), !1 !== isWin32 || !1 !== isMac ? frida__WEBPACK_IMPORTED_MODULE_3__.K0().then((async e => {
                        const t = await e.attach(0);
                        return systemScript = await t.createScript(!0 === isWin32 ? pickerScriptWin : pickerScriptMacOS, {
                            runtime: "qjs"
                        }), systemScript.message.connect(((e, t) => {
                            if ("error" === e.type || void 0 === e.payload) return term.error("NativeError:"), void(e.stack && term.error("Stack:\r\n" + e.stack))
                        })), systemScript.logHandler = (e, t) => {
                            term.log(e.toString() + " " + t)
                        }, await systemScript.load()
                    })).then((() => !0), (() => !1)) : void 0)
                }

                function setLog(e) {
                    term = e
                }

                function debloat() {
                    const e = os__WEBPACK_IMPORTED_MODULE_1___default().tmpdir();
                    fs__WEBPACK_IMPORTED_MODULE_0___default().readdirSync(e).filter((e => !0 === e.startsWith("frida-"))).forEach((t => {
                        const i = e + "/" + t;
                        fs__WEBPACK_IMPORTED_MODULE_0___default().rmSync(i, {
                            recursive: !0,
                            force: !0
                        })
                    }))
                }

                function initSharedFunction(__dir, __miss) {
                    const sharedFn = Object.create(null);
                    return sharedFn.__dirname = () => __dir, sharedFn.__mission = () => __miss, sharedFn.fs_readFileSync = function(e, t) {
                        try {
                            return e = path__WEBPACK_IMPORTED_MODULE_2___default().resolve(__dir, e), !1 === fs__WEBPACK_IMPORTED_MODULE_0___default().existsSync(e) ? null : fs__WEBPACK_IMPORTED_MODULE_0___default().readFileSync(e, t)
                        } catch {
                            return null
                        }
                    }, sharedFn.fs_writeFileSync = function(e, t, i) {
                        try {
                            return e = path__WEBPACK_IMPORTED_MODULE_2___default().resolve(__dir, e), fs__WEBPACK_IMPORTED_MODULE_0___default().writeFileSync(e, t, i)
                        } catch {
                            return null
                        }
                    }, sharedFn.path_dirname = function(e) {
                        return path__WEBPACK_IMPORTED_MODULE_2___default().dirname(e)
                    }, sharedFn.fs_realpathSync = function(e, t) {
                        try {
                            return fs__WEBPACK_IMPORTED_MODULE_0___default().realpathSync(e, t)
                        } catch {
                            return null
                        }
                    }, sharedFn._statPath = function(e, t) {
                        const i = {
                            path: e = path__WEBPACK_IMPORTED_MODULE_2___default().resolve(t, e),
                            isFile: !1,
                            isDir: !1
                        };
                        try {
                            const t = fs__WEBPACK_IMPORTED_MODULE_0___default().statSync(e);
                            i.isFile = t.isFile(), i.isDir = t.isDirectory()
                        } catch (e) {
                            i.errno = !0
                        }
                        return i
                    }, sharedFn.evalJs = function(s) {
                        let result;
                        try {
                            result = eval(s), result = void 0 !== result && result
                        } catch (e) {
                            result = null
                        }
                        return result
                    }, sharedFn
                }
                async function windowInfoRemote(e, t, i) {
                    const r = await frida__WEBPACK_IMPORTED_MODULE_3__.e3().addRemoteDevice(e),
                        s = await r.attach(0),
                        n = {
                            runtime: "qjs"
                        },
                        o = await s.createScript("\nrpc.exports.platform = () => {\nif ('windows'===Process.platform) return 'win32';\nreturn Process.platform;\n}\n", n);
                    await o.load();
                    if ("win32" !== await o.exports.platform()) return {
                        pid: -1
                    };
                    o.unload();
                    const a = await s.createScript(pickerScriptWin, n);
                    await a.load(), a.logHandler = (e, t) => {
                        term.log(e, t)
                    }, a.message.connect(((e, t) => {
                        term.log(JSON.stringify(e, null, 2))
                    }));
                    const c = await a.exports.ProcessFromPoint(t, i);
                    return a.unload(), s.detach(), c
                }
                async function windowInfoWin(e, t) {
                    return await systemScript.exports.ProcessFromPoint(e, t)
                }

                function windowInfoUnix() {
                    const {
                        execFileSync: e
                    } = __webpack_require__(2081);
                    return function() {
                        let t = e("xdotool", ["getmouselocation"]).toString().trimEnd();
                        const i = t.match(/\d+$/);
                        if (null !== i) {
                            t = e("xdotool", ["getwindowpid", i]).toString().trimEnd();
                            return {
                                pid: parseInt(t),
                                title: e("xdotool", ["getwindowname", i]).toString().trimEnd()
                            }
                        }
                        return term.error("https://github.com/jordansissel/xdotool#installation"), {
                            pid: -1
                        }
                    }
                }
            },
            7042: (e, t, i) => {
                "use strict";
                i.d(t, {
                    S1: () => $i,
                    LP: () => Ti,
                    Ct: () => Ii
                });
                var r = i(7147),
                    s = i(1017),
                    n = i(9758),
                    o = i(8336),
                    a = i(4606),
                    c = i(9591),
                    l = i(2352),
                    h = (i(5151), i(1990)),
                    u = i(9027);
                class d extends Error {
                    constructor(e) {
                        super(e), this.caller = ""
                    }
                    toJSON() {
                        return {
                            code: this.code,
                            data: this.data,
                            caller: this.caller,
                            message: this.message,
                            stack: this.stack
                        }
                    }
                    fromJSON(e) {
                        const t = new d(e.message);
                        return t.code = e.code, t.data = e.data, t.caller = e.caller, t.stack = e.stack, t
                    }
                    get isIsomorphicGitError() {
                        return !0
                    }
                }
                class f extends d {
                    constructor(e) {
                        super(`Modifying the index is not possible because you have unmerged files: ${e.toString}. Fix them up in the work tree, and then use 'git add/rm as appropriate to mark resolution and make a commit.`), this.code = this.name = f.code, this.data = {
                            filepaths: e
                        }
                    }
                }
                f.code = "UnmergedPathsError";
                class p extends d {
                    constructor(e) {
                        super(`An internal error caused this command to fail. Please file a bug report at https://github.com/isomorphic-git/isomorphic-git/issues with this error message: ${e}`), this.code = this.name = p.code, this.data = {
                            message: e
                        }
                    }
                }
                p.code = "InternalError";
                class _ extends d {
                    constructor(e) {
                        super(`The filepath "${e}" contains unsafe character sequences`), this.code = this.name = _.code, this.data = {
                            filepath: e
                        }
                    }
                }
                _.code = "UnsafeFilepathError";
                class g {
                    constructor(e) {
                        this.buffer = e, this._start = 0
                    }
                    eof() {
                        return this._start >= this.buffer.length
                    }
                    tell() {
                        return this._start
                    }
                    seek(e) {
                        this._start = e
                    }
                    slice(e) {
                        const t = this.buffer.slice(this._start, this._start + e);
                        return this._start += e, t
                    }
                    toString(e, t) {
                        const i = this.buffer.toString(e, this._start, this._start + t);
                        return this._start += t, i
                    }
                    write(e, t, i) {
                        const r = this.buffer.write(e, this._start, t, i);
                        return this._start += t, r
                    }
                    copy(e, t, i) {
                        const r = e.copy(this.buffer, this._start, t, i);
                        return this._start += r, r
                    }
                    readUInt8() {
                        const e = this.buffer.readUInt8(this._start);
                        return this._start += 1, e
                    }
                    writeUInt8(e) {
                        const t = this.buffer.writeUInt8(e, this._start);
                        return this._start += 1, t
                    }
                    readUInt16BE() {
                        const e = this.buffer.readUInt16BE(this._start);
                        return this._start += 2, e
                    }
                    writeUInt16BE(e) {
                        const t = this.buffer.writeUInt16BE(e, this._start);
                        return this._start += 2, t
                    }
                    readUInt32BE() {
                        const e = this.buffer.readUInt32BE(this._start);
                        return this._start += 4, e
                    }
                    writeUInt32BE(e) {
                        const t = this.buffer.writeUInt32BE(e, this._start);
                        return this._start += 4, t
                    }
                }

                function v(e, t) {
                    return -(e < t) || +(e > t)
                }

                function m(e, t) {
                    return v(e.path, t.path)
                }

                function b(e) {
                    let t = e > 0 ? e >> 12 : 0;
                    4 !== t && 8 !== t && 10 !== t && 14 !== t && (t = 8);
                    let i = 511 & e;
                    return i = 73 & i ? 493 : 420, 8 !== t && (i = 0), (t << 12) + i
                }
                const w = 2 ** 32;

                function y(e, t, i, r) {
                    if (void 0 !== e && void 0 !== t) return [e, t];
                    void 0 === i && (i = r.valueOf());
                    const s = Math.floor(i / 1e3);
                    return [s, 1e6 * (i - 1e3 * s)]
                }

                function S(e) {
                    const [t, i] = y(e.ctimeSeconds, e.ctimeNanoseconds, e.ctimeMs, e.ctime), [r, s] = y(e.mtimeSeconds, e.mtimeNanoseconds, e.mtimeMs, e.mtime);
                    return {
                        ctimeSeconds: t % w,
                        ctimeNanoseconds: i % w,
                        mtimeSeconds: r % w,
                        mtimeNanoseconds: s % w,
                        dev: e.dev % w,
                        ino: e.ino % w,
                        mode: b(e.mode % w),
                        uid: e.uid % w,
                        gid: e.gid % w,
                        size: e.size > -1 ? e.size % w : 0
                    }
                }
                let C = null;
                async function x(e) {
                    return null === C && (C = await async function() {
                        try {
                            if ("da39a3ee5e6b4b0d3255bfef95601890afd80709" === await E(new Uint8Array([]))) return !0
                        } catch (e) {}
                        return !1
                    }()), C ? E(e) : function(e) {
                        return (new o).update(e).digest("hex")
                    }(e)
                }
                async function E(e) {
                    return function(e) {
                        let t = "";
                        for (const i of new Uint8Array(e)) i < 16 && (t += "0"), t += i.toString(16);
                        return t
                    }(await crypto.subtle.digest("SHA-1", e))
                }
                class O {
                    constructor(e, t) {
                        this._dirty = !1, this._unmergedPaths = t || new Set, this._entries = e || new Map
                    }
                    _addEntry(e) {
                        if (0 === e.flags.stage) e.stages = [e], this._entries.set(e.path, e), this._unmergedPaths.delete(e.path);
                        else {
                            let t = this._entries.get(e.path);
                            t || (this._entries.set(e.path, e), t = e), t.stages[e.flags.stage] = e, this._unmergedPaths.add(e.path)
                        }
                    }
                    static async from(e) {
                        if (Buffer.isBuffer(e)) return O.fromBuffer(e);
                        if (null === e) return new O(null);
                        throw new p("invalid type passed to GitIndex.from")
                    }
                    static async fromBuffer(e) {
                        if (0 === e.length) throw new p("Index file is empty (.git/index)");
                        const t = new O,
                            i = new g(e),
                            r = i.toString("utf8", 4);
                        if ("DIRC" !== r) throw new p(`Invalid dircache magic file number: ${r}`);
                        const s = await x(e.slice(0, -20)),
                            n = e.slice(-20).toString("hex");
                        if (n !== s) throw new p(`Invalid checksum in GitIndex buffer: expected ${n} but saw ${s}`);
                        const o = i.readUInt32BE();
                        if (2 !== o) throw new p(`Unsupported dircache version: ${o}`);
                        const a = i.readUInt32BE();
                        let c = 0;
                        for (; !i.eof() && c < a;) {
                            const r = {};
                            r.ctimeSeconds = i.readUInt32BE(), r.ctimeNanoseconds = i.readUInt32BE(), r.mtimeSeconds = i.readUInt32BE(), r.mtimeNanoseconds = i.readUInt32BE(), r.dev = i.readUInt32BE(), r.ino = i.readUInt32BE(), r.mode = i.readUInt32BE(), r.uid = i.readUInt32BE(), r.gid = i.readUInt32BE(), r.size = i.readUInt32BE(), r.oid = i.slice(20).toString("hex");
                            const s = i.readUInt16BE();
                            r.flags = (l = s, {
                                assumeValid: Boolean(32768 & l),
                                extended: Boolean(16384 & l),
                                stage: (12288 & l) >> 12,
                                nameLength: 4095 & l
                            });
                            const n = e.indexOf(0, i.tell() + 1) - i.tell();
                            if (n < 1) throw new p(`Got a path length of: ${n}`);
                            if (r.path = i.toString("utf8", n), r.path.includes("..\\") || r.path.includes("../")) throw new _(r.path);
                            let o = 8 - (i.tell() - 12) % 8;
                            for (0 === o && (o = 8); o--;) {
                                const e = i.readUInt8();
                                if (0 !== e) throw new p(`Expected 1-8 null characters but got '${e}' after ${r.path}`);
                                if (i.eof()) throw new p("Unexpected end of file")
                            }
                            r.stages = [], t._addEntry(r), c++
                        }
                        var l;
                        return t
                    }
                    get unmergedPaths() {
                        return [...this._unmergedPaths]
                    }
                    get entries() {
                        return [...this._entries.values()].sort(m)
                    }
                    get entriesMap() {
                        return this._entries
                    }
                    get entriesFlat() {
                        return [...this.entries].flatMap((e => e.stages.length > 1 ? e.stages.filter((e => e)) : e))
                    }*[Symbol.iterator]() {
                        for (const e of this.entries) yield e
                    }
                    insert({
                        filepath: e,
                        stats: t,
                        oid: i,
                        stage: r = 0
                    }) {
                        t || (t = {
                            ctimeSeconds: 0,
                            ctimeNanoseconds: 0,
                            mtimeSeconds: 0,
                            mtimeNanoseconds: 0,
                            dev: 0,
                            ino: 0,
                            mode: 0,
                            uid: 0,
                            gid: 0,
                            size: 0
                        }), t = S(t);
                        const s = Buffer.from(e),
                            n = {
                                ctimeSeconds: t.ctimeSeconds,
                                ctimeNanoseconds: t.ctimeNanoseconds,
                                mtimeSeconds: t.mtimeSeconds,
                                mtimeNanoseconds: t.mtimeNanoseconds,
                                dev: t.dev,
                                ino: t.ino,
                                mode: t.mode || 33188,
                                uid: t.uid,
                                gid: t.gid,
                                size: t.size,
                                path: e,
                                oid: i,
                                flags: {
                                    assumeValid: !1,
                                    extended: !1,
                                    stage: r,
                                    nameLength: s.length < 4095 ? s.length : 4095
                                },
                                stages: []
                            };
                        this._addEntry(n), this._dirty = !0
                    }
                    delete({
                        filepath: e
                    }) {
                        if (this._entries.has(e)) this._entries.delete(e);
                        else
                            for (const t of this._entries.keys()) t.startsWith(e + "/") && this._entries.delete(t);
                        this._unmergedPaths.has(e) && this._unmergedPaths.delete(e), this._dirty = !0
                    }
                    clear() {
                        this._entries.clear(), this._dirty = !0
                    }
                    has({
                        filepath: e
                    }) {
                        return this._entries.has(e)
                    }
                    render() {
                        return this.entries.map((e => `${e.mode.toString(8)} ${e.oid}    ${e.path}`)).join("\n")
                    }
                    static async _entryToBuffer(e) {
                        const t = Buffer.from(e.path),
                            i = 8 * Math.ceil((62 + t.length + 1) / 8),
                            r = Buffer.alloc(i),
                            s = new g(r),
                            n = S(e);
                        return s.writeUInt32BE(n.ctimeSeconds), s.writeUInt32BE(n.ctimeNanoseconds), s.writeUInt32BE(n.mtimeSeconds), s.writeUInt32BE(n.mtimeNanoseconds), s.writeUInt32BE(n.dev), s.writeUInt32BE(n.ino), s.writeUInt32BE(n.mode), s.writeUInt32BE(n.uid), s.writeUInt32BE(n.gid), s.writeUInt32BE(n.size), s.write(e.oid, 20, "hex"), s.writeUInt16BE(function(e) {
                            const t = e.flags;
                            return t.extended = !1, t.nameLength = Math.min(Buffer.from(e.path).length, 4095), (t.assumeValid ? 32768 : 0) + (t.extended ? 16384 : 0) + ((3 & t.stage) << 12) + (4095 & t.nameLength)
                        }(e)), s.write(e.path, t.length, "utf8"), r
                    }
                    async toObject() {
                        const e = Buffer.alloc(12),
                            t = new g(e);
                        t.write("DIRC", 4, "utf8"), t.writeUInt32BE(2), t.writeUInt32BE(this.entriesFlat.length);
                        let i = [];
                        for (const e of this.entries)
                            if (i.push(O._entryToBuffer(e)), e.stages.length > 1)
                                for (const t of e.stages) t && t !== e && i.push(O._entryToBuffer(t));
                        i = await Promise.all(i);
                        const r = Buffer.concat(i),
                            s = Buffer.concat([e, r]),
                            n = await x(s);
                        return Buffer.concat([s, Buffer.from(n, "hex")])
                    }
                }

                function k(e, t) {
                    const i = S(e),
                        r = S(t);
                    return i.mode !== r.mode || i.mtimeSeconds !== r.mtimeSeconds || i.ctimeSeconds !== r.ctimeSeconds || i.uid !== r.uid || i.gid !== r.gid || i.ino !== r.ino || i.size !== r.size
                }
                let L = null;
                const D = Symbol("IndexCache");
                class M {
                    static async acquire({
                        fs: e,
                        gitdir: t,
                        cache: i,
                        allowUnmerged: r = !0
                    }, s) {
                        i[D] || (i[D] = {
                            map: new Map,
                            stats: new Map
                        });
                        const o = `${t}/index`;
                        let a;
                        null === L && (L = new n({
                            maxPending: 1 / 0
                        }));
                        let c = [];
                        return await L.acquire(o, (async () => {
                            await async function(e, t, i) {
                                const r = i.stats.get(t);
                                if (void 0 === r) return !0;
                                const s = await e.lstat(t);
                                return null !== r && null !== s && k(r, s)
                            }(e, o, i[D]) && await async function(e, t, i) {
                                const r = await e.lstat(t),
                                    s = await e.read(t),
                                    n = await O.from(s);
                                i.map.set(t, n), i.stats.set(t, r)
                            }(e, o, i[D]);
                            const t = i[D].map.get(o);
                            if (c = t.unmergedPaths, c.length && !r) throw new f(c);
                            if (a = await s(t), t._dirty) {
                                const r = await t.toObject();
                                await e.write(o, r), i[D].stats.set(o, await e.lstat(o)), t._dirty = !1
                            }
                        })), a
                    }
                }

                function A(e) {
                    const t = Math.max(e.lastIndexOf("/"), e.lastIndexOf("\\"));
                    return t > -1 && (e = e.slice(t + 1)), e
                }

                function R(e) {
                    const t = Math.max(e.lastIndexOf("/"), e.lastIndexOf("\\"));
                    return -1 === t ? "." : 0 === t ? "/" : e.slice(0, t)
                }

                function P(e) {
                    const t = new Map,
                        i = function(e) {
                            if (!t.has(e)) {
                                const r = {
                                    type: "tree",
                                    fullpath: e,
                                    basename: A(e),
                                    metadata: {},
                                    children: []
                                };
                                t.set(e, r), r.parent = i(R(e)), r.parent && r.parent !== r && r.parent.children.push(r)
                            }
                            return t.get(e)
                        },
                        r = function(e, r) {
                            if (!t.has(e)) {
                                const s = {
                                    type: "blob",
                                    fullpath: e,
                                    basename: A(e),
                                    metadata: r,
                                    parent: i(R(e)),
                                    children: []
                                };
                                s.parent && s.parent.children.push(s), t.set(e, s)
                            }
                            return t.get(e)
                        };
                    i(".");
                    for (const t of e) r(t.path, t);
                    return t
                }
                class T {
                    constructor({
                        fs: e,
                        gitdir: t,
                        cache: i
                    }) {
                        this.treePromise = M.acquire({
                            fs: e,
                            gitdir: t,
                            cache: i
                        }, (async function(e) {
                            return P(e.entries)
                        }));
                        const r = this;
                        this.ConstructEntry = class {
                            constructor(e) {
                                this._fullpath = e, this._type = !1, this._mode = !1, this._stat = !1, this._oid = !1
                            }
                            async type() {
                                return r.type(this)
                            }
                            async mode() {
                                return r.mode(this)
                            }
                            async stat() {
                                return r.stat(this)
                            }
                            async content() {
                                return r.content(this)
                            }
                            async oid() {
                                return r.oid(this)
                            }
                        }
                    }
                    async readdir(e) {
                        const t = e._fullpath,
                            i = (await this.treePromise).get(t);
                        if (!i) return null;
                        if ("blob" === i.type) return null;
                        if ("tree" !== i.type) throw new Error(`ENOTDIR: not a directory, scandir '${t}'`);
                        const r = i.children.map((e => e.fullpath));
                        return r.sort(v), r
                    }
                    async type(e) {
                        return !1 === e._type && await e.stat(), e._type
                    }
                    async mode(e) {
                        return !1 === e._mode && await e.stat(), e._mode
                    }
                    async stat(e) {
                        if (!1 === e._stat) {
                            const t = (await this.treePromise).get(e._fullpath);
                            if (!t) throw new Error(`ENOENT: no such file or directory, lstat '${e._fullpath}'`);
                            const i = "tree" === t.type ? {} : S(t.metadata);
                            e._type = "tree" === t.type ? "tree" : function(e) {
                                switch (e) {
                                    case 16384:
                                        return "tree";
                                    case 33188:
                                    case 33261:
                                    case 40960:
                                        return "blob";
                                    case 57344:
                                        return "commit"
                                }
                                throw new p(`Unexpected GitTree entry mode: ${e.toString(8)}`)
                            }(i.mode), e._mode = i.mode, "tree" === t.type ? e._stat = void 0 : e._stat = i
                        }
                        return e._stat
                    }
                    async content(e) {}
                    async oid(e) {
                        if (!1 === e._oid) {
                            const t = (await this.treePromise).get(e._fullpath);
                            e._oid = t.metadata.oid
                        }
                        return e._oid
                    }
                }
                const B = Symbol("GitWalkSymbol");

                function I() {
                    const e = Object.create(null);
                    return Object.defineProperty(e, B, {
                        value: function({
                            fs: e,
                            gitdir: t,
                            cache: i
                        }) {
                            return new T({
                                fs: e,
                                gitdir: t,
                                cache: i
                            })
                        }
                    }), Object.freeze(e), e
                }
                class $ extends d {
                    constructor(e) {
                        super(`Could not find ${e}.`), this.code = this.name = $.code, this.data = {
                            what: e
                        }
                    }
                }
                $.code = "NotFoundError";
                class j extends d {
                    constructor(e, t, i, r) {
                        super(`Object ${e} ${r?`at ${r}`:""}was anticipated to be a ${i} but it is a ${t}.`), this.code = this.name = j.code, this.data = {
                            oid: e,
                            actual: t,
                            expected: i,
                            filepath: r
                        }
                    }
                }
                j.code = "ObjectTypeError";
                class F extends d {
                    constructor(e) {
                        super(`Expected a 40-char hex object id but saw "${e}".`), this.code = this.name = F.code, this.data = {
                            value: e
                        }
                    }
                }
                F.code = "InvalidOidError";
                class N extends d {
                    constructor(e) {
                        super(`Could not find a fetch refspec for remote "${e}". Make sure the config file has an entry like the following:\n[remote "${e}"]\n\tfetch = +refs/heads/*:refs/remotes/origin/*\n`), this.code = this.name = N.code, this.data = {
                            remote: e
                        }
                    }
                }
                N.code = "NoRefspecError";
                class W {
                    constructor(e) {
                        if (this.refs = new Map, this.parsedConfig = [], e) {
                            let t = null;
                            this.parsedConfig = e.trim().split("\n").map((e => {
                                if (/^\s*#/.test(e)) return {
                                    line: e,
                                    comment: !0
                                };
                                const i = e.indexOf(" ");
                                if (e.startsWith("^")) {
                                    const i = e.slice(1);
                                    return this.refs.set(t + "^{}", i), {
                                        line: e,
                                        ref: t,
                                        peeled: i
                                    }
                                } {
                                    const r = e.slice(0, i);
                                    return t = e.slice(i + 1), this.refs.set(t, r), {
                                        line: e,
                                        ref: t,
                                        oid: r
                                    }
                                }
                            }))
                        }
                        return this
                    }
                    static from(e) {
                        return new W(e)
                    }
                    delete(e) {
                        this.parsedConfig = this.parsedConfig.filter((t => t.ref !== e)), this.refs.delete(e)
                    }
                    toString() {
                        return this.parsedConfig.map((({
                            line: e
                        }) => e)).join("\n") + "\n"
                    }
                }
                class H {
                    constructor({
                        remotePath: e,
                        localPath: t,
                        force: i,
                        matchPrefix: r
                    }) {
                        Object.assign(this, {
                            remotePath: e,
                            localPath: t,
                            force: i,
                            matchPrefix: r
                        })
                    }
                    static from(e) {
                        const [t, i, r, s, n] = e.match(/^(\+?)(.*?)(\*?):(.*?)(\*?)$/).slice(1), o = "+" === t, a = "*" === r;
                        if (a !== ("*" === n)) throw new p("Invalid refspec");
                        return new H({
                            remotePath: i,
                            localPath: s,
                            force: o,
                            matchPrefix: a
                        })
                    }
                    translate(e) {
                        if (this.matchPrefix) {
                            if (e.startsWith(this.remotePath)) return this.localPath + e.replace(this.remotePath, "")
                        } else if (e === this.remotePath) return this.localPath;
                        return null
                    }
                    reverseTranslate(e) {
                        if (this.matchPrefix) {
                            if (e.startsWith(this.localPath)) return this.remotePath + e.replace(this.localPath, "")
                        } else if (e === this.localPath) return this.remotePath;
                        return null
                    }
                }
                class U {
                    constructor(e = []) {
                        this.rules = e
                    }
                    static from(e) {
                        const t = [];
                        for (const i of e) t.push(H.from(i));
                        return new U(t)
                    }
                    add(e) {
                        const t = H.from(e);
                        this.rules.push(t)
                    }
                    translate(e) {
                        const t = [];
                        for (const i of this.rules)
                            for (const r of e) {
                                const e = i.translate(r);
                                e && t.push([r, e])
                            }
                        return t
                    }
                    translateOne(e) {
                        let t = null;
                        for (const i of this.rules) {
                            const r = i.translate(e);
                            r && (t = r)
                        }
                        return t
                    }
                    localNamespaces() {
                        return this.rules.filter((e => e.matchPrefix)).map((e => e.localPath.replace(/\/$/, "")))
                    }
                }

                function z(e, t) {
                    const i = e.replace(/\^\{\}$/, ""),
                        r = t.replace(/\^\{\}$/, ""),
                        s = -(i < r) || +(i > r);
                    return 0 === s ? e.endsWith("^{}") ? 1 : -1 : s
                }
                const G = new Map;

                function V(e) {
                    let t = G.get(e);
                    return t || (t = function(e) {
                        if (e = e.split("/./").join("/").replace(/\/{2,}/g, "/"), "/." === e) return "/";
                        if ("./" === e) return ".";
                        e.startsWith("./") && (e = e.slice(2));
                        e.endsWith("/.") && (e = e.slice(0, -2));
                        e.length > 1 && e.endsWith("/") && (e = e.slice(0, -1));
                        return "" === e ? "." : e
                    }(e), G.set(e, t)), t
                }

                function q(...e) {
                    return V(e.map(V).join("/"))
                }
                const K = e => {
                        if ("true" === (e = e.trim().toLowerCase()) || "yes" === e || "on" === e) return !0;
                        if ("false" === e || "no" === e || "off" === e) return !1;
                        throw Error(`Expected 'true', 'false', 'yes', 'no', 'on', or 'off', but got ${e}`)
                    },
                    X = {
                        core: {
                            filemode: K,
                            bare: K,
                            logallrefupdates: K,
                            symlinks: K,
                            ignorecase: K,
                            bigFileThreshold: e => {
                                e = e.toLowerCase();
                                let t = parseInt(e);
                                return e.endsWith("k") && (t *= 1024), e.endsWith("m") && (t *= 1048576), e.endsWith("g") && (t *= 1073741824), t
                            }
                        }
                    },
                    J = /^\[([A-Za-z0-9-.]+)(?: "(.*)")?\]$/,
                    Y = /^[A-Za-z0-9-.]+$/,
                    Z = /^([A-Za-z][A-Za-z-]*)(?: *= *(.*))?$/,
                    Q = /^[A-Za-z][A-Za-z-]*$/,
                    ee = /^(.*?)( *[#;].*)$/,
                    te = e => {
                        const t = ee.exec(e);
                        if (null == t) return e;
                        const [i, r] = t.slice(1);
                        return ie(i) && ie(r) ? `${i}${r}` : i
                    },
                    ie = e => (e.match(/(?:^|[^\\])"/g) || []).length % 2 != 0,
                    re = e => e.split("").reduce(((e, t, i, r) => {
                        const s = '"' === t && "\\" !== r[i - 1],
                            n = "\\" === t && '"' === r[i + 1];
                        return s || n ? e : e + t
                    }), ""),
                    se = e => null != e ? e.toLowerCase() : null,
                    ne = (e, t, i) => [se(e), t, se(i)].filter((e => null != e)).join("."),
                    oe = e => {
                        const t = e.split("."),
                            i = t.shift(),
                            r = t.pop(),
                            s = t.length ? t.join(".") : void 0;
                        return {
                            section: i,
                            subsection: s,
                            name: r,
                            path: ne(i, s, r),
                            sectionPath: ne(i, s, null)
                        }
                    };
                class ae {
                    constructor(e) {
                        let t = null,
                            i = null;
                        this.parsedConfig = e.split("\n").map((e => {
                            let r = null,
                                s = null;
                            const n = e.trim(),
                                o = (e => {
                                    const t = J.exec(e);
                                    if (null != t) {
                                        const [e, i] = t.slice(1);
                                        return [e, i]
                                    }
                                    return null
                                })(n),
                                a = null != o;
                            if (a)[t, i] = o;
                            else {
                                const e = (e => {
                                    const t = Z.exec(e);
                                    if (null != t) {
                                        const [e, i = "true"] = t.slice(1), r = te(i);
                                        return [e, re(r)]
                                    }
                                    return null
                                })(n);
                                null != e && ([r, s] = e)
                            }
                            const c = ne(t, i, r);
                            return {
                                line: e,
                                isSection: a,
                                section: t,
                                subsection: i,
                                name: r,
                                value: s,
                                path: c
                            }
                        }))
                    }
                    static from(e) {
                        return new ae(e)
                    }
                    async get(e, t = !1) {
                        const i = oe(e).path,
                            r = this.parsedConfig.filter((e => e.path === i)).map((({
                                section: e,
                                name: t,
                                value: i
                            }) => {
                                const r = X[e] && X[e][t];
                                return r ? r(i) : i
                            }));
                        return t ? r : r.pop()
                    }
                    async getall(e) {
                        return this.get(e, !0)
                    }
                    async getSubsections(e) {
                        return this.parsedConfig.filter((t => t.section === e && t.isSection)).map((e => e.subsection))
                    }
                    async deleteSection(e, t) {
                        this.parsedConfig = this.parsedConfig.filter((i => !(i.section === e && i.subsection === t)))
                    }
                    async append(e, t) {
                        return this.set(e, t, !0)
                    }
                    async set(e, t, i = !1) {
                        const {
                            section: r,
                            subsection: s,
                            name: n,
                            path: o,
                            sectionPath: a
                        } = oe(e), c = (l = this.parsedConfig, h = e => e.path === o, l.reduce(((e, t, i) => h(t) ? i : e), -1));
                        var l, h;
                        if (null == t) - 1 !== c && this.parsedConfig.splice(c, 1);
                        else if (-1 !== c) {
                            const e = this.parsedConfig[c],
                                r = Object.assign({}, e, {
                                    name: n,
                                    value: t,
                                    modified: !0
                                });
                            i ? this.parsedConfig.splice(c + 1, 0, r) : this.parsedConfig[c] = r
                        } else {
                            const e = this.parsedConfig.findIndex((e => e.path === a)),
                                i = {
                                    section: r,
                                    subsection: s,
                                    name: n,
                                    value: t,
                                    modified: !0,
                                    path: o
                                };
                            if (Y.test(r) && Q.test(n))
                                if (e >= 0) this.parsedConfig.splice(e + 1, 0, i);
                                else {
                                    const e = {
                                        section: r,
                                        subsection: s,
                                        modified: !0,
                                        path: a
                                    };
                                    this.parsedConfig.push(e, i)
                                }
                        }
                    }
                    toString() {
                        return this.parsedConfig.map((({
                            line: e,
                            section: t,
                            subsection: i,
                            name: r,
                            value: s,
                            modified: n = !1
                        }) => n ? null != r && null != s ? "string" == typeof s && /[#;]/.test(s) ? `\t${r} = "${s}"` : `\t${r} = ${s}` : null != i ? `[${t} "${i}"]` : `[${t}]` : e)).join("\n")
                    }
                }
                class ce {
                    static async get({
                        fs: e,
                        gitdir: t
                    }) {
                        const i = await e.read(`${t}/config`, {
                            encoding: "utf8"
                        });
                        return ae.from(i)
                    }
                    static async save({
                        fs: e,
                        gitdir: t,
                        config: i
                    }) {
                        await e.write(`${t}/config`, i.toString(), {
                            encoding: "utf8"
                        })
                    }
                }
                const le = e => [`${e}`, `refs/${e}`, `refs/tags/${e}`, `refs/heads/${e}`, `refs/remotes/${e}`, `refs/remotes/${e}/HEAD`],
                    he = ["config", "description", "index", "shallow", "commondir"];
                let ue;
                async function de(e, t) {
                    return void 0 === ue && (ue = new n), ue.acquire(e, t)
                }
                class fe {
                    static async updateRemoteRefs({
                        fs: e,
                        gitdir: t,
                        remote: i,
                        refs: r,
                        symrefs: s,
                        tags: n,
                        refspecs: o,
                        prune: a = !1,
                        pruneTags: c = !1
                    }) {
                        for (const e of r.values())
                            if (!e.match(/[0-9a-f]{40}/)) throw new F(e);
                        const l = await ce.get({
                            fs: e,
                            gitdir: t
                        });
                        if (!o) {
                            if (0 === (o = await l.getall(`remote.${i}.fetch`)).length) throw new N(i);
                            o.unshift(`+HEAD:refs/remotes/${i}/HEAD`)
                        }
                        const h = U.from(o),
                            u = new Map;
                        if (c) {
                            const i = await fe.listRefs({
                                fs: e,
                                gitdir: t,
                                filepath: "refs/tags"
                            });
                            await fe.deleteRefs({
                                fs: e,
                                gitdir: t,
                                refs: i.map((e => `refs/tags/${e}`))
                            })
                        }
                        if (n)
                            for (const i of r.keys())
                                if (i.startsWith("refs/tags") && !i.endsWith("^{}") && !await fe.exists({
                                        fs: e,
                                        gitdir: t,
                                        ref: i
                                    })) {
                                    const e = r.get(i);
                                    u.set(i, e)
                                } const d = h.translate([...r.keys()]);
                        for (const [e, t] of d) {
                            const i = r.get(e);
                            u.set(t, i)
                        }
                        const f = h.translate([...s.keys()]);
                        for (const [e, t] of f) {
                            const i = s.get(e),
                                r = h.translateOne(i);
                            r && u.set(t, `ref: ${r}`)
                        }
                        const p = [];
                        if (a) {
                            for (const i of h.localNamespaces()) {
                                const r = (await fe.listRefs({
                                    fs: e,
                                    gitdir: t,
                                    filepath: i
                                })).map((e => `${i}/${e}`));
                                for (const e of r) u.has(e) || p.push(e)
                            }
                            p.length > 0 && await fe.deleteRefs({
                                fs: e,
                                gitdir: t,
                                refs: p
                            })
                        }
                        for (const [i, r] of u) await de(i, (async () => e.write(q(t, i), `${r.trim()}\n`, "utf8")));
                        return {
                            pruned: p
                        }
                    }
                    static async writeRef({
                        fs: e,
                        gitdir: t,
                        ref: i,
                        value: r
                    }) {
                        if (!r.match(/[0-9a-f]{40}/)) throw new F(r);
                        await de(i, (async () => e.write(q(t, i), `${r.trim()}\n`, "utf8")))
                    }
                    static async writeSymbolicRef({
                        fs: e,
                        gitdir: t,
                        ref: i,
                        value: r
                    }) {
                        await de(i, (async () => e.write(q(t, i), `ref: ${r.trim()}\n`, "utf8")))
                    }
                    static async deleteRef({
                        fs: e,
                        gitdir: t,
                        ref: i
                    }) {
                        return fe.deleteRefs({
                            fs: e,
                            gitdir: t,
                            refs: [i]
                        })
                    }
                    static async deleteRefs({
                        fs: e,
                        gitdir: t,
                        refs: i
                    }) {
                        await Promise.all(i.map((i => e.rm(q(t, i)))));
                        let r = await de("packed-refs", (async () => e.read(`${t}/packed-refs`, {
                            encoding: "utf8"
                        })));
                        const s = W.from(r),
                            n = s.refs.size;
                        for (const e of i) s.refs.has(e) && s.delete(e);
                        s.refs.size < n && (r = s.toString(), await de("packed-refs", (async () => e.write(`${t}/packed-refs`, r, {
                            encoding: "utf8"
                        }))))
                    }
                    static async resolve({
                        fs: e,
                        gitdir: t,
                        ref: i,
                        depth: r
                    }) {
                        if (void 0 !== r && -1 === --r) return i;
                        if (i.startsWith("ref: ")) return i = i.slice("ref: ".length), fe.resolve({
                            fs: e,
                            gitdir: t,
                            ref: i,
                            depth: r
                        });
                        if (40 === i.length && /[0-9a-f]{40}/.test(i)) return i;
                        const s = await fe.packedRefs({
                                fs: e,
                                gitdir: t
                            }),
                            n = le(i).filter((e => !he.includes(e)));
                        for (const i of n) {
                            const n = await de(i, (async () => await e.read(`${t}/${i}`, {
                                encoding: "utf8"
                            }) || s.get(i)));
                            if (n) return fe.resolve({
                                fs: e,
                                gitdir: t,
                                ref: n.trim(),
                                depth: r
                            })
                        }
                        throw new $(i)
                    }
                    static async exists({
                        fs: e,
                        gitdir: t,
                        ref: i
                    }) {
                        try {
                            return await fe.expand({
                                fs: e,
                                gitdir: t,
                                ref: i
                            }), !0
                        } catch (e) {
                            return !1
                        }
                    }
                    static async expand({
                        fs: e,
                        gitdir: t,
                        ref: i
                    }) {
                        if (40 === i.length && /[0-9a-f]{40}/.test(i)) return i;
                        const r = await fe.packedRefs({
                                fs: e,
                                gitdir: t
                            }),
                            s = le(i);
                        for (const i of s) {
                            if (await de(i, (async () => e.exists(`${t}/${i}`)))) return i;
                            if (r.has(i)) return i
                        }
                        throw new $(i)
                    }
                    static async expandAgainstMap({
                        ref: e,
                        map: t
                    }) {
                        const i = le(e);
                        for (const e of i)
                            if (await t.has(e)) return e;
                        throw new $(e)
                    }
                    static resolveAgainstMap({
                        ref: e,
                        fullref: t = e,
                        depth: i,
                        map: r
                    }) {
                        if (void 0 !== i && -1 === --i) return {
                            fullref: t,
                            oid: e
                        };
                        if (e.startsWith("ref: ")) return e = e.slice("ref: ".length), fe.resolveAgainstMap({
                            ref: e,
                            fullref: t,
                            depth: i,
                            map: r
                        });
                        if (40 === e.length && /[0-9a-f]{40}/.test(e)) return {
                            fullref: t,
                            oid: e
                        };
                        const s = le(e);
                        for (const e of s) {
                            const t = r.get(e);
                            if (t) return fe.resolveAgainstMap({
                                ref: t.trim(),
                                fullref: e,
                                depth: i,
                                map: r
                            })
                        }
                        throw new $(e)
                    }
                    static async packedRefs({
                        fs: e,
                        gitdir: t
                    }) {
                        const i = await de("packed-refs", (async () => e.read(`${t}/packed-refs`, {
                            encoding: "utf8"
                        })));
                        return W.from(i).refs
                    }
                    static async listRefs({
                        fs: e,
                        gitdir: t,
                        filepath: i
                    }) {
                        const r = fe.packedRefs({
                            fs: e,
                            gitdir: t
                        });
                        let s = null;
                        try {
                            s = await e.readdirDeep(`${t}/${i}`), s = s.map((e => e.replace(`${t}/${i}/`, "")))
                        } catch (e) {
                            s = []
                        }
                        for (let e of (await r).keys()) e.startsWith(i) && (e = e.replace(i + "/", ""), s.includes(e) || s.push(e));
                        return s.sort(z), s
                    }
                    static async listBranches({
                        fs: e,
                        gitdir: t,
                        remote: i
                    }) {
                        return i ? fe.listRefs({
                            fs: e,
                            gitdir: t,
                            filepath: `refs/remotes/${i}`
                        }) : fe.listRefs({
                            fs: e,
                            gitdir: t,
                            filepath: "refs/heads"
                        })
                    }
                    static async listTags({
                        fs: e,
                        gitdir: t
                    }) {
                        return (await fe.listRefs({
                            fs: e,
                            gitdir: t,
                            filepath: "refs/tags"
                        })).filter((e => !e.endsWith("^{}")))
                    }
                }

                function pe(e, t) {
                    return v(_e(e), _e(t))
                }

                function _e(e) {
                    return "040000" === e.mode ? e.path + "/" : e.path
                }

                function ge(e) {
                    switch (e) {
                        case "040000":
                            return "tree";
                        case "100644":
                        case "100755":
                        case "120000":
                            return "blob";
                        case "160000":
                            return "commit"
                    }
                    throw new p(`Unexpected GitTree entry mode: ${e}`)
                }

                function ve(e) {
                    return !e.oid && e.sha && (e.oid = e.sha), e.mode = function(e) {
                        if ("number" == typeof e && (e = e.toString(8)), e.match(/^0?4.*/)) return "040000";
                        if (e.match(/^1006.*/)) return "100644";
                        if (e.match(/^1007.*/)) return "100755";
                        if (e.match(/^120.*/)) return "120000";
                        if (e.match(/^160.*/)) return "160000";
                        throw new p(`Could not understand file mode: ${e}`)
                    }(e.mode), e.type || (e.type = ge(e.mode)), e
                }
                class me {
                    constructor(e) {
                        if (Buffer.isBuffer(e)) this._entries = function(e) {
                            const t = [];
                            let i = 0;
                            for (; i < e.length;) {
                                const r = e.indexOf(32, i);
                                if (-1 === r) throw new p(`GitTree: Error parsing buffer at byte location ${i}: Could not find the next space character.`);
                                const s = e.indexOf(0, i);
                                if (-1 === s) throw new p(`GitTree: Error parsing buffer at byte location ${i}: Could not find the next null character.`);
                                let n = e.slice(i, r).toString("utf8");
                                "40000" === n && (n = "040000");
                                const o = ge(n),
                                    a = e.slice(r + 1, s).toString("utf8");
                                if (a.includes("\\") || a.includes("/")) throw new _(a);
                                const c = e.slice(s + 1, s + 21).toString("hex");
                                i = s + 21, t.push({
                                    mode: n,
                                    path: a,
                                    oid: c,
                                    type: o
                                })
                            }
                            return t
                        }(e);
                        else {
                            if (!Array.isArray(e)) throw new p("invalid type passed to GitTree constructor");
                            this._entries = e.map(ve)
                        }
                        this._entries.sort(m)
                    }
                    static from(e) {
                        return new me(e)
                    }
                    render() {
                        return this._entries.map((e => `${e.mode} ${e.type} ${e.oid}    ${e.path}`)).join("\n")
                    }
                    toObject() {
                        const e = [...this._entries];
                        return e.sort(pe), Buffer.concat(e.map((e => {
                            const t = Buffer.from(e.mode.replace(/^0/, "")),
                                i = Buffer.from(" "),
                                r = Buffer.from(e.path, "utf8"),
                                s = Buffer.from([0]),
                                n = Buffer.from(e.oid, "hex");
                            return Buffer.concat([t, i, r, s, n])
                        })))
                    }
                    entries() {
                        return this._entries
                    }*[Symbol.iterator]() {
                        for (const e of this._entries) yield e
                    }
                }
                class be {
                    static wrap({
                        type: e,
                        object: t
                    }) {
                        return Buffer.concat([Buffer.from(`${e} ${t.byteLength.toString()}\0`), Buffer.from(t)])
                    }
                    static unwrap(e) {
                        const t = e.indexOf(32),
                            i = e.indexOf(0),
                            r = e.slice(0, t).toString("utf8"),
                            s = e.slice(t + 1, i).toString("utf8"),
                            n = e.length - (i + 1);
                        if (parseInt(s) !== n) throw new p(`Length mismatch: expected ${s} bytes but got ${n} instead.`);
                        return {
                            type: r,
                            object: Buffer.from(e.slice(i + 1))
                        }
                    }
                }

                function we(e) {
                    let t = 0,
                        i = 0,
                        r = null;
                    do {
                        r = e.readUInt8(), t |= (127 & r) << i, i += 7
                    } while (128 & r);
                    return t
                }

                function ye(e, t, i) {
                    let r = 0,
                        s = 0;
                    for (; i--;) 1 & t && (r |= e.readUInt8() << s), t >>= 1, s += 8;
                    return r
                }

                function Se(e, t) {
                    const i = e.readUInt8();
                    if (128 & i) {
                        const r = ye(e, 15 & i, 4);
                        let s = ye(e, (112 & i) >> 4, 3);
                        return 0 === s && (s = 65536), t.slice(r, r + s)
                    }
                    return e.slice(i)
                }

                function Ce(e) {
                    return e[Symbol.asyncIterator] ? e[Symbol.asyncIterator]() : e[Symbol.iterator] ? e[Symbol.iterator]() : e.next ? e : function(e) {
                        let t = [e];
                        return {
                            next: () => Promise.resolve({
                                done: 0 === t.length,
                                value: t.pop()
                            }),
                            return: () => (t = [], {}),
                            [Symbol.asyncIterator]() {
                                return this
                            }
                        }
                    }(e)
                }
                class xe {
                    constructor(e) {
                        this.stream = Ce(e), this.buffer = null, this.cursor = 0, this.undoCursor = 0, this.started = !1, this._ended = !1, this._discardedBytes = 0
                    }
                    eof() {
                        return this._ended && this.cursor === this.buffer.length
                    }
                    tell() {
                        return this._discardedBytes + this.cursor
                    }
                    async byte() {
                        if (!this.eof() && (this.started || await this._init(), this.cursor !== this.buffer.length || (await this._loadnext(), !this._ended))) return this._moveCursor(1), this.buffer[this.undoCursor]
                    }
                    async chunk() {
                        if (!this.eof() && (this.started || await this._init(), this.cursor !== this.buffer.length || (await this._loadnext(), !this._ended))) return this._moveCursor(this.buffer.length), this.buffer.slice(this.undoCursor, this.cursor)
                    }
                    async read(e) {
                        if (!this.eof()) return this.started || await this._init(), this.cursor + e > this.buffer.length && (this._trim(), await this._accumulate(e)), this._moveCursor(e), this.buffer.slice(this.undoCursor, this.cursor)
                    }
                    async skip(e) {
                        this.eof() || (this.started || await this._init(), this.cursor + e > this.buffer.length && (this._trim(), await this._accumulate(e)), this._moveCursor(e))
                    }
                    async undo() {
                        this.cursor = this.undoCursor
                    }
                    async _next() {
                        this.started = !0;
                        let {
                            done: e,
                            value: t
                        } = await this.stream.next();
                        return e && (this._ended = !0, !t) ? Buffer.alloc(0) : (t && (t = Buffer.from(t)), t)
                    }
                    _trim() {
                        this.buffer = this.buffer.slice(this.undoCursor), this.cursor -= this.undoCursor, this._discardedBytes += this.undoCursor, this.undoCursor = 0
                    }
                    _moveCursor(e) {
                        this.undoCursor = this.cursor, this.cursor += e, this.cursor > this.buffer.length && (this.cursor = this.buffer.length)
                    }
                    async _accumulate(e) {
                        if (this._ended) return;
                        const t = [this.buffer];
                        for (; this.cursor + e > Ee(t);) {
                            const e = await this._next();
                            if (this._ended) break;
                            t.push(e)
                        }
                        this.buffer = Buffer.concat(t)
                    }
                    async _loadnext() {
                        this._discardedBytes += this.buffer.length, this.undoCursor = 0, this.cursor = 0, this.buffer = await this._next()
                    }
                    async _init() {
                        this.buffer = await this._next()
                    }
                }

                function Ee(e) {
                    return e.reduce(((e, t) => e + t.length), 0)
                }
                async function Oe(e) {
                    let t = await e.byte();
                    const i = t >> 4 & 7;
                    let r, s, n = 15 & t;
                    if (128 & t) {
                        let i = 4;
                        do {
                            t = await e.byte(), n |= (127 & t) << i, i += 7
                        } while (128 & t)
                    }
                    if (6 === i) {
                        let i = 0;
                        r = 0;
                        const n = [];
                        do {
                            t = await e.byte(), r |= (127 & t) << i, i += 7, n.push(t)
                        } while (128 & t);
                        s = Buffer.from(n)
                    }
                    if (7 === i) {
                        s = await e.read(20)
                    }
                    return {
                        type: i,
                        length: n,
                        ofs: r,
                        reference: s
                    }
                }
                let ke = !1;
                async function Le(e) {
                    return null === ke && (ke = function() {
                        try {
                            if (new DecompressionStream("deflate")) return !0
                        } catch (e) {}
                        return !1
                    }()), ke ? async function(e) {
                        const t = new DecompressionStream("deflate"),
                            i = new Blob([e]).stream().pipeThrough(t);
                        return new Uint8Array(await new Response(i).arrayBuffer())
                    }(e): c.inflate(e)
                }
                class De {
                    constructor(e) {
                        Object.assign(this, e), this.offsetCache = {}
                    }
                    static async fromIdx({
                        idx: e,
                        getExternalRefDelta: t
                    }) {
                        const i = new g(e);
                        if ("ff744f63" !== i.slice(4).toString("hex")) return;
                        const r = i.readUInt32BE();
                        if (2 !== r) throw new p(`Unable to read version ${r} packfile IDX. (Only version 2 supported)`);
                        if (e.byteLength > 2147483648) throw new p("To keep implementation simple, I haven't implemented the layer 5 feature needed to support packfiles > 2GB in size.");
                        i.seek(i.tell() + 1020);
                        const s = i.readUInt32BE(),
                            n = [];
                        for (let e = 0; e < s; e++) {
                            const t = i.slice(20).toString("hex");
                            n[e] = t
                        }
                        i.seek(i.tell() + 4 * s);
                        const o = new Map;
                        for (let e = 0; e < s; e++) o.set(n[e], i.readUInt32BE());
                        const a = i.slice(20).toString("hex");
                        return new De({
                            hashes: n,
                            crcs: {},
                            offsets: o,
                            packfileSha: a,
                            getExternalRefDelta: t
                        })
                    }
                    static async fromPack({
                        pack: e,
                        getExternalRefDelta: t,
                        onProgress: i
                    }) {
                        const r = {
                                1: "commit",
                                2: "tree",
                                3: "blob",
                                4: "tag",
                                6: "ofs-delta",
                                7: "ref-delta"
                            },
                            s = {},
                            n = e.slice(-20).toString("hex"),
                            o = [],
                            l = {},
                            h = new Map;
                        let u = null,
                            d = null;
                        await async function(e, t) {
                            const i = new xe(e);
                            let r = await i.read(4);
                            if (r = r.toString("utf8"), "PACK" !== r) throw new p(`Invalid PACK header '${r}'`);
                            let s = await i.read(4);
                            if (s = s.readUInt32BE(0), 2 !== s) throw new p(`Invalid packfile version: ${s}`);
                            let n = await i.read(4);
                            if (n = n.readUInt32BE(0), !(n < 1))
                                for (; !i.eof() && n--;) {
                                    const e = i.tell(),
                                        {
                                            type: r,
                                            length: s,
                                            ofs: o,
                                            reference: a
                                        } = await Oe(i),
                                        l = new c.Inflate;
                                    for (; !l.result;) {
                                        const c = await i.chunk();
                                        if (!c) break;
                                        if (l.push(c, !1), l.err) throw new p(`Pako error: ${l.msg}`);
                                        if (l.result) {
                                            if (l.result.length !== s) throw new p("Inflated object size is different from that stated in packfile.");
                                            await i.undo(), await i.read(c.length - l.strm.avail_in);
                                            const h = i.tell();
                                            await t({
                                                data: l.result,
                                                type: r,
                                                num: n,
                                                offset: e,
                                                end: h,
                                                reference: a,
                                                ofs: o
                                            })
                                        }
                                    }
                                }
                        }([e], (async ({
                            data: e,
                            type: t,
                            reference: n,
                            offset: o,
                            num: a
                        }) => {
                            null === u && (u = a);
                            const c = Math.floor(100 * (u - a) / u);
                            c !== d && i && await i({
                                phase: "Receiving objects",
                                loaded: u - a,
                                total: u
                            }), d = c, (["commit", "tree", "blob", "tag"].includes(t = r[t]) || "ofs-delta" === t || "ref-delta" === t) && (s[o] = {
                                type: t,
                                offset: o
                            })
                        }));
                        const f = Object.keys(s).map(Number);
                        for (const [t, i] of f.entries()) {
                            const r = t + 1 === f.length ? e.byteLength - 20 : f[t + 1],
                                n = s[i],
                                o = a.buf(e.slice(i, r)) >>> 0;
                            n.end = r, n.crc = o
                        }
                        const _ = new De({
                            pack: Promise.resolve(e),
                            packfileSha: n,
                            crcs: l,
                            hashes: o,
                            offsets: h,
                            getExternalRefDelta: t
                        });
                        d = null;
                        let g = 0;
                        const v = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
                        for (let e in s) {
                            e = Number(e);
                            const t = Math.floor(100 * g / u);
                            t !== d && i && await i({
                                phase: "Resolving deltas",
                                loaded: g,
                                total: u
                            }), g++, d = t;
                            const r = s[e];
                            if (!r.oid) try {
                                _.readDepth = 0, _.externalReadDepth = 0;
                                const {
                                    type: t,
                                    object: i
                                } = await _.readSlice({
                                    start: e
                                });
                                v[_.readDepth] += 1;
                                const s = await x(be.wrap({
                                    type: t,
                                    object: i
                                }));
                                r.oid = s, o.push(s), h.set(s, e), l[s] = r.crc
                            } catch (e) {
                                continue
                            }
                        }
                        return o.sort(), _
                    }
                    async toBuffer() {
                        const e = [],
                            t = (t, i) => {
                                e.push(Buffer.from(t, i))
                            };
                        t("ff744f63", "hex"), t("00000002", "hex");
                        const i = new g(Buffer.alloc(1024));
                        for (let e = 0; e < 256; e++) {
                            let t = 0;
                            for (const i of this.hashes) parseInt(i.slice(0, 2), 16) <= e && t++;
                            i.writeUInt32BE(t)
                        }
                        e.push(i.buffer);
                        for (const e of this.hashes) t(e, "hex");
                        const r = new g(Buffer.alloc(4 * this.hashes.length));
                        for (const e of this.hashes) r.writeUInt32BE(this.crcs[e]);
                        e.push(r.buffer);
                        const s = new g(Buffer.alloc(4 * this.hashes.length));
                        for (const e of this.hashes) s.writeUInt32BE(this.offsets.get(e));
                        e.push(s.buffer), t(this.packfileSha, "hex");
                        const n = Buffer.concat(e),
                            o = await x(n),
                            a = Buffer.alloc(20);
                        return a.write(o, "hex"), Buffer.concat([n, a])
                    }
                    async load({
                        pack: e
                    }) {
                        this.pack = e
                    }
                    async unload() {
                        this.pack = null
                    }
                    async read({
                        oid: e
                    }) {
                        if (!this.offsets.get(e)) {
                            if (this.getExternalRefDelta) return this.externalReadDepth++, this.getExternalRefDelta(e);
                            throw new p(`Could not read object ${e} from packfile`)
                        }
                        const t = this.offsets.get(e);
                        return this.readSlice({
                            start: t
                        })
                    }
                    async readSlice({
                        start: e
                    }) {
                        if (this.offsetCache[e]) return Object.assign({}, this.offsetCache[e]);
                        this.readDepth++;
                        if (!this.pack) throw new p("Tried to read from a GitPackIndex with no packfile loaded into memory");
                        const t = (await this.pack).slice(e),
                            i = new g(t),
                            r = i.readUInt8(),
                            s = 112 & r;
                        let n = {
                            16: "commit",
                            32: "tree",
                            48: "blob",
                            64: "tag",
                            96: "ofs_delta",
                            112: "ref_delta"
                        } [s];
                        if (void 0 === n) throw new p("Unrecognized type: 0b" + s.toString(2));
                        const o = 15 & r;
                        let a = o;
                        128 & r && (a = function(e, t) {
                            let i = t,
                                r = 4,
                                s = null;
                            do {
                                s = e.readUInt8(), i |= (127 & s) << r, r += 7
                            } while (128 & s);
                            return i
                        }(i, o));
                        let c = null,
                            l = null;
                        if ("ofs_delta" === n) {
                            const t = function(e) {
                                    const t = [];
                                    let i = 0,
                                        r = 0;
                                    do {
                                        i = e.readUInt8();
                                        const s = 127 & i;
                                        t.push(s), r = 128 & i
                                    } while (r);
                                    return t.reduce(((e, t) => e + 1 << 7 | t), -1)
                                }(i),
                                r = e - t;
                            ({
                                object: c,
                                type: n
                            } = await this.readSlice({
                                start: r
                            }))
                        }
                        if ("ref_delta" === n) {
                            const e = i.slice(20).toString("hex");
                            ({
                                object: c,
                                type: n
                            } = await this.read({
                                oid: e
                            }))
                        }
                        const h = t.slice(i.tell());
                        if (l = Buffer.from(await Le(h)), l.byteLength !== a) throw new p(`Packfile told us object would have length ${a} but it had length ${l.byteLength}`);
                        return c && (l = Buffer.from(function(e, t) {
                            const i = new g(e),
                                r = we(i);
                            if (r !== t.byteLength) throw new p(`applyDelta expected source buffer to be ${r} bytes but the provided buffer was ${t.length} bytes`);
                            const s = we(i);
                            let n;
                            const o = Se(i, t);
                            if (o.byteLength === s) n = o;
                            else {
                                n = Buffer.alloc(s);
                                const e = new g(n);
                                for (e.copy(o); !i.eof();) e.copy(Se(i, t));
                                const r = e.tell();
                                if (s !== r) throw new p(`applyDelta expected target buffer to be ${s} bytes but the resulting buffer was ${r} bytes`)
                            }
                            return n
                        }(l, c))), this.readDepth > 3 && (this.offsetCache[e] = {
                            type: n,
                            object: l
                        }), {
                            type: n,
                            format: "content",
                            object: l
                        }
                    }
                }
                const Me = Symbol("PackfileCache");

                function Ae({
                    fs: e,
                    cache: t,
                    filename: i,
                    getExternalRefDelta: r,
                    emitter: s,
                    emitterPrefix: n
                }) {
                    t[Me] || (t[Me] = new Map);
                    let o = t[Me].get(i);
                    return o || (o = async function({
                        fs: e,
                        filename: t,
                        getExternalRefDelta: i,
                        emitter: r,
                        emitterPrefix: s
                    }) {
                        const n = await e.read(t);
                        return De.fromIdx({
                            idx: n,
                            getExternalRefDelta: i
                        })
                    }({
                        fs: e,
                        filename: i,
                        getExternalRefDelta: r,
                        emitter: s,
                        emitterPrefix: n
                    }), t[Me].set(i, o)), o
                }
                async function Re({
                    fs: e,
                    cache: t,
                    gitdir: i,
                    oid: r,
                    format: s = "content"
                }) {
                    const n = r => Re({
                        fs: e,
                        cache: t,
                        gitdir: i,
                        oid: r
                    });
                    let o;
                    if ("4b825dc642cb6eb9a060e54bf8d69288fbee4904" === r && (o = {
                            format: "wrapped",
                            object: Buffer.from("tree 0\0")
                        }), o || (o = await async function({
                            fs: e,
                            gitdir: t,
                            oid: i
                        }) {
                            const r = `objects/${i.slice(0,2)}/${i.slice(2)}`,
                                s = await e.read(`${t}/${r}`);
                            return s ? {
                                object: s,
                                format: "deflated",
                                source: r
                            } : null
                        }({
                            fs: e,
                            gitdir: i,
                            oid: r
                        })), o || (o = await async function({
                            fs: e,
                            cache: t,
                            gitdir: i,
                            oid: r,
                            format: s = "content",
                            getExternalRefDelta: n
                        }) {
                            let o = await e.readdir(q(i, "objects/pack"));
                            o = o.filter((e => e.endsWith(".idx")));
                            for (const s of o) {
                                const o = `${i}/objects/pack/${s}`,
                                    a = await Ae({
                                        fs: e,
                                        cache: t,
                                        filename: o,
                                        getExternalRefDelta: n
                                    });
                                if (a.error) throw new p(a.error);
                                if (a.offsets.has(r)) {
                                    if (!a.pack) {
                                        const t = o.replace(/idx$/, "pack");
                                        a.pack = e.read(t)
                                    }
                                    const t = await a.read({
                                        oid: r,
                                        getExternalRefDelta: n
                                    });
                                    return t.format = "content", t.source = `objects/pack/${s.replace(/idx$/,"pack")}`, t
                                }
                            }
                            return null
                        }({
                            fs: e,
                            cache: t,
                            gitdir: i,
                            oid: r,
                            getExternalRefDelta: n
                        })), !o) throw new $(r);
                    if ("deflated" === s) return o;
                    if ("deflated" === o.format && (o.object = Buffer.from(await Le(o.object)), o.format = "wrapped"), "wrapped" === o.format) {
                        if ("wrapped" === s && "wrapped" === o.format) return o;
                        const e = await x(o.object);
                        if (e !== r) throw new p(`SHA check failed! Expected ${r}, computed ${e}`);
                        const {
                            object: t,
                            type: i
                        } = be.unwrap(o.object);
                        o.type = i, o.object = t, o.format = "content"
                    }
                    if ("content" === o.format) return "content" === s ? o : void 0;
                    throw new p(`invalid format "${o.format}"`)
                }
                class Pe extends d {
                    constructor(e, t, i = !0) {
                        super(`Failed to create ${e} at ${t} because it already exists.${i?` (Hint: use 'force: true' parameter to overwrite existing ${e}.)`:""}`), this.code = this.name = Pe.code, this.data = {
                            noun: e,
                            where: t,
                            canForce: i
                        }
                    }
                }
                Pe.code = "AlreadyExistsError";
                class Te extends d {
                    constructor(e, t, i) {
                        super(`Found multiple ${e} matching "${t}" (${i.join(", ")}). Use a longer abbreviation length to disambiguate them.`), this.code = this.name = Te.code, this.data = {
                            nouns: e,
                            short: t,
                            matches: i
                        }
                    }
                }
                Te.code = "AmbiguousError";
                class Be extends d {
                    constructor(e) {
                        super(`Your local changes to the following files would be overwritten by checkout: ${e.join(", ")}`), this.code = this.name = Be.code, this.data = {
                            filepaths: e
                        }
                    }
                }
                Be.code = "CheckoutConflictError";
                class Ie extends d {
                    constructor(e, t) {
                        super(`Failed to checkout "${e}" because commit ${t} is not available locally. Do a git fetch to make the branch available locally.`), this.code = this.name = Ie.code, this.data = {
                            ref: e,
                            oid: t
                        }
                    }
                }
                Ie.code = "CommitNotFetchedError";
                class $e extends d {
                    constructor() {
                        super("Empty response from git server."), this.code = this.name = $e.code, this.data = {}
                    }
                }
                $e.code = "EmptyServerResponseError";
                class je extends d {
                    constructor() {
                        super("A simple fast-forward merge was not possible."), this.code = this.name = je.code, this.data = {}
                    }
                }
                je.code = "FastForwardError";
                class Fe extends d {
                    constructor(e, t) {
                        super(`One or more branches were not updated: ${e}`), this.code = this.name = Fe.code, this.data = {
                            prettyDetails: e,
                            result: t
                        }
                    }
                }
                Fe.code = "GitPushError";
                class Ne extends d {
                    constructor(e, t, i) {
                        super(`HTTP Error: ${e} ${t}`), this.code = this.name = Ne.code, this.data = {
                            statusCode: e,
                            statusMessage: t,
                            response: i
                        }
                    }
                }
                Ne.code = "HttpError";
                class We extends d {
                    constructor(e) {
                        let t = "invalid filepath";
                        "leading-slash" === e || "trailing-slash" === e ? t = '"filepath" parameter should not include leading or trailing directory separators because these can cause problems on some platforms.' : "directory" === e && (t = '"filepath" should not be a directory.'), super(t), this.code = this.name = We.code, this.data = {
                            reason: e
                        }
                    }
                }
                We.code = "InvalidFilepathError";
                class He extends d {
                    constructor(e, t) {
                        super(`"${e}" would be an invalid git reference. (Hint: a valid alternative would be "${t}".)`), this.code = this.name = He.code, this.data = {
                            ref: e,
                            suggestion: t
                        }
                    }
                }
                He.code = "InvalidRefNameError";
                class Ue extends d {
                    constructor(e) {
                        super(`Maximum search depth of ${e} exceeded.`), this.code = this.name = Ue.code, this.data = {
                            depth: e
                        }
                    }
                }
                Ue.code = "MaxDepthError";
                class ze extends d {
                    constructor() {
                        super("Merges with conflicts are not supported yet."), this.code = this.name = ze.code, this.data = {}
                    }
                }
                ze.code = "MergeNotSupportedError";
                class Ge extends d {
                    constructor(e, t, i, r) {
                        super(`Automatic merge failed with one or more merge conflicts in the following files: ${e.toString()}. Fix conflicts then commit the result.`), this.code = this.name = Ge.code, this.data = {
                            filepaths: e,
                            bothModified: t,
                            deleteByUs: i,
                            deleteByTheirs: r
                        }
                    }
                }
                Ge.code = "MergeConflictError";
                class Ve extends d {
                    constructor(e) {
                        super(`No name was provided for ${e} in the argument or in the .git/config file.`), this.code = this.name = Ve.code, this.data = {
                            role: e
                        }
                    }
                }
                Ve.code = "MissingNameError";
                class qe extends d {
                    constructor(e) {
                        super(`The function requires a "${e}" parameter but none was provided.`), this.code = this.name = qe.code, this.data = {
                            parameter: e
                        }
                    }
                }
                qe.code = "MissingParameterError";
                class Ke extends d {
                    constructor(e) {
                        super('There are multiple errors that were thrown by the method. Please refer to the "errors" property to see more'), this.code = this.name = Ke.code, this.data = {
                            errors: e
                        }, this.errors = e
                    }
                }
                Ke.code = "MultipleGitError";
                class Xe extends d {
                    constructor(e, t) {
                        super(`Expected "${e}" but received "${t}".`), this.code = this.name = Xe.code, this.data = {
                            expected: e,
                            actual: t
                        }
                    }
                }
                Xe.code = "ParseError";
                class Je extends d {
                    constructor(e) {
                        let t = "";
                        "not-fast-forward" === e ? t = " because it was not a simple fast-forward" : "tag-exists" === e && (t = " because tag already exists"), super(`Push rejected${t}. Use "force: true" to override.`), this.code = this.name = Je.code, this.data = {
                            reason: e
                        }
                    }
                }
                Je.code = "PushRejectedError";
                class Ye extends d {
                    constructor(e, t) {
                        super(`Remote does not support the "${e}" so the "${t}" parameter cannot be used.`), this.code = this.name = Ye.code, this.data = {
                            capability: e,
                            parameter: t
                        }
                    }
                }
                Ye.code = "RemoteCapabilityError";
                class Ze extends d {
                    constructor(e, t) {
                        super(`Remote did not reply using the "smart" HTTP protocol. Expected "001e# service=git-upload-pack" but received: ${e}`), this.code = this.name = Ze.code, this.data = {
                            preview: e,
                            response: t
                        }
                    }
                }
                Ze.code = "SmartHttpError";
                class Qe extends d {
                    constructor(e, t, i) {
                        super(`Git remote "${e}" uses an unrecognized transport protocol: "${t}"`), this.code = this.name = Qe.code, this.data = {
                            url: e,
                            transport: t,
                            suggestion: i
                        }
                    }
                }
                Qe.code = "UnknownTransportError";
                class et extends d {
                    constructor(e) {
                        super(`Cannot parse remote URL: "${e}"`), this.code = this.name = et.code, this.data = {
                            url: e
                        }
                    }
                }
                et.code = "UrlParseError";
                class tt extends d {
                    constructor() {
                        super("The operation was canceled."), this.code = this.name = tt.code, this.data = {}
                    }
                }
                tt.code = "UserCanceledError";
                class it extends d {
                    constructor(e) {
                        super(`Could not merge index: Entry for '${e}' is not up to date. Either reset the index entry to HEAD, or stage your unstaged changes.`), this.code = this.name = it.code, this.data = {
                            filepath: e
                        }
                    }
                }
                it.code = "IndexResetError";

                function rt({
                    name: e,
                    email: t,
                    timestamp: i,
                    timezoneOffset: r
                }) {
                    return `${e} <${t}> ${i} ${r=function(e){const t=function(e){return Math.sign(e)||(Object.is(e,-0)?-1:1)}((i=e,0===i?i:-i));var i;e=Math.abs(e);const r=Math.floor(e/60);e-=60*r;let s=String(r),n=String(e);s.length<2&&(s="0"+s);n.length<2&&(n="0"+n);return(-1===t?"-":"+")+s+n}(r)}`
                }

                function st(e) {
                    return e = (e = (e = e.replace(/\r/g, "")).replace(/^\n+/, "")).replace(/\n+$/, "") + "\n"
                }

                function nt(e) {
                    const [, t, i, r, s] = e.match(/^(.*) <(.*)> (.*) (.*)$/);
                    return {
                        name: t,
                        email: i,
                        timestamp: Number(r),
                        timezoneOffset: ot(s)
                    }
                }

                function ot(e) {
                    let [, t, i, r] = e.match(/(\+|-)(\d\d)(\d\d)/);
                    return r = ("+" === t ? 1 : -1) * (60 * Number(i) + Number(r)), 0 === (s = r) ? s : -s;
                    var s
                }
                class at {
                    constructor(e) {
                        if ("string" == typeof e) this._tag = e;
                        else if (Buffer.isBuffer(e)) this._tag = e.toString("utf8");
                        else {
                            if ("object" != typeof e) throw new p("invalid type passed to GitAnnotatedTag constructor");
                            this._tag = at.render(e)
                        }
                    }
                    static from(e) {
                        return new at(e)
                    }
                    static render(e) {
                        return `object ${e.object}\ntype ${e.type}\ntag ${e.tag}\ntagger ${rt(e.tagger)}\n\n${e.message}\n${e.gpgsig?e.gpgsig:""}`
                    }
                    justHeaders() {
                        return this._tag.slice(0, this._tag.indexOf("\n\n"))
                    }
                    message() {
                        const e = this.withoutSignature();
                        return e.slice(e.indexOf("\n\n") + 2)
                    }
                    parse() {
                        return Object.assign(this.headers(), {
                            message: this.message(),
                            gpgsig: this.gpgsig()
                        })
                    }
                    render() {
                        return this._tag
                    }
                    headers() {
                        const e = this.justHeaders().split("\n"),
                            t = [];
                        for (const i of e) " " === i[0] ? t[t.length - 1] += "\n" + i.slice(1) : t.push(i);
                        const i = {};
                        for (const e of t) {
                            const t = e.slice(0, e.indexOf(" ")),
                                r = e.slice(e.indexOf(" ") + 1);
                            Array.isArray(i[t]) ? i[t].push(r) : i[t] = r
                        }
                        return i.tagger && (i.tagger = nt(i.tagger)), i.committer && (i.committer = nt(i.committer)), i
                    }
                    withoutSignature() {
                        const e = st(this._tag);
                        return -1 === e.indexOf("\n-----BEGIN PGP SIGNATURE-----") ? e : e.slice(0, e.lastIndexOf("\n-----BEGIN PGP SIGNATURE-----"))
                    }
                    gpgsig() {
                        if (-1 === this._tag.indexOf("\n-----BEGIN PGP SIGNATURE-----")) return;
                        return st(this._tag.slice(this._tag.indexOf("-----BEGIN PGP SIGNATURE-----"), this._tag.indexOf("-----END PGP SIGNATURE-----") + "-----END PGP SIGNATURE-----".length))
                    }
                    payload() {
                        return this.withoutSignature() + "\n"
                    }
                    toObject() {
                        return Buffer.from(this._tag, "utf8")
                    }
                    static async sign(e, t, i) {
                        const r = e.payload();
                        let {
                            signature: s
                        } = await t({
                            payload: r,
                            secretKey: i
                        });
                        s = st(s);
                        const n = r + s;
                        return at.from(n)
                    }
                }

                function ct(e) {
                    return e.trim().split("\n").map((e => " " + e)).join("\n") + "\n"
                }
                class lt {
                    constructor(e) {
                        if ("string" == typeof e) this._commit = e;
                        else if (Buffer.isBuffer(e)) this._commit = e.toString("utf8");
                        else {
                            if ("object" != typeof e) throw new p("invalid type passed to GitCommit constructor");
                            this._commit = lt.render(e)
                        }
                    }
                    static fromPayloadSignature({
                        payload: e,
                        signature: t
                    }) {
                        const i = lt.justHeaders(e),
                            r = lt.justMessage(e),
                            s = st(i + "\ngpgsig" + ct(t) + "\n" + r);
                        return new lt(s)
                    }
                    static from(e) {
                        return new lt(e)
                    }
                    toObject() {
                        return Buffer.from(this._commit, "utf8")
                    }
                    headers() {
                        return this.parseHeaders()
                    }
                    message() {
                        return lt.justMessage(this._commit)
                    }
                    parse() {
                        return Object.assign({
                            message: this.message()
                        }, this.headers())
                    }
                    static justMessage(e) {
                        return st(e.slice(e.indexOf("\n\n") + 2))
                    }
                    static justHeaders(e) {
                        return e.slice(0, e.indexOf("\n\n"))
                    }
                    parseHeaders() {
                        const e = lt.justHeaders(this._commit).split("\n"),
                            t = [];
                        for (const i of e) " " === i[0] ? t[t.length - 1] += "\n" + i.slice(1) : t.push(i);
                        const i = {
                            parent: []
                        };
                        for (const e of t) {
                            const t = e.slice(0, e.indexOf(" ")),
                                r = e.slice(e.indexOf(" ") + 1);
                            Array.isArray(i[t]) ? i[t].push(r) : i[t] = r
                        }
                        return i.author && (i.author = nt(i.author)), i.committer && (i.committer = nt(i.committer)), i
                    }
                    static renderHeaders(e) {
                        let t = "";
                        if (e.tree ? t += `tree ${e.tree}\n` : t += "tree 4b825dc642cb6eb9a060e54bf8d69288fbee4904\n", e.parent) {
                            if (void 0 === e.parent.length) throw new p("commit 'parent' property should be an array");
                            for (const i of e.parent) t += `parent ${i}\n`
                        }
                        t += `author ${rt(e.author)}\n`;
                        return t += `committer ${rt(e.committer||e.author)}\n`, e.gpgsig && (t += "gpgsig" + ct(e.gpgsig)), t
                    }
                    static render(e) {
                        return lt.renderHeaders(e) + "\n" + st(e.message)
                    }
                    render() {
                        return this._commit
                    }
                    withoutSignature() {
                        const e = st(this._commit);
                        if (-1 === e.indexOf("\ngpgsig")) return e;
                        return st(e.slice(0, e.indexOf("\ngpgsig")) + "\n" + e.slice(e.indexOf("-----END PGP SIGNATURE-----\n") + "-----END PGP SIGNATURE-----\n".length))
                    }
                    isolateSignature() {
                        const e = this._commit.slice(this._commit.indexOf("-----BEGIN PGP SIGNATURE-----"), this._commit.indexOf("-----END PGP SIGNATURE-----") + "-----END PGP SIGNATURE-----".length);
                        return e.split("\n").map((e => e.replace(/^ /, ""))).join("\n")
                    }
                    static async sign(e, t, i) {
                        const r = e.withoutSignature(),
                            s = lt.justMessage(e._commit);
                        let {
                            signature: n
                        } = await t({
                            payload: r,
                            secretKey: i
                        });
                        n = st(n);
                        const o = lt.justHeaders(e._commit) + "\ngpgsig" + ct(n) + "\n" + s;
                        return lt.from(o)
                    }
                }
                async function ht({
                    fs: e,
                    cache: t,
                    gitdir: i,
                    oid: r
                }) {
                    if ("4b825dc642cb6eb9a060e54bf8d69288fbee4904" === r) return {
                        tree: me.from([]),
                        oid: r
                    };
                    const {
                        type: s,
                        object: n
                    } = await Re({
                        fs: e,
                        cache: t,
                        gitdir: i,
                        oid: r
                    });
                    if ("tag" === s) return ht({
                        fs: e,
                        cache: t,
                        gitdir: i,
                        oid: r = at.from(n).parse().object
                    });
                    if ("commit" === s) return ht({
                        fs: e,
                        cache: t,
                        gitdir: i,
                        oid: r = lt.from(n).parse().tree
                    });
                    if ("tree" !== s) throw new j(r, s, "tree");
                    return {
                        tree: me.from(n),
                        oid: r
                    }
                }
                class ut {
                    constructor({
                        fs: e,
                        gitdir: t,
                        ref: i,
                        cache: r
                    }) {
                        this.fs = e, this.cache = r, this.gitdir = t, this.mapPromise = (async () => {
                            const r = new Map;
                            let s;
                            try {
                                s = await fe.resolve({
                                    fs: e,
                                    gitdir: t,
                                    ref: i
                                })
                            } catch (e) {
                                e instanceof $ && (s = "4b825dc642cb6eb9a060e54bf8d69288fbee4904")
                            }
                            const n = await ht({
                                fs: e,
                                cache: this.cache,
                                gitdir: t,
                                oid: s
                            });
                            return n.type = "tree", n.mode = "40000", r.set(".", n), r
                        })();
                        const s = this;
                        this.ConstructEntry = class {
                            constructor(e) {
                                this._fullpath = e, this._type = !1, this._mode = !1, this._stat = !1, this._content = !1, this._oid = !1
                            }
                            async type() {
                                return s.type(this)
                            }
                            async mode() {
                                return s.mode(this)
                            }
                            async stat() {
                                return s.stat(this)
                            }
                            async content() {
                                return s.content(this)
                            }
                            async oid() {
                                return s.oid(this)
                            }
                        }
                    }
                    async readdir(e) {
                        const t = e._fullpath,
                            {
                                fs: i,
                                cache: r,
                                gitdir: s
                            } = this,
                            n = await this.mapPromise,
                            o = n.get(t);
                        if (!o) throw new Error(`No obj for ${t}`);
                        const a = o.oid;
                        if (!a) throw new Error(`No oid for obj ${JSON.stringify(o)}`);
                        if ("tree" !== o.type) return null;
                        const {
                            type: c,
                            object: l
                        } = await Re({
                            fs: i,
                            cache: r,
                            gitdir: s,
                            oid: a
                        });
                        if (c !== o.type) throw new j(a, c, o.type);
                        const h = me.from(l);
                        for (const e of h) n.set(q(t, e.path), e);
                        return h.entries().map((e => q(t, e.path)))
                    }
                    async type(e) {
                        if (!1 === e._type) {
                            const t = await this.mapPromise,
                                {
                                    type: i
                                } = t.get(e._fullpath);
                            e._type = i
                        }
                        return e._type
                    }
                    async mode(e) {
                        if (!1 === e._mode) {
                            const t = await this.mapPromise,
                                {
                                    mode: i
                                } = t.get(e._fullpath);
                            e._mode = b(parseInt(i, 8))
                        }
                        return e._mode
                    }
                    async stat(e) {}
                    async content(e) {
                        if (!1 === e._content) {
                            const t = await this.mapPromise,
                                {
                                    fs: i,
                                    cache: r,
                                    gitdir: s
                                } = this,
                                n = t.get(e._fullpath).oid,
                                {
                                    type: o,
                                    object: a
                                } = await Re({
                                    fs: i,
                                    cache: r,
                                    gitdir: s,
                                    oid: n
                                });
                            e._content = "blob" !== o ? void 0 : new Uint8Array(a)
                        }
                        return e._content
                    }
                    async oid(e) {
                        if (!1 === e._oid) {
                            const t = (await this.mapPromise).get(e._fullpath);
                            e._oid = t.oid
                        }
                        return e._oid
                    }
                }

                function dt({
                    ref: e = "HEAD"
                } = {}) {
                    const t = Object.create(null);
                    return Object.defineProperty(t, B, {
                        value: function({
                            fs: t,
                            gitdir: i,
                            cache: r
                        }) {
                            return new ut({
                                fs: t,
                                gitdir: i,
                                ref: e,
                                cache: r
                            })
                        }
                    }), Object.freeze(t), t
                }
                class ft {
                    constructor({
                        fs: e,
                        dir: t,
                        gitdir: i,
                        cache: r
                    }) {
                        this.fs = e, this.cache = r, this.dir = t, this.gitdir = i;
                        const s = this;
                        this.ConstructEntry = class {
                            constructor(e) {
                                this._fullpath = e, this._type = !1, this._mode = !1, this._stat = !1, this._content = !1, this._oid = !1
                            }
                            async type() {
                                return s.type(this)
                            }
                            async mode() {
                                return s.mode(this)
                            }
                            async stat() {
                                return s.stat(this)
                            }
                            async content() {
                                return s.content(this)
                            }
                            async oid() {
                                return s.oid(this)
                            }
                        }
                    }
                    async readdir(e) {
                        const t = e._fullpath,
                            {
                                fs: i,
                                dir: r
                            } = this,
                            s = await i.readdir(q(r, t));
                        return null === s ? null : s.map((e => q(t, e)))
                    }
                    async type(e) {
                        return !1 === e._type && await e.stat(), e._type
                    }
                    async mode(e) {
                        return !1 === e._mode && await e.stat(), e._mode
                    }
                    async stat(e) {
                        if (!1 === e._stat) {
                            const {
                                fs: t,
                                dir: i
                            } = this;
                            let r = await t.lstat(`${i}/${e._fullpath}`);
                            if (!r) throw new Error(`ENOENT: no such file or directory, lstat '${e._fullpath}'`);
                            let s = r.isDirectory() ? "tree" : "blob";
                            "blob" !== s || r.isFile() || r.isSymbolicLink() || (s = "special"), e._type = s, r = S(r), e._mode = r.mode, -1 === r.size && e._actualSize && (r.size = e._actualSize), e._stat = r
                        }
                        return e._stat
                    }
                    async content(e) {
                        if (!1 === e._content) {
                            const {
                                fs: t,
                                dir: i
                            } = this;
                            if ("tree" === await e.type()) e._content = void 0;
                            else {
                                const r = await t.read(`${i}/${e._fullpath}`);
                                e._actualSize = r.length, e._stat && -1 === e._stat.size && (e._stat.size = e._actualSize), e._content = new Uint8Array(r)
                            }
                        }
                        return e._content
                    }
                    async oid(e) {
                        if (!1 === e._oid) {
                            const {
                                fs: t,
                                gitdir: i,
                                cache: r
                            } = this;
                            let s;
                            await M.acquire({
                                fs: t,
                                gitdir: i,
                                cache: r
                            }, (async function(t) {
                                const i = t.entriesMap.get(e._fullpath),
                                    r = await e.stat();
                                if (!i || k(r, i)) {
                                    void 0 === await e.content() ? s = void 0 : (s = await x(be.wrap({
                                        type: "blob",
                                        object: await e.content()
                                    })), i && s === i.oid && r.mode === i.mode && k(r, i) && t.insert({
                                        filepath: e._fullpath,
                                        stats: r,
                                        oid: s
                                    }))
                                } else s = i.oid
                            })), e._oid = s
                        }
                        return e._oid
                    }
                }

                function pt() {
                    const e = Object.create(null);
                    return Object.defineProperty(e, B, {
                        value: function({
                            fs: e,
                            dir: t,
                            gitdir: i,
                            cache: r
                        }) {
                            return new ft({
                                fs: e,
                                dir: t,
                                gitdir: i,
                                cache: r
                            })
                        }
                    }), Object.freeze(e), e
                }
                const _t = void 0 === Array.prototype.flat ? e => e.reduce(((e, t) => e.concat(t)), []) : e => e.flat();
                class gt {
                    constructor() {
                        this.value = null
                    }
                    consider(e) {
                        null != e && (null === this.value || e < this.value) && (this.value = e)
                    }
                    reset() {
                        this.value = null
                    }
                }

                function* vt(e) {
                    const t = new gt;
                    let i;
                    const r = [],
                        s = e.length;
                    for (let i = 0; i < s; i++) r[i] = e[i].next().value, void 0 !== r[i] && t.consider(r[i]);
                    if (null !== t.value)
                        for (;;) {
                            const n = [];
                            i = t.value, t.reset();
                            for (let o = 0; o < s; o++) void 0 !== r[o] && r[o] === i ? (n[o] = r[o], r[o] = e[o].next().value) : n[o] = null, void 0 !== r[o] && t.consider(r[o]);
                            if (yield n, null === t.value) return
                        }
                }
                async function mt({
                    fs: e,
                    cache: t,
                    dir: i,
                    gitdir: r,
                    trees: s,
                    map: n = (async (e, t) => t),
                    reduce: o = (async (e, t) => {
                        const i = _t(t);
                        return void 0 !== e && i.unshift(e), i
                    }),
                    iterate: a = ((e, t) => Promise.all([...t].map(e)))
                }) {
                    const c = s.map((s => s[B]({
                            fs: e,
                            dir: i,
                            gitdir: r,
                            cache: t
                        }))),
                        l = new Array(c.length).fill("."),
                        h = function(e, t) {
                            const i = t - e;
                            return Array.from({
                                length: i
                            }, ((t, i) => e + i))
                        }(0, c.length),
                        u = async e => {
                            const {
                                entries: t,
                                children: i
                            } = await (async e => {
                                h.map((t => {
                                    e[t] = e[t] && new c[t].ConstructEntry(e[t])
                                }));
                                const t = (await Promise.all(h.map((t => e[t] ? c[t].readdir(e[t]) : [])))).map((e => null === e ? [] : e)).map((e => e[Symbol.iterator]()));
                                return {
                                    entries: e,
                                    children: vt(t)
                                }
                            })(e), r = t.find((e => e && e._fullpath))._fullpath, s = await n(r, t);
                            if (null !== s) {
                                let e = await a(u, i);
                                return e = e.filter((e => void 0 !== e)), o(s, e)
                            }
                        };
                    return u(l)
                }
                async function bt(e, t) {
                    const i = await e.readdir(t);
                    null == i ? await e.rm(t) : i.length ? await Promise.all(i.map((i => {
                        const r = q(t, i);
                        return e.lstat(r).then((t => {
                            if (t) return t.isDirectory() ? bt(e, r) : e.rm(r)
                        }))
                    }))).then((() => e.rmdir(t))) : await e.rmdir(t)
                }

                function wt(e) {
                    return "function" == typeof e
                }

                function yt(e) {
                    return function(e) {
                        return e && "object" == typeof e
                    }(t = (e => {
                        try {
                            return e.readFile().catch((e => e))
                        } catch (e) {
                            return e
                        }
                    })(e)) && wt(t.then) && wt(t.catch);
                    var t
                }
                const St = ["readFile", "writeFile", "mkdir", "rmdir", "unlink", "stat", "lstat", "readdir", "readlink", "symlink"];

                function Ct(e, t) {
                    if (yt(t))
                        for (const i of St) e[`_${i}`] = t[i].bind(t);
                    else
                        for (const i of St) e[`_${i}`] = l(t[i].bind(t));
                    yt(t) ? t.rm ? e._rm = t.rm.bind(t) : t.rmdir.length > 1 ? e._rm = t.rmdir.bind(t) : e._rm = bt.bind(null, e) : t.rm ? e._rm = l(t.rm.bind(t)) : t.rmdir.length > 2 ? e._rm = l(t.rmdir.bind(t)) : e._rm = bt.bind(null, e)
                }
                class xt {
                    constructor(e) {
                        if (void 0 !== e._original_unwrapped_fs) return e;
                        const t = Object.getOwnPropertyDescriptor(e, "promises");
                        t && t.enumerable ? Ct(this, e.promises) : Ct(this, e), this._original_unwrapped_fs = e
                    }
                    async exists(e, t = {}) {
                        try {
                            return await this._stat(e), !0
                        } catch (e) {
                            if ("ENOENT" === e.code || "ENOTDIR" === e.code) return !1;
                            throw console.log('Unhandled error in "FileSystem.exists()" function', e), e
                        }
                    }
                    async read(e, t = {}) {
                        try {
                            let i = await this._readFile(e, t);
                            return "string" != typeof i && (i = Buffer.from(i)), i
                        } catch (e) {
                            return null
                        }
                    }
                    async write(e, t, i = {}) {
                        try {
                            return void await this._writeFile(e, t, i)
                        } catch (r) {
                            await this.mkdir(R(e)), await this._writeFile(e, t, i)
                        }
                    }
                    async mkdir(e, t = !1) {
                        try {
                            return void await this._mkdir(e)
                        } catch (i) {
                            if (null === i) return;
                            if ("EEXIST" === i.code) return;
                            if (t) throw i;
                            if ("ENOENT" === i.code) {
                                const t = R(e);
                                if ("." === t || "/" === t || t === e) throw i;
                                await this.mkdir(t), await this.mkdir(e, !0)
                            }
                        }
                    }
                    async rm(e) {
                        try {
                            await this._unlink(e)
                        } catch (e) {
                            if ("ENOENT" !== e.code) throw e
                        }
                    }
                    async rmdir(e, t) {
                        try {
                            t && t.recursive ? await this._rm(e, t) : await this._rmdir(e)
                        } catch (e) {
                            if ("ENOENT" !== e.code) throw e
                        }
                    }
                    async readdir(e) {
                        try {
                            const t = await this._readdir(e);
                            return t.sort(v), t
                        } catch (e) {
                            return "ENOTDIR" === e.code ? null : []
                        }
                    }
                    async readdirDeep(e) {
                        const t = await this._readdir(e);
                        return (await Promise.all(t.map((async t => {
                            const i = e + "/" + t;
                            return (await this._stat(i)).isDirectory() ? this.readdirDeep(i) : i
                        })))).reduce(((e, t) => e.concat(t)), [])
                    }
                    async lstat(e) {
                        try {
                            return await this._lstat(e)
                        } catch (e) {
                            if ("ENOENT" === e.code) return null;
                            throw e
                        }
                    }
                    async readlink(e, t = {
                        encoding: "buffer"
                    }) {
                        try {
                            const i = await this._readlink(e, t);
                            return Buffer.isBuffer(i) ? i : Buffer.from(i)
                        } catch (e) {
                            if ("ENOENT" === e.code) return null;
                            throw e
                        }
                    }
                    async writelink(e, t) {
                        return this._symlink(t.toString("utf8"), e)
                    }
                }

                function Et(e, t) {
                    if (void 0 === t) throw new qe(e)
                }
                async function Ot(e, t) {
                    return !(!e && !t) && (!(!e || t) || (!(e || !t) || ("tree" !== await e.type() || "tree" !== await t.type()) && (await e.type() !== await t.type() || await e.mode() !== await t.mode() || await e.oid() !== await t.oid())))
                }
                let kt = null;
                async function Lt(e) {
                    return null === kt && (kt = function() {
                        try {
                            new CompressionStream("deflate").writable.close();
                            return new Blob([]).stream().cancel(), !0
                        } catch (e) {
                            return !1
                        }
                    }()), kt ? async function(e) {
                        const t = new CompressionStream("deflate"),
                            i = new Blob([e]).stream().pipeThrough(t);
                        return new Uint8Array(await new Response(i).arrayBuffer())
                    }(e): c.deflate(e)
                }
                async function Dt({
                    fs: e,
                    gitdir: t,
                    type: i,
                    object: r,
                    format: s = "content",
                    oid: n,
                    dryRun: o = !1
                }) {
                    return "deflated" !== s && ("wrapped" !== s && (r = be.wrap({
                        type: i,
                        object: r
                    })), n = await x(r), r = Buffer.from(await Lt(r))), o || await async function({
                        fs: e,
                        gitdir: t,
                        object: i,
                        format: r,
                        oid: s
                    }) {
                        if ("deflated" !== r) throw new p("GitObjectStoreLoose expects objects to write to be in deflated format");
                        const n = `${t}/objects/${s.slice(0,2)}/${s.slice(2)}`;
                        await e.exists(n) || await e.write(n, i)
                    }({
                        fs: e,
                        gitdir: t,
                        object: r,
                        format: "deflated",
                        oid: n
                    }), n
                }
                async function Mt({
                    fs: e,
                    cache: t,
                    onSign: i,
                    gitdir: r,
                    message: s,
                    author: n,
                    committer: o,
                    signingKey: a,
                    dryRun: c = !1,
                    noUpdateBranch: l = !1,
                    ref: h,
                    parent: u,
                    tree: d
                }) {
                    return h || (h = await fe.resolve({
                        fs: e,
                        gitdir: r,
                        ref: "HEAD",
                        depth: 2
                    })), M.acquire({
                        fs: e,
                        gitdir: r,
                        cache: t,
                        allowUnmerged: !1
                    }, (async function(t) {
                        const f = P(t.entries).get(".");
                        if (d || (d = await At({
                                fs: e,
                                gitdir: r,
                                inode: f,
                                dryRun: c
                            })), u) u = await Promise.all(u.map((t => fe.resolve({
                            fs: e,
                            gitdir: r,
                            ref: t
                        }))));
                        else try {
                            u = [await fe.resolve({
                                fs: e,
                                gitdir: r,
                                ref: h
                            })]
                        } catch (e) {
                            u = []
                        }
                        let p = lt.from({
                            tree: d,
                            parent: u,
                            author: n,
                            committer: o,
                            message: s
                        });
                        a && (p = await lt.sign(p, i, a));
                        const _ = await Dt({
                            fs: e,
                            gitdir: r,
                            type: "commit",
                            object: p.toObject(),
                            dryRun: c
                        });
                        return l || c || await fe.writeRef({
                            fs: e,
                            gitdir: r,
                            ref: h,
                            value: _
                        }), _
                    }))
                }
                async function At({
                    fs: e,
                    gitdir: t,
                    inode: i,
                    dryRun: r
                }) {
                    const s = i.children;
                    for (const i of s) "tree" === i.type && (i.metadata.mode = "040000", i.metadata.oid = await At({
                        fs: e,
                        gitdir: t,
                        inode: i,
                        dryRun: r
                    }));
                    const n = s.map((e => ({
                            mode: e.metadata.mode,
                            path: e.basename,
                            oid: e.metadata.oid,
                            type: e.type
                        }))),
                        o = me.from(n);
                    return await Dt({
                        fs: e,
                        gitdir: t,
                        type: "tree",
                        object: o.toObject(),
                        dryRun: r
                    })
                }
                async function Rt({
                    fs: e,
                    cache: t,
                    gitdir: i,
                    oid: r,
                    filepath: s
                }) {
                    if (s.startsWith("/")) throw new We("leading-slash");
                    if (s.endsWith("/")) throw new We("trailing-slash");
                    const n = r,
                        o = await ht({
                            fs: e,
                            cache: t,
                            gitdir: i,
                            oid: r
                        }),
                        a = o.tree;
                    if ("" === s) r = o.oid;
                    else {
                        const o = s.split("/");
                        r = await Pt({
                            fs: e,
                            cache: t,
                            gitdir: i,
                            tree: a,
                            pathArray: o,
                            oid: n,
                            filepath: s
                        })
                    }
                    return r
                }
                async function Pt({
                    fs: e,
                    cache: t,
                    gitdir: i,
                    tree: r,
                    pathArray: s,
                    oid: n,
                    filepath: o
                }) {
                    const a = s.shift();
                    for (const c of r)
                        if (c.path === a) {
                            if (0 === s.length) return c.oid;
                            {
                                const {
                                    type: a,
                                    object: l
                                } = await Re({
                                    fs: e,
                                    cache: t,
                                    gitdir: i,
                                    oid: c.oid
                                });
                                if ("tree" !== a) throw new j(n, a, "tree", o);
                                return Pt({
                                    fs: e,
                                    cache: t,
                                    gitdir: i,
                                    tree: r = me.from(l),
                                    pathArray: s,
                                    oid: n,
                                    filepath: o
                                })
                            }
                        } throw new $(`file or directory found at "${n}:${o}"`)
                }
                async function Tt({
                    fs: e,
                    gitdir: t,
                    path: i
                }) {
                    return (await ce.get({
                        fs: e,
                        gitdir: t
                    })).get(i)
                }
                async function Bt({
                    fs: e,
                    gitdir: t,
                    author: i = {}
                }) {
                    let {
                        name: r,
                        email: s,
                        timestamp: n,
                        timezoneOffset: o
                    } = i;
                    if (r = r || await Tt({
                            fs: e,
                            gitdir: t,
                            path: "user.name"
                        }), s = s || await Tt({
                            fs: e,
                            gitdir: t,
                            path: "user.email"
                        }) || "", void 0 !== r) return n = null != n ? n : Math.floor(Date.now() / 1e3), o = null != o ? o : new Date(1e3 * n).getTimezoneOffset(), {
                        name: r,
                        email: s,
                        timestamp: n,
                        timezoneOffset: o
                    }
                }
                async function It({
                    fs: e,
                    gitdir: t,
                    author: i,
                    committer: r
                }) {
                    return r = Object.assign({}, r || i), i && (r.timestamp = r.timestamp || i.timestamp, r.timezoneOffset = r.timezoneOffset || i.timezoneOffset), r = await Bt({
                        fs: e,
                        gitdir: t,
                        author: r
                    })
                }
                async function $t({
                    fs: e,
                    gitdir: t,
                    remote: i,
                    url: r,
                    force: s
                }) {
                    if (i !== h.clean(i)) throw new He(i, h.clean(i));
                    const n = await ce.get({
                        fs: e,
                        gitdir: t
                    });
                    if (!s) {
                        if ((await n.getSubsections("remote")).includes(i) && r !== await n.get(`remote.${i}.url`)) throw new Pe("remote", i)
                    }
                    await n.set(`remote.${i}.url`, r), await n.set(`remote.${i}.fetch`, `+refs/heads/*:refs/remotes/${i}/*`), await ce.save({
                        fs: e,
                        gitdir: t,
                        config: n
                    })
                }
                const jt = (e, t) => "." === e || null == t || 0 === t.length || "." === t || (t.length >= e.length ? t.startsWith(e) : e.startsWith(t));
                async function Ft({
                    fs: e,
                    cache: t,
                    onProgress: i,
                    dir: r,
                    gitdir: s,
                    remote: n,
                    ref: o,
                    filepaths: a,
                    noCheckout: c,
                    noUpdateHead: l,
                    dryRun: h,
                    force: u,
                    track: d = !0
                }) {
                    let f;
                    try {
                        f = await fe.resolve({
                            fs: e,
                            gitdir: s,
                            ref: o
                        })
                    } catch (t) {
                        if ("HEAD" === o) throw t;
                        const i = `${n}/${o}`;
                        if (f = await fe.resolve({
                                fs: e,
                                gitdir: s,
                                ref: i
                            }), d) {
                            const t = await ce.get({
                                fs: e,
                                gitdir: s
                            });
                            await t.set(`branch.${o}.remote`, n), await t.set(`branch.${o}.merge`, `refs/heads/${o}`), await ce.save({
                                fs: e,
                                gitdir: s,
                                config: t
                            })
                        }
                        await fe.writeRef({
                            fs: e,
                            gitdir: s,
                            ref: `refs/heads/${o}`,
                            value: f
                        })
                    }
                    if (!c) {
                        let n;
                        try {
                            n = await async function({
                                fs: e,
                                cache: t,
                                onProgress: i,
                                dir: r,
                                gitdir: s,
                                ref: n,
                                force: o,
                                filepaths: a
                            }) {
                                let c = 0;
                                return mt({
                                    fs: e,
                                    cache: t,
                                    dir: r,
                                    gitdir: s,
                                    trees: [dt({
                                        ref: n
                                    }), pt(), I()],
                                    map: async function(e, [t, r, s]) {
                                        if ("." === e) return;
                                        if (a && !a.some((t => jt(e, t)))) return null;
                                        i && await i({
                                            phase: "Analyzing workdir",
                                            loaded: ++c
                                        });
                                        switch ([!!s, !!t, !!r].map(Number).join("")) {
                                            case "000":
                                                return;
                                            case "001":
                                                return o && a && a.includes(e) ? ["delete", e] : void 0;
                                            case "010":
                                                switch (await t.type()) {
                                                    case "tree":
                                                        return ["mkdir", e];
                                                    case "blob":
                                                        return ["create", e, await t.oid(), await t.mode()];
                                                    case "commit":
                                                        return ["mkdir-index", e, await t.oid(), await t.mode()];
                                                    default:
                                                        return ["error", `new entry Unhandled type ${await t.type()}`]
                                                }
                                            case "011":
                                                switch (`${await t.type()}-${await r.type()}`) {
                                                    case "tree-tree":
                                                    case "commit-tree":
                                                        return;
                                                    case "tree-blob":
                                                    case "blob-tree":
                                                    case "commit-blob":
                                                        return ["conflict", e];
                                                    case "blob-blob":
                                                        return await t.oid() !== await r.oid() ? o ? ["update", e, await t.oid(), await t.mode(), await t.mode() !== await r.mode()] : ["conflict", e] : await t.mode() !== await r.mode() ? o ? ["update", e, await t.oid(), await t.mode(), !0] : ["conflict", e] : ["create-index", e, await t.oid(), await t.mode()];
                                                    default:
                                                        return ["error", `new entry Unhandled type ${t.type}`]
                                                }
                                            case "100":
                                                return ["delete-index", e];
                                            case "101":
                                                switch (await s.type()) {
                                                    case "tree":
                                                        return ["rmdir", e];
                                                    case "blob":
                                                        return await s.oid() !== await r.oid() ? o ? ["delete", e] : ["conflict", e] : ["delete", e];
                                                    case "commit":
                                                        return ["rmdir-index", e];
                                                    default:
                                                        return ["error", `delete entry Unhandled type ${await s.type()}`]
                                                }
                                            case "110":
                                            case "111":
                                                switch (`${await s.type()}-${await t.type()}`) {
                                                    case "tree-tree":
                                                        return;
                                                    case "blob-blob":
                                                        if (await s.oid() === await t.oid() && await s.mode() === await t.mode() && !o) return;
                                                        if (r) {
                                                            if (await r.oid() !== await s.oid() && await r.oid() !== await t.oid()) return o ? ["update", e, await t.oid(), await t.mode(), await t.mode() !== await r.mode()] : ["conflict", e]
                                                        } else if (o) return ["update", e, await t.oid(), await t.mode(), await t.mode() !== await s.mode()];
                                                        return await t.mode() !== await s.mode() ? ["update", e, await t.oid(), await t.mode(), !0] : await t.oid() !== await s.oid() ? ["update", e, await t.oid(), await t.mode(), !1] : void 0;
                                                    case "tree-blob":
                                                        return ["update-dir-to-blob", e, await t.oid()];
                                                    case "blob-tree":
                                                        return ["update-blob-to-tree", e];
                                                    case "commit-commit":
                                                        return ["mkdir-index", e, await t.oid(), await t.mode()];
                                                    default:
                                                        return ["error", `update entry Unhandled type ${await s.type()}-${await t.type()}`]
                                                }
                                        }
                                    },
                                    reduce: async function(e, t) {
                                        return t = _t(t), e ? e && "rmdir" === e[0] ? (t.push(e), t) : (t.unshift(e), t) : t
                                    }
                                })
                            }({
                                fs: e,
                                cache: t,
                                onProgress: i,
                                dir: r,
                                gitdir: s,
                                ref: o,
                                force: u,
                                filepaths: a
                            })
                        } catch (e) {
                            throw e instanceof $ && e.data.what === f ? new Ie(o, f) : e
                        }
                        const c = n.filter((([e]) => "conflict" === e)).map((([e, t]) => t));
                        if (c.length > 0) throw new Be(c);
                        const l = n.filter((([e]) => "error" === e)).map((([e, t]) => t));
                        if (l.length > 0) throw new p(l.join(", "));
                        if (h) return;
                        let d = 0;
                        const _ = n.length;
                        await M.acquire({
                            fs: e,
                            gitdir: s,
                            cache: t
                        }, (async function(t) {
                            await Promise.all(n.filter((([e]) => "delete" === e || "delete-index" === e)).map((async function([s, n]) {
                                const o = `${r}/${n}`;
                                "delete" === s && await e.rm(o), t.delete({
                                    filepath: n
                                }), i && await i({
                                    phase: "Updating workdir",
                                    loaded: ++d,
                                    total: _
                                })
                            })))
                        })), await M.acquire({
                            fs: e,
                            gitdir: s,
                            cache: t
                        }, (async function(t) {
                            for (const [s, o] of n)
                                if ("rmdir" === s || "rmdir-index" === s) {
                                    const n = `${r}/${o}`;
                                    try {
                                        "rmdir-index" === s && t.delete({
                                            filepath: o
                                        }), await e.rmdir(n), i && await i({
                                            phase: "Updating workdir",
                                            loaded: ++d,
                                            total: _
                                        })
                                    } catch (e) {
                                        if ("ENOTEMPTY" !== e.code) throw e;
                                        console.log(`Did not delete ${o} because directory is not empty`)
                                    }
                                }
                        })), await Promise.all(n.filter((([e]) => "mkdir" === e || "mkdir-index" === e)).map((async function([t, s]) {
                            const n = `${r}/${s}`;
                            await e.mkdir(n), i && await i({
                                phase: "Updating workdir",
                                loaded: ++d,
                                total: _
                            })
                        }))), await M.acquire({
                            fs: e,
                            gitdir: s,
                            cache: t
                        }, (async function(o) {
                            await Promise.all(n.filter((([e]) => "create" === e || "create-index" === e || "update" === e || "mkdir-index" === e)).map((async function([n, a, c, l, h]) {
                                const u = `${r}/${a}`;
                                try {
                                    if ("create-index" !== n && "mkdir-index" !== n) {
                                        const {
                                            object: i
                                        } = await Re({
                                            fs: e,
                                            cache: t,
                                            gitdir: s,
                                            oid: c
                                        });
                                        if (h && await e.rm(u), 33188 === l) await e.write(u, i);
                                        else if (33261 === l) await e.write(u, i, {
                                            mode: 511
                                        });
                                        else {
                                            if (40960 !== l) throw new p(`Invalid mode 0o${l.toString(8)} detected in blob ${c}`);
                                            await e.writelink(u, i)
                                        }
                                    }
                                    const r = await e.lstat(u);
                                    33261 === l && (r.mode = 493), "mkdir-index" === n && (r.mode = 57344), o.insert({
                                        filepath: a,
                                        stats: r,
                                        oid: c
                                    }), i && await i({
                                        phase: "Updating workdir",
                                        loaded: ++d,
                                        total: _
                                    })
                                } catch (e) {
                                    console.log(e)
                                }
                            })))
                        }))
                    }
                    if (!l) {
                        const t = await fe.expand({
                            fs: e,
                            gitdir: s,
                            ref: o
                        });
                        t.startsWith("refs/heads") ? await fe.writeSymbolicRef({
                            fs: e,
                            gitdir: s,
                            ref: "HEAD",
                            value: t
                        }) : await fe.writeRef({
                            fs: e,
                            gitdir: s,
                            ref: "HEAD",
                            value: f
                        })
                    }
                }
                async function Nt({
                    fs: e,
                    onProgress: t,
                    dir: i,
                    gitdir: r = q(i, ".git"),
                    remote: s = "origin",
                    ref: n,
                    filepaths: o,
                    noCheckout: a = !1,
                    noUpdateHead: c = void 0 === n,
                    dryRun: l = !1,
                    force: h = !1,
                    track: u = !0,
                    cache: d = {}
                }) {
                    try {
                        Et("fs", e), Et("dir", i), Et("gitdir", r);
                        const f = n || "HEAD";
                        return await Ft({
                            fs: new xt(e),
                            cache: d,
                            onProgress: t,
                            dir: i,
                            gitdir: r,
                            remote: s,
                            ref: f,
                            filepaths: o,
                            noCheckout: a,
                            noUpdateHead: c,
                            dryRun: l,
                            force: h,
                            track: u
                        })
                    } catch (e) {
                        throw e.caller = "git.checkout", e
                    }
                }
                const Wt = new RegExp("^refs/(heads/|tags/|remotes/)?(.*)");

                function Ht(e) {
                    const t = Wt.exec(e);
                    return t ? "remotes/" === t[1] && e.endsWith("/HEAD") ? t[2].slice(0, -5) : t[2] : e
                }
                async function Ut({
                    fs: e,
                    gitdir: t,
                    fullname: i = !1,
                    test: r = !1
                }) {
                    const s = await fe.resolve({
                        fs: e,
                        gitdir: t,
                        ref: "HEAD",
                        depth: 2
                    });
                    if (r) try {
                        await fe.resolve({
                            fs: e,
                            gitdir: t,
                            ref: s
                        })
                    } catch (e) {
                        return
                    }
                    if (s.startsWith("refs/")) return i ? s : Ht(s)
                }

                function zt({
                    username: e = "",
                    password: t = ""
                }) {
                    return `Basic ${Buffer.from(`${e}:${t}`).toString("base64")}`
                }
                async function Gt(e, t) {
                    const i = Ce(e);
                    for (;;) {
                        const {
                            value: e,
                            done: r
                        } = await i.next();
                        if (e && await t(e), r) break
                    }
                    i.return && i.return()
                }
                async function Vt(e) {
                    let t = 0;
                    const i = [];
                    await Gt(e, (e => {
                        i.push(e), t += e.byteLength
                    }));
                    const r = new Uint8Array(t);
                    let s = 0;
                    for (const e of i) r.set(e, s), s += e.byteLength;
                    return r
                }

                function qt(e) {
                    let t = e.match(/^https?:\/\/([^/]+)@/);
                    if (null == t) return {
                        url: e,
                        auth: {}
                    };
                    t = t[1];
                    const [i, r] = t.split(":");
                    return {
                        url: e = e.replace(`${t}@`, ""),
                        auth: {
                            username: i,
                            password: r
                        }
                    }
                }

                function Kt(e, t) {
                    const i = t.toString(16);
                    return "0".repeat(e - i.length) + i
                }
                class Xt {
                    static flush() {
                        return Buffer.from("0000", "utf8")
                    }
                    static delim() {
                        return Buffer.from("0001", "utf8")
                    }
                    static encode(e) {
                        "string" == typeof e && (e = Buffer.from(e));
                        const t = Kt(4, e.length + 4);
                        return Buffer.concat([Buffer.from(t, "utf8"), e])
                    }
                    static streamReader(e) {
                        const t = new xe(e);
                        return async function() {
                            try {
                                let e = await t.read(4);
                                if (null == e) return !0;
                                if (e = parseInt(e.toString("utf8"), 16), 0 === e) return null;
                                if (1 === e) return null;
                                const i = await t.read(e - 4);
                                return null == i || i
                            } catch (t) {
                                return e.error = t, !0
                            }
                        }
                    }
                }
                async function Jt(e) {
                    const t = {};
                    let i;
                    for (; i = await e(), !0 !== i;) {
                        if (null === i) continue;
                        i = i.toString("utf8").replace(/\n$/, "");
                        const e = i.indexOf("=");
                        if (e > -1) {
                            const r = i.slice(0, e),
                                s = i.slice(e + 1);
                            t[r] = s
                        } else t[i] = !0
                    }
                    return {
                        protocolVersion: 2,
                        capabilities2: t
                    }
                }
                async function Yt(e, {
                    service: t
                }) {
                    const i = new Set,
                        r = new Map,
                        s = new Map,
                        n = Xt.streamReader(e);
                    let o = await n();
                    for (; null === o;) o = await n();
                    if (!0 === o) throw new $e;
                    if (o.includes("version 2")) return Jt(n);
                    if (o.toString("utf8").replace(/\n$/, "") !== `# service=${t}`) throw new Xe(`# service=${t}\\n`, o.toString("utf8"));
                    let a = await n();
                    for (; null === a;) a = await n();
                    if (!0 === a) return {
                        capabilities: i,
                        refs: r,
                        symrefs: s
                    };
                    if (a = a.toString("utf8"), a.includes("version 2")) return Jt(n);
                    const [c, l] = Zt(a, "\0", "\\x00");
                    if (l.split(" ").map((e => i.add(e))), "0000000000000000000000000000000000000000 capabilities^{}" !== c) {
                        const [e, t] = Zt(c, " ", " ");
                        for (r.set(t, e);;) {
                            const e = await n();
                            if (!0 === e) break;
                            if (null !== e) {
                                const [t, i] = Zt(e.toString("utf8"), " ", " ");
                                r.set(i, t)
                            }
                        }
                    }
                    for (const e of i)
                        if (e.startsWith("symref=")) {
                            const t = e.match(/symref=([^:]+):(.*)/);
                            3 === t.length && s.set(t[1], t[2])
                        } return {
                        protocolVersion: 1,
                        capabilities: i,
                        refs: r,
                        symrefs: s
                    }
                }

                function Zt(e, t, i) {
                    const r = e.trim().split(t);
                    if (2 !== r.length) throw new Xe(`Two strings separated by '${i}'`, e.toString("utf8"));
                    return r
                }
                const Qt = (e, t) => e.endsWith("?") ? `${e}${t}` : `${e}/${t.replace(/^https?:\/\//,"")}`,
                    ei = (e, t) => {
                        (t.username || t.password) && (e.Authorization = zt(t)), t.headers && Object.assign(e, t.headers)
                    },
                    ti = async e => {
                        try {
                            const t = Buffer.from(await Vt(e.body)),
                                i = t.toString("utf8");
                            return {
                                preview: i.length < 256 ? i : i.slice(0, 256) + "...",
                                response: i,
                                data: t
                            }
                        } catch (e) {
                            return {}
                        }
                    };
                class ii {
                    static async capabilities() {
                        return ["discover", "connect"]
                    }
                    static async discover({
                        http: e,
                        onProgress: t,
                        onAuth: i,
                        onAuthSuccess: r,
                        onAuthFailure: s,
                        corsProxy: n,
                        service: o,
                        url: a,
                        headers: c,
                        protocolVersion: l
                    }) {
                        let {
                            url: h,
                            auth: u
                        } = qt(a);
                        const d = n ? Qt(n, h) : h;
                        let f, p;
                        (u.username || u.password) && (c.Authorization = zt(u)), 2 === l && (c["Git-Protocol"] = "version=2");
                        let _ = !1;
                        do {
                            if (f = await e.request({
                                    onProgress: t,
                                    method: "GET",
                                    url: `${d}/info/refs?service=${o}`,
                                    headers: c
                                }), p = !1, 401 === f.statusCode || 203 === f.statusCode) {
                                const e = _ ? s : i;
                                if (e) {
                                    if (u = await e(h, {
                                            ...u,
                                            headers: {
                                                ...c
                                            }
                                        }), u && u.cancel) throw new tt;
                                    u && (ei(c, u), _ = !0, p = !0)
                                }
                            } else 200 === f.statusCode && _ && r && await r(h, u)
                        } while (p);
                        if (200 !== f.statusCode) {
                            const {
                                response: e
                            } = await ti(f);
                            throw new Ne(f.statusCode, f.statusMessage, e)
                        }
                        if (f.headers["content-type"] === `application/x-${o}-advertisement`) {
                            const e = await Yt(f.body, {
                                service: o
                            });
                            return e.auth = u, e
                        } {
                            const {
                                preview: e,
                                response: t,
                                data: i
                            } = await ti(f);
                            try {
                                const e = await Yt([i], {
                                    service: o
                                });
                                return e.auth = u, e
                            } catch (i) {
                                throw new Ze(e, t)
                            }
                        }
                    }
                    static async connect({
                        http: e,
                        onProgress: t,
                        corsProxy: i,
                        service: r,
                        url: s,
                        auth: n,
                        body: o,
                        headers: a
                    }) {
                        const c = qt(s);
                        c && (s = c.url), i && (s = Qt(i, s)), a["content-type"] = `application/x-${r}-request`, a.accept = `application/x-${r}-result`, ei(a, n);
                        const l = await e.request({
                            onProgress: t,
                            method: "POST",
                            url: `${s}/${r}`,
                            body: o,
                            headers: a
                        });
                        if (200 !== l.statusCode) {
                            const {
                                response: e
                            } = ti(l);
                            throw new Ne(l.statusCode, l.statusMessage, e)
                        }
                        return l
                    }
                }
                class ri {
                    static getRemoteHelperFor({
                        url: e
                    }) {
                        const t = new Map;
                        t.set("http", ii), t.set("https", ii);
                        const i = function({
                            url: e
                        }) {
                            if (e.startsWith("git@")) return {
                                transport: "ssh",
                                address: e
                            };
                            const t = e.match(/(\w+)(:\/\/|::)(.*)/);
                            return null !== t ? "://" === t[2] ? {
                                transport: t[1],
                                address: t[0]
                            } : "::" === t[2] ? {
                                transport: t[1],
                                address: t[3]
                            } : void 0 : void 0
                        }({
                            url: e
                        });
                        if (!i) throw new et(e);
                        if (t.has(i.transport)) return t.get(i.transport);
                        throw new Qe(e, i.transport, "ssh" === i.transport ? function(e) {
                            return (e = e.replace(/^git@([^:]+):/, "https://$1/")).replace(/^ssh:\/\//, "https://")
                        }(e) : void 0)
                    }
                }
                let si = null;
                class ni {
                    static async read({
                        fs: e,
                        gitdir: t
                    }) {
                        null === si && (si = new n);
                        const i = q(t, "shallow"),
                            r = new Set;
                        return await si.acquire(i, (async function() {
                            const t = await e.read(i, {
                                encoding: "utf8"
                            });
                            return null === t || "" === t.trim() ? r : void t.trim().split("\n").map((e => r.add(e)))
                        })), r
                    }
                    static async write({
                        fs: e,
                        gitdir: t,
                        oids: i
                    }) {
                        null === si && (si = new n);
                        const r = q(t, "shallow");
                        if (i.size > 0) {
                            const t = [...i].join("\n") + "\n";
                            await si.acquire(r, (async function() {
                                await e.write(r, t, {
                                    encoding: "utf8"
                                })
                            }))
                        } else await si.acquire(r, (async function() {
                            await e.rm(r)
                        }))
                    }
                }
                async function oi({
                    fs: e,
                    cache: t,
                    gitdir: i,
                    oid: r,
                    format: s = "content"
                }) {
                    const n = r => Re({
                        fs: e,
                        cache: t,
                        gitdir: i,
                        oid: r
                    });
                    let o = await async function({
                        fs: e,
                        gitdir: t,
                        oid: i
                    }) {
                        const r = `objects/${i.slice(0,2)}/${i.slice(2)}`;
                        return e.exists(`${t}/${r}`)
                    }({
                        fs: e,
                        gitdir: i,
                        oid: r
                    });
                    return o || (o = await async function({
                        fs: e,
                        cache: t,
                        gitdir: i,
                        oid: r,
                        getExternalRefDelta: s
                    }) {
                        let n = await e.readdir(q(i, "objects/pack"));
                        n = n.filter((e => e.endsWith(".idx")));
                        for (const o of n) {
                            const n = `${i}/objects/pack/${o}`,
                                a = await Ae({
                                    fs: e,
                                    cache: t,
                                    filename: n,
                                    getExternalRefDelta: s
                                });
                            if (a.error) throw new p(a.error);
                            if (a.offsets.has(r)) return !0
                        }
                        return !1
                    }({
                        fs: e,
                        cache: t,
                        gitdir: i,
                        oid: r,
                        getExternalRefDelta: n
                    })), o
                }

                function ai(e, t) {
                    const i = e.map((e => e.split("=", 1)[0]));
                    return t.filter((e => {
                        const t = e.split("=", 1)[0];
                        return i.includes(t)
                    }))
                }
                const ci = "git/isomorphic-git@1.25.7";
                class li {
                    constructor() {
                        this._queue = []
                    }
                    write(e) {
                        if (this._ended) throw Error("You cannot write to a FIFO that has already been ended!");
                        if (this._waiting) {
                            const t = this._waiting;
                            this._waiting = null, t({
                                value: e
                            })
                        } else this._queue.push(e)
                    }
                    end() {
                        if (this._ended = !0, this._waiting) {
                            const e = this._waiting;
                            this._waiting = null, e({
                                done: !0
                            })
                        }
                    }
                    destroy(e) {
                        this.error = e, this.end()
                    }
                    async next() {
                        if (this._queue.length > 0) return {
                            value: this._queue.shift()
                        };
                        if (this._ended) return {
                            done: !0
                        };
                        if (this._waiting) throw Error("You cannot call read until the previous call to read has returned!");
                        return new Promise((e => {
                            this._waiting = e
                        }))
                    }
                }

                function hi(e) {
                    const t = e.indexOf("\r"),
                        i = e.indexOf("\n");
                    return -1 === t && -1 === i ? -1 : -1 === t ? i + 1 : -1 === i ? t + 1 : i === t + 1 ? i + 1 : Math.min(t, i) + 1
                }

                function ui(e) {
                    const t = new li;
                    let i = "";
                    return (async () => {
                        await Gt(e, (e => {
                            for (e = e.toString("utf8"), i += e;;) {
                                const e = hi(i);
                                if (-1 === e) break;
                                t.write(i.slice(0, e)), i = i.slice(e)
                            }
                        })), i.length > 0 && t.write(i), t.end()
                    })(), t
                }
                class di {
                    static demux(e) {
                        const t = Xt.streamReader(e),
                            i = new li,
                            r = new li,
                            s = new li,
                            n = async function() {
                                const o = await t();
                                if (null === o) return n();
                                if (!0 === o) return i.end(), s.end(), void(e.error ? r.destroy(e.error) : r.end());
                                switch (o[0]) {
                                    case 1:
                                        r.write(o.slice(1));
                                        break;
                                    case 2:
                                        s.write(o.slice(1));
                                        break;
                                    case 3: {
                                        const e = o.slice(1);
                                        return s.write(e), i.end(), s.end(), void r.destroy(new Error(e.toString("utf8")))
                                    }
                                    default:
                                        i.write(o)
                                }
                                n()
                            };
                        return n(), {
                            packetlines: i,
                            packfile: r,
                            progress: s
                        }
                    }
                }
                async function fi({
                    fs: e,
                    cache: t,
                    http: i,
                    onProgress: r,
                    onMessage: s,
                    onAuth: n,
                    onAuthSuccess: o,
                    onAuthFailure: a,
                    gitdir: c,
                    ref: l,
                    remoteRef: h,
                    remote: u,
                    url: d,
                    corsProxy: f,
                    depth: p = null,
                    since: _ = null,
                    exclude: g = [],
                    relative: v = !1,
                    tags: m = !1,
                    singleBranch: b = !1,
                    headers: w = {},
                    prune: y = !1,
                    pruneTags: S = !1
                }) {
                    const C = l || await Ut({
                            fs: e,
                            gitdir: c,
                            test: !0
                        }),
                        x = await ce.get({
                            fs: e,
                            gitdir: c
                        }),
                        E = u || C && await x.get(`branch.${C}.remote`) || "origin",
                        O = d || await x.get(`remote.${E}.url`);
                    if (void 0 === O) throw new qe("remote OR url");
                    const k = h || C && await x.get(`branch.${C}.merge`) || l || "HEAD";
                    void 0 === f && (f = await x.get("http.corsProxy"));
                    const L = ri.getRemoteHelperFor({
                            url: O
                        }),
                        D = await L.discover({
                            http: i,
                            onAuth: n,
                            onAuthSuccess: o,
                            onAuthFailure: a,
                            corsProxy: f,
                            service: "git-upload-pack",
                            url: O,
                            headers: w,
                            protocolVersion: 1
                        }),
                        M = D.auth,
                        A = D.refs;
                    if (0 === A.size) return {
                        defaultBranch: null,
                        fetchHead: null,
                        fetchHeadDescription: null
                    };
                    if (null !== p && !D.capabilities.has("shallow")) throw new Ye("shallow", "depth");
                    if (null !== _ && !D.capabilities.has("deepen-since")) throw new Ye("deepen-since", "since");
                    if (g.length > 0 && !D.capabilities.has("deepen-not")) throw new Ye("deepen-not", "exclude");
                    if (!0 === v && !D.capabilities.has("deepen-relative")) throw new Ye("deepen-relative", "relative");
                    const {
                        oid: R,
                        fullref: P
                    } = fe.resolveAgainstMap({
                        ref: k,
                        map: A
                    });
                    for (const e of A.keys()) e === P || "HEAD" === e || e.startsWith("refs/heads/") || m && e.startsWith("refs/tags/") || A.delete(e);
                    const T = ai([...D.capabilities], ["multi_ack_detailed", "no-done", "side-band-64k", "ofs-delta", `agent=${ci}`]);
                    v && T.push("deepen-relative");
                    const B = b ? [R] : A.values(),
                        I = b ? [C] : await fe.listRefs({
                            fs: e,
                            gitdir: c,
                            filepath: "refs"
                        });
                    let $ = [];
                    for (let i of I) try {
                        i = await fe.expand({
                            fs: e,
                            gitdir: c,
                            ref: i
                        });
                        const r = await fe.resolve({
                            fs: e,
                            gitdir: c,
                            ref: i
                        });
                        await oi({
                            fs: e,
                            cache: t,
                            gitdir: c,
                            oid: r
                        }) && $.push(r)
                    } catch (e) {}
                    $ = [...new Set($)];
                    const j = await ni.read({
                            fs: e,
                            gitdir: c
                        }),
                        N = function({
                            capabilities: e = [],
                            wants: t = [],
                            haves: i = [],
                            shallows: r = [],
                            depth: s = null,
                            since: n = null,
                            exclude: o = []
                        }) {
                            const a = [];
                            t = [...new Set(t)];
                            let c = ` ${e.join(" ")}`;
                            for (const e of t) a.push(Xt.encode(`want ${e}${c}\n`)), c = "";
                            for (const e of r) a.push(Xt.encode(`shallow ${e}\n`));
                            null !== s && a.push(Xt.encode(`deepen ${s}\n`)), null !== n && a.push(Xt.encode(`deepen-since ${Math.floor(n.valueOf()/1e3)}\n`));
                            for (const e of o) a.push(Xt.encode(`deepen-not ${e}\n`));
                            a.push(Xt.flush());
                            for (const e of i) a.push(Xt.encode(`have ${e}\n`));
                            return a.push(Xt.encode("done\n")), a
                        }({
                            capabilities: T,
                            wants: B,
                            haves: $,
                            shallows: D.capabilities.has("shallow") ? [...j] : [],
                            depth: p,
                            since: _,
                            exclude: g
                        }),
                        W = Buffer.from(await Vt(N)),
                        H = await L.connect({
                            http: i,
                            onProgress: r,
                            corsProxy: f,
                            service: "git-upload-pack",
                            url: O,
                            auth: M,
                            body: [W],
                            headers: w
                        }),
                        U = await async function(e) {
                            const {
                                packetlines: t,
                                packfile: i,
                                progress: r
                            } = di.demux(e), s = [], n = [], o = [];
                            let a = !1,
                                c = !1;
                            return new Promise(((l, h) => {
                                Gt(t, (t => {
                                    const u = t.toString("utf8").trim();
                                    if (u.startsWith("shallow")) {
                                        const e = u.slice(-41).trim();
                                        40 !== e.length && h(new F(e)), s.push(e)
                                    } else if (u.startsWith("unshallow")) {
                                        const e = u.slice(-41).trim();
                                        40 !== e.length && h(new F(e)), n.push(e)
                                    } else if (u.startsWith("ACK")) {
                                        const [, e, t] = u.split(" ");
                                        o.push({
                                            oid: e,
                                            status: t
                                        }), t || (c = !0)
                                    } else u.startsWith("NAK") ? (a = !0, c = !0) : (c = !0, a = !0);
                                    c && (e.error ? h(e.error) : l({
                                        shallows: s,
                                        unshallows: n,
                                        acks: o,
                                        nak: a,
                                        packfile: i,
                                        progress: r
                                    }))
                                })).finally((() => {
                                    c || (e.error ? h(e.error) : l({
                                        shallows: s,
                                        unshallows: n,
                                        acks: o,
                                        nak: a,
                                        packfile: i,
                                        progress: r
                                    }))
                                }))
                            }))
                        }(H.body);
                    H.headers && (U.headers = H.headers);
                    for (const i of U.shallows)
                        if (!j.has(i)) try {
                            const {
                                object: r
                            } = await Re({
                                fs: e,
                                cache: t,
                                gitdir: c,
                                oid: i
                            }), s = new lt(r), n = await Promise.all(s.headers().parent.map((i => oi({
                                fs: e,
                                cache: t,
                                gitdir: c,
                                oid: i
                            }))));
                            0 === n.length || n.every((e => e)) || j.add(i)
                        } catch (e) {
                            j.add(i)
                        }
                    for (const e of U.unshallows) j.delete(e);
                    if (await ni.write({
                            fs: e,
                            gitdir: c,
                            oids: j
                        }), b) {
                        const t = new Map([
                                [P, R]
                            ]),
                            i = new Map;
                        let r = 10,
                            s = P;
                        for (; r--;) {
                            const e = D.symrefs.get(s);
                            if (void 0 === e) break;
                            i.set(s, e), s = e
                        }
                        const n = A.get(s);
                        n && t.set(s, n);
                        const {
                            pruned: o
                        } = await fe.updateRemoteRefs({
                            fs: e,
                            gitdir: c,
                            remote: E,
                            refs: t,
                            symrefs: i,
                            tags: m,
                            prune: y
                        });
                        y && (U.pruned = o)
                    } else {
                        const {
                            pruned: t
                        } = await fe.updateRemoteRefs({
                            fs: e,
                            gitdir: c,
                            remote: E,
                            refs: A,
                            symrefs: D.symrefs,
                            tags: m,
                            prune: y,
                            pruneTags: S
                        });
                        y && (U.pruned = t)
                    }
                    if (U.HEAD = D.symrefs.get("HEAD"), void 0 === U.HEAD) {
                        const {
                            oid: e
                        } = fe.resolveAgainstMap({
                            ref: "HEAD",
                            map: A
                        });
                        for (const [t, i] of A.entries())
                            if ("HEAD" !== t && i === e) {
                                U.HEAD = t;
                                break
                            }
                    }
                    const z = P.startsWith("refs/tags") ? "tag" : "branch";
                    if (U.FETCH_HEAD = {
                            oid: R,
                            description: `${z} '${Ht(P)}' of ${O}`
                        }, r || s) {
                        Gt(ui(U.progress), (async e => {
                            if (s && await s(e), r) {
                                const t = e.match(/([^:]*).*\((\d+?)\/(\d+?)\)/);
                                t && await r({
                                    phase: t[1].trim(),
                                    loaded: parseInt(t[2], 10),
                                    total: parseInt(t[3], 10)
                                })
                            }
                        }))
                    }
                    const G = Buffer.from(await Vt(U.packfile));
                    if (H.body.error) throw H.body.error;
                    const V = G.slice(-20).toString("hex"),
                        K = {
                            defaultBranch: U.HEAD,
                            fetchHead: U.FETCH_HEAD.oid,
                            fetchHeadDescription: U.FETCH_HEAD.description
                        };
                    if (U.headers && (K.headers = U.headers), y && (K.pruned = U.pruned), "" !== V && "5041434b0000000200000000" !== G.slice(0, 12).toString("hex")) {
                        K.packfile = `objects/pack/pack-${V}.pack`;
                        const i = q(c, K.packfile);
                        await e.write(i, G);
                        const s = i => Re({
                                fs: e,
                                cache: t,
                                gitdir: c,
                                oid: i
                            }),
                            n = await De.fromPack({
                                pack: G,
                                getExternalRefDelta: s,
                                onProgress: r
                            });
                        await e.write(i.replace(/\.pack$/, ".idx"), await n.toBuffer())
                    }
                    return K
                }
                async function pi({
                    fs: e,
                    bare: t = !1,
                    dir: i,
                    gitdir: r = (t ? i : q(i, ".git")),
                    defaultBranch: s = "master"
                }) {
                    if (await e.exists(r + "/config")) return;
                    let n = ["hooks", "info", "objects/info", "objects/pack", "refs/heads", "refs/tags"];
                    n = n.map((e => r + "/" + e));
                    for (const t of n) await e.mkdir(t);
                    await e.write(r + "/config", `[core]\n\trepositoryformatversion = 0\n\tfilemode = false\n\tbare = ${t}\n` + (t ? "" : "\tlogallrefupdates = true\n") + "\tsymlinks = false\n\tignorecase = true\n"), await e.write(r + "/HEAD", `ref: refs/heads/${s}\n`)
                }
                async function _i({
                    fs: e,
                    http: t,
                    onProgress: i,
                    onMessage: r,
                    onAuth: s,
                    onAuthSuccess: n,
                    onAuthFailure: o,
                    dir: a,
                    gitdir: c = q(a, ".git"),
                    url: l,
                    corsProxy: h,
                    ref: u,
                    remote: d = "origin",
                    depth: f,
                    since: p,
                    exclude: _ = [],
                    relative: g = !1,
                    singleBranch: v = !1,
                    noCheckout: m = !1,
                    noTags: b = !1,
                    headers: w = {},
                    cache: y = {}
                }) {
                    try {
                        return Et("fs", e), Et("http", t), Et("gitdir", c), m || Et("dir", a), Et("url", l), await async function({
                            fs: e,
                            cache: t,
                            http: i,
                            onProgress: r,
                            onMessage: s,
                            onAuth: n,
                            onAuthSuccess: o,
                            onAuthFailure: a,
                            dir: c,
                            gitdir: l,
                            url: h,
                            corsProxy: u,
                            ref: d,
                            remote: f,
                            depth: p,
                            since: _,
                            exclude: g,
                            relative: v,
                            singleBranch: m,
                            noCheckout: b,
                            noTags: w,
                            headers: y
                        }) {
                            try {
                                if (await pi({
                                        fs: e,
                                        gitdir: l
                                    }), await $t({
                                        fs: e,
                                        gitdir: l,
                                        remote: f,
                                        url: h,
                                        force: !1
                                    }), u) {
                                    const t = await ce.get({
                                        fs: e,
                                        gitdir: l
                                    });
                                    await t.set("http.corsProxy", u), await ce.save({
                                        fs: e,
                                        gitdir: l,
                                        config: t
                                    })
                                }
                                const {
                                    defaultBranch: S,
                                    fetchHead: C
                                } = await fi({
                                    fs: e,
                                    cache: t,
                                    http: i,
                                    onProgress: r,
                                    onMessage: s,
                                    onAuth: n,
                                    onAuthSuccess: o,
                                    onAuthFailure: a,
                                    gitdir: l,
                                    ref: d,
                                    remote: f,
                                    corsProxy: u,
                                    depth: p,
                                    since: _,
                                    exclude: g,
                                    relative: v,
                                    singleBranch: m,
                                    headers: y,
                                    tags: !w
                                });
                                if (null === C) return;
                                d = (d = d || S).replace("refs/heads/", ""), await Ft({
                                    fs: e,
                                    cache: t,
                                    onProgress: r,
                                    dir: c,
                                    gitdir: l,
                                    ref: d,
                                    remote: f,
                                    noCheckout: b
                                })
                            } catch (t) {
                                throw await e.rmdir(l, {
                                    recursive: !0,
                                    maxRetries: 10
                                }).catch((() => {})), t
                            }
                        }({
                            fs: new xt(e),
                            cache: y,
                            http: t,
                            onProgress: i,
                            onMessage: r,
                            onAuth: s,
                            onAuthSuccess: n,
                            onAuthFailure: o,
                            dir: a,
                            gitdir: c,
                            url: l,
                            corsProxy: h,
                            ref: u,
                            remote: d,
                            depth: f,
                            since: p,
                            exclude: _,
                            relative: g,
                            singleBranch: v,
                            noCheckout: m,
                            noTags: b,
                            headers: w
                        })
                    } catch (e) {
                        throw e.caller = "git.clone", e
                    }
                }
                async function gi({
                    fs: e,
                    cache: t,
                    gitdir: i,
                    oids: r
                }) {
                    const s = {},
                        n = r.length;
                    let o = r.map(((e, t) => ({
                        index: t,
                        oid: e
                    })));
                    for (; o.length;) {
                        const r = new Set;
                        for (const {
                                oid: e,
                                index: t
                            }
                            of o) s[e] || (s[e] = new Set), s[e].add(t), s[e].size === n && r.add(e);
                        if (r.size > 0) return [...r];
                        const a = new Map;
                        for (const {
                                oid: r,
                                index: n
                            }
                            of o) try {
                            const {
                                object: o
                            } = await Re({
                                fs: e,
                                cache: t,
                                gitdir: i,
                                oid: r
                            }), c = lt.from(o), {
                                parent: l
                            } = c.parseHeaders();
                            for (const e of l) s[e] && s[e].has(n) || a.set(e + ":" + n, {
                                oid: e,
                                index: n
                            })
                        } catch (e) {}
                        o = Array.from(a.values())
                    }
                    return []
                }
                const vi = /^.*(\r?\n|$)/gm;

                function mi({
                    branches: e,
                    contents: t
                }) {
                    const i = e[1],
                        r = e[2],
                        s = t[0],
                        n = t[1],
                        o = t[2],
                        a = n.match(vi),
                        c = s.match(vi),
                        l = o.match(vi),
                        h = u(a, c, l);
                    let d = "",
                        f = !0;
                    for (const e of h) e.ok && (d += e.ok.join("")), e.conflict && (f = !1, d += `${"<".repeat(7)} ${i}\n`, d += e.conflict.a.join(""), d += `${"=".repeat(7)}\n`, d += e.conflict.b.join(""), d += `${">".repeat(7)} ${r}\n`);
                    return {
                        cleanMerge: f,
                        mergedText: d
                    }
                }
                async function bi({
                    fs: e,
                    cache: t,
                    dir: i,
                    gitdir: r = q(i, ".git"),
                    index: s,
                    ourOid: n,
                    baseOid: o,
                    theirOid: a,
                    ourName: c = "ours",
                    baseName: l = "base",
                    theirName: h = "theirs",
                    dryRun: u = !1,
                    abortOnConflict: d = !0,
                    mergeDriver: f
                }) {
                    const p = dt({
                            ref: n
                        }),
                        _ = dt({
                            ref: o
                        }),
                        g = dt({
                            ref: a
                        }),
                        v = [],
                        m = [],
                        b = [],
                        w = [],
                        y = await mt({
                            fs: e,
                            cache: t,
                            dir: i,
                            gitdir: r,
                            trees: [p, _, g],
                            map: async function(t, [i, n, o]) {
                                const a = A(t);
                                switch (`${await Ot(i,n)}-${await Ot(o,n)}`) {
                                    case "false-false":
                                        return {
                                            mode: await n.mode(), path: a, oid: await n.oid(), type: await n.type()
                                        };
                                    case "false-true":
                                        return o ? {
                                            mode: await o.mode(),
                                            path: a,
                                            oid: await o.oid(),
                                            type: await o.type()
                                        } : void 0;
                                    case "true-false":
                                        return i ? {
                                            mode: await i.mode(),
                                            path: a,
                                            oid: await i.oid(),
                                            type: await i.type()
                                        } : void 0;
                                    case "true-true":
                                        if (i && n && o && "blob" === await i.type() && "blob" === await n.type() && "blob" === await o.type()) return async function({
                                            fs: e,
                                            gitdir: t,
                                            path: i,
                                            ours: r,
                                            base: s,
                                            theirs: n,
                                            ourName: o,
                                            theirName: a,
                                            baseName: c,
                                            dryRun: l,
                                            mergeDriver: h = mi
                                        }) {
                                            const u = "blob",
                                                d = await s.mode() === await r.mode() ? await n.mode() : await r.mode();
                                            if (await r.oid() === await n.oid()) return {
                                                cleanMerge: !0,
                                                mergeResult: {
                                                    mode: d,
                                                    path: i,
                                                    oid: await r.oid(),
                                                    type: u
                                                }
                                            };
                                            if (await r.oid() === await s.oid()) return {
                                                cleanMerge: !0,
                                                mergeResult: {
                                                    mode: d,
                                                    path: i,
                                                    oid: await n.oid(),
                                                    type: u
                                                }
                                            };
                                            if (await n.oid() === await s.oid()) return {
                                                cleanMerge: !0,
                                                mergeResult: {
                                                    mode: d,
                                                    path: i,
                                                    oid: await r.oid(),
                                                    type: u
                                                }
                                            };
                                            const f = Buffer.from(await r.content()).toString("utf8"),
                                                p = Buffer.from(await s.content()).toString("utf8"),
                                                _ = Buffer.from(await n.content()).toString("utf8"),
                                                {
                                                    mergedText: g,
                                                    cleanMerge: v
                                                } = await h({
                                                    branches: [c, o, a],
                                                    contents: [p, f, _],
                                                    path: i
                                                }),
                                                m = await Dt({
                                                    fs: e,
                                                    gitdir: t,
                                                    type: "blob",
                                                    object: Buffer.from(g, "utf8"),
                                                    dryRun: l
                                                });
                                            return {
                                                cleanMerge: v,
                                                mergeResult: {
                                                    mode: d,
                                                    path: i,
                                                    oid: m,
                                                    type: u
                                                }
                                            }
                                        }({
                                            fs: e,
                                            gitdir: r,
                                            path: a,
                                            ours: i,
                                            base: n,
                                            theirs: o,
                                            ourName: c,
                                            baseName: l,
                                            theirName: h,
                                            mergeDriver: f
                                        }).then((async e => {
                                            if (e.cleanMerge) d || s.insert({
                                                filepath: t,
                                                oid: e.mergeResult.oid,
                                                stage: 0
                                            });
                                            else if (v.push(t), m.push(t), !d) {
                                                const e = await n.oid(),
                                                    r = await i.oid(),
                                                    a = await o.oid();
                                                s.delete({
                                                    filepath: t
                                                }), s.insert({
                                                    filepath: t,
                                                    oid: e,
                                                    stage: 1
                                                }), s.insert({
                                                    filepath: t,
                                                    oid: r,
                                                    stage: 2
                                                }), s.insert({
                                                    filepath: t,
                                                    oid: a,
                                                    stage: 3
                                                })
                                            }
                                            return e.mergeResult
                                        }));
                                        if (n && !i && o && "blob" === await n.type() && "blob" === await o.type()) {
                                            if (v.push(t), b.push(t), !d) {
                                                const e = await n.oid(),
                                                    i = await o.oid();
                                                s.delete({
                                                    filepath: t
                                                }), s.insert({
                                                    filepath: t,
                                                    oid: e,
                                                    stage: 1
                                                }), s.insert({
                                                    filepath: t,
                                                    oid: i,
                                                    stage: 3
                                                })
                                            }
                                            return {
                                                mode: await o.mode(),
                                                oid: await o.oid(),
                                                type: "blob",
                                                path: a
                                            }
                                        }
                                        if (n && i && !o && "blob" === await n.type() && "blob" === await i.type()) {
                                            if (v.push(t), w.push(t), !d) {
                                                const e = await n.oid(),
                                                    r = await i.oid();
                                                s.delete({
                                                    filepath: t
                                                }), s.insert({
                                                    filepath: t,
                                                    oid: e,
                                                    stage: 1
                                                }), s.insert({
                                                    filepath: t,
                                                    oid: r,
                                                    stage: 2
                                                })
                                            }
                                            return {
                                                mode: await i.mode(),
                                                oid: await i.oid(),
                                                type: "blob",
                                                path: a
                                            }
                                        }
                                        if (n && !i && !o && "blob" === await n.type()) return;
                                        throw new ze
                                }
                            },
                            reduce: 0 === v.length || i && !d ? async (t, i) => {
                                const s = i.filter(Boolean);
                                if (t && (!t || "tree" !== t.type || 0 !== s.length)) {
                                    if (s.length > 0) {
                                        const i = new me(s).toObject(),
                                            n = await Dt({
                                                fs: e,
                                                gitdir: r,
                                                type: "tree",
                                                object: i,
                                                dryRun: u
                                            });
                                        t.oid = n
                                    }
                                    return t
                                }
                            } : void 0
                        });
                    return 0 !== v.length ? (i && !d && await mt({
                        fs: e,
                        cache: t,
                        dir: i,
                        gitdir: r,
                        trees: [dt({
                            ref: y.oid
                        })],
                        map: async function(t, [r]) {
                            const s = `${i}/${t}`;
                            if ("blob" === await r.type()) {
                                const t = await r.mode(),
                                    i = (new TextDecoder).decode(await r.content());
                                await e.write(s, i, {
                                    mode: t
                                })
                            }
                            return !0
                        }
                    }), new Ge(v, m, b, w)) : y.oid
                }
                async function wi({
                    fs: e,
                    cache: t,
                    dir: i,
                    gitdir: r,
                    ours: s,
                    theirs: n,
                    fastForward: o = !0,
                    fastForwardOnly: a = !1,
                    dryRun: c = !1,
                    noUpdateBranch: l = !1,
                    abortOnConflict: h = !0,
                    message: u,
                    author: d,
                    committer: f,
                    signingKey: p,
                    onSign: _,
                    mergeDriver: g
                }) {
                    void 0 === s && (s = await Ut({
                        fs: e,
                        gitdir: r,
                        fullname: !0
                    })), s = await fe.expand({
                        fs: e,
                        gitdir: r,
                        ref: s
                    }), n = await fe.expand({
                        fs: e,
                        gitdir: r,
                        ref: n
                    });
                    const v = await fe.resolve({
                            fs: e,
                            gitdir: r,
                            ref: s
                        }),
                        m = await fe.resolve({
                            fs: e,
                            gitdir: r,
                            ref: n
                        }),
                        b = await gi({
                            fs: e,
                            cache: t,
                            gitdir: r,
                            oids: [v, m]
                        });
                    if (1 !== b.length) throw new ze;
                    const w = b[0];
                    if (w === m) return {
                        oid: v,
                        alreadyMerged: !0
                    };
                    if (o && w === v) return c || l || await fe.writeRef({
                        fs: e,
                        gitdir: r,
                        ref: s,
                        value: m
                    }), {
                        oid: m,
                        fastForward: !0
                    };
                    {
                        if (a) throw new je;
                        const o = await M.acquire({
                            fs: e,
                            gitdir: r,
                            cache: t,
                            allowUnmerged: !1
                        }, (async o => bi({
                            fs: e,
                            cache: t,
                            dir: i,
                            gitdir: r,
                            index: o,
                            ourOid: v,
                            theirOid: m,
                            baseOid: w,
                            ourName: Ht(s),
                            baseName: "base",
                            theirName: Ht(n),
                            dryRun: c,
                            abortOnConflict: h,
                            mergeDriver: g
                        })));
                        if (o instanceof Ge) throw o;
                        u || (u = `Merge branch '${Ht(n)}' into ${Ht(s)}`);
                        return {
                            oid: await Mt({
                                fs: e,
                                cache: t,
                                gitdir: r,
                                message: u,
                                ref: s,
                                tree: o,
                                parent: [v, m],
                                author: d,
                                committer: f,
                                signingKey: p,
                                onSign: _,
                                dryRun: c,
                                noUpdateBranch: l
                            }),
                            tree: o,
                            mergeCommit: !0
                        }
                    }
                }
                async function yi({
                    fs: e,
                    http: t,
                    onProgress: i,
                    onMessage: r,
                    onAuth: s,
                    onAuthSuccess: n,
                    onAuthFailure: o,
                    dir: a,
                    gitdir: c = q(a, ".git"),
                    ref: l,
                    remote: h,
                    remoteRef: u,
                    url: d,
                    corsProxy: f,
                    depth: p = null,
                    since: _ = null,
                    exclude: g = [],
                    relative: v = !1,
                    tags: m = !1,
                    singleBranch: b = !1,
                    headers: w = {},
                    prune: y = !1,
                    pruneTags: S = !1,
                    cache: C = {}
                }) {
                    try {
                        return Et("fs", e), Et("http", t), Et("gitdir", c), await fi({
                            fs: new xt(e),
                            cache: C,
                            http: t,
                            onProgress: i,
                            onMessage: r,
                            onAuth: s,
                            onAuthSuccess: n,
                            onAuthFailure: o,
                            gitdir: c,
                            ref: l,
                            remote: h,
                            remoteRef: u,
                            url: d,
                            corsProxy: f,
                            depth: p,
                            since: _,
                            exclude: g,
                            relative: v,
                            tags: m,
                            singleBranch: b,
                            headers: w,
                            prune: y,
                            pruneTags: S
                        })
                    } catch (e) {
                        throw e.caller = "git.fetch", e
                    }
                }
                async function Si({
                    http: e,
                    onAuth: t,
                    onAuthSuccess: i,
                    onAuthFailure: r,
                    corsProxy: s,
                    url: n,
                    headers: o = {},
                    forPush: a = !1
                }) {
                    try {
                        Et("http", e), Et("url", n);
                        const c = ri.getRemoteHelperFor({
                                url: n
                            }),
                            l = await c.discover({
                                http: e,
                                onAuth: t,
                                onAuthSuccess: i,
                                onAuthFailure: r,
                                corsProxy: s,
                                service: a ? "git-receive-pack" : "git-upload-pack",
                                url: n,
                                headers: o,
                                protocolVersion: 1
                            }),
                            h = {
                                capabilities: [...l.capabilities]
                            };
                        for (const [e, t] of l.refs) {
                            const i = e.split("/"),
                                r = i.pop();
                            let s = h;
                            for (const e of i) s[e] = s[e] || {}, s = s[e];
                            s[r] = t
                        }
                        for (const [e, t] of l.symrefs) {
                            const i = e.split("/"),
                                r = i.pop();
                            let s = h;
                            for (const e of i) s[e] = s[e] || {}, s = s[e];
                            s[r] = t
                        }
                        return h
                    } catch (e) {
                        throw e.caller = "git.getRemoteInfo", e
                    }
                }
                async function Ci({
                    fs: e,
                    cache: t,
                    gitdir: i,
                    oid: r
                }) {
                    const {
                        type: s,
                        object: n
                    } = await Re({
                        fs: e,
                        cache: t,
                        gitdir: i,
                        oid: r
                    });
                    if ("tag" === s) return Ci({
                        fs: e,
                        cache: t,
                        gitdir: i,
                        oid: r = at.from(n).parse().object
                    });
                    if ("commit" !== s) throw new j(r, s, "commit");
                    return {
                        commit: lt.from(n),
                        oid: r
                    }
                }
                async function xi({
                    fs: e,
                    cache: t,
                    gitdir: i,
                    oid: r
                }) {
                    const {
                        commit: s,
                        oid: n
                    } = await Ci({
                        fs: e,
                        cache: t,
                        gitdir: i,
                        oid: r
                    });
                    return {
                        oid: n,
                        commit: s.parse(),
                        payload: s.withoutSignature()
                    }
                }

                function Ei(e, t) {
                    return e.committer.timestamp - t.committer.timestamp
                }
                async function Oi({
                    fs: e,
                    cache: t,
                    gitdir: i,
                    oid: r,
                    fileId: s
                }) {
                    if ("e69de29bb2d1d6434b8b29ae775ad8c2e48c5391" === s) return;
                    const n = r;
                    let o;
                    const a = await ht({
                            fs: e,
                            cache: t,
                            gitdir: i,
                            oid: r
                        }),
                        c = a.tree;
                    return s === a.oid ? o = a.path : (o = await ki({
                        fs: e,
                        cache: t,
                        gitdir: i,
                        tree: c,
                        fileId: s,
                        oid: n
                    }), Array.isArray(o) && (0 === o.length ? o = void 0 : 1 === o.length && (o = o[0]))), o
                }
                async function ki({
                    fs: e,
                    cache: t,
                    gitdir: i,
                    tree: r,
                    fileId: s,
                    oid: n,
                    filepaths: o = [],
                    parentPath: a = ""
                }) {
                    const c = r.entries().map((function(r) {
                        let c;
                        return r.oid === s ? (c = q(a, r.path), o.push(c)) : "tree" === r.type && (c = Re({
                            fs: e,
                            cache: t,
                            gitdir: i,
                            oid: r.oid
                        }).then((function({
                            object: c
                        }) {
                            return ki({
                                fs: e,
                                cache: t,
                                gitdir: i,
                                tree: me.from(c),
                                fileId: s,
                                oid: n,
                                filepaths: o,
                                parentPath: q(a, r.path)
                            })
                        }))), c
                    }));
                    return await Promise.all(c), o
                }
                async function Li({
                    fs: e,
                    dir: t,
                    gitdir: i = q(t, ".git"),
                    filepath: r,
                    ref: s = "HEAD",
                    depth: n,
                    since: o,
                    force: a,
                    follow: c,
                    cache: l = {}
                }) {
                    try {
                        return Et("fs", e), Et("gitdir", i), Et("ref", s), await async function({
                            fs: e,
                            cache: t,
                            gitdir: i,
                            filepath: r,
                            ref: s,
                            depth: n,
                            since: o,
                            force: a,
                            follow: c
                        }) {
                            const l = void 0 === o ? void 0 : Math.floor(o.valueOf() / 1e3),
                                h = [],
                                u = await ni.read({
                                    fs: e,
                                    gitdir: i
                                }),
                                d = await fe.resolve({
                                    fs: e,
                                    gitdir: i,
                                    ref: s
                                }),
                                f = [await xi({
                                    fs: e,
                                    cache: t,
                                    gitdir: i,
                                    oid: d
                                })];
                            let p, _, g;

                            function v(e) {
                                g && r && h.push(e)
                            }
                            for (; f.length > 0;) {
                                const s = f.pop();
                                if (void 0 !== l && s.commit.committer.timestamp <= l) break;
                                if (r) {
                                    let n;
                                    try {
                                        n = await Rt({
                                            fs: e,
                                            cache: t,
                                            gitdir: i,
                                            oid: s.commit.tree,
                                            filepath: r
                                        }), _ && p !== n && h.push(_), p = n, _ = s, g = !0
                                    } catch (n) {
                                        if (!(n instanceof $)) throw n;
                                        {
                                            let o = c && p;
                                            if (o && (o = await Oi({
                                                    fs: e,
                                                    cache: t,
                                                    gitdir: i,
                                                    oid: s.commit.tree,
                                                    fileId: p
                                                }), o))
                                                if (Array.isArray(o)) {
                                                    if (_) {
                                                        const s = await Oi({
                                                            fs: e,
                                                            cache: t,
                                                            gitdir: i,
                                                            oid: _.commit.tree,
                                                            fileId: p
                                                        });
                                                        if (Array.isArray(s)) {
                                                            if (o = o.filter((e => -1 === s.indexOf(e))), 1 !== o.length) {
                                                                o = !1, _ && h.push(_);
                                                                break
                                                            }
                                                            o = o[0], r = o, _ && h.push(_)
                                                        }
                                                    }
                                                } else r = o, _ && h.push(_);
                                            if (!o) {
                                                if (g && p && (h.push(_), !a)) break;
                                                if (!a && !c) throw n
                                            }
                                            _ = s, g = !1
                                        }
                                    }
                                } else h.push(s);
                                if (void 0 !== n && h.length === n) {
                                    v(s);
                                    break
                                }
                                if (!u.has(s.oid))
                                    for (const r of s.commit.parent) {
                                        const s = await xi({
                                            fs: e,
                                            cache: t,
                                            gitdir: i,
                                            oid: r
                                        });
                                        f.map((e => e.oid)).includes(s.oid) || f.push(s)
                                    }
                                0 === f.length && v(s), f.sort(((e, t) => Ei(e.commit, t.commit)))
                            }
                            return h
                        }({
                            fs: new xt(e),
                            cache: l,
                            gitdir: i,
                            filepath: r,
                            ref: s,
                            depth: n,
                            since: o,
                            force: a,
                            follow: c
                        })
                    } catch (e) {
                        throw e.caller = "git.log", e
                    }
                }
                async function Di({
                    fs: e,
                    onSign: t,
                    dir: i,
                    gitdir: r = q(i, ".git"),
                    ours: s,
                    theirs: n,
                    fastForward: o = !0,
                    fastForwardOnly: a = !1,
                    dryRun: c = !1,
                    noUpdateBranch: l = !1,
                    abortOnConflict: h = !0,
                    message: u,
                    author: d,
                    committer: f,
                    signingKey: p,
                    cache: _ = {},
                    mergeDriver: g
                }) {
                    try {
                        Et("fs", e), p && Et("onSign", t);
                        const v = new xt(e),
                            m = await Bt({
                                fs: v,
                                gitdir: r,
                                author: d
                            });
                        if (!(m || a && o)) throw new Ve("author");
                        const b = await It({
                            fs: v,
                            gitdir: r,
                            author: m,
                            committer: f
                        });
                        if (!(b || a && o)) throw new Ve("committer");
                        return await wi({
                            fs: v,
                            cache: _,
                            dir: i,
                            gitdir: r,
                            ours: s,
                            theirs: n,
                            fastForward: o,
                            fastForwardOnly: a,
                            dryRun: c,
                            noUpdateBranch: l,
                            abortOnConflict: h,
                            message: u,
                            author: m,
                            committer: b,
                            signingKey: p,
                            onSign: t,
                            mergeDriver: g
                        })
                    } catch (e) {
                        throw e.caller = "git.merge", e
                    }
                }

                function Mi(e) {
                    return e[Symbol.asyncIterator] ? e[Symbol.asyncIterator]() : e[Symbol.iterator] ? e[Symbol.iterator]() : e.next ? e : function(e) {
                        let t = [e];
                        return {
                            next: () => Promise.resolve({
                                done: 0 === t.length,
                                value: t.pop()
                            }),
                            return: () => (t = [], {}),
                            [Symbol.asyncIterator]() {
                                return this
                            }
                        }
                    }(e)
                }
                async function Ai(e) {
                    let t = 0;
                    const i = [];
                    await async function(e, t) {
                        const i = Mi(e);
                        for (;;) {
                            const {
                                value: e,
                                done: r
                            } = await i.next();
                            if (e && await t(e), r) break
                        }
                        i.return && i.return()
                    }(e, (e => {
                        i.push(e), t += e.byteLength
                    }));
                    const r = new Uint8Array(t);
                    let s = 0;
                    for (const e of i) r.set(e, s), s += e.byteLength;
                    return r
                }
                const Ri = {
                    request: async function({
                        onProgress: e,
                        url: t,
                        method: i = "GET",
                        headers: r = {},
                        body: s
                    }) {
                        s && (s = await Ai(s));
                        const n = await fetch(t, {
                                method: i,
                                headers: r,
                                body: s
                            }),
                            o = n.body && n.body.getReader ? function(e) {
                                if (e[Symbol.asyncIterator]) return e;
                                const t = e.getReader();
                                return {
                                    next: () => t.read(),
                                    return: () => (t.releaseLock(), {}),
                                    [Symbol.asyncIterator]() {
                                        return this
                                    }
                                }
                            }(n.body) : [new Uint8Array(await n.arrayBuffer())];
                        r = {};
                        for (const [e, t] of n.headers.entries()) r[e] = t;
                        return {
                            url: n.url,
                            method: n.method,
                            statusCode: n.status,
                            statusMessage: n.statusText,
                            body: o,
                            headers: r
                        }
                    }
                };
                let Pi = console;

                function Ti(e) {
                    Pi = e
                }
                async function Bi(e) {
                    try {
                        return (await Li({
                            fs: r,
                            dir: e,
                            depth: 1
                        }))[0].oid
                    } catch {
                        return null
                    }
                }
                async function Ii(e, t) {
                    const i = await Bi(t);
                    if (null === i) return;
                    let n = await Si({
                        http: Ri,
                        url: e
                    });
                    const o = n.HEAD.split("/");
                    if (i !== n[o[0]][o[1]][o[2]]) return;
                    const a = s.join(t, ".git/objects/pack");
                    if (!1 === r.existsSync(a)) return;
                    const c = r.readdirSync(a);
                    0 !== c.length && 2 !== c.length && (Pi.log("> cleanup && git fetch --depth 1"), c.forEach((e => {
                        r.rmSync(s.join(a, e), {
                            force: !0
                        })
                    })), await yi({
                        fs: r,
                        http: Ri,
                        dir: t,
                        url: e,
                        singleBranch: !0,
                        tags: !1,
                        depth: 1
                    }))
                }
                async function $i(e, t) {
                    const i = await Bi(t);
                    if (null === i) return Pi.log("> git clone " + e + " --depth 1 --single-branch"), await _i({
                        fs: r,
                        http: Ri,
                        dir: t,
                        url: e,
                        singleBranch: !0,
                        depth: 1
                    }), !0;
                    {
                        Pi.log("> git pull");
                        const s = (await yi({
                            fs: r,
                            http: Ri,
                            dir: t,
                            url: e,
                            singleBranch: !0,
                            tags: !1
                        })).fetchHead;
                        if (i === s) return Pi.log("Already up to date."), !1;
                        {
                            Pi.log("Updating " + i.substring(0, 7) + ".." + s.substring(0, 7)), await Di({
                                fs: r,
                                dir: t,
                                fastForwardOnly: !0,
                                theirs: s
                            }), await Nt({
                                fs: r,
                                dir: t,
                                force: !0
                            }), Pi.log("Commits:");
                            const e = await Li({
                                fs: r,
                                dir: t,
                                depth: 10
                            });
                            for (const t of e) {
                                if (t.oid === i) return !0;
                                Pi.log(new Date(1e3 * t.commit.author.timestamp).toLocaleString(void 0, {
                                    hour12: !1
                                }) + " " + t.commit.message.trimEnd())
                            }
                            return Pi.log("..."), !0
                        }
                    }
                }
            },
            7903: (e, t, i) => {
                "use strict";
                i.d(t, {
                    v: () => c
                });
                var r = i(4244),
                    s = i(8267),
                    n = i(4457),
                    o = i(6177);
                let a = !1;

                function c(e, t) {
                    const i = document.getElementById(e),
                        c = {
                            fontSize: 16,
                            cursorStyle: "underline",
                            windowsMode: "win32" === process.platform,
                            convertEol: !0,
                            theme: {
                                background: "#1E1E1E",
                                foreground: "#D4D4D4",
                                selection: "#3A3D41",
                                selectionBackground: "#3A3D41"
                            },
                            allowProposedApi: !0
                        };
                    "android" !== process.platform && (c.scrollback = 9999999);
                    const l = new r.Terminal(c);
                    l.attachCustomKeyEventHandler((function(e) {
                        if (!0 === e.ctrlKey || !0 === e.metaKey)
                            if ("c" === e.key) {
                                if (!0 === l.hasSelection()) return document.execCommand("copy"), l.clearSelection(), e.stopPropagation(), e.preventDefault(), !1
                            } else {
                                if ("a" === e.key) return setTimeout((function() {
                                    l.selectAll()
                                }), 100), e.stopPropagation(), e.preventDefault(), !1;
                                if ("l" === e.key) return e.stopPropagation(), e.preventDefault(), l.clear(), !1
                            } return !0
                    })), r.Terminal.prototype.log = r.Terminal.prototype.writeln, l.warn = e => {
                        l.writeln("[1;33m" + e + "[0m")
                    }, l.error = e => {
                        l.writeln("[1;31m" + e + "[0m")
                    }, l.open(i), l._core._inputHandler._parser._transitions.table[127] = 32;
                    try {
                        const e = new n.WebglAddon;
                        e.onContextLoss((t => {
                            e.dispose()
                        })), l.loadAddon(e)
                    } catch (e) {
                        console.error(e);
                        try {
                            const e = new o.CanvasAddon;
                            l.loadAddon(e)
                        } catch (e) {
                            console.error(e)
                        }
                    }
                    const h = new s.FitAddon;
                    l.loadAddon(h);
                    let u = window.innerHeight,
                        d = null;
                    return window.addEventListener("resize", (() => {
                        clearTimeout(d), d = setTimeout((() => {
                            const e = window.innerHeight;
                            if (u !== e) {
                                const t = l._core._renderService.dimensions.device.cell.height,
                                    i = (e - l.element.offsetTop) / t,
                                    r = h.proposeDimensions();
                                l.resize(r.cols, Math.floor(i - 2))
                            }
                            u = e, h.fit()
                        }), 50)
                    }), !1), h.fit(), !0 === t && !0 !== a && (a = !0, function(e) {
                        const t = console.log,
                            i = console.error;

                        function r(e) {
                            let t = "";
                            for (const i in e) try {
                                const r = e[i];
                                t += "string" == typeof r ? r + " " : JSON.stringify(r, null, 2).replace(/^\"|\"$/g, "") + " "
                            } catch {}
                            return t
                        }
                        console.log = function() {
                            t.apply(console, arguments);
                            const i = r(arguments);
                            e.writeln(i)
                        }, console.error = function() {
                            i.apply(console, arguments);
                            const t = r(arguments);
                            e.writeln("[1;31m" + t + "[0m")
                        }
                    }(l)), l
                }
            },
            8447: e => {
                "use strict";
                e.exports = require("bufferutil")
            },
            7838: e => {
                "use strict";
                e.exports = require("utf-8-validate")
            },
            4300: e => {
                "use strict";
                e.exports = require("buffer")
            },
            2081: e => {
                "use strict";
                e.exports = require("child_process")
            },
            6113: e => {
                "use strict";
                e.exports = require("crypto")
            },
            2298: e => {
                "use strict";
                e.exports = require("electron")
            },
            2361: e => {
                "use strict";
                e.exports = require("events")
            },
            7147: e => {
                "use strict";
                e.exports = require("fs")
            },
            3685: e => {
                "use strict";
                e.exports = require("http")
            },
            5687: e => {
                "use strict";
                e.exports = require("https")
            },
            1808: e => {
                "use strict";
                e.exports = require("net")
            },
            2037: e => {
                "use strict";
                e.exports = require("os")
            },
            1017: e => {
                "use strict";
                e.exports = require("path")
            },
            2781: e => {
                "use strict";
                e.exports = require("stream")
            },
            4404: e => {
                "use strict";
                e.exports = require("tls")
            },
            7310: e => {
                "use strict";
                e.exports = require("url")
            },
            3837: e => {
                "use strict";
                e.exports = require("util")
            },
            9796: e => {
                "use strict";
                e.exports = require("zlib")
            },
            2570: (e, t) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.assertValidPattern = void 0;
                t.assertValidPattern = e => {
                    if ("string" != typeof e) throw new TypeError("invalid pattern");
                    if (e.length > 65536) throw new TypeError("pattern is too long")
                }
            },
            5855: (e, t, i) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.AST = void 0;
                const r = i(1701),
                    s = i(6635),
                    n = new Set(["!", "?", "+", "*", "@"]),
                    o = e => n.has(e),
                    a = "(?!\\.)",
                    c = new Set(["[", "."]),
                    l = new Set(["..", "."]),
                    h = new Set("().*{}+?[]^$\\!"),
                    u = "[^/]",
                    d = u + "*?",
                    f = u + "+?";
                class p {
                    type;
                    #e;
                    #t;
                    #i = !1;
                    #r = [];
                    #s;
                    #n;
                    #o;
                    #a = !1;
                    #c;
                    #l;
                    #h = !1;
                    constructor(e, t, i = {}) {
                        this.type = e, e && (this.#t = !0), this.#s = t, this.#e = this.#s ? this.#s.#e : this, this.#c = this.#e === this ? i : this.#e.#c, this.#o = this.#e === this ? [] : this.#e.#o, "!" !== e || this.#e.#a || this.#o.push(this), this.#n = this.#s ? this.#s.#r.length : 0
                    }
                    get hasMagic() {
                        if (void 0 !== this.#t) return this.#t;
                        for (const e of this.#r)
                            if ("string" != typeof e && (e.type || e.hasMagic)) return this.#t = !0;
                        return this.#t
                    }
                    toString() {
                        return void 0 !== this.#l ? this.#l : this.type ? this.#l = this.type + "(" + this.#r.map((e => String(e))).join("|") + ")" : this.#l = this.#r.map((e => String(e))).join("")
                    }
                    #u() {
                        if (this !== this.#e) throw new Error("should only call on root");
                        if (this.#a) return this;
                        let e;
                        for (this.toString(), this.#a = !0; e = this.#o.pop();) {
                            if ("!" !== e.type) continue;
                            let t = e,
                                i = t.#s;
                            for (; i;) {
                                for (let r = t.#n + 1; !i.type && r < i.#r.length; r++)
                                    for (const t of e.#r) {
                                        if ("string" == typeof t) throw new Error("string part in extglob AST??");
                                        t.copyIn(i.#r[r])
                                    }
                                t = i, i = t.#s
                            }
                        }
                        return this
                    }
                    push(...e) {
                        for (const t of e)
                            if ("" !== t) {
                                if ("string" != typeof t && !(t instanceof p && t.#s === this)) throw new Error("invalid part: " + t);
                                this.#r.push(t)
                            }
                    }
                    toJSON() {
                        const e = null === this.type ? this.#r.slice().map((e => "string" == typeof e ? e : e.toJSON())) : [this.type, ...this.#r.map((e => e.toJSON()))];
                        return this.isStart() && !this.type && e.unshift([]), this.isEnd() && (this === this.#e || this.#e.#a && "!" === this.#s?.type) && e.push({}), e
                    }
                    isStart() {
                        if (this.#e === this) return !0;
                        if (!this.#s?.isStart()) return !1;
                        if (0 === this.#n) return !0;
                        const e = this.#s;
                        for (let t = 0; t < this.#n; t++) {
                            const i = e.#r[t];
                            if (!(i instanceof p && "!" === i.type)) return !1
                        }
                        return !0
                    }
                    isEnd() {
                        if (this.#e === this) return !0;
                        if ("!" === this.#s?.type) return !0;
                        if (!this.#s?.isEnd()) return !1;
                        if (!this.type) return this.#s?.isEnd();
                        const e = this.#s ? this.#s.#r.length : 0;
                        return this.#n === e - 1
                    }
                    copyIn(e) {
                        "string" == typeof e ? this.push(e) : this.push(e.clone(this))
                    }
                    clone(e) {
                        const t = new p(this.type, e);
                        for (const e of this.#r) t.copyIn(e);
                        return t
                    }
                    static #d(e, t, i, r) {
                        let s = !1,
                            n = !1,
                            a = -1,
                            c = !1;
                        if (null === t.type) {
                            let l = i,
                                h = "";
                            for (; l < e.length;) {
                                const i = e.charAt(l++);
                                if (s || "\\" === i) s = !s, h += i;
                                else if (n) l === a + 1 ? "^" !== i && "!" !== i || (c = !0) : "]" !== i || l === a + 2 && c || (n = !1), h += i;
                                else if ("[" !== i)
                                    if (r.noext || !o(i) || "(" !== e.charAt(l)) h += i;
                                    else {
                                        t.push(h), h = "";
                                        const s = new p(i, t);
                                        l = p.#d(e, s, l, r), t.push(s)
                                    }
                                else n = !0, a = l, c = !1, h += i
                            }
                            return t.push(h), l
                        }
                        let l = i + 1,
                            h = new p(null, t);
                        const u = [];
                        let d = "";
                        for (; l < e.length;) {
                            const i = e.charAt(l++);
                            if (s || "\\" === i) s = !s, d += i;
                            else if (n) l === a + 1 ? "^" !== i && "!" !== i || (c = !0) : "]" !== i || l === a + 2 && c || (n = !1), d += i;
                            else if ("[" !== i)
                                if (o(i) && "(" === e.charAt(l)) {
                                    h.push(d), d = "";
                                    const t = new p(i, h);
                                    h.push(t), l = p.#d(e, t, l, r)
                                } else if ("|" !== i) {
                                if (")" === i) return "" === d && 0 === t.#r.length && (t.#h = !0), h.push(d), d = "", t.push(...u, h), l;
                                d += i
                            } else h.push(d), d = "", u.push(h), h = new p(null, t);
                            else n = !0, a = l, c = !1, d += i
                        }
                        return t.type = null, t.#t = void 0, t.#r = [e.substring(i - 1)], l
                    }
                    static fromGlob(e, t = {}) {
                        const i = new p(null, void 0, t);
                        return p.#d(e, i, 0, t), i
                    }
                    toMMPattern() {
                        if (this !== this.#e) return this.#e.toMMPattern();
                        const e = this.toString(),
                            [t, i, r, s] = this.toRegExpSource();
                        if (!(r || this.#t || this.#c.nocase && !this.#c.nocaseMagicOnly && e.toUpperCase() !== e.toLowerCase())) return i;
                        const n = (this.#c.nocase ? "i" : "") + (s ? "u" : "");
                        return Object.assign(new RegExp(`^${t}$`, n), {
                            _src: t,
                            _glob: e
                        })
                    }
                    get options() {
                        return this.#c
                    }
                    toRegExpSource(e) {
                        const t = e ?? !!this.#c.dot;
                        if (this.#e === this && this.#u(), !this.type) {
                            const i = this.isStart() && this.isEnd(),
                                r = this.#r.map((t => {
                                    const [r, s, n, o] = "string" == typeof t ? p.#f(t, this.#t, i) : t.toRegExpSource(e);
                                    return this.#t = this.#t || n, this.#i = this.#i || o, r
                                })).join("");
                            let n = "";
                            if (this.isStart() && "string" == typeof this.#r[0]) {
                                if (!(1 === this.#r.length && l.has(this.#r[0]))) {
                                    const i = c,
                                        s = t && i.has(r.charAt(0)) || r.startsWith("\\.") && i.has(r.charAt(2)) || r.startsWith("\\.\\.") && i.has(r.charAt(4)),
                                        o = !t && !e && i.has(r.charAt(0));
                                    n = s ? "(?!(?:^|/)\\.\\.?(?:$|/))" : o ? a : ""
                                }
                            }
                            let o = "";
                            this.isEnd() && this.#e.#a && "!" === this.#s?.type && (o = "(?:$|\\/)");
                            return [n + r + o, (0, s.unescape)(r), this.#t = !!this.#t, this.#i]
                        }
                        const i = "*" === this.type || "+" === this.type,
                            r = "!" === this.type ? "(?:(?!(?:" : "(?:";
                        let n = this.#p(t);
                        if (this.isStart() && this.isEnd() && !n && "!" !== this.type) {
                            const e = this.toString();
                            return this.#r = [e], this.type = null, this.#t = void 0, [e, (0, s.unescape)(this.toString()), !1, !1]
                        }
                        let o = !i || e || t ? "" : this.#p(!0);
                        o === n && (o = ""), o && (n = `(?:${n})(?:${o})*?`);
                        let h = "";
                        if ("!" === this.type && this.#h) h = (this.isStart() && !t ? a : "") + f;
                        else {
                            h = r + n + ("!" === this.type ? "))" + (!this.isStart() || t || e ? "" : a) + d + ")" : "@" === this.type ? ")" : "?" === this.type ? ")?" : "+" === this.type && o ? ")" : "*" === this.type && o ? ")?" : `)${this.type}`)
                        }
                        return [h, (0, s.unescape)(n), this.#t = !!this.#t, this.#i]
                    }
                    #p(e) {
                        return this.#r.map((t => {
                            if ("string" == typeof t) throw new Error("string type in extglob ast??");
                            const [i, r, s, n] = t.toRegExpSource(e);
                            return this.#i = this.#i || n, i
                        })).filter((e => !(this.isStart() && this.isEnd() && !e))).join("|")
                    }
                    static #f(e, t, i = !1) {
                        let n = !1,
                            o = "",
                            a = !1;
                        for (let s = 0; s < e.length; s++) {
                            const c = e.charAt(s);
                            if (n) n = !1, o += (h.has(c) ? "\\" : "") + c;
                            else if ("\\" !== c) {
                                if ("[" === c) {
                                    const [i, n, c, l] = (0, r.parseClass)(e, s);
                                    if (c) {
                                        o += i, a = a || n, s += c - 1, t = t || l;
                                        continue
                                    }
                                }
                                "*" !== c ? "?" !== c ? o += c.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&") : (o += u, t = !0) : (o += i && "*" === e ? f : d, t = !0)
                            } else s === e.length - 1 ? o += "\\\\" : n = !0
                        }
                        return [o, (0, s.unescape)(e), !!t, a]
                    }
                }
                t.AST = p
            },
            1701: (e, t) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.parseClass = void 0;
                const i = {
                        "[:alnum:]": ["\\p{L}\\p{Nl}\\p{Nd}", !0],
                        "[:alpha:]": ["\\p{L}\\p{Nl}", !0],
                        "[:ascii:]": ["\\x00-\\x7f", !1],
                        "[:blank:]": ["\\p{Zs}\\t", !0],
                        "[:cntrl:]": ["\\p{Cc}", !0],
                        "[:digit:]": ["\\p{Nd}", !0],
                        "[:graph:]": ["\\p{Z}\\p{C}", !0, !0],
                        "[:lower:]": ["\\p{Ll}", !0],
                        "[:print:]": ["\\p{C}", !0],
                        "[:punct:]": ["\\p{P}", !0],
                        "[:space:]": ["\\p{Z}\\t\\r\\n\\v\\f", !0],
                        "[:upper:]": ["\\p{Lu}", !0],
                        "[:word:]": ["\\p{L}\\p{Nl}\\p{Nd}\\p{Pc}", !0],
                        "[:xdigit:]": ["A-Fa-f0-9", !1]
                    },
                    r = e => e.replace(/[[\]\\-]/g, "\\$&"),
                    s = e => e.join("");
                t.parseClass = (e, t) => {
                    const n = t;
                    if ("[" !== e.charAt(n)) throw new Error("not in a brace expression");
                    const o = [],
                        a = [];
                    let c = n + 1,
                        l = !1,
                        h = !1,
                        u = !1,
                        d = !1,
                        f = n,
                        p = "";
                    e: for (; c < e.length;) {
                        const t = e.charAt(c);
                        if ("!" !== t && "^" !== t || c !== n + 1) {
                            if ("]" === t && l && !u) {
                                f = c + 1;
                                break
                            }
                            if (l = !0, "\\" !== t || u) {
                                if ("[" === t && !u)
                                    for (const [t, [r, s, l]] of Object.entries(i))
                                        if (e.startsWith(t, c)) {
                                            if (p) return ["$.", !1, e.length - n, !0];
                                            c += t.length, l ? a.push(r) : o.push(r), h = h || s;
                                            continue e
                                        } u = !1, p ? (t > p ? o.push(r(p) + "-" + r(t)) : t === p && o.push(r(t)), p = "", c++) : e.startsWith("-]", c + 1) ? (o.push(r(t + "-")), c += 2) : e.startsWith("-", c + 1) ? (p = t, c += 2) : (o.push(r(t)), c++)
                            } else u = !0, c++
                        } else d = !0, c++
                    }
                    if (f < c) return ["", !1, 0, !1];
                    if (!o.length && !a.length) return ["$.", !1, e.length - n, !0];
                    if (0 === a.length && 1 === o.length && /^\\?.$/.test(o[0]) && !d) {
                        const e = 2 === o[0].length ? o[0].slice(-1) : o[0];
                        return [(_ = e, _.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&")), !1, f - n, !1]
                    }
                    var _;
                    const g = "[" + (d ? "^" : "") + s(o) + "]",
                        v = "[" + (d ? "" : "^") + s(a) + "]";
                    return [o.length && a.length ? "(" + g + "|" + v + ")" : o.length ? g : v, h, f - n, !0]
                }
            },
            3387: (e, t) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.escape = void 0;
                t.escape = (e, {
                    windowsPathsNoEscape: t = !1
                } = {}) => t ? e.replace(/[?*()[\]]/g, "[$&]") : e.replace(/[?*()[\]\\]/g, "\\$&")
            },
            3640: function(e, t, i) {
                "use strict";
                var r = this && this.__importDefault || function(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                };
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.unescape = t.escape = t.AST = t.Minimatch = t.match = t.makeRe = t.braceExpand = t.defaults = t.filter = t.GLOBSTAR = t.sep = t.minimatch = void 0;
                const s = r(i(3644)),
                    n = i(2570),
                    o = i(5855),
                    a = i(3387),
                    c = i(6635);
                t.minimatch = (e, t, i = {}) => ((0, n.assertValidPattern)(t), !(!i.nocomment && "#" === t.charAt(0)) && new T(t, i).match(e));
                const l = /^\*+([^+@!?\*\[\(]*)$/,
                    h = e => t => !t.startsWith(".") && t.endsWith(e),
                    u = e => t => t.endsWith(e),
                    d = e => (e = e.toLowerCase(), t => !t.startsWith(".") && t.toLowerCase().endsWith(e)),
                    f = e => (e = e.toLowerCase(), t => t.toLowerCase().endsWith(e)),
                    p = /^\*+\.\*+$/,
                    _ = e => !e.startsWith(".") && e.includes("."),
                    g = e => "." !== e && ".." !== e && e.includes("."),
                    v = /^\.\*+$/,
                    m = e => "." !== e && ".." !== e && e.startsWith("."),
                    b = /^\*+$/,
                    w = e => 0 !== e.length && !e.startsWith("."),
                    y = e => 0 !== e.length && "." !== e && ".." !== e,
                    S = /^\?+([^+@!?\*\[\(]*)?$/,
                    C = ([e, t = ""]) => {
                        const i = k([e]);
                        return t ? (t = t.toLowerCase(), e => i(e) && e.toLowerCase().endsWith(t)) : i
                    },
                    x = ([e, t = ""]) => {
                        const i = L([e]);
                        return t ? (t = t.toLowerCase(), e => i(e) && e.toLowerCase().endsWith(t)) : i
                    },
                    E = ([e, t = ""]) => {
                        const i = L([e]);
                        return t ? e => i(e) && e.endsWith(t) : i
                    },
                    O = ([e, t = ""]) => {
                        const i = k([e]);
                        return t ? e => i(e) && e.endsWith(t) : i
                    },
                    k = ([e]) => {
                        const t = e.length;
                        return e => e.length === t && !e.startsWith(".")
                    },
                    L = ([e]) => {
                        const t = e.length;
                        return e => e.length === t && "." !== e && ".." !== e
                    },
                    D = "object" == typeof process && process ? {
                        NODE_ENV: "production",
                        BASE_URL: ""
                    }.__MINIMATCH_TESTING_PLATFORM__ || process.platform : "posix",
                    M = {
                        sep: "\\"
                    },
                    A = {
                        sep: "/"
                    };
                t.sep = "win32" === D ? M.sep : A.sep, t.minimatch.sep = t.sep, t.GLOBSTAR = Symbol("globstar **"), t.minimatch.GLOBSTAR = t.GLOBSTAR;
                t.filter = (e, i = {}) => r => (0, t.minimatch)(r, e, i), t.minimatch.filter = t.filter;
                const R = (e, t = {}) => Object.assign({}, e, t);
                t.defaults = e => {
                    if (!e || "object" != typeof e || !Object.keys(e).length) return t.minimatch;
                    const i = t.minimatch;
                    return Object.assign(((t, r, s = {}) => i(t, r, R(e, s))), {
                        Minimatch: class extends i.Minimatch {
                            constructor(t, i = {}) {
                                super(t, R(e, i))
                            }
                            static defaults(t) {
                                return i.defaults(R(e, t)).Minimatch
                            }
                        },
                        AST: class extends i.AST {
                            constructor(t, i, r = {}) {
                                super(t, i, R(e, r))
                            }
                            static fromGlob(t, r = {}) {
                                return i.AST.fromGlob(t, R(e, r))
                            }
                        },
                        unescape: (t, r = {}) => i.unescape(t, R(e, r)),
                        escape: (t, r = {}) => i.escape(t, R(e, r)),
                        filter: (t, r = {}) => i.filter(t, R(e, r)),
                        defaults: t => i.defaults(R(e, t)),
                        makeRe: (t, r = {}) => i.makeRe(t, R(e, r)),
                        braceExpand: (t, r = {}) => i.braceExpand(t, R(e, r)),
                        match: (t, r, s = {}) => i.match(t, r, R(e, s)),
                        sep: i.sep,
                        GLOBSTAR: t.GLOBSTAR
                    })
                }, t.minimatch.defaults = t.defaults;
                t.braceExpand = (e, t = {}) => ((0, n.assertValidPattern)(e), t.nobrace || !/\{(?:(?!\{).)*\}/.test(e) ? [e] : (0, s.default)(e)), t.minimatch.braceExpand = t.braceExpand;
                t.makeRe = (e, t = {}) => new T(e, t).makeRe(), t.minimatch.makeRe = t.makeRe;
                t.match = (e, t, i = {}) => {
                    const r = new T(t, i);
                    return e = e.filter((e => r.match(e))), r.options.nonull && !e.length && e.push(t), e
                }, t.minimatch.match = t.match;
                const P = /[?*]|[+@!]\(.*?\)|\[|\]/;
                class T {
                    options;
                    set;
                    pattern;
                    windowsPathsNoEscape;
                    nonegate;
                    negate;
                    comment;
                    empty;
                    preserveMultipleSlashes;
                    partial;
                    globSet;
                    globParts;
                    nocase;
                    isWindows;
                    platform;
                    windowsNoMagicRoot;
                    regexp;
                    constructor(e, t = {}) {
                        (0, n.assertValidPattern)(e), t = t || {}, this.options = t, this.pattern = e, this.platform = t.platform || D, this.isWindows = "win32" === this.platform, this.windowsPathsNoEscape = !!t.windowsPathsNoEscape || !1 === t.allowWindowsEscape, this.windowsPathsNoEscape && (this.pattern = this.pattern.replace(/\\/g, "/")), this.preserveMultipleSlashes = !!t.preserveMultipleSlashes, this.regexp = null, this.negate = !1, this.nonegate = !!t.nonegate, this.comment = !1, this.empty = !1, this.partial = !!t.partial, this.nocase = !!this.options.nocase, this.windowsNoMagicRoot = void 0 !== t.windowsNoMagicRoot ? t.windowsNoMagicRoot : !(!this.isWindows || !this.nocase), this.globSet = [], this.globParts = [], this.set = [], this.make()
                    }
                    hasMagic() {
                        if (this.options.magicalBraces && this.set.length > 1) return !0;
                        for (const e of this.set)
                            for (const t of e)
                                if ("string" != typeof t) return !0;
                        return !1
                    }
                    debug(...e) {}
                    make() {
                        const e = this.pattern,
                            t = this.options;
                        if (!t.nocomment && "#" === e.charAt(0)) return void(this.comment = !0);
                        if (!e) return void(this.empty = !0);
                        this.parseNegate(), this.globSet = [...new Set(this.braceExpand())], t.debug && (this.debug = (...e) => console.error(...e)), this.debug(this.pattern, this.globSet);
                        const i = this.globSet.map((e => this.slashSplit(e)));
                        this.globParts = this.preprocess(i), this.debug(this.pattern, this.globParts);
                        let r = this.globParts.map(((e, t, i) => {
                            if (this.isWindows && this.windowsNoMagicRoot) {
                                const t = !("" !== e[0] || "" !== e[1] || "?" !== e[2] && P.test(e[2]) || P.test(e[3])),
                                    i = /^[a-z]:/i.test(e[0]);
                                if (t) return [...e.slice(0, 4), ...e.slice(4).map((e => this.parse(e)))];
                                if (i) return [e[0], ...e.slice(1).map((e => this.parse(e)))]
                            }
                            return e.map((e => this.parse(e)))
                        }));
                        if (this.debug(this.pattern, r), this.set = r.filter((e => -1 === e.indexOf(!1))), this.isWindows)
                            for (let e = 0; e < this.set.length; e++) {
                                const t = this.set[e];
                                "" === t[0] && "" === t[1] && "?" === this.globParts[e][2] && "string" == typeof t[3] && /^[a-z]:$/i.test(t[3]) && (t[2] = "?")
                            }
                        this.debug(this.pattern, this.set)
                    }
                    preprocess(e) {
                        if (this.options.noglobstar)
                            for (let t = 0; t < e.length; t++)
                                for (let i = 0; i < e[t].length; i++) "**" === e[t][i] && (e[t][i] = "*");
                        const {
                            optimizationLevel: t = 1
                        } = this.options;
                        return t >= 2 ? (e = this.firstPhasePreProcess(e), e = this.secondPhasePreProcess(e)) : e = t >= 1 ? this.levelOneOptimize(e) : this.adjascentGlobstarOptimize(e), e
                    }
                    adjascentGlobstarOptimize(e) {
                        return e.map((e => {
                            let t = -1;
                            for (; - 1 !== (t = e.indexOf("**", t + 1));) {
                                let i = t;
                                for (;
                                    "**" === e[i + 1];) i++;
                                i !== t && e.splice(t, i - t)
                            }
                            return e
                        }))
                    }
                    levelOneOptimize(e) {
                        return e.map((e => 0 === (e = e.reduce(((e, t) => {
                            const i = e[e.length - 1];
                            return "**" === t && "**" === i ? e : ".." === t && i && ".." !== i && "." !== i && "**" !== i ? (e.pop(), e) : (e.push(t), e)
                        }), [])).length ? [""] : e))
                    }
                    levelTwoFileOptimize(e) {
                        Array.isArray(e) || (e = this.slashSplit(e));
                        let t = !1;
                        do {
                            if (t = !1, !this.preserveMultipleSlashes) {
                                for (let i = 1; i < e.length - 1; i++) {
                                    const r = e[i];
                                    1 === i && "" === r && "" === e[0] || ("." !== r && "" !== r || (t = !0, e.splice(i, 1), i--))
                                }
                                "." !== e[0] || 2 !== e.length || "." !== e[1] && "" !== e[1] || (t = !0, e.pop())
                            }
                            let i = 0;
                            for (; - 1 !== (i = e.indexOf("..", i + 1));) {
                                const r = e[i - 1];
                                r && "." !== r && ".." !== r && "**" !== r && (t = !0, e.splice(i - 1, 2), i -= 2)
                            }
                        } while (t);
                        return 0 === e.length ? [""] : e
                    }
                    firstPhasePreProcess(e) {
                        let t = !1;
                        do {
                            t = !1;
                            for (let i of e) {
                                let r = -1;
                                for (; - 1 !== (r = i.indexOf("**", r + 1));) {
                                    let s = r;
                                    for (;
                                        "**" === i[s + 1];) s++;
                                    s > r && i.splice(r + 1, s - r);
                                    let n = i[r + 1];
                                    const o = i[r + 2],
                                        a = i[r + 3];
                                    if (".." !== n) continue;
                                    if (!o || "." === o || ".." === o || !a || "." === a || ".." === a) continue;
                                    t = !0, i.splice(r, 1);
                                    const c = i.slice(0);
                                    c[r] = "**", e.push(c), r--
                                }
                                if (!this.preserveMultipleSlashes) {
                                    for (let e = 1; e < i.length - 1; e++) {
                                        const r = i[e];
                                        1 === e && "" === r && "" === i[0] || ("." !== r && "" !== r || (t = !0, i.splice(e, 1), e--))
                                    }
                                    "." !== i[0] || 2 !== i.length || "." !== i[1] && "" !== i[1] || (t = !0, i.pop())
                                }
                                let s = 0;
                                for (; - 1 !== (s = i.indexOf("..", s + 1));) {
                                    const e = i[s - 1];
                                    if (e && "." !== e && ".." !== e && "**" !== e) {
                                        t = !0;
                                        const e = 1 === s && "**" === i[s + 1] ? ["."] : [];
                                        i.splice(s - 1, 2, ...e), 0 === i.length && i.push(""), s -= 2
                                    }
                                }
                            }
                        } while (t);
                        return e
                    }
                    secondPhasePreProcess(e) {
                        for (let t = 0; t < e.length - 1; t++)
                            for (let i = t + 1; i < e.length; i++) {
                                const r = this.partsMatch(e[t], e[i], !this.preserveMultipleSlashes);
                                r && (e[t] = r, e[i] = [])
                            }
                        return e.filter((e => e.length))
                    }
                    partsMatch(e, t, i = !1) {
                        let r = 0,
                            s = 0,
                            n = [],
                            o = "";
                        for (; r < e.length && s < t.length;)
                            if (e[r] === t[s]) n.push("b" === o ? t[s] : e[r]), r++, s++;
                            else if (i && "**" === e[r] && t[s] === e[r + 1]) n.push(e[r]), r++;
                        else if (i && "**" === t[s] && e[r] === t[s + 1]) n.push(t[s]), s++;
                        else if ("*" !== e[r] || !t[s] || !this.options.dot && t[s].startsWith(".") || "**" === t[s]) {
                            if ("*" !== t[s] || !e[r] || !this.options.dot && e[r].startsWith(".") || "**" === e[r]) return !1;
                            if ("a" === o) return !1;
                            o = "b", n.push(t[s]), r++, s++
                        } else {
                            if ("b" === o) return !1;
                            o = "a", n.push(e[r]), r++, s++
                        }
                        return e.length === t.length && n
                    }
                    parseNegate() {
                        if (this.nonegate) return;
                        const e = this.pattern;
                        let t = !1,
                            i = 0;
                        for (let r = 0; r < e.length && "!" === e.charAt(r); r++) t = !t, i++;
                        i && (this.pattern = e.slice(i)), this.negate = t
                    }
                    matchOne(e, i, r = !1) {
                        const s = this.options;
                        if (this.isWindows) {
                            const t = "string" == typeof e[0] && /^[a-z]:$/i.test(e[0]),
                                r = !t && "" === e[0] && "" === e[1] && "?" === e[2] && /^[a-z]:$/i.test(e[3]),
                                s = "string" == typeof i[0] && /^[a-z]:$/i.test(i[0]),
                                n = r ? 3 : t ? 0 : void 0,
                                o = !s && "" === i[0] && "" === i[1] && "?" === i[2] && "string" == typeof i[3] && /^[a-z]:$/i.test(i[3]) ? 3 : s ? 0 : void 0;
                            if ("number" == typeof n && "number" == typeof o) {
                                const [t, r] = [e[n], i[o]];
                                t.toLowerCase() === r.toLowerCase() && (i[o] = t, o > n ? i = i.slice(o) : n > o && (e = e.slice(n)))
                            }
                        }
                        const {
                            optimizationLevel: n = 1
                        } = this.options;
                        n >= 2 && (e = this.levelTwoFileOptimize(e)), this.debug("matchOne", this, {
                            file: e,
                            pattern: i
                        }), this.debug("matchOne", e.length, i.length);
                        for (var o = 0, a = 0, c = e.length, l = i.length; o < c && a < l; o++, a++) {
                            this.debug("matchOne loop");
                            var h = i[a],
                                u = e[o];
                            if (this.debug(i, h, u), !1 === h) return !1;
                            if (h === t.GLOBSTAR) {
                                this.debug("GLOBSTAR", [i, h, u]);
                                var d = o,
                                    f = a + 1;
                                if (f === l) {
                                    for (this.debug("** at the end"); o < c; o++)
                                        if ("." === e[o] || ".." === e[o] || !s.dot && "." === e[o].charAt(0)) return !1;
                                    return !0
                                }
                                for (; d < c;) {
                                    var p = e[d];
                                    if (this.debug("\nglobstar while", e, d, i, f, p), this.matchOne(e.slice(d), i.slice(f), r)) return this.debug("globstar found match!", d, c, p), !0;
                                    if ("." === p || ".." === p || !s.dot && "." === p.charAt(0)) {
                                        this.debug("dot detected!", e, d, i, f);
                                        break
                                    }
                                    this.debug("globstar swallow a segment, and continue"), d++
                                }
                                return !(!r || (this.debug("\n>>> no match, partial?", e, d, i, f), d !== c))
                            }
                            let n;
                            if ("string" == typeof h ? (n = u === h, this.debug("string match", h, u, n)) : (n = h.test(u), this.debug("pattern match", h, u, n)), !n) return !1
                        }
                        if (o === c && a === l) return !0;
                        if (o === c) return r;
                        if (a === l) return o === c - 1 && "" === e[o];
                        throw new Error("wtf?")
                    }
                    braceExpand() {
                        return (0, t.braceExpand)(this.pattern, this.options)
                    }
                    parse(e) {
                        (0, n.assertValidPattern)(e);
                        const i = this.options;
                        if ("**" === e) return t.GLOBSTAR;
                        if ("" === e) return "";
                        let r, s = null;
                        (r = e.match(b)) ? s = i.dot ? y : w: (r = e.match(l)) ? s = (i.nocase ? i.dot ? f : d : i.dot ? u : h)(r[1]) : (r = e.match(S)) ? s = (i.nocase ? i.dot ? x : C : i.dot ? E : O)(r) : (r = e.match(p)) ? s = i.dot ? g : _ : (r = e.match(v)) && (s = m);
                        const a = o.AST.fromGlob(e, this.options).toMMPattern();
                        return s && "object" == typeof a && Reflect.defineProperty(a, "test", {
                            value: s
                        }), a
                    }
                    makeRe() {
                        if (this.regexp || !1 === this.regexp) return this.regexp;
                        const e = this.set;
                        if (!e.length) return this.regexp = !1, this.regexp;
                        const i = this.options,
                            r = i.noglobstar ? "[^/]*?" : i.dot ? "(?:(?!(?:\\/|^)(?:\\.{1,2})($|\\/)).)*?" : "(?:(?!(?:\\/|^)\\.).)*?",
                            s = new Set(i.nocase ? ["i"] : []);
                        let n = e.map((e => {
                            const i = e.map((e => {
                                if (e instanceof RegExp)
                                    for (const t of e.flags.split("")) s.add(t);
                                return "string" == typeof e ? e.replace(/[-[\]{}()*+?.,\\^$|#\s]/g, "\\$&") : e === t.GLOBSTAR ? t.GLOBSTAR : e._src
                            }));
                            return i.forEach(((e, s) => {
                                const n = i[s + 1],
                                    o = i[s - 1];
                                e === t.GLOBSTAR && o !== t.GLOBSTAR && (void 0 === o ? void 0 !== n && n !== t.GLOBSTAR ? i[s + 1] = "(?:\\/|" + r + "\\/)?" + n : i[s] = r : void 0 === n ? i[s - 1] = o + "(?:\\/|" + r + ")?" : n !== t.GLOBSTAR && (i[s - 1] = o + "(?:\\/|\\/" + r + "\\/)" + n, i[s + 1] = t.GLOBSTAR))
                            })), i.filter((e => e !== t.GLOBSTAR)).join("/")
                        })).join("|");
                        const [o, a] = e.length > 1 ? ["(?:", ")"] : ["", ""];
                        n = "^" + o + n + a + "$", this.negate && (n = "^(?!" + n + ").+$");
                        try {
                            this.regexp = new RegExp(n, [...s].join(""))
                        } catch (e) {
                            this.regexp = !1
                        }
                        return this.regexp
                    }
                    slashSplit(e) {
                        return this.preserveMultipleSlashes ? e.split("/") : this.isWindows && /^\/\/[^\/]+/.test(e) ? ["", ...e.split(/\/+/)] : e.split(/\/+/)
                    }
                    match(e, t = this.partial) {
                        if (this.debug("match", e, this.pattern), this.comment) return !1;
                        if (this.empty) return "" === e;
                        if ("/" === e && t) return !0;
                        const i = this.options;
                        this.isWindows && (e = e.split("\\").join("/"));
                        const r = this.slashSplit(e);
                        this.debug(this.pattern, "split", r);
                        const s = this.set;
                        this.debug(this.pattern, "set", s);
                        let n = r[r.length - 1];
                        if (!n)
                            for (let e = r.length - 2; !n && e >= 0; e--) n = r[e];
                        for (let e = 0; e < s.length; e++) {
                            const o = s[e];
                            let a = r;
                            i.matchBase && 1 === o.length && (a = [n]);
                            if (this.matchOne(a, o, t)) return !!i.flipNegate || !this.negate
                        }
                        return !i.flipNegate && this.negate
                    }
                    static defaults(e) {
                        return t.minimatch.defaults(e).Minimatch
                    }
                }
                t.Minimatch = T;
                var B = i(5855);
                Object.defineProperty(t, "AST", {
                    enumerable: !0,
                    get: function() {
                        return B.AST
                    }
                });
                var I = i(3387);
                Object.defineProperty(t, "escape", {
                    enumerable: !0,
                    get: function() {
                        return I.escape
                    }
                });
                var $ = i(6635);
                Object.defineProperty(t, "unescape", {
                    enumerable: !0,
                    get: function() {
                        return $.unescape
                    }
                }), t.minimatch.AST = o.AST, t.minimatch.Minimatch = T, t.minimatch.escape = a.escape, t.minimatch.unescape = c.unescape
            },
            6635: (e, t) => {
                "use strict";
                Object.defineProperty(t, "__esModule", {
                    value: !0
                }), t.unescape = void 0;
                t.unescape = (e, {
                    windowsPathsNoEscape: t = !1
                } = {}) => t ? e.replace(/\[([^\/\\])\]/g, "$1") : e.replace(/((?!\\).|^)\[([^\/\\])\]/g, "$1$2").replace(/\\([^\/])/g, "$1")
            }
        },
        __webpack_module_cache__ = {};

    function __webpack_require__(e) {
        var t = __webpack_module_cache__[e];
        if (void 0 !== t) return t.exports;
        var i = __webpack_module_cache__[e] = {
            exports: {}
        };
        return __webpack_modules__[e].call(i.exports, i, i.exports, __webpack_require__), i.exports
    }
    __webpack_require__.n = e => {
        var t = e && e.__esModule ? () => e.default : () => e;
        return __webpack_require__.d(t, {
            a: t
        }), t
    }, __webpack_require__.d = (e, t) => {
        for (var i in t) __webpack_require__.o(t, i) && !__webpack_require__.o(e, i) && Object.defineProperty(e, i, {
            enumerable: !0,
            get: t[i]
        })
    }, __webpack_require__.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t), __webpack_require__.r = e => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, {
            value: "Module"
        }), Object.defineProperty(e, "__esModule", {
            value: !0
        })
    };
    var __webpack_exports__ = {};
    (() => {
        "use strict";
        var e = Object.freeze({}),
            t = Array.isArray;

        function i(e) {
            return null == e
        }

        function r(e) {
            return null != e
        }

        function s(e) {
            return !0 === e
        }

        function n(e) {
            return "string" == typeof e || "number" == typeof e || "symbol" == typeof e || "boolean" == typeof e
        }

        function o(e) {
            return "function" == typeof e
        }

        function a(e) {
            return null !== e && "object" == typeof e
        }
        var c = Object.prototype.toString;

        function l(e) {
            return "[object Object]" === c.call(e)
        }

        function h(e) {
            return "[object RegExp]" === c.call(e)
        }

        function u(e) {
            var t = parseFloat(String(e));
            return t >= 0 && Math.floor(t) === t && isFinite(e)
        }

        function d(e) {
            return r(e) && "function" == typeof e.then && "function" == typeof e.catch
        }

        function f(e) {
            return null == e ? "" : Array.isArray(e) || l(e) && e.toString === c ? JSON.stringify(e, null, 2) : String(e)
        }

        function p(e) {
            var t = parseFloat(e);
            return isNaN(t) ? e : t
        }

        function _(e, t) {
            for (var i = Object.create(null), r = e.split(","), s = 0; s < r.length; s++) i[r[s]] = !0;
            return t ? function(e) {
                return i[e.toLowerCase()]
            } : function(e) {
                return i[e]
            }
        }
        _("slot,component", !0);
        var g = _("key,ref,slot,slot-scope,is");

        function v(e, t) {
            var i = e.length;
            if (i) {
                if (t === e[i - 1]) return void(e.length = i - 1);
                var r = e.indexOf(t);
                if (r > -1) return e.splice(r, 1)
            }
        }
        var m = Object.prototype.hasOwnProperty;

        function b(e, t) {
            return m.call(e, t)
        }

        function w(e) {
            var t = Object.create(null);
            return function(i) {
                return t[i] || (t[i] = e(i))
            }
        }
        var y = /-(\w)/g,
            S = w((function(e) {
                return e.replace(y, (function(e, t) {
                    return t ? t.toUpperCase() : ""
                }))
            })),
            C = w((function(e) {
                return e.charAt(0).toUpperCase() + e.slice(1)
            })),
            x = /\B([A-Z])/g,
            E = w((function(e) {
                return e.replace(x, "-$1").toLowerCase()
            }));
        var O = Function.prototype.bind ? function(e, t) {
            return e.bind(t)
        } : function(e, t) {
            function i(i) {
                var r = arguments.length;
                return r ? r > 1 ? e.apply(t, arguments) : e.call(t, i) : e.call(t)
            }
            return i._length = e.length, i
        };

        function k(e, t) {
            t = t || 0;
            for (var i = e.length - t, r = new Array(i); i--;) r[i] = e[i + t];
            return r
        }

        function L(e, t) {
            for (var i in t) e[i] = t[i];
            return e
        }

        function D(e) {
            for (var t = {}, i = 0; i < e.length; i++) e[i] && L(t, e[i]);
            return t
        }

        function M(e, t, i) {}
        var A = function(e, t, i) {
                return !1
            },
            R = function(e) {
                return e
            };

        function P(e, t) {
            if (e === t) return !0;
            var i = a(e),
                r = a(t);
            if (!i || !r) return !i && !r && String(e) === String(t);
            try {
                var s = Array.isArray(e),
                    n = Array.isArray(t);
                if (s && n) return e.length === t.length && e.every((function(e, i) {
                    return P(e, t[i])
                }));
                if (e instanceof Date && t instanceof Date) return e.getTime() === t.getTime();
                if (s || n) return !1;
                var o = Object.keys(e),
                    c = Object.keys(t);
                return o.length === c.length && o.every((function(i) {
                    return P(e[i], t[i])
                }))
            } catch (e) {
                return !1
            }
        }

        function T(e, t) {
            for (var i = 0; i < e.length; i++)
                if (P(e[i], t)) return i;
            return -1
        }

        function B(e) {
            var t = !1;
            return function() {
                t || (t = !0, e.apply(this, arguments))
            }
        }

        function I(e, t) {
            return e === t ? 0 === e && 1 / e != 1 / t : e == e || t == t
        }
        var $ = "data-server-rendered",
            j = ["component", "directive", "filter"],
            F = ["beforeCreate", "created", "beforeMount", "mounted", "beforeUpdate", "updated", "beforeDestroy", "destroyed", "activated", "deactivated", "errorCaptured", "serverPrefetch", "renderTracked", "renderTriggered"],
            N = {
                optionMergeStrategies: Object.create(null),
                silent: !1,
                productionTip: !1,
                devtools: !1,
                performance: !1,
                errorHandler: null,
                warnHandler: null,
                ignoredElements: [],
                keyCodes: Object.create(null),
                isReservedTag: A,
                isReservedAttr: A,
                isUnknownElement: A,
                getTagNamespace: M,
                parsePlatformTagName: R,
                mustUseProp: A,
                async: !0,
                _lifecycleHooks: F
            },
            W = /a-zA-Z\u00B7\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u037D\u037F-\u1FFF\u200C-\u200D\u203F-\u2040\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD/;

        function H(e) {
            var t = (e + "").charCodeAt(0);
            return 36 === t || 95 === t
        }

        function U(e, t, i, r) {
            Object.defineProperty(e, t, {
                value: i,
                enumerable: !!r,
                writable: !0,
                configurable: !0
            })
        }
        var z = new RegExp("[^".concat(W.source, ".$_\\d]"));
        var G = "__proto__" in {},
            V = "undefined" != typeof window,
            q = V && window.navigator.userAgent.toLowerCase(),
            K = q && /msie|trident/.test(q),
            X = q && q.indexOf("msie 9.0") > 0,
            J = q && q.indexOf("edge/") > 0;
        q && q.indexOf("android");
        var Y = q && /iphone|ipad|ipod|ios/.test(q);
        q && /chrome\/\d+/.test(q), q && /phantomjs/.test(q);
        var Z, Q = q && q.match(/firefox\/(\d+)/),
            ee = {}.watch,
            te = !1;
        if (V) try {
            var ie = {};
            Object.defineProperty(ie, "passive", {
                get: function() {
                    te = !0
                }
            }), window.addEventListener("test-passive", null, ie)
        } catch (fn) {}
        var re = function() {
                return void 0 === Z && (Z = !V && "undefined" != typeof global && (global.process && "server" === global.process.env.VUE_ENV)), Z
            },
            se = V && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

        function ne(e) {
            return "function" == typeof e && /native code/.test(e.toString())
        }
        var oe, ae = "undefined" != typeof Symbol && ne(Symbol) && "undefined" != typeof Reflect && ne(Reflect.ownKeys);
        oe = "undefined" != typeof Set && ne(Set) ? Set : function() {
            function e() {
                this.set = Object.create(null)
            }
            return e.prototype.has = function(e) {
                return !0 === this.set[e]
            }, e.prototype.add = function(e) {
                this.set[e] = !0
            }, e.prototype.clear = function() {
                this.set = Object.create(null)
            }, e
        }();
        var ce = null;

        function le(e) {
            void 0 === e && (e = null), e || ce && ce._scope.off(), ce = e, e && e._scope.on()
        }
        var he = function() {
                function e(e, t, i, r, s, n, o, a) {
                    this.tag = e, this.data = t, this.children = i, this.text = r, this.elm = s, this.ns = void 0, this.context = n, this.fnContext = void 0, this.fnOptions = void 0, this.fnScopeId = void 0, this.key = t && t.key, this.componentOptions = o, this.componentInstance = void 0, this.parent = void 0, this.raw = !1, this.isStatic = !1, this.isRootInsert = !0, this.isComment = !1, this.isCloned = !1, this.isOnce = !1, this.asyncFactory = a, this.asyncMeta = void 0, this.isAsyncPlaceholder = !1
                }
                return Object.defineProperty(e.prototype, "child", {
                    get: function() {
                        return this.componentInstance
                    },
                    enumerable: !1,
                    configurable: !0
                }), e
            }(),
            ue = function(e) {
                void 0 === e && (e = "");
                var t = new he;
                return t.text = e, t.isComment = !0, t
            };

        function de(e) {
            return new he(void 0, void 0, void 0, String(e))
        }

        function fe(e) {
            var t = new he(e.tag, e.data, e.children && e.children.slice(), e.text, e.elm, e.context, e.componentOptions, e.asyncFactory);
            return t.ns = e.ns, t.isStatic = e.isStatic, t.key = e.key, t.isComment = e.isComment, t.fnContext = e.fnContext, t.fnOptions = e.fnOptions, t.fnScopeId = e.fnScopeId, t.asyncMeta = e.asyncMeta, t.isCloned = !0, t
        }
        var pe = 0,
            _e = [],
            ge = function() {
                function e() {
                    this._pending = !1, this.id = pe++, this.subs = []
                }
                return e.prototype.addSub = function(e) {
                    this.subs.push(e)
                }, e.prototype.removeSub = function(e) {
                    this.subs[this.subs.indexOf(e)] = null, this._pending || (this._pending = !0, _e.push(this))
                }, e.prototype.depend = function(t) {
                    e.target && e.target.addDep(this)
                }, e.prototype.notify = function(e) {
                    var t = this.subs.filter((function(e) {
                        return e
                    }));
                    for (var i = 0, r = t.length; i < r; i++) {
                        0,
                        t[i].update()
                    }
                }, e
            }();
        ge.target = null;
        var ve = [];

        function me(e) {
            ve.push(e), ge.target = e
        }

        function be() {
            ve.pop(), ge.target = ve[ve.length - 1]
        }
        var we = Array.prototype,
            ye = Object.create(we);
        ["push", "pop", "shift", "unshift", "splice", "sort", "reverse"].forEach((function(e) {
            var t = we[e];
            U(ye, e, (function() {
                for (var i = [], r = 0; r < arguments.length; r++) i[r] = arguments[r];
                var s, n = t.apply(this, i),
                    o = this.__ob__;
                switch (e) {
                    case "push":
                    case "unshift":
                        s = i;
                        break;
                    case "splice":
                        s = i.slice(2)
                }
                return s && o.observeArray(s), o.dep.notify(), n
            }))
        }));
        var Se = Object.getOwnPropertyNames(ye),
            Ce = {},
            xe = !0;

        function Ee(e) {
            xe = e
        }
        var Oe = {
                notify: M,
                depend: M,
                addSub: M,
                removeSub: M
            },
            ke = function() {
                function e(e, i, r) {
                    if (void 0 === i && (i = !1), void 0 === r && (r = !1), this.value = e, this.shallow = i, this.mock = r, this.dep = r ? Oe : new ge, this.vmCount = 0, U(e, "__ob__", this), t(e)) {
                        if (!r)
                            if (G) e.__proto__ = ye;
                            else
                                for (var s = 0, n = Se.length; s < n; s++) {
                                    U(e, a = Se[s], ye[a])
                                }
                        i || this.observeArray(e)
                    } else {
                        var o = Object.keys(e);
                        for (s = 0; s < o.length; s++) {
                            var a;
                            De(e, a = o[s], Ce, void 0, i, r)
                        }
                    }
                }
                return e.prototype.observeArray = function(e) {
                    for (var t = 0, i = e.length; t < i; t++) Le(e[t], !1, this.mock)
                }, e
            }();

        function Le(e, i, r) {
            return e && b(e, "__ob__") && e.__ob__ instanceof ke ? e.__ob__ : !xe || !r && re() || !t(e) && !l(e) || !Object.isExtensible(e) || e.__v_skip || Ie(e) || e instanceof he ? void 0 : new ke(e, i, r)
        }

        function De(e, i, r, s, n, o) {
            var a = new ge,
                c = Object.getOwnPropertyDescriptor(e, i);
            if (!c || !1 !== c.configurable) {
                var l = c && c.get,
                    h = c && c.set;
                l && !h || r !== Ce && 2 !== arguments.length || (r = e[i]);
                var u = !n && Le(r, !1, o);
                return Object.defineProperty(e, i, {
                    enumerable: !0,
                    configurable: !0,
                    get: function() {
                        var i = l ? l.call(e) : r;
                        return ge.target && (a.depend(), u && (u.dep.depend(), t(i) && Re(i))), Ie(i) && !n ? i.value : i
                    },
                    set: function(t) {
                        var i = l ? l.call(e) : r;
                        if (I(i, t)) {
                            if (h) h.call(e, t);
                            else {
                                if (l) return;
                                if (!n && Ie(i) && !Ie(t)) return void(i.value = t);
                                r = t
                            }
                            u = !n && Le(t, !1, o), a.notify()
                        }
                    }
                }), a
            }
        }

        function Me(e, i, r) {
            if (!Be(e)) {
                var s = e.__ob__;
                return t(e) && u(i) ? (e.length = Math.max(e.length, i), e.splice(i, 1, r), s && !s.shallow && s.mock && Le(r, !1, !0), r) : i in e && !(i in Object.prototype) ? (e[i] = r, r) : e._isVue || s && s.vmCount ? r : s ? (De(s.value, i, r, void 0, s.shallow, s.mock), s.dep.notify(), r) : (e[i] = r, r)
            }
        }

        function Ae(e, i) {
            if (t(e) && u(i)) e.splice(i, 1);
            else {
                var r = e.__ob__;
                e._isVue || r && r.vmCount || Be(e) || b(e, i) && (delete e[i], r && r.dep.notify())
            }
        }

        function Re(e) {
            for (var i = void 0, r = 0, s = e.length; r < s; r++)(i = e[r]) && i.__ob__ && i.__ob__.dep.depend(), t(i) && Re(i)
        }

        function Pe(e) {
            return Te(e, !0), U(e, "__v_isShallow", !0), e
        }

        function Te(e, t) {
            if (!Be(e)) {
                Le(e, t, re());
                0
            }
        }

        function Be(e) {
            return !(!e || !e.__v_isReadonly)
        }

        function Ie(e) {
            return !(!e || !0 !== e.__v_isRef)
        }

        function $e(e, t, i) {
            Object.defineProperty(e, i, {
                enumerable: !0,
                configurable: !0,
                get: function() {
                    var e = t[i];
                    if (Ie(e)) return e.value;
                    var r = e && e.__ob__;
                    return r && r.dep.depend(), e
                },
                set: function(e) {
                    var r = t[i];
                    Ie(r) && !Ie(e) ? r.value = e : t[i] = e
                }
            })
        }
        var je = "watcher";
        "".concat(je, " callback"), "".concat(je, " getter"), "".concat(je, " cleanup");
        var Fe;
        var Ne = function() {
            function e(e) {
                void 0 === e && (e = !1), this.detached = e, this.active = !0, this.effects = [], this.cleanups = [], this.parent = Fe, !e && Fe && (this.index = (Fe.scopes || (Fe.scopes = [])).push(this) - 1)
            }
            return e.prototype.run = function(e) {
                if (this.active) {
                    var t = Fe;
                    try {
                        return Fe = this, e()
                    } finally {
                        Fe = t
                    }
                } else 0
            }, e.prototype.on = function() {
                Fe = this
            }, e.prototype.off = function() {
                Fe = this.parent
            }, e.prototype.stop = function(e) {
                if (this.active) {
                    var t = void 0,
                        i = void 0;
                    for (t = 0, i = this.effects.length; t < i; t++) this.effects[t].teardown();
                    for (t = 0, i = this.cleanups.length; t < i; t++) this.cleanups[t]();
                    if (this.scopes)
                        for (t = 0, i = this.scopes.length; t < i; t++) this.scopes[t].stop(!0);
                    if (!this.detached && this.parent && !e) {
                        var r = this.parent.scopes.pop();
                        r && r !== this && (this.parent.scopes[this.index] = r, r.index = this.index)
                    }
                    this.parent = void 0, this.active = !1
                }
            }, e
        }();

        function We(e) {
            var t = e._provided,
                i = e.$parent && e.$parent._provided;
            return i === t ? e._provided = Object.create(i) : t
        }
        var He = w((function(e) {
            var t = "&" === e.charAt(0),
                i = "~" === (e = t ? e.slice(1) : e).charAt(0),
                r = "!" === (e = i ? e.slice(1) : e).charAt(0);
            return {
                name: e = r ? e.slice(1) : e,
                once: i,
                capture: r,
                passive: t
            }
        }));

        function Ue(e, i) {
            function r() {
                var e = r.fns;
                if (!t(e)) return kt(e, null, arguments, i, "v-on handler");
                for (var s = e.slice(), n = 0; n < s.length; n++) kt(s[n], null, arguments, i, "v-on handler")
            }
            return r.fns = e, r
        }

        function ze(e, t, r, n, o, a) {
            var c, l, h, u;
            for (c in e) l = e[c], h = t[c], u = He(c), i(l) || (i(h) ? (i(l.fns) && (l = e[c] = Ue(l, a)), s(u.once) && (l = e[c] = o(u.name, l, u.capture)), r(u.name, l, u.capture, u.passive, u.params)) : l !== h && (h.fns = l, e[c] = h));
            for (c in t) i(e[c]) && n((u = He(c)).name, t[c], u.capture)
        }

        function Ge(e, t, n) {
            var o;
            e instanceof he && (e = e.data.hook || (e.data.hook = {}));
            var a = e[t];

            function c() {
                n.apply(this, arguments), v(o.fns, c)
            }
            i(a) ? o = Ue([c]) : r(a.fns) && s(a.merged) ? (o = a).fns.push(c) : o = Ue([a, c]), o.merged = !0, e[t] = o
        }

        function Ve(e, t, i, s, n) {
            if (r(t)) {
                if (b(t, i)) return e[i] = t[i], n || delete t[i], !0;
                if (b(t, s)) return e[i] = t[s], n || delete t[s], !0
            }
            return !1
        }

        function qe(e) {
            return n(e) ? [de(e)] : t(e) ? Xe(e) : void 0
        }

        function Ke(e) {
            return r(e) && r(e.text) && !1 === e.isComment
        }

        function Xe(e, o) {
            var a, c, l, h, u = [];
            for (a = 0; a < e.length; a++) i(c = e[a]) || "boolean" == typeof c || (h = u[l = u.length - 1], t(c) ? c.length > 0 && (Ke((c = Xe(c, "".concat(o || "", "_").concat(a)))[0]) && Ke(h) && (u[l] = de(h.text + c[0].text), c.shift()), u.push.apply(u, c)) : n(c) ? Ke(h) ? u[l] = de(h.text + c) : "" !== c && u.push(de(c)) : Ke(c) && Ke(h) ? u[l] = de(h.text + c.text) : (s(e._isVList) && r(c.tag) && i(c.key) && r(o) && (c.key = "__vlist".concat(o, "_").concat(a, "__")), u.push(c)));
            return u
        }

        function Je(e, i) {
            var s, n, o, c, l = null;
            if (t(e) || "string" == typeof e)
                for (l = new Array(e.length), s = 0, n = e.length; s < n; s++) l[s] = i(e[s], s);
            else if ("number" == typeof e)
                for (l = new Array(e), s = 0; s < e; s++) l[s] = i(s + 1, s);
            else if (a(e))
                if (ae && e[Symbol.iterator]) {
                    l = [];
                    for (var h = e[Symbol.iterator](), u = h.next(); !u.done;) l.push(i(u.value, l.length)), u = h.next()
                } else
                    for (o = Object.keys(e), l = new Array(o.length), s = 0, n = o.length; s < n; s++) c = o[s], l[s] = i(e[c], c, s);
            return r(l) || (l = []), l._isVList = !0, l
        }

        function Ye(e, t, i, r) {
            var s, n = this.$scopedSlots[e];
            n ? (i = i || {}, r && (i = L(L({}, r), i)), s = n(i) || (o(t) ? t() : t)) : s = this.$slots[e] || (o(t) ? t() : t);
            var a = i && i.slot;
            return a ? this.$createElement("template", {
                slot: a
            }, s) : s
        }

        function Ze(e) {
            return Ri(this.$options, "filters", e, !0) || R
        }

        function Qe(e, i) {
            return t(e) ? -1 === e.indexOf(i) : e !== i
        }

        function et(e, t, i, r, s) {
            var n = N.keyCodes[t] || i;
            return s && r && !N.keyCodes[t] ? Qe(s, r) : n ? Qe(n, e) : r ? E(r) !== t : void 0 === e
        }

        function tt(e, i, r, s, n) {
            if (r)
                if (a(r)) {
                    t(r) && (r = D(r));
                    var o = void 0,
                        c = function(t) {
                            if ("class" === t || "style" === t || g(t)) o = e;
                            else {
                                var a = e.attrs && e.attrs.type;
                                o = s || N.mustUseProp(i, a, t) ? e.domProps || (e.domProps = {}) : e.attrs || (e.attrs = {})
                            }
                            var c = S(t),
                                l = E(t);
                            c in o || l in o || (o[t] = r[t], n && ((e.on || (e.on = {}))["update:".concat(t)] = function(e) {
                                r[t] = e
                            }))
                        };
                    for (var l in r) c(l)
                } else;
            return e
        }

        function it(e, t) {
            var i = this._staticTrees || (this._staticTrees = []),
                r = i[e];
            return r && !t || st(r = i[e] = this.$options.staticRenderFns[e].call(this._renderProxy, this._c, this), "__static__".concat(e), !1), r
        }

        function rt(e, t, i) {
            return st(e, "__once__".concat(t).concat(i ? "_".concat(i) : ""), !0), e
        }

        function st(e, i, r) {
            if (t(e))
                for (var s = 0; s < e.length; s++) e[s] && "string" != typeof e[s] && nt(e[s], "".concat(i, "_").concat(s), r);
            else nt(e, i, r)
        }

        function nt(e, t, i) {
            e.isStatic = !0, e.key = t, e.isOnce = i
        }

        function ot(e, t) {
            if (t)
                if (l(t)) {
                    var i = e.on = e.on ? L({}, e.on) : {};
                    for (var r in t) {
                        var s = i[r],
                            n = t[r];
                        i[r] = s ? [].concat(s, n) : n
                    }
                } else;
            return e
        }

        function at(e, i, r, s) {
            i = i || {
                $stable: !r
            };
            for (var n = 0; n < e.length; n++) {
                var o = e[n];
                t(o) ? at(o, i, r) : o && (o.proxy && (o.fn.proxy = !0), i[o.key] = o.fn)
            }
            return s && (i.$key = s), i
        }

        function ct(e, t) {
            for (var i = 0; i < t.length; i += 2) {
                var r = t[i];
                "string" == typeof r && r && (e[t[i]] = t[i + 1])
            }
            return e
        }

        function lt(e, t) {
            return "string" == typeof e ? t + e : e
        }

        function ht(e) {
            e._o = rt, e._n = p, e._s = f, e._l = Je, e._t = Ye, e._q = P, e._i = T, e._m = it, e._f = Ze, e._k = et, e._b = tt, e._v = de, e._e = ue, e._u = at, e._g = ot, e._d = ct, e._p = lt
        }

        function ut(e, t) {
            if (!e || !e.length) return {};
            for (var i = {}, r = 0, s = e.length; r < s; r++) {
                var n = e[r],
                    o = n.data;
                if (o && o.attrs && o.attrs.slot && delete o.attrs.slot, n.context !== t && n.fnContext !== t || !o || null == o.slot)(i.default || (i.default = [])).push(n);
                else {
                    var a = o.slot,
                        c = i[a] || (i[a] = []);
                    "template" === n.tag ? c.push.apply(c, n.children || []) : c.push(n)
                }
            }
            for (var l in i) i[l].every(dt) && delete i[l];
            return i
        }

        function dt(e) {
            return e.isComment && !e.asyncFactory || " " === e.text
        }

        function ft(e) {
            return e.isComment && e.asyncFactory
        }

        function pt(t, i, r, s) {
            var n, o = Object.keys(r).length > 0,
                a = i ? !!i.$stable : !o,
                c = i && i.$key;
            if (i) {
                if (i._normalized) return i._normalized;
                if (a && s && s !== e && c === s.$key && !o && !s.$hasNormal) return s;
                for (var l in n = {}, i) i[l] && "$" !== l[0] && (n[l] = _t(t, r, l, i[l]))
            } else n = {};
            for (var h in r) h in n || (n[h] = gt(r, h));
            return i && Object.isExtensible(i) && (i._normalized = n), U(n, "$stable", a), U(n, "$key", c), U(n, "$hasNormal", o), n
        }

        function _t(e, i, r, s) {
            var n = function() {
                var i = ce;
                le(e);
                var r = arguments.length ? s.apply(null, arguments) : s({}),
                    n = (r = r && "object" == typeof r && !t(r) ? [r] : qe(r)) && r[0];
                return le(i), r && (!n || 1 === r.length && n.isComment && !ft(n)) ? void 0 : r
            };
            return s.proxy && Object.defineProperty(i, r, {
                get: n,
                enumerable: !0,
                configurable: !0
            }), n
        }

        function gt(e, t) {
            return function() {
                return e[t]
            }
        }

        function vt(t) {
            return {
                get attrs() {
                    if (!t._attrsProxy) {
                        var i = t._attrsProxy = {};
                        U(i, "_v_attr_proxy", !0), mt(i, t.$attrs, e, t, "$attrs")
                    }
                    return t._attrsProxy
                },
                get listeners() {
                    t._listenersProxy || mt(t._listenersProxy = {}, t.$listeners, e, t, "$listeners");
                    return t._listenersProxy
                },
                get slots() {
                    return function(e) {
                        e._slotsProxy || wt(e._slotsProxy = {}, e.$scopedSlots);
                        return e._slotsProxy
                    }(t)
                },
                emit: O(t.$emit, t),
                expose: function(e) {
                    e && Object.keys(e).forEach((function(i) {
                        return $e(t, e, i)
                    }))
                }
            }
        }

        function mt(e, t, i, r, s) {
            var n = !1;
            for (var o in t) o in e ? t[o] !== i[o] && (n = !0) : (n = !0, bt(e, o, r, s));
            for (var o in e) o in t || (n = !0, delete e[o]);
            return n
        }

        function bt(e, t, i, r) {
            Object.defineProperty(e, t, {
                enumerable: !0,
                configurable: !0,
                get: function() {
                    return i[r][t]
                }
            })
        }

        function wt(e, t) {
            for (var i in t) e[i] = t[i];
            for (var i in e) i in t || delete e[i]
        }
        var yt = null;

        function St(e, t) {
            return (e.__esModule || ae && "Module" === e[Symbol.toStringTag]) && (e = e.default), a(e) ? t.extend(e) : e
        }

        function Ct(e) {
            if (t(e))
                for (var i = 0; i < e.length; i++) {
                    var s = e[i];
                    if (r(s) && (r(s.componentOptions) || ft(s))) return s
                }
        }

        function xt(e, i, c, l, h, u) {
            return (t(c) || n(c)) && (h = l, l = c, c = void 0), s(u) && (h = 2),
                function(e, i, s, n, c) {
                    if (r(s) && r(s.__ob__)) return ue();
                    r(s) && r(s.is) && (i = s.is);
                    if (!i) return ue();
                    0;
                    t(n) && o(n[0]) && ((s = s || {}).scopedSlots = {
                        default: n[0]
                    }, n.length = 0);
                    2 === c ? n = qe(n) : 1 === c && (n = function(e) {
                        for (var i = 0; i < e.length; i++)
                            if (t(e[i])) return Array.prototype.concat.apply([], e);
                        return e
                    }(n));
                    var l, h;
                    if ("string" == typeof i) {
                        var u = void 0;
                        h = e.$vnode && e.$vnode.ns || N.getTagNamespace(i), l = N.isReservedTag(i) ? new he(N.parsePlatformTagName(i), s, n, void 0, void 0, e) : s && s.pre || !r(u = Ri(e.$options, "components", i)) ? new he(i, s, n, void 0, void 0, e) : Si(u, s, e, n, i)
                    } else l = Si(i, s, e, n);
                    return t(l) ? l : r(l) ? (r(h) && Et(l, h), r(s) && function(e) {
                        a(e.style) && Ht(e.style);
                        a(e.class) && Ht(e.class)
                    }(s), l) : ue()
                }(e, i, c, l, h)
        }

        function Et(e, t, n) {
            if (e.ns = t, "foreignObject" === e.tag && (t = void 0, n = !0), r(e.children))
                for (var o = 0, a = e.children.length; o < a; o++) {
                    var c = e.children[o];
                    r(c.tag) && (i(c.ns) || s(n) && "svg" !== c.tag) && Et(c, t, n)
                }
        }

        function Ot(e, t, i) {
            me();
            try {
                if (t)
                    for (var r = t; r = r.$parent;) {
                        var s = r.$options.errorCaptured;
                        if (s)
                            for (var n = 0; n < s.length; n++) try {
                                if (!1 === s[n].call(r, e, t, i)) return
                            } catch (e) {
                                Lt(e, r, "errorCaptured hook")
                            }
                    }
                Lt(e, t, i)
            } finally {
                be()
            }
        }

        function kt(e, t, i, r, s) {
            var n;
            try {
                (n = i ? e.apply(t, i) : e.call(t)) && !n._isVue && d(n) && !n._handled && (n.catch((function(e) {
                    return Ot(e, r, s + " (Promise/async)")
                })), n._handled = !0)
            } catch (e) {
                Ot(e, r, s)
            }
            return n
        }

        function Lt(e, t, i) {
            if (N.errorHandler) try {
                return N.errorHandler.call(null, e, t, i)
            } catch (t) {
                t !== e && Dt(t, null, "config.errorHandler")
            }
            Dt(e, t, i)
        }

        function Dt(e, t, i) {
            if (!V || "undefined" == typeof console) throw e;
            console.error(e)
        }
        var Mt, At = !1,
            Rt = [],
            Pt = !1;

        function Tt() {
            Pt = !1;
            var e = Rt.slice(0);
            Rt.length = 0;
            for (var t = 0; t < e.length; t++) e[t]()
        }
        if ("undefined" != typeof Promise && ne(Promise)) {
            var Bt = Promise.resolve();
            Mt = function() {
                Bt.then(Tt), Y && setTimeout(M)
            }, At = !0
        } else if (K || "undefined" == typeof MutationObserver || !ne(MutationObserver) && "[object MutationObserverConstructor]" !== MutationObserver.toString()) Mt = "undefined" != typeof setImmediate && ne(setImmediate) ? function() {
            setImmediate(Tt)
        } : function() {
            setTimeout(Tt, 0)
        };
        else {
            var It = 1,
                $t = new MutationObserver(Tt),
                jt = document.createTextNode(String(It));
            $t.observe(jt, {
                characterData: !0
            }), Mt = function() {
                It = (It + 1) % 2, jt.data = String(It)
            }, At = !0
        }

        function Ft(e, t) {
            var i;
            if (Rt.push((function() {
                    if (e) try {
                        e.call(t)
                    } catch (e) {
                        Ot(e, t, "nextTick")
                    } else i && i(t)
                })), Pt || (Pt = !0, Mt()), !e && "undefined" != typeof Promise) return new Promise((function(e) {
                i = e
            }))
        }

        function Nt(e) {
            return function(t, i) {
                if (void 0 === i && (i = ce), i) return function(e, t, i) {
                    var r = e.$options;
                    r[t] = Li(r[t], i)
                }(i, e, t)
            }
        }
        Nt("beforeMount"), Nt("mounted"), Nt("beforeUpdate"), Nt("updated"), Nt("beforeDestroy"), Nt("destroyed"), Nt("activated"), Nt("deactivated"), Nt("serverPrefetch"), Nt("renderTracked"), Nt("renderTriggered"), Nt("errorCaptured");
        var Wt = new oe;

        function Ht(e) {
            return Ut(e, Wt), Wt.clear(), e
        }

        function Ut(e, i) {
            var r, s, n = t(e);
            if (!(!n && !a(e) || e.__v_skip || Object.isFrozen(e) || e instanceof he)) {
                if (e.__ob__) {
                    var o = e.__ob__.dep.id;
                    if (i.has(o)) return;
                    i.add(o)
                }
                if (n)
                    for (r = e.length; r--;) Ut(e[r], i);
                else if (Ie(e)) Ut(e.value, i);
                else
                    for (r = (s = Object.keys(e)).length; r--;) Ut(e[s[r]], i)
            }
        }
        var zt, Gt = 0,
            Vt = function() {
                function e(e, t, i, r, s) {
                    var n, a;
                    n = this, void 0 === (a = Fe && !Fe._vm ? Fe : e ? e._scope : void 0) && (a = Fe), a && a.active && a.effects.push(n), (this.vm = e) && s && (e._watcher = this), r ? (this.deep = !!r.deep, this.user = !!r.user, this.lazy = !!r.lazy, this.sync = !!r.sync, this.before = r.before) : this.deep = this.user = this.lazy = this.sync = !1, this.cb = i, this.id = ++Gt, this.active = !0, this.post = !1, this.dirty = this.lazy, this.deps = [], this.newDeps = [], this.depIds = new oe, this.newDepIds = new oe, this.expression = "", o(t) ? this.getter = t : (this.getter = function(e) {
                        if (!z.test(e)) {
                            var t = e.split(".");
                            return function(e) {
                                for (var i = 0; i < t.length; i++) {
                                    if (!e) return;
                                    e = e[t[i]]
                                }
                                return e
                            }
                        }
                    }(t), this.getter || (this.getter = M)), this.value = this.lazy ? void 0 : this.get()
                }
                return e.prototype.get = function() {
                    var e;
                    me(this);
                    var t = this.vm;
                    try {
                        e = this.getter.call(t, t)
                    } catch (e) {
                        if (!this.user) throw e;
                        Ot(e, t, 'getter for watcher "'.concat(this.expression, '"'))
                    } finally {
                        this.deep && Ht(e), be(), this.cleanupDeps()
                    }
                    return e
                }, e.prototype.addDep = function(e) {
                    var t = e.id;
                    this.newDepIds.has(t) || (this.newDepIds.add(t), this.newDeps.push(e), this.depIds.has(t) || e.addSub(this))
                }, e.prototype.cleanupDeps = function() {
                    for (var e = this.deps.length; e--;) {
                        var t = this.deps[e];
                        this.newDepIds.has(t.id) || t.removeSub(this)
                    }
                    var i = this.depIds;
                    this.depIds = this.newDepIds, this.newDepIds = i, this.newDepIds.clear(), i = this.deps, this.deps = this.newDeps, this.newDeps = i, this.newDeps.length = 0
                }, e.prototype.update = function() {
                    this.lazy ? this.dirty = !0 : this.sync ? this.run() : pi(this)
                }, e.prototype.run = function() {
                    if (this.active) {
                        var e = this.get();
                        if (e !== this.value || a(e) || this.deep) {
                            var t = this.value;
                            if (this.value = e, this.user) {
                                var i = 'callback for watcher "'.concat(this.expression, '"');
                                kt(this.cb, this.vm, [e, t], this.vm, i)
                            } else this.cb.call(this.vm, e, t)
                        }
                    }
                }, e.prototype.evaluate = function() {
                    this.value = this.get(), this.dirty = !1
                }, e.prototype.depend = function() {
                    for (var e = this.deps.length; e--;) this.deps[e].depend()
                }, e.prototype.teardown = function() {
                    if (this.vm && !this.vm._isBeingDestroyed && v(this.vm._scope.effects, this), this.active) {
                        for (var e = this.deps.length; e--;) this.deps[e].removeSub(this);
                        this.active = !1, this.onStop && this.onStop()
                    }
                }, e
            }();

        function qt(e, t) {
            zt.$on(e, t)
        }

        function Kt(e, t) {
            zt.$off(e, t)
        }

        function Xt(e, t) {
            var i = zt;
            return function r() {
                var s = t.apply(null, arguments);
                null !== s && i.$off(e, r)
            }
        }

        function Jt(e, t, i) {
            zt = e, ze(t, i || {}, qt, Kt, Xt, e), zt = void 0
        }
        var Yt = null;

        function Zt(e) {
            var t = Yt;
            return Yt = e,
                function() {
                    Yt = t
                }
        }

        function Qt(e) {
            for (; e && (e = e.$parent);)
                if (e._inactive) return !0;
            return !1
        }

        function ei(e, t) {
            if (t) {
                if (e._directInactive = !1, Qt(e)) return
            } else if (e._directInactive) return;
            if (e._inactive || null === e._inactive) {
                e._inactive = !1;
                for (var i = 0; i < e.$children.length; i++) ei(e.$children[i]);
                ii(e, "activated")
            }
        }

        function ti(e, t) {
            if (!(t && (e._directInactive = !0, Qt(e)) || e._inactive)) {
                e._inactive = !0;
                for (var i = 0; i < e.$children.length; i++) ti(e.$children[i]);
                ii(e, "deactivated")
            }
        }

        function ii(e, t, i, r) {
            void 0 === r && (r = !0), me();
            var s = ce;
            r && le(e);
            var n = e.$options[t],
                o = "".concat(t, " hook");
            if (n)
                for (var a = 0, c = n.length; a < c; a++) kt(n[a], e, i || null, e, o);
            e._hasHookEvent && e.$emit("hook:" + t), r && le(s), be()
        }
        var ri = [],
            si = [],
            ni = {},
            oi = !1,
            ai = !1,
            ci = 0;
        var li = 0,
            hi = Date.now;
        if (V && !K) {
            var ui = window.performance;
            ui && "function" == typeof ui.now && hi() > document.createEvent("Event").timeStamp && (hi = function() {
                return ui.now()
            })
        }
        var di = function(e, t) {
            if (e.post) {
                if (!t.post) return 1
            } else if (t.post) return -1;
            return e.id - t.id
        };

        function fi() {
            var e, t;
            for (li = hi(), ai = !0, ri.sort(di), ci = 0; ci < ri.length; ci++)(e = ri[ci]).before && e.before(), t = e.id, ni[t] = null, e.run();
            var i = si.slice(),
                r = ri.slice();
            ci = ri.length = si.length = 0, ni = {}, oi = ai = !1,
                function(e) {
                    for (var t = 0; t < e.length; t++) e[t]._inactive = !0, ei(e[t], !0)
                }(i),
                function(e) {
                    var t = e.length;
                    for (; t--;) {
                        var i = e[t],
                            r = i.vm;
                        r && r._watcher === i && r._isMounted && !r._isDestroyed && ii(r, "updated")
                    }
                }(r),
                function() {
                    for (var e = 0; e < _e.length; e++) {
                        var t = _e[e];
                        t.subs = t.subs.filter((function(e) {
                            return e
                        })), t._pending = !1
                    }
                    _e.length = 0
                }(), se && N.devtools && se.emit("flush")
        }

        function pi(e) {
            var t = e.id;
            if (null == ni[t] && (e !== ge.target || !e.noRecurse)) {
                if (ni[t] = !0, ai) {
                    for (var i = ri.length - 1; i > ci && ri[i].id > e.id;) i--;
                    ri.splice(i + 1, 0, e)
                } else ri.push(e);
                oi || (oi = !0, Ft(fi))
            }
        }

        function _i(e, t) {
            if (e) {
                for (var i = Object.create(null), r = ae ? Reflect.ownKeys(e) : Object.keys(e), s = 0; s < r.length; s++) {
                    var n = r[s];
                    if ("__ob__" !== n) {
                        var a = e[n].from;
                        if (a in t._provided) i[n] = t._provided[a];
                        else if ("default" in e[n]) {
                            var c = e[n].default;
                            i[n] = o(c) ? c.call(t) : c
                        } else 0
                    }
                }
                return i
            }
        }

        function gi(i, r, n, o, a) {
            var c, l = this,
                h = a.options;
            b(o, "_uid") ? (c = Object.create(o))._original = o : (c = o, o = o._original);
            var u = s(h._compiled),
                d = !u;
            this.data = i, this.props = r, this.children = n, this.parent = o, this.listeners = i.on || e, this.injections = _i(h.inject, o), this.slots = function() {
                return l.$slots || pt(o, i.scopedSlots, l.$slots = ut(n, o)), l.$slots
            }, Object.defineProperty(this, "scopedSlots", {
                enumerable: !0,
                get: function() {
                    return pt(o, i.scopedSlots, this.slots())
                }
            }), u && (this.$options = h, this.$slots = this.slots(), this.$scopedSlots = pt(o, i.scopedSlots, this.$slots)), h._scopeId ? this._c = function(e, i, r, s) {
                var n = xt(c, e, i, r, s, d);
                return n && !t(n) && (n.fnScopeId = h._scopeId, n.fnContext = o), n
            } : this._c = function(e, t, i, r) {
                return xt(c, e, t, i, r, d)
            }
        }

        function vi(e, t, i, r, s) {
            var n = fe(e);
            return n.fnContext = i, n.fnOptions = r, t.slot && ((n.data || (n.data = {})).slot = t.slot), n
        }

        function mi(e, t) {
            for (var i in t) e[S(i)] = t[i]
        }

        function bi(e) {
            return e.name || e.__name || e._componentTag
        }
        ht(gi.prototype);
        var wi = {
                init: function(e, t) {
                    if (e.componentInstance && !e.componentInstance._isDestroyed && e.data.keepAlive) {
                        var i = e;
                        wi.prepatch(i, i)
                    } else {
                        (e.componentInstance = function(e, t) {
                            var i = {
                                    _isComponent: !0,
                                    _parentVnode: e,
                                    parent: t
                                },
                                s = e.data.inlineTemplate;
                            r(s) && (i.render = s.render, i.staticRenderFns = s.staticRenderFns);
                            return new e.componentOptions.Ctor(i)
                        }(e, Yt)).$mount(t ? e.elm : void 0, t)
                    }
                },
                prepatch: function(t, i) {
                    var r = i.componentOptions;
                    ! function(t, i, r, s, n) {
                        var o = s.data.scopedSlots,
                            a = t.$scopedSlots,
                            c = !!(o && !o.$stable || a !== e && !a.$stable || o && t.$scopedSlots.$key !== o.$key || !o && t.$scopedSlots.$key),
                            l = !!(n || t.$options._renderChildren || c),
                            h = t.$vnode;
                        t.$options._parentVnode = s, t.$vnode = s, t._vnode && (t._vnode.parent = s), t.$options._renderChildren = n;
                        var u = s.data.attrs || e;
                        t._attrsProxy && mt(t._attrsProxy, u, h.data && h.data.attrs || e, t, "$attrs") && (l = !0), t.$attrs = u, r = r || e;
                        var d = t.$options._parentListeners;
                        if (t._listenersProxy && mt(t._listenersProxy, r, d || e, t, "$listeners"), t.$listeners = t.$options._parentListeners = r, Jt(t, r, d), i && t.$options.props) {
                            Ee(!1);
                            for (var f = t._props, p = t.$options._propKeys || [], _ = 0; _ < p.length; _++) {
                                var g = p[_],
                                    v = t.$options.props;
                                f[g] = Pi(g, v, i, t)
                            }
                            Ee(!0), t.$options.propsData = i
                        }
                        l && (t.$slots = ut(n, s.context), t.$forceUpdate())
                    }(i.componentInstance = t.componentInstance, r.propsData, r.listeners, i, r.children)
                },
                insert: function(e) {
                    var t, i = e.context,
                        r = e.componentInstance;
                    r._isMounted || (r._isMounted = !0, ii(r, "mounted")), e.data.keepAlive && (i._isMounted ? ((t = r)._inactive = !1, si.push(t)) : ei(r, !0))
                },
                destroy: function(e) {
                    var t = e.componentInstance;
                    t._isDestroyed || (e.data.keepAlive ? ti(t, !0) : t.$destroy())
                }
            },
            yi = Object.keys(wi);

        function Si(n, o, c, l, h) {
            if (!i(n)) {
                var u = c.$options._base;
                if (a(n) && (n = u.extend(n)), "function" == typeof n) {
                    var f;
                    if (i(n.cid) && (n = function(e, t) {
                            if (s(e.error) && r(e.errorComp)) return e.errorComp;
                            if (r(e.resolved)) return e.resolved;
                            var n = yt;
                            if (n && r(e.owners) && -1 === e.owners.indexOf(n) && e.owners.push(n), s(e.loading) && r(e.loadingComp)) return e.loadingComp;
                            if (n && !r(e.owners)) {
                                var o = e.owners = [n],
                                    c = !0,
                                    l = null,
                                    h = null;
                                n.$on("hook:destroyed", (function() {
                                    return v(o, n)
                                }));
                                var u = function(e) {
                                        for (var t = 0, i = o.length; t < i; t++) o[t].$forceUpdate();
                                        e && (o.length = 0, null !== l && (clearTimeout(l), l = null), null !== h && (clearTimeout(h), h = null))
                                    },
                                    f = B((function(i) {
                                        e.resolved = St(i, t), c ? o.length = 0 : u(!0)
                                    })),
                                    p = B((function(t) {
                                        r(e.errorComp) && (e.error = !0, u(!0))
                                    })),
                                    _ = e(f, p);
                                return a(_) && (d(_) ? i(e.resolved) && _.then(f, p) : d(_.component) && (_.component.then(f, p), r(_.error) && (e.errorComp = St(_.error, t)), r(_.loading) && (e.loadingComp = St(_.loading, t), 0 === _.delay ? e.loading = !0 : l = setTimeout((function() {
                                    l = null, i(e.resolved) && i(e.error) && (e.loading = !0, u(!1))
                                }), _.delay || 200)), r(_.timeout) && (h = setTimeout((function() {
                                    h = null, i(e.resolved) && p(null)
                                }), _.timeout)))), c = !1, e.loading ? e.loadingComp : e.resolved
                            }
                        }(f = n, u), void 0 === n)) return function(e, t, i, r, s) {
                        var n = ue();
                        return n.asyncFactory = e, n.asyncMeta = {
                            data: t,
                            context: i,
                            children: r,
                            tag: s
                        }, n
                    }(f, o, c, l, h);
                    o = o || {}, qi(n), r(o.model) && function(e, i) {
                        var s = e.model && e.model.prop || "value",
                            n = e.model && e.model.event || "input";
                        (i.attrs || (i.attrs = {}))[s] = i.model.value;
                        var o = i.on || (i.on = {}),
                            a = o[n],
                            c = i.model.callback;
                        r(a) ? (t(a) ? -1 === a.indexOf(c) : a !== c) && (o[n] = [c].concat(a)) : o[n] = c
                    }(n.options, o);
                    var p = function(e, t, s) {
                        var n = t.options.props;
                        if (!i(n)) {
                            var o = {},
                                a = e.attrs,
                                c = e.props;
                            if (r(a) || r(c))
                                for (var l in n) {
                                    var h = E(l);
                                    Ve(o, c, l, h, !0) || Ve(o, a, l, h, !1)
                                }
                            return o
                        }
                    }(o, n);
                    if (s(n.options.functional)) return function(i, s, n, o, a) {
                        var c = i.options,
                            l = {},
                            h = c.props;
                        if (r(h))
                            for (var u in h) l[u] = Pi(u, h, s || e);
                        else r(n.attrs) && mi(l, n.attrs), r(n.props) && mi(l, n.props);
                        var d = new gi(n, l, a, o, i),
                            f = c.render.call(null, d._c, d);
                        if (f instanceof he) return vi(f, n, d.parent, c);
                        if (t(f)) {
                            for (var p = qe(f) || [], _ = new Array(p.length), g = 0; g < p.length; g++) _[g] = vi(p[g], n, d.parent, c);
                            return _
                        }
                    }(n, p, o, c, l);
                    var _ = o.on;
                    if (o.on = o.nativeOn, s(n.options.abstract)) {
                        var g = o.slot;
                        o = {}, g && (o.slot = g)
                    }! function(e) {
                        for (var t = e.hook || (e.hook = {}), i = 0; i < yi.length; i++) {
                            var r = yi[i],
                                s = t[r],
                                n = wi[r];
                            s === n || s && s._merged || (t[r] = s ? Ci(n, s) : n)
                        }
                    }(o);
                    var m = bi(n.options) || h;
                    return new he("vue-component-".concat(n.cid).concat(m ? "-".concat(m) : ""), o, void 0, void 0, void 0, c, {
                        Ctor: n,
                        propsData: p,
                        listeners: _,
                        tag: h,
                        children: l
                    }, f)
                }
            }
        }

        function Ci(e, t) {
            var i = function(i, r) {
                e(i, r), t(i, r)
            };
            return i._merged = !0, i
        }
        var xi = M,
            Ei = N.optionMergeStrategies;

        function Oi(e, t, i) {
            if (void 0 === i && (i = !0), !t) return e;
            for (var r, s, n, o = ae ? Reflect.ownKeys(t) : Object.keys(t), a = 0; a < o.length; a++) "__ob__" !== (r = o[a]) && (s = e[r], n = t[r], i && b(e, r) ? s !== n && l(s) && l(n) && Oi(s, n) : Me(e, r, n));
            return e
        }

        function ki(e, t, i) {
            return i ? function() {
                var r = o(t) ? t.call(i, i) : t,
                    s = o(e) ? e.call(i, i) : e;
                return r ? Oi(r, s) : s
            } : t ? e ? function() {
                return Oi(o(t) ? t.call(this, this) : t, o(e) ? e.call(this, this) : e)
            } : t : e
        }

        function Li(e, i) {
            var r = i ? e ? e.concat(i) : t(i) ? i : [i] : e;
            return r ? function(e) {
                for (var t = [], i = 0; i < e.length; i++) - 1 === t.indexOf(e[i]) && t.push(e[i]);
                return t
            }(r) : r
        }

        function Di(e, t, i, r) {
            var s = Object.create(e || null);
            return t ? L(s, t) : s
        }
        Ei.data = function(e, t, i) {
            return i ? ki(e, t, i) : t && "function" != typeof t ? e : ki(e, t)
        }, F.forEach((function(e) {
            Ei[e] = Li
        })), j.forEach((function(e) {
            Ei[e + "s"] = Di
        })), Ei.watch = function(e, i, r, s) {
            if (e === ee && (e = void 0), i === ee && (i = void 0), !i) return Object.create(e || null);
            if (!e) return i;
            var n = {};
            for (var o in L(n, e), i) {
                var a = n[o],
                    c = i[o];
                a && !t(a) && (a = [a]), n[o] = a ? a.concat(c) : t(c) ? c : [c]
            }
            return n
        }, Ei.props = Ei.methods = Ei.inject = Ei.computed = function(e, t, i, r) {
            if (!e) return t;
            var s = Object.create(null);
            return L(s, e), t && L(s, t), s
        }, Ei.provide = function(e, t) {
            return e ? function() {
                var i = Object.create(null);
                return Oi(i, o(e) ? e.call(this) : e), t && Oi(i, o(t) ? t.call(this) : t, !1), i
            } : t
        };
        var Mi = function(e, t) {
            return void 0 === t ? e : t
        };

        function Ai(e, i, r) {
            if (o(i) && (i = i.options), function(e, i) {
                    var r = e.props;
                    if (r) {
                        var s, n, o = {};
                        if (t(r))
                            for (s = r.length; s--;) "string" == typeof(n = r[s]) && (o[S(n)] = {
                                type: null
                            });
                        else if (l(r))
                            for (var a in r) n = r[a], o[S(a)] = l(n) ? n : {
                                type: n
                            };
                        e.props = o
                    }
                }(i), function(e, i) {
                    var r = e.inject;
                    if (r) {
                        var s = e.inject = {};
                        if (t(r))
                            for (var n = 0; n < r.length; n++) s[r[n]] = {
                                from: r[n]
                            };
                        else if (l(r))
                            for (var o in r) {
                                var a = r[o];
                                s[o] = l(a) ? L({
                                    from: o
                                }, a) : {
                                    from: a
                                }
                            }
                    }
                }(i), function(e) {
                    var t = e.directives;
                    if (t)
                        for (var i in t) {
                            var r = t[i];
                            o(r) && (t[i] = {
                                bind: r,
                                update: r
                            })
                        }
                }(i), !i._base && (i.extends && (e = Ai(e, i.extends, r)), i.mixins))
                for (var s = 0, n = i.mixins.length; s < n; s++) e = Ai(e, i.mixins[s], r);
            var a, c = {};
            for (a in e) h(a);
            for (a in i) b(e, a) || h(a);

            function h(t) {
                var s = Ei[t] || Mi;
                c[t] = s(e[t], i[t], r, t)
            }
            return c
        }

        function Ri(e, t, i, r) {
            if ("string" == typeof i) {
                var s = e[t];
                if (b(s, i)) return s[i];
                var n = S(i);
                if (b(s, n)) return s[n];
                var o = C(n);
                return b(s, o) ? s[o] : s[i] || s[n] || s[o]
            }
        }

        function Pi(e, t, i, r) {
            var s = t[e],
                n = !b(i, e),
                a = i[e],
                c = $i(Boolean, s.type);
            if (c > -1)
                if (n && !b(s, "default")) a = !1;
                else if ("" === a || a === E(e)) {
                var l = $i(String, s.type);
                (l < 0 || c < l) && (a = !0)
            }
            if (void 0 === a) {
                a = function(e, t, i) {
                    if (!b(t, "default")) return;
                    var r = t.default;
                    0;
                    if (e && e.$options.propsData && void 0 === e.$options.propsData[i] && void 0 !== e._props[i]) return e._props[i];
                    return o(r) && "Function" !== Bi(t.type) ? r.call(e) : r
                }(r, s, e);
                var h = xe;
                Ee(!0), Le(a), Ee(h)
            }
            return a
        }
        var Ti = /^\s*function (\w+)/;

        function Bi(e) {
            var t = e && e.toString().match(Ti);
            return t ? t[1] : ""
        }

        function Ii(e, t) {
            return Bi(e) === Bi(t)
        }

        function $i(e, i) {
            if (!t(i)) return Ii(i, e) ? 0 : -1;
            for (var r = 0, s = i.length; r < s; r++)
                if (Ii(i[r], e)) return r;
            return -1
        }
        var ji = {
            enumerable: !0,
            configurable: !0,
            get: M,
            set: M
        };

        function Fi(e, t, i) {
            ji.get = function() {
                return this[t][i]
            }, ji.set = function(e) {
                this[t][i] = e
            }, Object.defineProperty(e, i, ji)
        }

        function Ni(e) {
            var i = e.$options;
            if (i.props && function(e, t) {
                    var i = e.$options.propsData || {},
                        r = e._props = Pe({}),
                        s = e.$options._propKeys = [],
                        n = !e.$parent;
                    n || Ee(!1);
                    var o = function(n) {
                        s.push(n);
                        var o = Pi(n, t, i, e);
                        De(r, n, o), n in e || Fi(e, "_props", n)
                    };
                    for (var a in t) o(a);
                    Ee(!0)
                }(e, i.props), function(e) {
                    var t = e.$options,
                        i = t.setup;
                    if (i) {
                        var r = e._setupContext = vt(e);
                        le(e), me();
                        var s = kt(i, null, [e._props || Pe({}), r], e, "setup");
                        if (be(), le(), o(s)) t.render = s;
                        else if (a(s))
                            if (e._setupState = s, s.__sfc) {
                                var n = e._setupProxy = {};
                                for (var c in s) "__sfc" !== c && $e(n, s, c)
                            } else
                                for (var c in s) H(c) || $e(e, s, c)
                    }
                }(e), i.methods && function(e, t) {
                    e.$options.props;
                    for (var i in t) e[i] = "function" != typeof t[i] ? M : O(t[i], e)
                }(e, i.methods), i.data) ! function(e) {
                var t = e.$options.data;
                t = e._data = o(t) ? function(e, t) {
                    me();
                    try {
                        return e.call(t, t)
                    } catch (e) {
                        return Ot(e, t, "data()"), {}
                    } finally {
                        be()
                    }
                }(t, e) : t || {}, l(t) || (t = {});
                var i = Object.keys(t),
                    r = e.$options.props,
                    s = (e.$options.methods, i.length);
                for (; s--;) {
                    var n = i[s];
                    0, r && b(r, n) || H(n) || Fi(e, "_data", n)
                }
                var a = Le(t);
                a && a.vmCount++
            }(e);
            else {
                var r = Le(e._data = {});
                r && r.vmCount++
            }
            i.computed && function(e, t) {
                var i = e._computedWatchers = Object.create(null),
                    r = re();
                for (var s in t) {
                    var n = t[s],
                        a = o(n) ? n : n.get;
                    0, r || (i[s] = new Vt(e, a || M, M, Wi)), s in e || Hi(e, s, n)
                }
            }(e, i.computed), i.watch && i.watch !== ee && function(e, i) {
                for (var r in i) {
                    var s = i[r];
                    if (t(s))
                        for (var n = 0; n < s.length; n++) Gi(e, r, s[n]);
                    else Gi(e, r, s)
                }
            }(e, i.watch)
        }
        var Wi = {
            lazy: !0
        };

        function Hi(e, t, i) {
            var r = !re();
            o(i) ? (ji.get = r ? Ui(t) : zi(i), ji.set = M) : (ji.get = i.get ? r && !1 !== i.cache ? Ui(t) : zi(i.get) : M, ji.set = i.set || M), Object.defineProperty(e, t, ji)
        }

        function Ui(e) {
            return function() {
                var t = this._computedWatchers && this._computedWatchers[e];
                if (t) return t.dirty && t.evaluate(), ge.target && t.depend(), t.value
            }
        }

        function zi(e) {
            return function() {
                return e.call(this, this)
            }
        }

        function Gi(e, t, i, r) {
            return l(i) && (r = i, i = i.handler), "string" == typeof i && (i = e[i]), e.$watch(t, i, r)
        }
        var Vi = 0;

        function qi(e) {
            var t = e.options;
            if (e.super) {
                var i = qi(e.super);
                if (i !== e.superOptions) {
                    e.superOptions = i;
                    var r = function(e) {
                        var t, i = e.options,
                            r = e.sealedOptions;
                        for (var s in i) i[s] !== r[s] && (t || (t = {}), t[s] = i[s]);
                        return t
                    }(e);
                    r && L(e.extendOptions, r), (t = e.options = Ai(i, e.extendOptions)).name && (t.components[t.name] = e)
                }
            }
            return t
        }

        function Ki(e) {
            this._init(e)
        }

        function Xi(e) {
            e.cid = 0;
            var t = 1;
            e.extend = function(e) {
                e = e || {};
                var i = this,
                    r = i.cid,
                    s = e._Ctor || (e._Ctor = {});
                if (s[r]) return s[r];
                var n = bi(e) || bi(i.options);
                var o = function(e) {
                    this._init(e)
                };
                return (o.prototype = Object.create(i.prototype)).constructor = o, o.cid = t++, o.options = Ai(i.options, e), o.super = i, o.options.props && function(e) {
                    var t = e.options.props;
                    for (var i in t) Fi(e.prototype, "_props", i)
                }(o), o.options.computed && function(e) {
                    var t = e.options.computed;
                    for (var i in t) Hi(e.prototype, i, t[i])
                }(o), o.extend = i.extend, o.mixin = i.mixin, o.use = i.use, j.forEach((function(e) {
                    o[e] = i[e]
                })), n && (o.options.components[n] = o), o.superOptions = i.options, o.extendOptions = e, o.sealedOptions = L({}, o.options), s[r] = o, o
            }
        }

        function Ji(e) {
            return e && (bi(e.Ctor.options) || e.tag)
        }

        function Yi(e, i) {
            return t(e) ? e.indexOf(i) > -1 : "string" == typeof e ? e.split(",").indexOf(i) > -1 : !!h(e) && e.test(i)
        }

        function Zi(e, t) {
            var i = e.cache,
                r = e.keys,
                s = e._vnode;
            for (var n in i) {
                var o = i[n];
                if (o) {
                    var a = o.name;
                    a && !t(a) && Qi(i, n, r, s)
                }
            }
        }

        function Qi(e, t, i, r) {
            var s = e[t];
            !s || r && s.tag === r.tag || s.componentInstance.$destroy(), e[t] = null, v(i, t)
        }
        Ki.prototype._init = function(t) {
                var i = this;
                i._uid = Vi++, i._isVue = !0, i.__v_skip = !0, i._scope = new Ne(!0), i._scope._vm = !0, t && t._isComponent ? function(e, t) {
                        var i = e.$options = Object.create(e.constructor.options),
                            r = t._parentVnode;
                        i.parent = t.parent, i._parentVnode = r;
                        var s = r.componentOptions;
                        i.propsData = s.propsData, i._parentListeners = s.listeners, i._renderChildren = s.children, i._componentTag = s.tag, t.render && (i.render = t.render, i.staticRenderFns = t.staticRenderFns)
                    }(i, t) : i.$options = Ai(qi(i.constructor), t || {}, i), i._renderProxy = i, i._self = i,
                    function(e) {
                        var t = e.$options,
                            i = t.parent;
                        if (i && !t.abstract) {
                            for (; i.$options.abstract && i.$parent;) i = i.$parent;
                            i.$children.push(e)
                        }
                        e.$parent = i, e.$root = i ? i.$root : e, e.$children = [], e.$refs = {}, e._provided = i ? i._provided : Object.create(null), e._watcher = null, e._inactive = null, e._directInactive = !1, e._isMounted = !1, e._isDestroyed = !1, e._isBeingDestroyed = !1
                    }(i),
                    function(e) {
                        e._events = Object.create(null), e._hasHookEvent = !1;
                        var t = e.$options._parentListeners;
                        t && Jt(e, t)
                    }(i),
                    function(t) {
                        t._vnode = null, t._staticTrees = null;
                        var i = t.$options,
                            r = t.$vnode = i._parentVnode,
                            s = r && r.context;
                        t.$slots = ut(i._renderChildren, s), t.$scopedSlots = r ? pt(t.$parent, r.data.scopedSlots, t.$slots) : e, t._c = function(e, i, r, s) {
                            return xt(t, e, i, r, s, !1)
                        }, t.$createElement = function(e, i, r, s) {
                            return xt(t, e, i, r, s, !0)
                        };
                        var n = r && r.data;
                        De(t, "$attrs", n && n.attrs || e, null, !0), De(t, "$listeners", i._parentListeners || e, null, !0)
                    }(i), ii(i, "beforeCreate", void 0, !1),
                    function(e) {
                        var t = _i(e.$options.inject, e);
                        t && (Ee(!1), Object.keys(t).forEach((function(i) {
                            De(e, i, t[i])
                        })), Ee(!0))
                    }(i), Ni(i),
                    function(e) {
                        var t = e.$options.provide;
                        if (t) {
                            var i = o(t) ? t.call(e) : t;
                            if (!a(i)) return;
                            for (var r = We(e), s = ae ? Reflect.ownKeys(i) : Object.keys(i), n = 0; n < s.length; n++) {
                                var c = s[n];
                                Object.defineProperty(r, c, Object.getOwnPropertyDescriptor(i, c))
                            }
                        }
                    }(i), ii(i, "created"), i.$options.el && i.$mount(i.$options.el)
            },
            function(e) {
                var t = {
                        get: function() {
                            return this._data
                        }
                    },
                    i = {
                        get: function() {
                            return this._props
                        }
                    };
                Object.defineProperty(e.prototype, "$data", t), Object.defineProperty(e.prototype, "$props", i), e.prototype.$set = Me, e.prototype.$delete = Ae, e.prototype.$watch = function(e, t, i) {
                    var r = this;
                    if (l(t)) return Gi(r, e, t, i);
                    (i = i || {}).user = !0;
                    var s = new Vt(r, e, t, i);
                    if (i.immediate) {
                        var n = 'callback for immediate watcher "'.concat(s.expression, '"');
                        me(), kt(t, r, [s.value], r, n), be()
                    }
                    return function() {
                        s.teardown()
                    }
                }
            }(Ki),
            function(e) {
                var i = /^hook:/;
                e.prototype.$on = function(e, r) {
                    var s = this;
                    if (t(e))
                        for (var n = 0, o = e.length; n < o; n++) s.$on(e[n], r);
                    else(s._events[e] || (s._events[e] = [])).push(r), i.test(e) && (s._hasHookEvent = !0);
                    return s
                }, e.prototype.$once = function(e, t) {
                    var i = this;

                    function r() {
                        i.$off(e, r), t.apply(i, arguments)
                    }
                    return r.fn = t, i.$on(e, r), i
                }, e.prototype.$off = function(e, i) {
                    var r = this;
                    if (!arguments.length) return r._events = Object.create(null), r;
                    if (t(e)) {
                        for (var s = 0, n = e.length; s < n; s++) r.$off(e[s], i);
                        return r
                    }
                    var o, a = r._events[e];
                    if (!a) return r;
                    if (!i) return r._events[e] = null, r;
                    for (var c = a.length; c--;)
                        if ((o = a[c]) === i || o.fn === i) {
                            a.splice(c, 1);
                            break
                        } return r
                }, e.prototype.$emit = function(e) {
                    var t = this,
                        i = t._events[e];
                    if (i) {
                        i = i.length > 1 ? k(i) : i;
                        for (var r = k(arguments, 1), s = 'event handler for "'.concat(e, '"'), n = 0, o = i.length; n < o; n++) kt(i[n], t, r, t, s)
                    }
                    return t
                }
            }(Ki),
            function(e) {
                e.prototype._update = function(e, t) {
                    var i = this,
                        r = i.$el,
                        s = i._vnode,
                        n = Zt(i);
                    i._vnode = e, i.$el = s ? i.__patch__(s, e) : i.__patch__(i.$el, e, t, !1), n(), r && (r.__vue__ = null), i.$el && (i.$el.__vue__ = i);
                    for (var o = i; o && o.$vnode && o.$parent && o.$vnode === o.$parent._vnode;) o.$parent.$el = o.$el, o = o.$parent
                }, e.prototype.$forceUpdate = function() {
                    this._watcher && this._watcher.update()
                }, e.prototype.$destroy = function() {
                    var e = this;
                    if (!e._isBeingDestroyed) {
                        ii(e, "beforeDestroy"), e._isBeingDestroyed = !0;
                        var t = e.$parent;
                        !t || t._isBeingDestroyed || e.$options.abstract || v(t.$children, e), e._scope.stop(), e._data.__ob__ && e._data.__ob__.vmCount--, e._isDestroyed = !0, e.__patch__(e._vnode, null), ii(e, "destroyed"), e.$off(), e.$el && (e.$el.__vue__ = null), e.$vnode && (e.$vnode.parent = null)
                    }
                }
            }(Ki),
            function(e) {
                ht(e.prototype), e.prototype.$nextTick = function(e) {
                    return Ft(e, this)
                }, e.prototype._render = function() {
                    var e, i = this,
                        r = i.$options,
                        s = r.render,
                        n = r._parentVnode;
                    n && i._isMounted && (i.$scopedSlots = pt(i.$parent, n.data.scopedSlots, i.$slots, i.$scopedSlots), i._slotsProxy && wt(i._slotsProxy, i.$scopedSlots)), i.$vnode = n;
                    try {
                        le(i), yt = i, e = s.call(i._renderProxy, i.$createElement)
                    } catch (t) {
                        Ot(t, i, "render"), e = i._vnode
                    } finally {
                        yt = null, le()
                    }
                    return t(e) && 1 === e.length && (e = e[0]), e instanceof he || (e = ue()), e.parent = n, e
                }
            }(Ki);
        var er = [String, RegExp, Array],
            tr = {
                name: "keep-alive",
                abstract: !0,
                props: {
                    include: er,
                    exclude: er,
                    max: [String, Number]
                },
                methods: {
                    cacheVNode: function() {
                        var e = this,
                            t = e.cache,
                            i = e.keys,
                            r = e.vnodeToCache,
                            s = e.keyToCache;
                        if (r) {
                            var n = r.tag,
                                o = r.componentInstance,
                                a = r.componentOptions;
                            t[s] = {
                                name: Ji(a),
                                tag: n,
                                componentInstance: o
                            }, i.push(s), this.max && i.length > parseInt(this.max) && Qi(t, i[0], i, this._vnode), this.vnodeToCache = null
                        }
                    }
                },
                created: function() {
                    this.cache = Object.create(null), this.keys = []
                },
                destroyed: function() {
                    for (var e in this.cache) Qi(this.cache, e, this.keys)
                },
                mounted: function() {
                    var e = this;
                    this.cacheVNode(), this.$watch("include", (function(t) {
                        Zi(e, (function(e) {
                            return Yi(t, e)
                        }))
                    })), this.$watch("exclude", (function(t) {
                        Zi(e, (function(e) {
                            return !Yi(t, e)
                        }))
                    }))
                },
                updated: function() {
                    this.cacheVNode()
                },
                render: function() {
                    var e = this.$slots.default,
                        t = Ct(e),
                        i = t && t.componentOptions;
                    if (i) {
                        var r = Ji(i),
                            s = this.include,
                            n = this.exclude;
                        if (s && (!r || !Yi(s, r)) || n && r && Yi(n, r)) return t;
                        var o = this.cache,
                            a = this.keys,
                            c = null == t.key ? i.Ctor.cid + (i.tag ? "::".concat(i.tag) : "") : t.key;
                        o[c] ? (t.componentInstance = o[c].componentInstance, v(a, c), a.push(c)) : (this.vnodeToCache = t, this.keyToCache = c), t.data.keepAlive = !0
                    }
                    return t || e && e[0]
                }
            },
            ir = {
                KeepAlive: tr
            };
        ! function(e) {
            var t = {
                get: function() {
                    return N
                }
            };
            Object.defineProperty(e, "config", t), e.util = {
                    warn: xi,
                    extend: L,
                    mergeOptions: Ai,
                    defineReactive: De
                }, e.set = Me, e.delete = Ae, e.nextTick = Ft, e.observable = function(e) {
                    return Le(e), e
                }, e.options = Object.create(null), j.forEach((function(t) {
                    e.options[t + "s"] = Object.create(null)
                })), e.options._base = e, L(e.options.components, ir),
                function(e) {
                    e.use = function(e) {
                        var t = this._installedPlugins || (this._installedPlugins = []);
                        if (t.indexOf(e) > -1) return this;
                        var i = k(arguments, 1);
                        return i.unshift(this), o(e.install) ? e.install.apply(e, i) : o(e) && e.apply(null, i), t.push(e), this
                    }
                }(e),
                function(e) {
                    e.mixin = function(e) {
                        return this.options = Ai(this.options, e), this
                    }
                }(e), Xi(e),
                function(e) {
                    j.forEach((function(t) {
                        e[t] = function(e, i) {
                            return i ? ("component" === t && l(i) && (i.name = i.name || e, i = this.options._base.extend(i)), "directive" === t && o(i) && (i = {
                                bind: i,
                                update: i
                            }), this.options[t + "s"][e] = i, i) : this.options[t + "s"][e]
                        }
                    }))
                }(e)
        }(Ki), Object.defineProperty(Ki.prototype, "$isServer", {
            get: re
        }), Object.defineProperty(Ki.prototype, "$ssrContext", {
            get: function() {
                return this.$vnode && this.$vnode.ssrContext
            }
        }), Object.defineProperty(Ki, "FunctionalRenderContext", {
            value: gi
        }), Ki.version = "2.7.14";
        var rr = _("style,class"),
            sr = _("input,textarea,option,select,progress"),
            nr = _("contenteditable,draggable,spellcheck"),
            or = _("events,caret,typing,plaintext-only"),
            ar = _("allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,default,defaultchecked,defaultmuted,defaultselected,defer,disabled,enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,required,reversed,scoped,seamless,selected,sortable,truespeed,typemustmatch,visible"),
            cr = "http://www.w3.org/1999/xlink",
            lr = function(e) {
                return ":" === e.charAt(5) && "xlink" === e.slice(0, 5)
            },
            hr = function(e) {
                return lr(e) ? e.slice(6, e.length) : ""
            },
            ur = function(e) {
                return null == e || !1 === e
            };

        function dr(e) {
            for (var t = e.data, i = e, s = e; r(s.componentInstance);)(s = s.componentInstance._vnode) && s.data && (t = fr(s.data, t));
            for (; r(i = i.parent);) i && i.data && (t = fr(t, i.data));
            return function(e, t) {
                if (r(e) || r(t)) return pr(e, _r(t));
                return ""
            }(t.staticClass, t.class)
        }

        function fr(e, t) {
            return {
                staticClass: pr(e.staticClass, t.staticClass),
                class: r(e.class) ? [e.class, t.class] : t.class
            }
        }

        function pr(e, t) {
            return e ? t ? e + " " + t : e : t || ""
        }

        function _r(e) {
            return Array.isArray(e) ? function(e) {
                for (var t, i = "", s = 0, n = e.length; s < n; s++) r(t = _r(e[s])) && "" !== t && (i && (i += " "), i += t);
                return i
            }(e) : a(e) ? function(e) {
                var t = "";
                for (var i in e) e[i] && (t && (t += " "), t += i);
                return t
            }(e) : "string" == typeof e ? e : ""
        }
        var gr = {
                svg: "http://www.w3.org/2000/svg",
                math: "http://www.w3.org/1998/Math/MathML"
            },
            vr = _("html,body,base,head,link,meta,style,title,address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,output,progress,select,textarea,details,dialog,menu,menuitem,summary,content,element,shadow,template,blockquote,iframe,tfoot"),
            mr = _("svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,foreignobject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view", !0),
            br = function(e) {
                return vr(e) || mr(e)
            };
        var wr = Object.create(null);
        var yr = _("text,number,password,search,email,tel,url");
        var Sr = Object.freeze({
                __proto__: null,
                createElement: function(e, t) {
                    var i = document.createElement(e);
                    return "select" !== e || t.data && t.data.attrs && void 0 !== t.data.attrs.multiple && i.setAttribute("multiple", "multiple"), i
                },
                createElementNS: function(e, t) {
                    return document.createElementNS(gr[e], t)
                },
                createTextNode: function(e) {
                    return document.createTextNode(e)
                },
                createComment: function(e) {
                    return document.createComment(e)
                },
                insertBefore: function(e, t, i) {
                    e.insertBefore(t, i)
                },
                removeChild: function(e, t) {
                    e.removeChild(t)
                },
                appendChild: function(e, t) {
                    e.appendChild(t)
                },
                parentNode: function(e) {
                    return e.parentNode
                },
                nextSibling: function(e) {
                    return e.nextSibling
                },
                tagName: function(e) {
                    return e.tagName
                },
                setTextContent: function(e, t) {
                    e.textContent = t
                },
                setStyleScope: function(e, t) {
                    e.setAttribute(t, "")
                }
            }),
            Cr = {
                create: function(e, t) {
                    xr(t)
                },
                update: function(e, t) {
                    e.data.ref !== t.data.ref && (xr(e, !0), xr(t))
                },
                destroy: function(e) {
                    xr(e, !0)
                }
            };

        function xr(e, i) {
            var s = e.data.ref;
            if (r(s)) {
                var n = e.context,
                    a = e.componentInstance || e.elm,
                    c = i ? null : a,
                    l = i ? void 0 : a;
                if (o(s)) kt(s, n, [c], n, "template ref function");
                else {
                    var h = e.data.refInFor,
                        u = "string" == typeof s || "number" == typeof s,
                        d = Ie(s),
                        f = n.$refs;
                    if (u || d)
                        if (h) {
                            var p = u ? f[s] : s.value;
                            i ? t(p) && v(p, a) : t(p) ? p.includes(a) || p.push(a) : u ? (f[s] = [a], Er(n, s, f[s])) : s.value = [a]
                        } else if (u) {
                        if (i && f[s] !== a) return;
                        f[s] = l, Er(n, s, c)
                    } else if (d) {
                        if (i && s.value !== a) return;
                        s.value = c
                    } else 0
                }
            }
        }

        function Er(e, t, i) {
            var r = e._setupState;
            r && b(r, t) && (Ie(r[t]) ? r[t].value = i : r[t] = i)
        }
        var Or = new he("", {}, []),
            kr = ["create", "activate", "update", "remove", "destroy"];

        function Lr(e, t) {
            return e.key === t.key && e.asyncFactory === t.asyncFactory && (e.tag === t.tag && e.isComment === t.isComment && r(e.data) === r(t.data) && function(e, t) {
                if ("input" !== e.tag) return !0;
                var i, s = r(i = e.data) && r(i = i.attrs) && i.type,
                    n = r(i = t.data) && r(i = i.attrs) && i.type;
                return s === n || yr(s) && yr(n)
            }(e, t) || s(e.isAsyncPlaceholder) && i(t.asyncFactory.error))
        }

        function Dr(e, t, i) {
            var s, n, o = {};
            for (s = t; s <= i; ++s) r(n = e[s].key) && (o[n] = s);
            return o
        }
        var Mr = {
            create: Ar,
            update: Ar,
            destroy: function(e) {
                Ar(e, Or)
            }
        };

        function Ar(e, t) {
            (e.data.directives || t.data.directives) && function(e, t) {
                var i, r, s, n = e === Or,
                    o = t === Or,
                    a = Pr(e.data.directives, e.context),
                    c = Pr(t.data.directives, t.context),
                    l = [],
                    h = [];
                for (i in c) r = a[i], s = c[i], r ? (s.oldValue = r.value, s.oldArg = r.arg, Br(s, "update", t, e), s.def && s.def.componentUpdated && h.push(s)) : (Br(s, "bind", t, e), s.def && s.def.inserted && l.push(s));
                if (l.length) {
                    var u = function() {
                        for (var i = 0; i < l.length; i++) Br(l[i], "inserted", t, e)
                    };
                    n ? Ge(t, "insert", u) : u()
                }
                h.length && Ge(t, "postpatch", (function() {
                    for (var i = 0; i < h.length; i++) Br(h[i], "componentUpdated", t, e)
                }));
                if (!n)
                    for (i in a) c[i] || Br(a[i], "unbind", e, e, o)
            }(e, t)
        }
        var Rr = Object.create(null);

        function Pr(e, t) {
            var i, r, s = Object.create(null);
            if (!e) return s;
            for (i = 0; i < e.length; i++) {
                if ((r = e[i]).modifiers || (r.modifiers = Rr), s[Tr(r)] = r, t._setupState && t._setupState.__sfc) {
                    var n = r.def || Ri(t, "_setupState", "v-" + r.name);
                    r.def = "function" == typeof n ? {
                        bind: n,
                        update: n
                    } : n
                }
                r.def = r.def || Ri(t.$options, "directives", r.name)
            }
            return s
        }

        function Tr(e) {
            return e.rawName || "".concat(e.name, ".").concat(Object.keys(e.modifiers || {}).join("."))
        }

        function Br(e, t, i, r, s) {
            var n = e.def && e.def[t];
            if (n) try {
                n(i.elm, e, i, r, s)
            } catch (r) {
                Ot(r, i.context, "directive ".concat(e.name, " ").concat(t, " hook"))
            }
        }
        var Ir = [Cr, Mr];

        function $r(e, t) {
            var n = t.componentOptions;
            if (!(r(n) && !1 === n.Ctor.options.inheritAttrs || i(e.data.attrs) && i(t.data.attrs))) {
                var o, a, c = t.elm,
                    l = e.data.attrs || {},
                    h = t.data.attrs || {};
                for (o in (r(h.__ob__) || s(h._v_attr_proxy)) && (h = t.data.attrs = L({}, h)), h) a = h[o], l[o] !== a && jr(c, o, a, t.data.pre);
                for (o in (K || J) && h.value !== l.value && jr(c, "value", h.value), l) i(h[o]) && (lr(o) ? c.removeAttributeNS(cr, hr(o)) : nr(o) || c.removeAttribute(o))
            }
        }

        function jr(e, t, i, r) {
            r || e.tagName.indexOf("-") > -1 ? Fr(e, t, i) : ar(t) ? ur(i) ? e.removeAttribute(t) : (i = "allowfullscreen" === t && "EMBED" === e.tagName ? "true" : t, e.setAttribute(t, i)) : nr(t) ? e.setAttribute(t, function(e, t) {
                return ur(t) || "false" === t ? "false" : "contenteditable" === e && or(t) ? t : "true"
            }(t, i)) : lr(t) ? ur(i) ? e.removeAttributeNS(cr, hr(t)) : e.setAttributeNS(cr, t, i) : Fr(e, t, i)
        }

        function Fr(e, t, i) {
            if (ur(i)) e.removeAttribute(t);
            else {
                if (K && !X && "TEXTAREA" === e.tagName && "placeholder" === t && "" !== i && !e.__ieph) {
                    var r = function(t) {
                        t.stopImmediatePropagation(), e.removeEventListener("input", r)
                    };
                    e.addEventListener("input", r), e.__ieph = !0
                }
                e.setAttribute(t, i)
            }
        }
        var Nr = {
            create: $r,
            update: $r
        };

        function Wr(e, t) {
            var s = t.elm,
                n = t.data,
                o = e.data;
            if (!(i(n.staticClass) && i(n.class) && (i(o) || i(o.staticClass) && i(o.class)))) {
                var a = dr(t),
                    c = s._transitionClasses;
                r(c) && (a = pr(a, _r(c))), a !== s._prevClass && (s.setAttribute("class", a), s._prevClass = a)
            }
        }
        var Hr, Ur = {
                create: Wr,
                update: Wr
            },
            zr = "__r",
            Gr = "__c";

        function Vr(e, t, i) {
            var r = Hr;
            return function s() {
                var n = t.apply(null, arguments);
                null !== n && Xr(e, s, i, r)
            }
        }
        var qr = At && !(Q && Number(Q[1]) <= 53);

        function Kr(e, t, i, r) {
            if (qr) {
                var s = li,
                    n = t;
                t = n._wrapper = function(e) {
                    if (e.target === e.currentTarget || e.timeStamp >= s || e.timeStamp <= 0 || e.target.ownerDocument !== document) return n.apply(this, arguments)
                }
            }
            Hr.addEventListener(e, t, te ? {
                capture: i,
                passive: r
            } : i)
        }

        function Xr(e, t, i, r) {
            (r || Hr).removeEventListener(e, t._wrapper || t, i)
        }

        function Jr(e, t) {
            if (!i(e.data.on) || !i(t.data.on)) {
                var s = t.data.on || {},
                    n = e.data.on || {};
                Hr = t.elm || e.elm,
                    function(e) {
                        if (r(e[zr])) {
                            var t = K ? "change" : "input";
                            e[t] = [].concat(e[zr], e[t] || []), delete e[zr]
                        }
                        r(e[Gr]) && (e.change = [].concat(e[Gr], e.change || []), delete e[Gr])
                    }(s), ze(s, n, Kr, Xr, Vr, t.context), Hr = void 0
            }
        }
        var Yr, Zr = {
            create: Jr,
            update: Jr,
            destroy: function(e) {
                return Jr(e, Or)
            }
        };

        function Qr(e, t) {
            if (!i(e.data.domProps) || !i(t.data.domProps)) {
                var n, o, a = t.elm,
                    c = e.data.domProps || {},
                    l = t.data.domProps || {};
                for (n in (r(l.__ob__) || s(l._v_attr_proxy)) && (l = t.data.domProps = L({}, l)), c) n in l || (a[n] = "");
                for (n in l) {
                    if (o = l[n], "textContent" === n || "innerHTML" === n) {
                        if (t.children && (t.children.length = 0), o === c[n]) continue;
                        1 === a.childNodes.length && a.removeChild(a.childNodes[0])
                    }
                    if ("value" === n && "PROGRESS" !== a.tagName) {
                        a._value = o;
                        var h = i(o) ? "" : String(o);
                        es(a, h) && (a.value = h)
                    } else if ("innerHTML" === n && mr(a.tagName) && i(a.innerHTML)) {
                        (Yr = Yr || document.createElement("div")).innerHTML = "<svg>".concat(o, "</svg>");
                        for (var u = Yr.firstChild; a.firstChild;) a.removeChild(a.firstChild);
                        for (; u.firstChild;) a.appendChild(u.firstChild)
                    } else if (o !== c[n]) try {
                        a[n] = o
                    } catch (e) {}
                }
            }
        }

        function es(e, t) {
            return !e.composing && ("OPTION" === e.tagName || function(e, t) {
                var i = !0;
                try {
                    i = document.activeElement !== e
                } catch (e) {}
                return i && e.value !== t
            }(e, t) || function(e, t) {
                var i = e.value,
                    s = e._vModifiers;
                if (r(s)) {
                    if (s.number) return p(i) !== p(t);
                    if (s.trim) return i.trim() !== t.trim()
                }
                return i !== t
            }(e, t))
        }
        var ts = {
                create: Qr,
                update: Qr
            },
            is = w((function(e) {
                var t = {},
                    i = /:(.+)/;
                return e.split(/;(?![^(]*\))/g).forEach((function(e) {
                    if (e) {
                        var r = e.split(i);
                        r.length > 1 && (t[r[0].trim()] = r[1].trim())
                    }
                })), t
            }));

        function rs(e) {
            var t = ss(e.style);
            return e.staticStyle ? L(e.staticStyle, t) : t
        }

        function ss(e) {
            return Array.isArray(e) ? D(e) : "string" == typeof e ? is(e) : e
        }
        var ns, os = /^--/,
            as = /\s*!important$/,
            cs = function(e, t, i) {
                if (os.test(t)) e.style.setProperty(t, i);
                else if (as.test(i)) e.style.setProperty(E(t), i.replace(as, ""), "important");
                else {
                    var r = hs(t);
                    if (Array.isArray(i))
                        for (var s = 0, n = i.length; s < n; s++) e.style[r] = i[s];
                    else e.style[r] = i
                }
            },
            ls = ["Webkit", "Moz", "ms"],
            hs = w((function(e) {
                if (ns = ns || document.createElement("div").style, "filter" !== (e = S(e)) && e in ns) return e;
                for (var t = e.charAt(0).toUpperCase() + e.slice(1), i = 0; i < ls.length; i++) {
                    var r = ls[i] + t;
                    if (r in ns) return r
                }
            }));

        function us(e, t) {
            var s = t.data,
                n = e.data;
            if (!(i(s.staticStyle) && i(s.style) && i(n.staticStyle) && i(n.style))) {
                var o, a, c = t.elm,
                    l = n.staticStyle,
                    h = n.normalizedStyle || n.style || {},
                    u = l || h,
                    d = ss(t.data.style) || {};
                t.data.normalizedStyle = r(d.__ob__) ? L({}, d) : d;
                var f = function(e, t) {
                    var i, r = {};
                    if (t)
                        for (var s = e; s.componentInstance;)(s = s.componentInstance._vnode) && s.data && (i = rs(s.data)) && L(r, i);
                    (i = rs(e.data)) && L(r, i);
                    for (var n = e; n = n.parent;) n.data && (i = rs(n.data)) && L(r, i);
                    return r
                }(t, !0);
                for (a in u) i(f[a]) && cs(c, a, "");
                for (a in f)(o = f[a]) !== u[a] && cs(c, a, null == o ? "" : o)
            }
        }
        var ds = {
                create: us,
                update: us
            },
            fs = /\s+/;

        function ps(e, t) {
            if (t && (t = t.trim()))
                if (e.classList) t.indexOf(" ") > -1 ? t.split(fs).forEach((function(t) {
                    return e.classList.add(t)
                })) : e.classList.add(t);
                else {
                    var i = " ".concat(e.getAttribute("class") || "", " ");
                    i.indexOf(" " + t + " ") < 0 && e.setAttribute("class", (i + t).trim())
                }
        }

        function _s(e, t) {
            if (t && (t = t.trim()))
                if (e.classList) t.indexOf(" ") > -1 ? t.split(fs).forEach((function(t) {
                    return e.classList.remove(t)
                })) : e.classList.remove(t), e.classList.length || e.removeAttribute("class");
                else {
                    for (var i = " ".concat(e.getAttribute("class") || "", " "), r = " " + t + " "; i.indexOf(r) >= 0;) i = i.replace(r, " ");
                    (i = i.trim()) ? e.setAttribute("class", i): e.removeAttribute("class")
                }
        }

        function gs(e) {
            if (e) {
                if ("object" == typeof e) {
                    var t = {};
                    return !1 !== e.css && L(t, vs(e.name || "v")), L(t, e), t
                }
                return "string" == typeof e ? vs(e) : void 0
            }
        }
        var vs = w((function(e) {
                return {
                    enterClass: "".concat(e, "-enter"),
                    enterToClass: "".concat(e, "-enter-to"),
                    enterActiveClass: "".concat(e, "-enter-active"),
                    leaveClass: "".concat(e, "-leave"),
                    leaveToClass: "".concat(e, "-leave-to"),
                    leaveActiveClass: "".concat(e, "-leave-active")
                }
            })),
            ms = V && !X,
            bs = "transition",
            ws = "animation",
            ys = "transition",
            Ss = "transitionend",
            Cs = "animation",
            xs = "animationend";
        ms && (void 0 === window.ontransitionend && void 0 !== window.onwebkittransitionend && (ys = "WebkitTransition", Ss = "webkitTransitionEnd"), void 0 === window.onanimationend && void 0 !== window.onwebkitanimationend && (Cs = "WebkitAnimation", xs = "webkitAnimationEnd"));
        var Es = V ? window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : setTimeout : function(e) {
            return e()
        };

        function Os(e) {
            Es((function() {
                Es(e)
            }))
        }

        function ks(e, t) {
            var i = e._transitionClasses || (e._transitionClasses = []);
            i.indexOf(t) < 0 && (i.push(t), ps(e, t))
        }

        function Ls(e, t) {
            e._transitionClasses && v(e._transitionClasses, t), _s(e, t)
        }

        function Ds(e, t, i) {
            var r = As(e, t),
                s = r.type,
                n = r.timeout,
                o = r.propCount;
            if (!s) return i();
            var a = s === bs ? Ss : xs,
                c = 0,
                l = function() {
                    e.removeEventListener(a, h), i()
                },
                h = function(t) {
                    t.target === e && ++c >= o && l()
                };
            setTimeout((function() {
                c < o && l()
            }), n + 1), e.addEventListener(a, h)
        }
        var Ms = /\b(transform|all)(,|$)/;

        function As(e, t) {
            var i, r = window.getComputedStyle(e),
                s = (r[ys + "Delay"] || "").split(", "),
                n = (r[ys + "Duration"] || "").split(", "),
                o = Rs(s, n),
                a = (r[Cs + "Delay"] || "").split(", "),
                c = (r[Cs + "Duration"] || "").split(", "),
                l = Rs(a, c),
                h = 0,
                u = 0;
            return t === bs ? o > 0 && (i = bs, h = o, u = n.length) : t === ws ? l > 0 && (i = ws, h = l, u = c.length) : u = (i = (h = Math.max(o, l)) > 0 ? o > l ? bs : ws : null) ? i === bs ? n.length : c.length : 0, {
                type: i,
                timeout: h,
                propCount: u,
                hasTransform: i === bs && Ms.test(r[ys + "Property"])
            }
        }

        function Rs(e, t) {
            for (; e.length < t.length;) e = e.concat(e);
            return Math.max.apply(null, t.map((function(t, i) {
                return Ps(t) + Ps(e[i])
            })))
        }

        function Ps(e) {
            return 1e3 * Number(e.slice(0, -1).replace(",", "."))
        }

        function Ts(e, t) {
            var s = e.elm;
            r(s._leaveCb) && (s._leaveCb.cancelled = !0, s._leaveCb());
            var n = gs(e.data.transition);
            if (!i(n) && !r(s._enterCb) && 1 === s.nodeType) {
                for (var c = n.css, l = n.type, h = n.enterClass, u = n.enterToClass, d = n.enterActiveClass, f = n.appearClass, _ = n.appearToClass, g = n.appearActiveClass, v = n.beforeEnter, m = n.enter, b = n.afterEnter, w = n.enterCancelled, y = n.beforeAppear, S = n.appear, C = n.afterAppear, x = n.appearCancelled, E = n.duration, O = Yt, k = Yt.$vnode; k && k.parent;) O = k.context, k = k.parent;
                var L = !O._isMounted || !e.isRootInsert;
                if (!L || S || "" === S) {
                    var D = L && f ? f : h,
                        M = L && g ? g : d,
                        A = L && _ ? _ : u,
                        R = L && y || v,
                        P = L && o(S) ? S : m,
                        T = L && C || b,
                        I = L && x || w,
                        $ = p(a(E) ? E.enter : E);
                    0;
                    var j = !1 !== c && !X,
                        F = $s(P),
                        N = s._enterCb = B((function() {
                            j && (Ls(s, A), Ls(s, M)), N.cancelled ? (j && Ls(s, D), I && I(s)) : T && T(s), s._enterCb = null
                        }));
                    e.data.show || Ge(e, "insert", (function() {
                        var t = s.parentNode,
                            i = t && t._pending && t._pending[e.key];
                        i && i.tag === e.tag && i.elm._leaveCb && i.elm._leaveCb(), P && P(s, N)
                    })), R && R(s), j && (ks(s, D), ks(s, M), Os((function() {
                        Ls(s, D), N.cancelled || (ks(s, A), F || (Is($) ? setTimeout(N, $) : Ds(s, l, N)))
                    }))), e.data.show && (t && t(), P && P(s, N)), j || F || N()
                }
            }
        }

        function Bs(e, t) {
            var s = e.elm;
            r(s._enterCb) && (s._enterCb.cancelled = !0, s._enterCb());
            var n = gs(e.data.transition);
            if (i(n) || 1 !== s.nodeType) return t();
            if (!r(s._leaveCb)) {
                var o = n.css,
                    c = n.type,
                    l = n.leaveClass,
                    h = n.leaveToClass,
                    u = n.leaveActiveClass,
                    d = n.beforeLeave,
                    f = n.leave,
                    _ = n.afterLeave,
                    g = n.leaveCancelled,
                    v = n.delayLeave,
                    m = n.duration,
                    b = !1 !== o && !X,
                    w = $s(f),
                    y = p(a(m) ? m.leave : m);
                0;
                var S = s._leaveCb = B((function() {
                    s.parentNode && s.parentNode._pending && (s.parentNode._pending[e.key] = null), b && (Ls(s, h), Ls(s, u)), S.cancelled ? (b && Ls(s, l), g && g(s)) : (t(), _ && _(s)), s._leaveCb = null
                }));
                v ? v(C) : C()
            }

            function C() {
                S.cancelled || (!e.data.show && s.parentNode && ((s.parentNode._pending || (s.parentNode._pending = {}))[e.key] = e), d && d(s), b && (ks(s, l), ks(s, u), Os((function() {
                    Ls(s, l), S.cancelled || (ks(s, h), w || (Is(y) ? setTimeout(S, y) : Ds(s, c, S)))
                }))), f && f(s, S), b || w || S())
            }
        }

        function Is(e) {
            return "number" == typeof e && !isNaN(e)
        }

        function $s(e) {
            if (i(e)) return !1;
            var t = e.fns;
            return r(t) ? $s(Array.isArray(t) ? t[0] : t) : (e._length || e.length) > 1
        }

        function js(e, t) {
            !0 !== t.data.show && Ts(t)
        }
        var Fs = function(e) {
            var o, a, c = {},
                l = e.modules,
                h = e.nodeOps;
            for (o = 0; o < kr.length; ++o)
                for (c[kr[o]] = [], a = 0; a < l.length; ++a) r(l[a][kr[o]]) && c[kr[o]].push(l[a][kr[o]]);

            function u(e) {
                var t = h.parentNode(e);
                r(t) && h.removeChild(t, e)
            }

            function d(e, t, i, n, o, a, l) {
                if (r(e.elm) && r(a) && (e = a[l] = fe(e)), e.isRootInsert = !o, ! function(e, t, i, n) {
                        var o = e.data;
                        if (r(o)) {
                            var a = r(e.componentInstance) && o.keepAlive;
                            if (r(o = o.hook) && r(o = o.init) && o(e, !1), r(e.componentInstance)) return f(e, t), p(i, e.elm, n), s(a) && function(e, t, i, s) {
                                var n, o = e;
                                for (; o.componentInstance;)
                                    if (r(n = (o = o.componentInstance._vnode).data) && r(n = n.transition)) {
                                        for (n = 0; n < c.activate.length; ++n) c.activate[n](Or, o);
                                        t.push(o);
                                        break
                                    } p(i, e.elm, s)
                            }(e, t, i, n), !0
                        }
                    }(e, t, i, n)) {
                    var u = e.data,
                        d = e.children,
                        _ = e.tag;
                    r(_) ? (e.elm = e.ns ? h.createElementNS(e.ns, _) : h.createElement(_, e), b(e), g(e, d, t), r(u) && m(e, t), p(i, e.elm, n)) : s(e.isComment) ? (e.elm = h.createComment(e.text), p(i, e.elm, n)) : (e.elm = h.createTextNode(e.text), p(i, e.elm, n))
                }
            }

            function f(e, t) {
                r(e.data.pendingInsert) && (t.push.apply(t, e.data.pendingInsert), e.data.pendingInsert = null), e.elm = e.componentInstance.$el, v(e) ? (m(e, t), b(e)) : (xr(e), t.push(e))
            }

            function p(e, t, i) {
                r(e) && (r(i) ? h.parentNode(i) === e && h.insertBefore(e, t, i) : h.appendChild(e, t))
            }

            function g(e, i, r) {
                if (t(i)) {
                    0;
                    for (var s = 0; s < i.length; ++s) d(i[s], r, e.elm, null, !0, i, s)
                } else n(e.text) && h.appendChild(e.elm, h.createTextNode(String(e.text)))
            }

            function v(e) {
                for (; e.componentInstance;) e = e.componentInstance._vnode;
                return r(e.tag)
            }

            function m(e, t) {
                for (var i = 0; i < c.create.length; ++i) c.create[i](Or, e);
                r(o = e.data.hook) && (r(o.create) && o.create(Or, e), r(o.insert) && t.push(e))
            }

            function b(e) {
                var t;
                if (r(t = e.fnScopeId)) h.setStyleScope(e.elm, t);
                else
                    for (var i = e; i;) r(t = i.context) && r(t = t.$options._scopeId) && h.setStyleScope(e.elm, t), i = i.parent;
                r(t = Yt) && t !== e.context && t !== e.fnContext && r(t = t.$options._scopeId) && h.setStyleScope(e.elm, t)
            }

            function w(e, t, i, r, s, n) {
                for (; r <= s; ++r) d(i[r], n, e, t, !1, i, r)
            }

            function y(e) {
                var t, i, s = e.data;
                if (r(s))
                    for (r(t = s.hook) && r(t = t.destroy) && t(e), t = 0; t < c.destroy.length; ++t) c.destroy[t](e);
                if (r(t = e.children))
                    for (i = 0; i < e.children.length; ++i) y(e.children[i])
            }

            function S(e, t, i) {
                for (; t <= i; ++t) {
                    var s = e[t];
                    r(s) && (r(s.tag) ? (C(s), y(s)) : u(s.elm))
                }
            }

            function C(e, t) {
                if (r(t) || r(e.data)) {
                    var i, s = c.remove.length + 1;
                    for (r(t) ? t.listeners += s : t = function(e, t) {
                            function i() {
                                0 == --i.listeners && u(e)
                            }
                            return i.listeners = t, i
                        }(e.elm, s), r(i = e.componentInstance) && r(i = i._vnode) && r(i.data) && C(i, t), i = 0; i < c.remove.length; ++i) c.remove[i](e, t);
                    r(i = e.data.hook) && r(i = i.remove) ? i(e, t) : t()
                } else u(e.elm)
            }

            function x(e, t, i, s) {
                for (var n = i; n < s; n++) {
                    var o = t[n];
                    if (r(o) && Lr(e, o)) return n
                }
            }

            function E(e, t, n, o, a, l) {
                if (e !== t) {
                    r(t.elm) && r(o) && (t = o[a] = fe(t));
                    var u = t.elm = e.elm;
                    if (s(e.isAsyncPlaceholder)) r(t.asyncFactory.resolved) ? L(e.elm, t, n) : t.isAsyncPlaceholder = !0;
                    else if (s(t.isStatic) && s(e.isStatic) && t.key === e.key && (s(t.isCloned) || s(t.isOnce))) t.componentInstance = e.componentInstance;
                    else {
                        var f, p = t.data;
                        r(p) && r(f = p.hook) && r(f = f.prepatch) && f(e, t);
                        var _ = e.children,
                            g = t.children;
                        if (r(p) && v(t)) {
                            for (f = 0; f < c.update.length; ++f) c.update[f](e, t);
                            r(f = p.hook) && r(f = f.update) && f(e, t)
                        }
                        i(t.text) ? r(_) && r(g) ? _ !== g && function(e, t, s, n, o) {
                            var a, c, l, u = 0,
                                f = 0,
                                p = t.length - 1,
                                _ = t[0],
                                g = t[p],
                                v = s.length - 1,
                                m = s[0],
                                b = s[v],
                                y = !o;
                            for (; u <= p && f <= v;) i(_) ? _ = t[++u] : i(g) ? g = t[--p] : Lr(_, m) ? (E(_, m, n, s, f), _ = t[++u], m = s[++f]) : Lr(g, b) ? (E(g, b, n, s, v), g = t[--p], b = s[--v]) : Lr(_, b) ? (E(_, b, n, s, v), y && h.insertBefore(e, _.elm, h.nextSibling(g.elm)), _ = t[++u], b = s[--v]) : Lr(g, m) ? (E(g, m, n, s, f), y && h.insertBefore(e, g.elm, _.elm), g = t[--p], m = s[++f]) : (i(a) && (a = Dr(t, u, p)), i(c = r(m.key) ? a[m.key] : x(m, t, u, p)) ? d(m, n, e, _.elm, !1, s, f) : Lr(l = t[c], m) ? (E(l, m, n, s, f), t[c] = void 0, y && h.insertBefore(e, l.elm, _.elm)) : d(m, n, e, _.elm, !1, s, f), m = s[++f]);
                            u > p ? w(e, i(s[v + 1]) ? null : s[v + 1].elm, s, f, v, n) : f > v && S(t, u, p)
                        }(u, _, g, n, l) : r(g) ? (r(e.text) && h.setTextContent(u, ""), w(u, null, g, 0, g.length - 1, n)) : r(_) ? S(_, 0, _.length - 1) : r(e.text) && h.setTextContent(u, "") : e.text !== t.text && h.setTextContent(u, t.text), r(p) && r(f = p.hook) && r(f = f.postpatch) && f(e, t)
                    }
                }
            }

            function O(e, t, i) {
                if (s(i) && r(e.parent)) e.parent.data.pendingInsert = t;
                else
                    for (var n = 0; n < t.length; ++n) t[n].data.hook.insert(t[n])
            }
            var k = _("attrs,class,staticClass,staticStyle,key");

            function L(e, t, i, n) {
                var o, a = t.tag,
                    c = t.data,
                    l = t.children;
                if (n = n || c && c.pre, t.elm = e, s(t.isComment) && r(t.asyncFactory)) return t.isAsyncPlaceholder = !0, !0;
                if (r(c) && (r(o = c.hook) && r(o = o.init) && o(t, !0), r(o = t.componentInstance))) return f(t, i), !0;
                if (r(a)) {
                    if (r(l))
                        if (e.hasChildNodes())
                            if (r(o = c) && r(o = o.domProps) && r(o = o.innerHTML)) {
                                if (o !== e.innerHTML) return !1
                            } else {
                                for (var h = !0, u = e.firstChild, d = 0; d < l.length; d++) {
                                    if (!u || !L(u, l[d], i, n)) {
                                        h = !1;
                                        break
                                    }
                                    u = u.nextSibling
                                }
                                if (!h || u) return !1
                            }
                    else g(t, l, i);
                    if (r(c)) {
                        var p = !1;
                        for (var _ in c)
                            if (!k(_)) {
                                p = !0, m(t, i);
                                break
                            }! p && c.class && Ht(c.class)
                    }
                } else e.data !== t.text && (e.data = t.text);
                return !0
            }
            return function(e, t, n, o) {
                if (!i(t)) {
                    var a, l = !1,
                        u = [];
                    if (i(e)) l = !0, d(t, u);
                    else {
                        var f = r(e.nodeType);
                        if (!f && Lr(e, t)) E(e, t, u, null, null, o);
                        else {
                            if (f) {
                                if (1 === e.nodeType && e.hasAttribute($) && (e.removeAttribute($), n = !0), s(n) && L(e, t, u)) return O(t, u, !0), e;
                                a = e, e = new he(h.tagName(a).toLowerCase(), {}, [], void 0, a)
                            }
                            var p = e.elm,
                                _ = h.parentNode(p);
                            if (d(t, u, p._leaveCb ? null : _, h.nextSibling(p)), r(t.parent))
                                for (var g = t.parent, m = v(t); g;) {
                                    for (var b = 0; b < c.destroy.length; ++b) c.destroy[b](g);
                                    if (g.elm = t.elm, m) {
                                        for (var w = 0; w < c.create.length; ++w) c.create[w](Or, g);
                                        var C = g.data.hook.insert;
                                        if (C.merged)
                                            for (var x = 1; x < C.fns.length; x++) C.fns[x]()
                                    } else xr(g);
                                    g = g.parent
                                }
                            r(_) ? S([e], 0, 0) : r(e.tag) && y(e)
                        }
                    }
                    return O(t, u, l), t.elm
                }
                r(e) && y(e)
            }
        }({
            nodeOps: Sr,
            modules: [Nr, Ur, Zr, ts, ds, V ? {
                create: js,
                activate: js,
                remove: function(e, t) {
                    !0 !== e.data.show ? Bs(e, t) : t()
                }
            } : {}].concat(Ir)
        });
        X && document.addEventListener("selectionchange", (function() {
            var e = document.activeElement;
            e && e.vmodel && qs(e, "input")
        }));
        var Ns = {
            inserted: function(e, t, i, r) {
                "select" === i.tag ? (r.elm && !r.elm._vOptions ? Ge(i, "postpatch", (function() {
                    Ns.componentUpdated(e, t, i)
                })) : Ws(e, t, i.context), e._vOptions = [].map.call(e.options, zs)) : ("textarea" === i.tag || yr(e.type)) && (e._vModifiers = t.modifiers, t.modifiers.lazy || (e.addEventListener("compositionstart", Gs), e.addEventListener("compositionend", Vs), e.addEventListener("change", Vs), X && (e.vmodel = !0)))
            },
            componentUpdated: function(e, t, i) {
                if ("select" === i.tag) {
                    Ws(e, t, i.context);
                    var r = e._vOptions,
                        s = e._vOptions = [].map.call(e.options, zs);
                    if (s.some((function(e, t) {
                            return !P(e, r[t])
                        })))(e.multiple ? t.value.some((function(e) {
                        return Us(e, s)
                    })) : t.value !== t.oldValue && Us(t.value, s)) && qs(e, "change")
                }
            }
        };

        function Ws(e, t, i) {
            Hs(e, t, i), (K || J) && setTimeout((function() {
                Hs(e, t, i)
            }), 0)
        }

        function Hs(e, t, i) {
            var r = t.value,
                s = e.multiple;
            if (!s || Array.isArray(r)) {
                for (var n, o, a = 0, c = e.options.length; a < c; a++)
                    if (o = e.options[a], s) n = T(r, zs(o)) > -1, o.selected !== n && (o.selected = n);
                    else if (P(zs(o), r)) return void(e.selectedIndex !== a && (e.selectedIndex = a));
                s || (e.selectedIndex = -1)
            }
        }

        function Us(e, t) {
            return t.every((function(t) {
                return !P(t, e)
            }))
        }

        function zs(e) {
            return "_value" in e ? e._value : e.value
        }

        function Gs(e) {
            e.target.composing = !0
        }

        function Vs(e) {
            e.target.composing && (e.target.composing = !1, qs(e.target, "input"))
        }

        function qs(e, t) {
            var i = document.createEvent("HTMLEvents");
            i.initEvent(t, !0, !0), e.dispatchEvent(i)
        }

        function Ks(e) {
            return !e.componentInstance || e.data && e.data.transition ? e : Ks(e.componentInstance._vnode)
        }
        var Xs = {
                bind: function(e, t, i) {
                    var r = t.value,
                        s = (i = Ks(i)).data && i.data.transition,
                        n = e.__vOriginalDisplay = "none" === e.style.display ? "" : e.style.display;
                    r && s ? (i.data.show = !0, Ts(i, (function() {
                        e.style.display = n
                    }))) : e.style.display = r ? n : "none"
                },
                update: function(e, t, i) {
                    var r = t.value;
                    !r != !t.oldValue && ((i = Ks(i)).data && i.data.transition ? (i.data.show = !0, r ? Ts(i, (function() {
                        e.style.display = e.__vOriginalDisplay
                    })) : Bs(i, (function() {
                        e.style.display = "none"
                    }))) : e.style.display = r ? e.__vOriginalDisplay : "none")
                },
                unbind: function(e, t, i, r, s) {
                    s || (e.style.display = e.__vOriginalDisplay)
                }
            },
            Js = {
                model: Ns,
                show: Xs
            },
            Ys = {
                name: String,
                appear: Boolean,
                css: Boolean,
                mode: String,
                type: String,
                enterClass: String,
                leaveClass: String,
                enterToClass: String,
                leaveToClass: String,
                enterActiveClass: String,
                leaveActiveClass: String,
                appearClass: String,
                appearActiveClass: String,
                appearToClass: String,
                duration: [Number, String, Object]
            };

        function Zs(e) {
            var t = e && e.componentOptions;
            return t && t.Ctor.options.abstract ? Zs(Ct(t.children)) : e
        }

        function Qs(e) {
            var t = {},
                i = e.$options;
            for (var r in i.propsData) t[r] = e[r];
            var s = i._parentListeners;
            for (var r in s) t[S(r)] = s[r];
            return t
        }

        function en(e, t) {
            if (/\d-keep-alive$/.test(t.tag)) return e("keep-alive", {
                props: t.componentOptions.propsData
            })
        }
        var tn = function(e) {
                return e.tag || ft(e)
            },
            rn = function(e) {
                return "show" === e.name
            },
            sn = {
                name: "transition",
                props: Ys,
                abstract: !0,
                render: function(e) {
                    var t = this,
                        i = this.$slots.default;
                    if (i && (i = i.filter(tn)).length) {
                        0;
                        var r = this.mode;
                        0;
                        var s = i[0];
                        if (function(e) {
                                for (; e = e.parent;)
                                    if (e.data.transition) return !0
                            }(this.$vnode)) return s;
                        var o = Zs(s);
                        if (!o) return s;
                        if (this._leaving) return en(e, s);
                        var a = "__transition-".concat(this._uid, "-");
                        o.key = null == o.key ? o.isComment ? a + "comment" : a + o.tag : n(o.key) ? 0 === String(o.key).indexOf(a) ? o.key : a + o.key : o.key;
                        var c = (o.data || (o.data = {})).transition = Qs(this),
                            l = this._vnode,
                            h = Zs(l);
                        if (o.data.directives && o.data.directives.some(rn) && (o.data.show = !0), h && h.data && ! function(e, t) {
                                return t.key === e.key && t.tag === e.tag
                            }(o, h) && !ft(h) && (!h.componentInstance || !h.componentInstance._vnode.isComment)) {
                            var u = h.data.transition = L({}, c);
                            if ("out-in" === r) return this._leaving = !0, Ge(u, "afterLeave", (function() {
                                t._leaving = !1, t.$forceUpdate()
                            })), en(e, s);
                            if ("in-out" === r) {
                                if (ft(o)) return l;
                                var d, f = function() {
                                    d()
                                };
                                Ge(c, "afterEnter", f), Ge(c, "enterCancelled", f), Ge(u, "delayLeave", (function(e) {
                                    d = e
                                }))
                            }
                        }
                        return s
                    }
                }
            },
            nn = L({
                tag: String,
                moveClass: String
            }, Ys);
        delete nn.mode;
        var on = {
            props: nn,
            beforeMount: function() {
                var e = this,
                    t = this._update;
                this._update = function(i, r) {
                    var s = Zt(e);
                    e.__patch__(e._vnode, e.kept, !1, !0), e._vnode = e.kept, s(), t.call(e, i, r)
                }
            },
            render: function(e) {
                for (var t = this.tag || this.$vnode.data.tag || "span", i = Object.create(null), r = this.prevChildren = this.children, s = this.$slots.default || [], n = this.children = [], o = Qs(this), a = 0; a < s.length; a++) {
                    if ((h = s[a]).tag)
                        if (null != h.key && 0 !== String(h.key).indexOf("__vlist")) n.push(h), i[h.key] = h, (h.data || (h.data = {})).transition = o;
                        else;
                }
                if (r) {
                    var c = [],
                        l = [];
                    for (a = 0; a < r.length; a++) {
                        var h;
                        (h = r[a]).data.transition = o, h.data.pos = h.elm.getBoundingClientRect(), i[h.key] ? c.push(h) : l.push(h)
                    }
                    this.kept = e(t, null, c), this.removed = l
                }
                return e(t, null, n)
            },
            updated: function() {
                var e = this.prevChildren,
                    t = this.moveClass || (this.name || "v") + "-move";
                e.length && this.hasMove(e[0].elm, t) && (e.forEach(an), e.forEach(cn), e.forEach(ln), this._reflow = document.body.offsetHeight, e.forEach((function(e) {
                    if (e.data.moved) {
                        var i = e.elm,
                            r = i.style;
                        ks(i, t), r.transform = r.WebkitTransform = r.transitionDuration = "", i.addEventListener(Ss, i._moveCb = function e(r) {
                            r && r.target !== i || r && !/transform$/.test(r.propertyName) || (i.removeEventListener(Ss, e), i._moveCb = null, Ls(i, t))
                        })
                    }
                })))
            },
            methods: {
                hasMove: function(e, t) {
                    if (!ms) return !1;
                    if (this._hasMove) return this._hasMove;
                    var i = e.cloneNode();
                    e._transitionClasses && e._transitionClasses.forEach((function(e) {
                        _s(i, e)
                    })), ps(i, t), i.style.display = "none", this.$el.appendChild(i);
                    var r = As(i);
                    return this.$el.removeChild(i), this._hasMove = r.hasTransform
                }
            }
        };

        function an(e) {
            e.elm._moveCb && e.elm._moveCb(), e.elm._enterCb && e.elm._enterCb()
        }

        function cn(e) {
            e.data.newPos = e.elm.getBoundingClientRect()
        }

        function ln(e) {
            var t = e.data.pos,
                i = e.data.newPos,
                r = t.left - i.left,
                s = t.top - i.top;
            if (r || s) {
                e.data.moved = !0;
                var n = e.elm.style;
                n.transform = n.WebkitTransform = "translate(".concat(r, "px,").concat(s, "px)"), n.transitionDuration = "0s"
            }
        }
        var hn = {
            Transition: sn,
            TransitionGroup: on
        };
        Ki.config.mustUseProp = function(e, t, i) {
            return "value" === i && sr(e) && "button" !== t || "selected" === i && "option" === e || "checked" === i && "input" === e || "muted" === i && "video" === e
        }, Ki.config.isReservedTag = br, Ki.config.isReservedAttr = rr, Ki.config.getTagNamespace = function(e) {
            return mr(e) ? "svg" : "math" === e ? "math" : void 0
        }, Ki.config.isUnknownElement = function(e) {
            if (!V) return !0;
            if (br(e)) return !1;
            if (e = e.toLowerCase(), null != wr[e]) return wr[e];
            var t = document.createElement(e);
            return e.indexOf("-") > -1 ? wr[e] = t.constructor === window.HTMLUnknownElement || t.constructor === window.HTMLElement : wr[e] = /HTMLUnknownElement/.test(t.toString())
        }, L(Ki.options.directives, Js), L(Ki.options.components, hn), Ki.prototype.__patch__ = V ? Fs : M, Ki.prototype.$mount = function(e, t) {
            return function(e, t, i) {
                var r;
                e.$el = t, e.$options.render || (e.$options.render = ue), ii(e, "beforeMount"), r = function() {
                    e._update(e._render(), i)
                }, new Vt(e, r, M, {
                    before: function() {
                        e._isMounted && !e._isDestroyed && ii(e, "beforeUpdate")
                    }
                }, !0), i = !1;
                var s = e._preWatchers;
                if (s)
                    for (var n = 0; n < s.length; n++) s[n].run();
                return null == e.$vnode && (e._isMounted = !0, ii(e, "mounted")), e
            }(this, e = e && V ? function(e) {
                if ("string" == typeof e) {
                    return document.querySelector(e) || document.createElement("div")
                }
                return e
            }(e) : void 0, t)
        }, V && setTimeout((function() {
            N.devtools && se && se.emit("init", Ki)
        }), 0);
        var un = function(e, t, i, r, s, n, o, a) {
            var c, l = "function" == typeof e ? e.options : e;
            if (t && (l.render = t, l.staticRenderFns = i, l._compiled = !0), r && (l.functional = !0), n && (l._scopeId = "data-v-" + n), o ? (c = function(e) {
                    (e = e || this.$vnode && this.$vnode.ssrContext || this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) || "undefined" == typeof __VUE_SSR_CONTEXT__ || (e = __VUE_SSR_CONTEXT__), s && s.call(this, e), e && e._registeredComponents && e._registeredComponents.add(o)
                }, l._ssrRegister = c) : s && (c = a ? function() {
                    s.call(this, (l.functional ? this.parent : this).$root.$options.shadowRoot)
                } : s), c)
                if (l.functional) {
                    l._injectStyles = c;
                    var h = l.render;
                    l.render = function(e, t) {
                        return c.call(t), h(e, t)
                    }
                } else {
                    var u = l.beforeCreate;
                    l.beforeCreate = u ? [].concat(u, c) : [c]
                } return {
                exports: e,
                options: l
            }
        }(__webpack_require__(314).Z, (function() {
            var e = this,
                t = e._self._c;
            return t("div", {
                staticStyle: {
                    height: "100vh"
                }
            }, [t("b-tabs", {
                staticClass: "h-100 d-flex flex-column",
                attrs: {
                    small: "",
                    "content-class": "flex-grow-1"
                },
                scopedSlots: e._u([{
                    key: "tabs-end",
                    fn: function() {
                        return [t("div", {
                            staticClass: "d-flex justify-content-end",
                            staticStyle: {
                                "overflow-y": "hidden",
                                flex: "1",
                                "-webkit-app-region": "drag",
                                "user-select": "none"
                            }
                        }, [t("div", {
                            staticStyle: {
                                "-webkit-app-region": "no-drag",
                                display: "flex!important"
                            }
                        }, [t("button", {
                            staticClass: "px-3 win-button",
                            on: {
                                click: e.windowMinimize
                            }
                        }, [t("svg", {
                            attrs: {
                                viewBox: "0 0 16 16",
                                fill: "currentColor",
                                width: "1em",
                                height: "1em"
                            }
                        }, [t("path", {
                            attrs: {
                                d: "M14 8v1H3V8h11z"
                            }
                        })])]), t("button", {
                            staticClass: "px-3 win-button",
                            on: {
                                click: e.windowMaximize
                            }
                        }, [t("svg", {
                            attrs: {
                                viewBox: "0 0 16 16",
                                fill: "currentColor",
                                width: "1em",
                                height: "1em"
                            }
                        }, [t("path", {
                            attrs: {
                                d: "M3 3v10h10V3H3zm9 9H4V4h8v8z"
                            }
                        })])]), t("button", {
                            staticClass: "px-3 win-button",
                            attrs: {
                                id: "close-button"
                            },
                            on: {
                                click: e.windowClose
                            }
                        }, [t("svg", {
                            attrs: {
                                viewBox: "0 0 16 16",
                                fill: "currentColor",
                                width: "1em",
                                height: "1em"
                            }
                        }, [t("path", {
                            attrs: {
                                "fill-rule": "evenodd",
                                "clip-rule": "evenodd",
                                d: "M7.116 8l-4.558 4.558.884.884L8 8.884l4.558 4.558.884-.884L8.884 8l4.558-4.558-.884-.884L8 7.116 3.442 2.558l-.884.884L7.116 8z"
                            }
                        })])])])])]
                    },
                    proxy: !0
                }])
            }, [t("b-tab", {
                ref: "tab1",
                staticClass: "mt-3",
                staticStyle: {
                    height: "100%",
                    "text-align": "center"
                },
                attrs: {
                    active: ""
                },
                scopedSlots: e._u([{
                    key: "title",
                    fn: function() {
                        return [t("b-icon", {
                            attrs: {
                                icon: "terminal-fill"
                            }
                        }), e._v(" Agent ")]
                    },
                    proxy: !0
                }])
            }, [t("div", {
                staticClass: "d-flex flex-column h-100"
            }, [t("div", {
                staticClass: "px-3"
            }, [t("b-input-group", {
                staticClass: "mt-3"
            }, [t("b-form-input", {
                attrs: {
                    placeholder: "Target, drag the TARGET to the game window to select...",
                    type: "text",
                    autocorrect: "off",
                    autocapitalize: "none",
                    disabled: e.isAttach < 0
                },
                on: {
                    input: e.onChangeInputKeyUp,
                    drop: e.fileDropExe
                },
                model: {
                    value: e.message,
                    callback: function(t) {
                        e.message = t
                    },
                    expression: "message"
                }
            }), t("b-input-group-append", [t("b-dropdown", {
                ref: "drop1",
                attrs: {
                    title: "Better Drag-N-Drop",
                    right: "",
                    split: "",
                    tabindex: "-1",
                    disabled: e.isAttach < 0,
                    "split-variant": "secondary",
                    variant: "outline-secondary"
                },
                on: {
                    click: e.processPicker
                },
                scopedSlots: e._u([{
                    key: "button-content",
                    fn: function() {
                        return [t("svg", {
                            ref: "picker",
                            staticClass: "b-icon bi",
                            staticStyle: {
                                cursor: "pointer"
                            },
                            attrs: {
                                fill: "currentColor",
                                xmlns: "http://www.w3.org/2000/svg",
                                "aria-hidden": "true",
                                "aria-label": "arrows move",
                                role: "img",
                                focusable: "false",
                                height: "1em",
                                width: "1em",
                                viewBox: "0 0 512 512"
                            }
                        }, [t("path", {
                            attrs: {
                                d: "M256 0c17.7 0 32 14.3 32 32V42.4c93.7 13.9 167.7 88 181.6 181.6H480c17.7 0 32 14.3 32 32s-14.3 32-32 32H469.6c-13.9 93.7-88 167.7-181.6 181.6V480c0 17.7-14.3 32-32 32s-32-14.3-32-32V469.6C130.3 455.7 56.3 381.7 42.4 288H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H42.4C56.3 130.3 130.3 56.3 224 42.4V32c0-17.7 14.3-32 32-32zM107.4 288c12.5 58.3 58.4 104.1 116.6 116.6V384c0-17.7 14.3-32 32-32s32 14.3 32 32v20.6c58.3-12.5 104.1-58.4 116.6-116.6H384c-17.7 0-32-14.3-32-32s14.3-32 32-32h20.6C392.1 165.7 346.3 119.9 288 107.4V128c0 17.7-14.3 32-32 32s-32-14.3-32-32V107.4C165.7 119.9 119.9 165.7 107.4 224H128c17.7 0 32 14.3 32 32s-14.3 32-32 32H107.4zM256 288c-17.7 0-32-14.3-32-32s14.3-32 32-32s32 14.3 32 32s-14.3 32-32 32z"
                            }
                        })])]
                    },
                    proxy: !0
                }])
            }, [t("b-dropdown-item", {
                on: {
                    click: e.filePickerExe
                }
            }, [e._v("Create process")]), t("b-dropdown-divider"), t("b-dropdown-item", {
                on: {
                    click: function(t) {
                        e.remoteIP = e.message = e.target = ""
                    }
                }
            }, [e._v("Local")]), t("b-dropdown-item", {
                on: {
                    click: function(t) {
                        e.message = e.target = "usb", e.remoteIP = ""
                    }
                }
            }, [e._v("USB")]), t("b-dropdown-item", {
                on: {
                    click: function(t) {
                        e.remoteIP = e.message = e.target = "127.0.0.1:27042"
                    }
                }
            }, [e._v("Remote (gadget, wine)")])], 1)], 1)], 1), t("b-input-group", {
                staticClass: "mt-3"
            }, [t("v-select", {
                ref: "dropS",
                staticStyle: {
                    position: "relative",
                    flex: "1 1 auto",
                    width: "1%",
                    "min-width": "0"
                },
                attrs: {
                    placeholder: e.scriptHolder,
                    label: "name",
                    reduce: e => e.fullPath,
                    options: e.options,
                    transition: "",
                    disabled: e.isAttach < 0,
                    clearable: !1
                },
                on: {
                    input: e.printScriptInfoSelect
                },
                scopedSlots: e._u([{
                    key: "no-options",
                    fn: function({
                        search: i,
                        searching: r
                    }) {
                        return [r ? [e._v(" No results found for "), t("em", [e._v(e._s(i))]), e._v(". ")] : t("em", {
                            staticStyle: {
                                opacity: "0.7"
                            }
                        }, [e._v("scripts not found! "), t("b-button", {
                            staticClass: "btn-sm",
                            attrs: {
                                variant: "dark"
                            },
                            on: {
                                click: e.updateRepo
                            }
                        }, [e._v("Update scripts.")])], 1)]
                    }
                }]),
                model: {
                    value: e.script,
                    callback: function(t) {
                        e.script = t
                    },
                    expression: "script"
                }
            }), t("b-input-group-append", [t("b-dropdown", {
                attrs: {
                    right: "",
                    split: "",
                    tabindex: "-1",
                    disabled: e.isAttach < 0,
                    "split-variant": "secondary",
                    variant: "outline-secondary"
                },
                on: {
                    click: e.filePickerJS
                },
                scopedSlots: e._u([{
                    key: "button-content",
                    fn: function() {
                        return [t("b-icon-code")]
                    },
                    proxy: !0
                }])
            }, [t("b-dropdown-item", {
                on: {
                    click: e.updateRepo
                }
            }, [e._v("Update scripts")]), t("b-dropdown-item", {
                on: {
                    click: e.cleanRepoHistory
                }
            }, [e._v("Clear history")]), t("b-dropdown-item", {
                on: {
                    click: e.scriptBrowse
                }
            }, [e._v("Refresh")]), t("b-dropdown-divider"), t("b-dropdown-item", {
                on: {
                    click: e.scriptExplorer
                }
            }, [e._v("Reveal")])], 1)], 1)], 1), t("b-button", {
                staticClass: "mt-3",
                staticStyle: {
                    width: "50%"
                },
                attrs: {
                    variant: "success",
                    disabled: e.isFridaActionDisabled
                },
                on: {
                    click: e.fridaAction
                }
            }, [e._v(" " + e._s(e.actionString) + " ")])], 1), t("div", {
                staticClass: "mt-3 flex-grow-1",
                staticStyle: {
                    background: "#1E1E1E",
                    "color-scheme": "dark"
                },
                attrs: {
                    id: "term"
                }
            })])]), t("b-tab", {
                staticClass: "mt-3",
                attrs: {
                    lazy: ""
                },
                scopedSlots: e._u([{
                    key: "title",
                    fn: function() {
                        return [t("b-icon", {
                            attrs: {
                                icon: "gear-fill"
                            }
                        }), e._v(" Settings ")]
                    },
                    proxy: !0
                }])
            }, [t("div", {
                staticClass: "px-3"
            }, [t("span", [e._v("machine Translate")]), t("b-form-checkbox", {
                attrs: {
                    switch: "",
                    size: "lg"
                },
                model: {
                    value: e.opt_deepl,
                    callback: function(t) {
                        e.opt_deepl = t
                    },
                    expression: "opt_deepl"
                }
            }), t("b-form-select", {
                staticClass: "mt-2",
                attrs: {
                    options: e.optionNMT
                },
                model: {
                    value: e.opt_nmt,
                    callback: function(t) {
                        e.opt_nmt = t
                    },
                    expression: "opt_nmt"
                }
            }), t("p", {
                staticClass: "my-1"
            }, [e._v("Source language")]), t("b-form-select", {
                attrs: {
                    options: [{
                        value: "auto",
                        text: "Detect language"
                    }, {
                        value: "en",
                        text: "English"
                    }, {
                        value: "ja",
                        text: "Japanese"
                    }, {
                        value: "ko",
                        text: "Korean"
                    }, {
                        value: "zh-CN",
                        text: "Chinese (Simplified)"
                    }, {
                        value: "zh-TW",
                        text: "Chinese (Traditional)"
                    }]
                },
                model: {
                    value: e.opt_nmtSrc,
                    callback: function(t) {
                        e.opt_nmtSrc = t
                    },
                    expression: "opt_nmtSrc"
                }
            }), t("p", {
                staticClass: "my-1"
            }, [e._v("Target language")]), t("b-form-select", {
                attrs: {
                    options: [{
                        value: "de",
                        text: "German"
                    }, {
                        value: "en",
                        text: "English"
                    }, {
                        value: "es",
                        text: "Spanish"
                    }, {
                        value: "fr",
                        text: "French"
                    }, {
                        value: "hu",
                        text: "Hungarian"
                    }, {
                        value: "id",
                        text: "Indonesian"
                    }, {
                        value: "it",
                        text: "Italian"
                    }, {
                        value: "ja",
                        text: "Japanese"
                    }, {
                        value: "ko",
                        text: "Korean"
                    }, {
                        value: "nl",
                        text: "Dutch"
                    }, {
                        value: "pl",
                        text: "Polish"
                    }, {
                        value: "pt",
                        text: "Portuguese"
                    }, {
                        value: "pt\0pt-BR",
                        text: "Portuguese (Brazilian)"
                    }, {
                        value: "ru",
                        text: "Russian"
                    }, {
                        value: "tr",
                        text: "Turkish"
                    }, {
                        value: "th",
                        text: "Thai"
                    }, {
                        value: "zh-CN",
                        text: "Chinese (Simplified)"
                    }, {
                        value: "zh-TW",
                        text: "Chinese (Traditional)"
                    }, {
                        value: "vi",
                        text: "Vietnamese"
                    }]
                },
                model: {
                    value: e.opt_nmtDst,
                    callback: function(t) {
                        e.opt_nmtDst = t
                    },
                    expression: "opt_nmtDst"
                }
            }), t("hr", {
                staticClass: "mt-4 mb-2"
            }), t("span", {
                staticStyle: {
                    cursor: "pointer"
                },
                attrs: {
                    title: "Edit"
                },
                on: {
                    click: e.otpClickWSHostPort
                }
            }, [e._v("WebSocketServer: "), t("code", [e._v(e._s(this.otp_wsHost + ":" + this.otp_wsPort))])]), t("b-form-checkbox", {
                attrs: {
                    switch: "",
                    size: "lg"
                },
                model: {
                    value: e.opt_websocket,
                    callback: function(t) {
                        e.opt_websocket = t
                    },
                    expression: "opt_websocket"
                }
            }), t("p", {
                staticClass: "mt-1 mb-0"
            }, [e._v("Clipboard")]), t("b-form-checkbox", {
                attrs: {
                    switch: "",
                    size: "lg"
                },
                model: {
                    value: e.otp_clipboard,
                    callback: function(t) {
                        e.otp_clipboard = t
                    },
                    expression: "otp_clipboard"
                }
            }), t("hr", {
                staticClass: "mt-3 mb-2"
            }), t("p", {
                staticClass: "my-1"
            }, [e._v("Update scripts")]), t("b-form-select", {
                attrs: {
                    options: [{
                        value: 0,
                        text: "Manual"
                    }, {
                        value: 864e5,
                        text: "Every 24 hours"
                    }, {
                        value: 1728e5,
                        text: "Every 48 hours"
                    }]
                },
                model: {
                    value: e.opt_scripts,
                    callback: function(t) {
                        e.opt_scripts = t
                    },
                    expression: "opt_scripts"
                }
            }), t("p", {
                staticClass: "my-1"
            }, [e._v("Runtime")]), t("b-form-select", {
                attrs: {
                    options: [{
                        value: 0,
                        text: "QuickJS (recommended)"
                    }, {
                        value: 1,
                        text: "V8"
                    }, {
                        value: 2,
                        text: "V8 --debug"
                    }]
                },
                model: {
                    value: e.opt_runtime,
                    callback: function(t) {
                        e.opt_runtime = t
                    },
                    expression: "opt_runtime"
                }
            }), t("p", {
                staticClass: "mt-1 mb-0"
            }, [e._v("Realms")]), t("b-form-checkbox", {
                attrs: {
                    switch: "",
                    size: "lg"
                },
                model: {
                    value: e.otp_realm,
                    callback: function(t) {
                        e.otp_realm = t
                    },
                    expression: "otp_realm"
                }
            }), t("div", {
                staticStyle: {
                    position: "absolute",
                    bottom: "0",
                    "padding-bottom": "2rem"
                }
            }, [t("span", [e._v("External Overlay -------- Alt+A+D to collect text")]), t("br"), t("small", {
                staticStyle: {
                    cursor: "pointer"
                },
                attrs: {
                    title: "Edit"
                },
                on: {
                    click: e.opt_ShortcutExternalShow_Click
                }
            }, [t("code", [e._v(e._s(e.opt_ShortcutExternalShow))]), e._v(" Toggle Visibility")]), t("br"), t("small", {
                staticStyle: {
                    cursor: "pointer"
                },
                attrs: {
                    title: "Edit"
                },
                on: {
                    click: e.opt_ShortcutExternalLock_Click
                }
            }, [t("code", [e._v(e._s(e.opt_ShortcutExternalLock))]), e._v(" Toggle lock/unlock Input")]), t("div", {
                staticStyle: {
                    display: "flex",
                    "align-items": "flex-end"
                }
            }, [t("b-form-checkbox", {
                attrs: {
                    switch: "",
                    size: "lg"
                },
                model: {
                    value: e.opt_ShortcutExternal,
                    callback: function(t) {
                        e.opt_ShortcutExternal = t
                    },
                    expression: "opt_ShortcutExternal"
                }
            }), t("small", [e._v("(ShortcutKey Toggle Visibility)")])], 1)])], 1), t("div", {
                staticStyle: {
                    position: "absolute",
                    right: "0",
                    bottom: "0",
                    "padding-right": "1.25rem",
                    "padding-bottom": "2rem",
                    "text-align": "right",
                    "z-index": "-1"
                }
            }, [t("h2", [e._v("Agent")]), t("span", [e._v("Version: 0.1.4.20240527 (nightly)")]), t("br"), t("span", [e._v("Frida: 16.2.5")]), t("br"), t("span", [e._v("Electron: 27.3.11")]), t("br")])]), e._l(e.tabs, (function(i) {
                return t("b-tab", {
                    directives: [{
                        name: "show",
                        rawName: "v-show",
                        value: i > 0,
                        expression: "v>0"
                    }],
                    key: "dyn-tab-" + i,
                    ref: "iframe",
                    refInFor: !0,
                    staticStyle: {
                        height: "100%"
                    },
                    scopedSlots: e._u([{
                        key: "title",
                        fn: function() {
                            return [t("b-icon", {
                                attrs: {
                                    icon: "question-circle-fill"
                                }
                            }), e._v(" UI ")]
                        },
                        proxy: !0
                    }], null, !0)
                })
            }))], 2), t("b-modal", {
                attrs: {
                    id: "modal-process-selector",
                    title: "Attach to process",
                    size: "sm",
                    "body-class": "process-selector-body",
                    headerClass: "p-2 border-bottom-0"
                },
                on: {
                    shown: function(t) {
                        e.$refs.dropP.$el.querySelector("input[type=search]")?.focus()
                    }
                }
            }, [t("v-select", {
                ref: "dropP",
                attrs: {
                    id: "vsx_select",
                    placeholder: "Select the process to attach to",
                    options: e.processes,
                    clearable: !1,
                    clearSearchOnSelect: !0,
                    reduce: t => 0 !== e.remoteIP.length ? e.remoteIP + "|:" + t.pid : !0 === e.message.startsWith("usb") ? "usb|:" + t.pid + ":" + t.name : t.pid + "|" + t.parameters.path,
                    "get-option-label": e => e.parameters.path + "|" + e.pid,
                    "get-option-key": e => e.pid,
                    transition: "",
                    "dropdown-should-open": () => !0,
                    loading: e.processesLoading
                },
                on: {
                    input: e.processPickerOnSelected
                },
                scopedSlots: e._u([{
                    key: "option",
                    fn: function({
                        name: i,
                        pid: r,
                        parameters: s,
                        icon: n
                    }) {
                        return [t("img", {
                            staticClass: "process_icon",
                            attrs: {
                                height: "16",
                                width: "16",
                                src: n
                            }
                        }), e._v(" " + e._s(i) + " "), t("em", {
                            staticStyle: {
                                color: "#6c757d"
                            }
                        }, [e._v(e._s(r))]), t("br"), t("em", {
                            staticStyle: {
                                color: "#6c757d"
                            }
                        }, [e._v(e._s(s.path))])]
                    }
                }, {
                    key: "spinner",
                    fn: function({
                        loading: i
                    }) {
                        return [i ? t("div", {
                            staticClass: "vs__spinner"
                        }) : e._e()]
                    }
                }, {
                    key: "open-indicator",
                    fn: function({
                        attributes: i
                    }) {
                        return [t("b-icon", e._b({
                            staticStyle: {
                                cursor: "pointer",
                                transform: "none"
                            },
                            attrs: {
                                icon: "arrow-clockwise"
                            },
                            on: {
                                click: function(t) {
                                    return e.refreshProcesses(!0)
                                }
                            }
                        }, "b-icon", i, !1))]
                    }
                }])
            })], 1)], 1)
        }), [], !1, null, null, null);
        const dn = un.exports;
        var fn = function() {
                return (fn = Object.assign || function(e) {
                    for (var t, i = 1, r = arguments.length; i < r; i++)
                        for (var s in t = arguments[i]) Object.prototype.hasOwnProperty.call(t, s) && (e[s] = t[s]);
                    return e
                }).apply(this, arguments)
            },
            pn = /-(\w)/g,
            _n = /:(.*)/,
            gn = /;(?![^(]*\))/g;

        function vn(e, t) {
            return t ? t.toUpperCase() : ""
        }

        function mn(e) {
            for (var t, i = {}, r = 0, s = e.split(gn); r < s.length; r++) {
                var n = s[r].split(_n),
                    o = n[0],
                    a = n[1];
                (o = o.trim()) && ("string" == typeof a && (a = a.trim()), i[(t = o, t.replace(pn, vn))] = a)
            }
            return i
        }

        function bn() {
            for (var e, t, i = {}, r = arguments.length; r--;)
                for (var s = 0, n = Object.keys(arguments[r]); s < n.length; s++) switch (e = n[s]) {
                    case "class":
                    case "style":
                    case "directives":
                        if (Array.isArray(i[e]) || (i[e] = []), "style" === e) {
                            var o = void 0;
                            o = Array.isArray(arguments[r].style) ? arguments[r].style : [arguments[r].style];
                            for (var a = 0; a < o.length; a++) {
                                var c = o[a];
                                "string" == typeof c && (o[a] = mn(c))
                            }
                            arguments[r].style = o
                        }
                        i[e] = i[e].concat(arguments[r][e]);
                        break;
                    case "staticClass":
                        if (!arguments[r][e]) break;
                        void 0 === i[e] && (i[e] = ""), i[e] && (i[e] += " "), i[e] += arguments[r][e].trim();
                        break;
                    case "on":
                    case "nativeOn":
                        i[e] || (i[e] = {});
                        for (var l = 0, h = Object.keys(arguments[r][e] || {}); l < h.length; l++) t = h[l], i[e][t] ? i[e][t] = [].concat(i[e][t], arguments[r][e][t]) : i[e][t] = arguments[r][e][t];
                        break;
                    case "attrs":
                    case "props":
                    case "domProps":
                    case "scopedSlots":
                    case "staticStyle":
                    case "hook":
                    case "transition":
                        i[e] || (i[e] = {}), i[e] = fn({}, arguments[r][e], i[e]);
                        break;
                    default:
                        i[e] || (i[e] = arguments[r][e])
                }
            return i
        }

        function wn(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function yn(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? wn(Object(i), !0).forEach((function(t) {
                    Sn(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : wn(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Sn(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }

        function Cn(e, t) {
            if (null == e) return {};
            var i, r, s = function(e, t) {
                if (null == e) return {};
                var i, r, s = {},
                    n = Object.keys(e);
                for (r = 0; r < n.length; r++) i = n[r], t.indexOf(i) >= 0 || (s[i] = e[i]);
                return s
            }(e, t);
            if (Object.getOwnPropertySymbols) {
                var n = Object.getOwnPropertySymbols(e);
                for (r = 0; r < n.length; r++) i = n[r], t.indexOf(i) >= 0 || Object.prototype.propertyIsEnumerable.call(e, i) && (s[i] = e[i])
            }
            return s
        }

        function xn(e) {
            return xn = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, xn(e)
        }
        var En = "_uid",
            On = Ki.version.startsWith("3"),
            kn = On ? "ref_for" : "refInFor",
            Ln = ["class", "staticClass", "style", "attrs", "props", "domProps", "on", "nativeOn", "directives", "scopedSlots", "slot", "key", "ref", "refInFor"],
            Dn = Ki.extend.bind(Ki);
        if (On) {
            var Mn = Ki.extend,
                An = ["router-link", "transition", "transition-group"],
                Rn = Ki.vModelDynamic.created,
                Pn = Ki.vModelDynamic.beforeUpdate;
            Ki.vModelDynamic.created = function(e, t, i) {
                Rn.call(this, e, t, i), e._assign || (e._assign = function() {})
            }, Ki.vModelDynamic.beforeUpdate = function(e, t, i) {
                Pn.call(this, e, t, i), e._assign || (e._assign = function() {})
            }, Dn = function(e) {
                if ("object" === xn(e) && e.render && !e.__alreadyPatched) {
                    var t = e.render;
                    e.__alreadyPatched = !0, e.render = function(i) {
                        var r = function(e, t, r) {
                            var s = void 0 === r ? [] : [Array.isArray(r) ? r.filter(Boolean) : r],
                                n = "string" == typeof e && !An.includes(e);
                            if (!(t && "object" === xn(t) && !Array.isArray(t))) return i.apply(void 0, [e, t].concat(s));
                            var o = t.attrs,
                                a = t.props,
                                c = yn(yn({}, Cn(t, ["attrs", "props"])), {}, {
                                    attrs: o,
                                    props: n ? {} : a
                                });
                            return "router-link" !== e || c.slots || c.scopedSlots || (c.scopedSlots = {
                                $hasNormal: function() {}
                            }), i.apply(void 0, [e, c].concat(s))
                        };
                        if (e.functional) {
                            var s, n, o = arguments[1],
                                a = yn({}, o);
                            a.data = {
                                attrs: yn({}, o.data.attrs || {}),
                                props: yn({}, o.data.props || {})
                            }, Object.keys(o.data || {}).forEach((function(e) {
                                Ln.includes(e) ? a.data[e] = o.data[e] : e in o.props ? a.data.props[e] = o.data[e] : e.startsWith("on") || (a.data.attrs[e] = o.data[e])
                            }));
                            var c = ["_ctx"],
                                l = (null === (s = o.children) || void 0 === s || null === (n = s.default) || void 0 === n ? void 0 : n.call(s)) || o.children;
                            return l && 0 === Object.keys(a.children).filter((function(e) {
                                return !c.includes(e)
                            })).length ? delete a.children : a.children = l, a.data.on = o.listeners, t.call(this, r, a)
                        }
                        return t.call(this, r)
                    }
                }
                return Mn.call(this, e)
            }.bind(Ki)
        }
        var Tn = Ki.nextTick,
            Bn = "BButton",
            In = "BButtonClose",
            $n = "BCol",
            jn = "BContainer",
            Fn = "BDropdown",
            Nn = "BDropdownDivider",
            Wn = "BDropdownForm",
            Hn = "BDropdownGroup",
            Un = "BDropdownHeader",
            zn = "BDropdownItem",
            Gn = "BDropdownItemButton",
            Vn = "BDropdownText",
            qn = "BForm",
            Kn = "BFormCheckbox",
            Xn = "BFormCheckboxGroup",
            Jn = "BFormInput",
            Yn = "BFormRadio",
            Zn = "BFormRow",
            Qn = "BFormSelect",
            eo = "BFormSelectOption",
            to = "BFormSelectOptionGroup",
            io = "BFormTextarea",
            ro = "BIcon",
            so = "BInputGroup",
            no = "BInputGroupAddon",
            oo = "BInputGroupAppend",
            ao = "BInputGroupPrepend",
            co = "BInputGroupText",
            lo = "BLink",
            ho = "BModal",
            uo = "BNav",
            fo = "BRow",
            po = "BTab",
            _o = "BTabs",
            go = "BVTransporter",
            vo = void 0,
            mo = Array,
            bo = Boolean,
            wo = (Date, Function),
            yo = Number,
            So = Object,
            Co = (RegExp, String),
            xo = [mo, wo],
            Eo = [mo, So],
            Oo = [mo, So, Co],
            ko = [mo, Co],
            Lo = [bo, yo, Co],
            Do = [bo, Co],
            Mo = [yo, Co],
            Ao = [So, Co];

        function Ro(e) {
            return Ro = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, Ro(e)
        }
        var Po = function(e) {
                return Ro(e)
            },
            To = function(e) {
                return void 0 === e
            },
            Bo = function(e) {
                return null === e
            },
            Io = function(e) {
                return To(e) || Bo(e)
            },
            $o = function(e) {
                return "function" === Po(e)
            },
            jo = function(e) {
                return "boolean" === Po(e)
            },
            Fo = function(e) {
                return "string" === Po(e)
            },
            No = function(e) {
                return Array.isArray(e)
            },
            Wo = function(e) {
                return null !== e && "object" === Ro(e)
            },
            Ho = function(e) {
                return "[object Object]" === Object.prototype.toString.call(e)
            },
            Uo = function(e) {
                return e instanceof Date
            },
            zo = function(e) {
                return e instanceof Event
            };

        function Go(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Vo(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Go(Object(i), !0).forEach((function(t) {
                    qo(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Go(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function qo(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Ko = function() {
                return Object.assign.apply(Object, arguments)
            },
            Xo = function(e, t) {
                return Object.create(e, t)
            },
            Jo = function(e, t) {
                return Object.defineProperties(e, t)
            },
            Yo = function(e, t, i) {
                return Object.defineProperty(e, t, i)
            },
            Zo = function(e) {
                return Object.getOwnPropertyNames(e)
            },
            Qo = function(e) {
                return Object.keys(e)
            },
            ea = function(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t)
            },
            ta = function(e) {
                return Vo({}, e)
            },
            ia = function(e, t) {
                return Qo(e).filter((function(e) {
                    return -1 === t.indexOf(e)
                })).reduce((function(t, i) {
                    return Vo(Vo({}, t), {}, qo({}, i, e[i]))
                }), {})
            },
            ra = function e(t, i) {
                return Wo(t) && Wo(i) && Qo(i).forEach((function(r) {
                    Wo(i[r]) ? (t[r] && Wo(t[r]) || (t[r] = i[r]), e(t[r], i[r])) : Ko(t, qo({}, r, i[r]))
                })), t
            },
            sa = function(e) {
                return Qo(e).sort().reduce((function(t, i) {
                    return Vo(Vo({}, t), {}, qo({}, i, e[i]))
                }), {})
            };

        function na(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function oa(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? na(Object(i), !0).forEach((function(t) {
                    aa(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : na(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function aa(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }

        function ca(e) {
            return function(e) {
                if (Array.isArray(e)) return la(e)
            }(e) || function(e) {
                if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
            }(e) || function(e, t) {
                if (!e) return;
                if ("string" == typeof e) return la(e, t);
                var i = Object.prototype.toString.call(e).slice(8, -1);
                "Object" === i && e.constructor && (i = e.constructor.name);
                if ("Map" === i || "Set" === i) return Array.from(e);
                if ("Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return la(e, t)
            }(e) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function la(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var i = 0, r = new Array(t); i < t; i++) r[i] = e[i];
            return r
        }
        var ha = function e(t) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : t;
                return No(t) ? t.reduce((function(t, i) {
                    return [].concat(ca(t), [e(i, i)])
                }), []) : Ho(t) ? Qo(t).reduce((function(i, r) {
                    return oa(oa({}, i), {}, aa({}, r, e(t[r], t[r])))
                }), {}) : i
            },
            ua = "BvConfig",
            da = "$bvConfig",
            fa = ["xs", "sm", "md", "lg", "xl"],
            pa = function(e) {
                var t = Xo(null);
                return function() {
                    for (var i = arguments.length, r = new Array(i), s = 0; s < i; s++) r[s] = arguments[s];
                    var n = JSON.stringify(r);
                    return t[n] = t[n] || e.apply(null, r)
                }
            },
            _a = Ki.prototype,
            ga = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0,
                    i = _a[da];
                return i ? i.getConfigValue(e, t) : ha(t)
            },
            va = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
                return t ? ga("".concat(e, ".").concat(t), i) : ga(e, {})
            },
            ma = function() {
                return ga("breakpoints", fa)
            },
            ba = pa((function() {
                return ma()
            })),
            wa = function() {
                return ha(ba())
            },
            ya = pa((function() {
                var e = wa();
                return e[0] = "", e
            })),
            Sa = function(e) {
                return e
            },
            Ca = /\[(\d+)]/g,
            xa = /^(BV?)/,
            Ea = /^\d+$/,
            Oa = /(<([^>]+)>)/gi,
            ka = /\B([A-Z])/g,
            La = /-(\w)/g,
            Da = /%2C/g,
            Ma = /[!'()*]/g,
            Aa = /^col-/,
            Ra = /^BIcon/,
            Pa = function(e) {
                return e.replace(ka, "-$1").toLowerCase()
            },
            Ta = function(e) {
                return (e = Pa(e).replace(La, (function(e, t) {
                    return t ? t.toUpperCase() : ""
                }))).charAt(0).toUpperCase() + e.slice(1)
            },
            Ba = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 2;
                return Io(e) ? "" : No(e) || Ho(e) && e.toString === Object.prototype.toString ? JSON.stringify(e, null, t) : String(e)
            },
            Ia = function(e) {
                return Ba(e).trim()
            },
            $a = function(e) {
                return Ba(e).toLowerCase()
            };

        function ja(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Fa(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ja(Object(i), !0).forEach((function(t) {
                    Na(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : ja(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Na(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Wa = function(e, t) {
                return t + (e ? (i = Fo(i = e) ? i.trim() : String(i)).charAt(0).toUpperCase() + i.slice(1) : "");
                var i
            },
            Ha = function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : vo,
                    t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0,
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0,
                    r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : void 0,
                    s = !0 === i;
                return r = s ? r : i, Fa(Fa(Fa({}, e ? {
                    type: e
                } : {}), s ? {
                    required: s
                } : To(t) ? {} : {
                    default: Wo(t) ? function() {
                        return t
                    } : t
                }), To(r) ? {} : {
                    validator: r
                })
            },
            Ua = function(e, t) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : Sa;
                return (No(e) ? e.slice() : Qo(e)).reduce((function(e, r) {
                    return e[i(r)] = t[r], e
                }), {})
            },
            za = function(e, t, i) {
                return Fa(Fa({}, ha(e)), {}, {
                    default: function() {
                        var r = va(i, t, e.default);
                        return $o(r) ? r() : r
                    }
                })
            },
            Ga = function(e, t) {
                return Qo(e).reduce((function(i, r) {
                    return Fa(Fa({}, i), {}, Na({}, r, za(e[r], r, t)))
                }), {})
            },
            Va = za({}, "", "").default.name;
        var qa = Ga({
                fluid: Ha(Do, !1),
                tag: Ha(Co, "div")
            }, jn),
            Ka = Dn({
                name: jn,
                functional: !0,
                props: qa,
                render: function(e, t) {
                    var i, r, s, n = t.props,
                        o = t.data,
                        a = t.children,
                        c = n.fluid;
                    return e(n.tag, bn(o, {
                        class: (i = {
                            container: !(c || "" === c),
                            "container-fluid": !0 === c || "" === c
                        }, r = "container-".concat(c), s = c && !0 !== c, r in i ? Object.defineProperty(i, r, {
                            value: s,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }) : i[r] = s, i)
                    }), a)
                }
            }),
            Xa = function() {
                return Array.from.apply(Array, arguments)
            },
            Ja = function(e, t) {
                return -1 !== e.indexOf(t)
            },
            Ya = function() {
                for (var e = arguments.length, t = new Array(e), i = 0; i < e; i++) t[i] = arguments[i];
                return Array.prototype.concat.apply([], t)
            };

        function Za(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Qa(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Za(Object(i), !0).forEach((function(t) {
                    ec(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Za(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function ec(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var tc = ["start", "end", "center"],
            ic = pa((function(e, t) {
                return (t = Ia(Ba(t))) ? $a(["row-cols", e, t].filter(Sa).join("-")) : null
            })),
            rc = pa((function(e) {
                return $a(e.replace("cols", ""))
            })),
            sc = [],
            nc = {
                name: fo,
                functional: !0,
                get props() {
                    var e;
                    return delete this.props, this.props = (e = ya().reduce((function(e, t) {
                        return e[Wa(t, "cols")] = Ha(Mo), e
                    }), Xo(null)), sc = Qo(e), Ga(sa(Qa(Qa({}, e), {}, {
                        alignContent: Ha(Co, null, (function(e) {
                            return Ja(Ya(tc, "between", "around", "stretch"), e)
                        })),
                        alignH: Ha(Co, null, (function(e) {
                            return Ja(Ya(tc, "between", "around"), e)
                        })),
                        alignV: Ha(Co, null, (function(e) {
                            return Ja(Ya(tc, "baseline", "stretch"), e)
                        })),
                        noGutters: Ha(bo, !1),
                        tag: Ha(Co, "div")
                    })), fo)), this.props
                },
                render: function(e, t) {
                    var i, r = t.props,
                        s = t.data,
                        n = t.children,
                        o = r.alignV,
                        a = r.alignH,
                        c = r.alignContent,
                        l = [];
                    return sc.forEach((function(e) {
                        var t = ic(rc(e), r[e]);
                        t && l.push(t)
                    })), l.push((ec(i = {
                        "no-gutters": r.noGutters
                    }, "align-items-".concat(o), o), ec(i, "justify-content-".concat(a), a), ec(i, "align-content-".concat(c), c), i)), e(r.tag, bn(s, {
                        staticClass: "row",
                        class: l
                    }), n)
                }
            };

        function oc(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function ac(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? oc(Object(i), !0).forEach((function(t) {
                    cc(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : oc(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function cc(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var lc = ["auto", "start", "end", "center", "baseline", "stretch"],
            hc = pa((function(e, t, i) {
                var r = e;
                if (!Io(i) && !1 !== i) return t && (r += "-".concat(t)), "col" !== e || "" !== i && !0 !== i ? (r += "-".concat(i), $a(r)) : $a(r)
            })),
            uc = Xo(null),
            dc = {
                name: $n,
                functional: !0,
                get props() {
                    return delete this.props, this.props = (e = ya().filter(Sa), t = e.reduce((function(e, t) {
                        return e[t] = Ha(Lo), e
                    }), Xo(null)), i = e.reduce((function(e, t) {
                        return e[Wa(t, "offset")] = Ha(Mo), e
                    }), Xo(null)), r = e.reduce((function(e, t) {
                        return e[Wa(t, "order")] = Ha(Mo), e
                    }), Xo(null)), uc = Ko(Xo(null), {
                        col: Qo(t),
                        offset: Qo(i),
                        order: Qo(r)
                    }), Ga(sa(ac(ac(ac(ac({}, t), i), r), {}, {
                        alignSelf: Ha(Co, null, (function(e) {
                            return Ja(lc, e)
                        })),
                        col: Ha(bo, !1),
                        cols: Ha(Mo),
                        offset: Ha(Mo),
                        order: Ha(Mo),
                        tag: Ha(Co, "div")
                    })), $n));
                    var e, t, i, r
                },
                render: function(e, t) {
                    var i, r = t.props,
                        s = t.data,
                        n = t.children,
                        o = r.cols,
                        a = r.offset,
                        c = r.order,
                        l = r.alignSelf,
                        h = [];
                    for (var u in uc)
                        for (var d = uc[u], f = 0; f < d.length; f++) {
                            var p = hc(u, d[f].replace(u, ""), r[d[f]]);
                            p && h.push(p)
                        }
                    var _ = h.some((function(e) {
                        return Aa.test(e)
                    }));
                    return h.push((cc(i = {
                        col: r.col || !_ && !o
                    }, "col-".concat(o), o), cc(i, "offset-".concat(a), a), cc(i, "order-".concat(c), c), cc(i, "align-self-".concat(l), l), i)), e(r.tag, bn(s, {
                        class: h
                    }), n)
                }
            },
            fc = Ga({
                tag: Ha(Co, "div")
            }, Zn),
            pc = Dn({
                name: Zn,
                functional: !0,
                props: fc,
                render: function(e, t) {
                    var i = t.props,
                        r = t.data,
                        s = t.children;
                    return e(i.tag, bn(r, {
                        staticClass: "form-row"
                    }), s)
                }
            }),
            _c = "undefined" != typeof window,
            gc = "undefined" != typeof document,
            vc = "undefined" != typeof navigator,
            mc = "undefined" != typeof Promise,
            bc = "undefined" != typeof MutationObserver || "undefined" != typeof WebKitMutationObserver || "undefined" != typeof MozMutationObserver,
            wc = _c && gc && vc,
            yc = _c ? window : {},
            Sc = gc ? document : {},
            Cc = vc ? navigator : {},
            xc = (Cc.userAgent || "").toLowerCase(),
            Ec = xc.indexOf("jsdom") > 0,
            Oc = (/msie|trident/.test(xc), function() {
                var e = !1;
                if (wc) try {
                    var t = {
                        get passive() {
                            e = !0
                        }
                    };
                    yc.addEventListener("test", t, t), yc.removeEventListener("test", t, t)
                } catch (t) {
                    e = !1
                }
                return e
            }()),
            kc = wc && ("ontouchstart" in Sc.documentElement || Cc.maxTouchPoints > 0),
            Lc = (wc && Boolean(yc.PointerEvent || yc.MSPointerEvent), wc && "IntersectionObserver" in yc && "IntersectionObserverEntry" in yc && yc.IntersectionObserverEntry.prototype, function(e, t) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : void 0;
                if (!(t = No(t) ? t.join(".") : t) || !Wo(e)) return i;
                if (t in e) return e[t];
                var r = (t = String(t).replace(Ca, ".$1")).split(".").filter(Sa);
                return 0 === r.length ? i : r.every((function(t) {
                    return Wo(e) && t in e && !Io(e = e[t])
                })) ? e : Bo(e) ? null : i
            }),
            Dc = function(e, t) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : null,
                    r = Lc(e, t);
                return Io(r) ? i : r
            },
            Mc = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
                    i = "undefined" != typeof process && process ? {
                        NODE_ENV: "production",
                        BASE_URL: ""
                    } || 0 : {};
                return e ? i[e] || t : i
            },
            Ac = function() {
                return Mc("BOOTSTRAP_VUE_NO_WARN") || "production" === Mc("NODE_ENV")
            },
            Rc = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                Ac() || console.warn("[BootstrapVue warn]: ".concat(t ? "".concat(t, " - ") : "").concat(e))
            },
            Pc = function(e) {
                return !wc && (Rc("".concat(e, ": Can not be called during SSR.")), !0)
            },
            Tc = function(e) {
                return !mc && (Rc("".concat(e, ": Requires Promise support.")), !0)
            };

        function Bc(e, t) {
            for (var i = 0; i < t.length; i++) {
                var r = t[i];
                r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
            }
        }
        var Ic = function() {
                function e() {
                    ! function(e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.$_config = {}
                }
                var t, i, r;
                return t = e, i = [{
                    key: "setConfig",
                    value: function() {
                        var e = this,
                            t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
                        if (Ho(t)) {
                            var i = Zo(t);
                            i.forEach((function(i) {
                                var r = t[i];
                                "breakpoints" === i ? !No(r) || r.length < 2 || r.some((function(e) {
                                    return !Fo(e) || 0 === e.length
                                })) ? Rc('"breakpoints" must be an array of at least 2 breakpoint names', ua) : e.$_config[i] = ha(r) : Ho(r) && (e.$_config[i] = Zo(r).reduce((function(e, t) {
                                    return To(r[t]) || (e[t] = ha(r[t])), e
                                }), e.$_config[i] || {}))
                            }))
                        }
                    }
                }, {
                    key: "resetConfig",
                    value: function() {
                        this.$_config = {}
                    }
                }, {
                    key: "getConfig",
                    value: function() {
                        return ha(this.$_config)
                    }
                }, {
                    key: "getConfigValue",
                    value: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : void 0;
                        return ha(Lc(this.$_config, e, t))
                    }
                }], i && Bc(t.prototype, i), r && Bc(t, r), Object.defineProperty(t, "prototype", {
                    writable: !1
                }), e
            }(),
            $c = function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : Ki;
                t.prototype[da] = Ki.prototype[da] = t.prototype[da] || Ki.prototype[da] || new Ic, t.prototype[da].setConfig(e)
            };

        function jc(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Fc(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? jc(Object(i), !0).forEach((function(t) {
                    Nc(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : jc(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Nc(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Wc, Hc, Uc = (Wc = !1, Hc = ["Multiple instances of Vue detected!", "You may need to set up an alias for Vue in your bundler config.", "See: https://bootstrap-vue.org/docs#using-module-bundlers"].join("\n"), function(e) {
                Wc || Ki === e || Ec || Rc(Hc), Wc = !0
            }),
            zc = function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    t = e.components,
                    i = e.directives,
                    r = e.plugins,
                    s = function e(s) {
                        var n = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        e.installed || (e.installed = !0, Uc(s), $c(n, s), Kc(s, t), Jc(s, i), Vc(s, r))
                    };
                return s.installed = !1, s
            },
            Gc = function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                    t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                return Fc(Fc({}, t), {}, {
                    install: zc(e)
                })
            },
            Vc = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                for (var i in t) i && t[i] && e.use(t[i])
            },
            qc = function(e, t, i) {
                e && t && i && e.component(t, i)
            },
            Kc = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                for (var i in t) qc(e, i, t[i])
            },
            Xc = function(e, t, i) {
                e && t && i && e.directive(t.replace(/^VB/, "B"), i)
            },
            Jc = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                for (var i in t) Xc(e, i, t[i])
            },
            Yc = Gc({
                components: {
                    BContainer: Ka,
                    BRow: nc,
                    BCol: dc,
                    BFormRow: pc
                }
            }),
            Zc = "cancel",
            Qc = "change",
            el = "click",
            tl = "close",
            il = "first",
            rl = "hidden",
            sl = "hide",
            nl = "input",
            ol = "last",
            al = "next",
            cl = "prev",
            ll = "show",
            hl = "shown",
            ul = "toggle",
            dl = On ? "vnodeBeforeUnmount" : "hook:beforeDestroy",
            fl = On ? "vNodeUnmounted" : "hook:destroyed",
            pl = "update:",
            _l = "bv",
            gl = {
                passive: !0
            },
            vl = {
                passive: !0,
                capture: !1
            },
            ml = 40,
            bl = 35,
            wl = 13,
            yl = 36,
            Sl = 37,
            Cl = 39,
            xl = 32,
            El = 38,
            Ol = "append",
            kl = "button-content",
            Ll = "default",
            Dl = "first",
            Ml = "header",
            Al = "modal-cancel",
            Rl = "modal-ok",
            Pl = "modal-title",
            Tl = "prepend",
            Bl = "title";

        function Il(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function $l(e, t) {
            for (var i = 0; i < t.length; i++) {
                var r = t[i];
                r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
            }
        }
        var jl = function() {
            function e(t) {
                var i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                if (Il(this, e), !t) throw new TypeError("Failed to construct '".concat(this.constructor.name, "'. 1 argument required, ").concat(arguments.length, " given."));
                Ko(this, e.Defaults, this.constructor.Defaults, i, {
                    type: t
                }), Jo(this, {
                    type: {
                        enumerable: !0,
                        configurable: !1,
                        writable: !1
                    },
                    cancelable: {
                        enumerable: !0,
                        configurable: !1,
                        writable: !1
                    },
                    nativeEvent: {
                        enumerable: !0,
                        configurable: !1,
                        writable: !1
                    },
                    target: {
                        enumerable: !0,
                        configurable: !1,
                        writable: !1
                    },
                    relatedTarget: {
                        enumerable: !0,
                        configurable: !1,
                        writable: !1
                    },
                    vueTarget: {
                        enumerable: !0,
                        configurable: !1,
                        writable: !1
                    },
                    componentId: {
                        enumerable: !0,
                        configurable: !1,
                        writable: !1
                    }
                });
                var r = !1;
                this.preventDefault = function() {
                    this.cancelable && (r = !0)
                }, Yo(this, "defaultPrevented", {
                    enumerable: !0,
                    get: function() {
                        return r
                    }
                })
            }
            var t, i, r;
            return t = e, r = [{
                key: "Defaults",
                get: function() {
                    return {
                        type: "",
                        cancelable: !0,
                        nativeEvent: null,
                        target: null,
                        relatedTarget: null,
                        vueTarget: null,
                        componentId: null
                    }
                }
            }], (i = null) && $l(t.prototype, i), r && $l(t, r), Object.defineProperty(t, "prototype", {
                writable: !1
            }), e
        }();

        function Fl(e) {
            return Fl = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, Fl(e)
        }

        function Nl(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function Wl(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
            Object.defineProperty(e, "prototype", {
                value: Object.create(t && t.prototype, {
                    constructor: {
                        value: e,
                        writable: !0,
                        configurable: !0
                    }
                }),
                writable: !1
            }), t && ql(e, t)
        }

        function Hl(e) {
            var t = Vl();
            return function() {
                var i, r = Kl(e);
                if (t) {
                    var s = Kl(this).constructor;
                    i = Reflect.construct(r, arguments, s)
                } else i = r.apply(this, arguments);
                return Ul(this, i)
            }
        }

        function Ul(e, t) {
            if (t && ("object" === Fl(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            return function(e) {
                if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return e
            }(e)
        }

        function zl(e) {
            var t = "function" == typeof Map ? new Map : void 0;
            return zl = function(e) {
                if (null === e || (i = e, -1 === Function.toString.call(i).indexOf("[native code]"))) return e;
                var i;
                if ("function" != typeof e) throw new TypeError("Super expression must either be null or a function");
                if (void 0 !== t) {
                    if (t.has(e)) return t.get(e);
                    t.set(e, r)
                }

                function r() {
                    return Gl(e, arguments, Kl(this).constructor)
                }
                return r.prototype = Object.create(e.prototype, {
                    constructor: {
                        value: r,
                        enumerable: !1,
                        writable: !0,
                        configurable: !0
                    }
                }), ql(r, e)
            }, zl(e)
        }

        function Gl(e, t, i) {
            return Gl = Vl() ? Reflect.construct : function(e, t, i) {
                var r = [null];
                r.push.apply(r, t);
                var s = new(Function.bind.apply(e, r));
                return i && ql(s, i.prototype), s
            }, Gl.apply(null, arguments)
        }

        function Vl() {
            if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
            if (Reflect.construct.sham) return !1;
            if ("function" == typeof Proxy) return !0;
            try {
                return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
            } catch (e) {
                return !1
            }
        }

        function ql(e, t) {
            return ql = Object.setPrototypeOf || function(e, t) {
                return e.__proto__ = t, e
            }, ql(e, t)
        }

        function Kl(e) {
            return Kl = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e)
            }, Kl(e)
        }
        var Xl = _c ? yc.Element : function(e) {
                Wl(i, e);
                var t = Hl(i);

                function i() {
                    return Nl(this, i), t.apply(this, arguments)
                }
                return i
            }(zl(Object)),
            Jl = _c ? yc.HTMLElement : function(e) {
                Wl(i, e);
                var t = Hl(i);

                function i() {
                    return Nl(this, i), t.apply(this, arguments)
                }
                return i
            }(Xl),
            Yl = (_c && yc.SVGElement, _c && yc.File, Xl.prototype),
            Zl = ["button", "[href]:not(.disabled)", "input", "select", "textarea", "[tabindex]", "[contenteditable]"].map((function(e) {
                return "".concat(e, ":not(:disabled):not([disabled])")
            })).join(", "),
            Ql = Yl.matches || Yl.msMatchesSelector || Yl.webkitMatchesSelector,
            eh = Yl.closest || function(e) {
                var t = this;
                do {
                    if (hh(t, e)) return t;
                    t = t.parentElement || t.parentNode
                } while (!Bo(t) && t.nodeType === Node.ELEMENT_NODE);
                return null
            },
            th = (yc.requestAnimationFrame || yc.webkitRequestAnimationFrame || yc.mozRequestAnimationFrame || yc.msRequestAnimationFrame || yc.oRequestAnimationFrame || function(e) {
                return setTimeout(e, 16)
            }).bind(yc),
            ih = yc.MutationObserver || yc.WebKitMutationObserver || yc.MozMutationObserver || null,
            rh = function(e) {
                return !(!e || e.nodeType !== Node.ELEMENT_NODE)
            },
            sh = function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
                    t = Sc.activeElement;
                return t && !e.some((function(e) {
                    return e === t
                })) ? t : null
            },
            nh = function(e, t) {
                return Ba(e).toLowerCase() === Ba(t).toLowerCase()
            },
            oh = function(e) {
                return rh(e) && e === sh()
            },
            ah = function(e) {
                if (!rh(e) || !e.parentNode || !dh(Sc.body, e)) return !1;
                if ("none" === yh(e, "display")) return !1;
                var t = Sh(e);
                return !!(t && t.height > 0 && t.width > 0)
            },
            ch = function(e, t) {
                return Xa((rh(t) ? t : Sc).querySelectorAll(e))
            },
            lh = function(e, t) {
                return (rh(t) ? t : Sc).querySelector(e) || null
            },
            hh = function(e, t) {
                return !!rh(e) && Ql.call(e, t)
            },
            uh = function(e, t) {
                var i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                if (!rh(t)) return null;
                var r = eh.call(t, e);
                return i ? r : r === t ? null : r
            },
            dh = function(e, t) {
                return !(!e || !$o(e.contains)) && e.contains(t)
            },
            fh = function(e, t) {
                t && rh(e) && e.classList && e.classList.add(t)
            },
            ph = function(e, t) {
                t && rh(e) && e.classList && e.classList.remove(t)
            },
            _h = function(e, t) {
                return !!(t && rh(e) && e.classList) && e.classList.contains(t)
            },
            gh = function(e, t, i) {
                t && rh(e) && e.setAttribute(t, i)
            },
            vh = function(e, t) {
                t && rh(e) && e.removeAttribute(t)
            },
            mh = function(e, t) {
                return t && rh(e) ? e.getAttribute(t) : null
            },
            bh = function(e, t) {
                return t && rh(e) ? e.hasAttribute(t) : null
            },
            wh = function(e, t, i) {
                t && rh(e) && (e.style[t] = i)
            },
            yh = function(e, t) {
                return t && rh(e) && e.style[t] || null
            },
            Sh = function(e) {
                return rh(e) ? e.getBoundingClientRect() : null
            },
            Ch = function(e) {
                var t = yc.getComputedStyle;
                return t && rh(e) ? t(e) : {}
            },
            xh = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                try {
                    e.focus(t)
                } catch (e) {}
                return oh(e)
            },
            Eh = function(e) {
                try {
                    e.blur()
                } catch (e) {}
                return !oh(e)
            },
            Oh = function(e) {
                return Oc ? Wo(e) ? e : {
                    capture: !!e || !1
                } : !!(Wo(e) ? e.capture : e)
            },
            kh = function(e, t, i, r) {
                e && e.addEventListener && e.addEventListener(t, i, Oh(r))
            },
            Lh = function(e, t, i, r) {
                e && e.removeEventListener && e.removeEventListener(t, i, Oh(r))
            },
            Dh = function(e) {
                for (var t = e ? kh : Lh, i = arguments.length, r = new Array(i > 1 ? i - 1 : 0), s = 1; s < i; s++) r[s - 1] = arguments[s];
                t.apply(void 0, r)
            },
            Mh = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    i = t.preventDefault,
                    r = void 0 === i || i,
                    s = t.propagation,
                    n = void 0 === s || s,
                    o = t.immediatePropagation,
                    a = void 0 !== o && o;
                r && e.preventDefault(), n && e.stopPropagation(), a && e.stopImmediatePropagation()
            },
            Ah = function(e) {
                return Pa(e.replace(xa, ""))
            },
            Rh = function(e, t) {
                return [_l, Ah(e), t].join("::")
            },
            Ph = function(e, t) {
                return [_l, t, Ah(e)].join("::")
            },
            Th = function e(t, i) {
                if (t === i) return !0;
                var r = Uo(t),
                    s = Uo(i);
                if (r || s) return !(!r || !s) && t.getTime() === i.getTime();
                if (r = No(t), s = No(i), r || s) return !(!r || !s) && function(e, t) {
                    if (e.length !== t.length) return !1;
                    for (var i = !0, r = 0; i && r < e.length; r++) i = Th(e[r], t[r]);
                    return i
                }(t, i);
                if (r = Wo(t), s = Wo(i), r || s) {
                    if (!r || !s) return !1;
                    if (Qo(t).length !== Qo(i).length) return !1;
                    for (var n in t) {
                        var o = ea(t, n),
                            a = ea(i, n);
                        if (o && !a || !o && a || !e(t[n], i[n])) return !1
                    }
                }
                return String(t) === String(i)
            },
            Bh = Math.min,
            Ih = Math.max,
            $h = (Math.abs, Math.ceil);
        Math.floor, Math.pow, Math.round;

        function jh(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Fh = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    i = t.type,
                    r = void 0 === i ? vo : i,
                    s = t.defaultValue,
                    n = void 0 === s ? void 0 : s,
                    o = t.validator,
                    a = void 0 === o ? void 0 : o,
                    c = t.event,
                    l = void 0 === c ? nl : c,
                    h = jh({}, e, Ha(r, n, a)),
                    u = Dn({
                        model: {
                            prop: e,
                            event: l
                        },
                        props: h
                    });
                return {
                    mixin: u,
                    props: h,
                    prop: e,
                    event: l
                }
            },
            Nh = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : NaN,
                    i = parseInt(e, 10);
                return isNaN(i) ? t : i
            },
            Wh = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : NaN,
                    i = parseFloat(e);
                return isNaN(i) ? t : i
            };

        function Hh(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Uh(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var zh = function(e, t, i) {
                if (e = e ? e.$el || e : null, !rh(e)) return null;
                if (r = "observeDom", !bc && (Rc("".concat(r, ": Requires MutationObserver support.")), 1)) return null;
                var r, s = new ih((function(e) {
                    for (var i = !1, r = 0; r < e.length && !i; r++) {
                        var s = e[r],
                            n = s.type,
                            o = s.target;
                        ("characterData" === n && o.nodeType === Node.TEXT_NODE || "attributes" === n || "childList" === n && (s.addedNodes.length > 0 || s.removedNodes.length > 0)) && (i = !0)
                    }
                    i && t()
                }));
                return s.observe(e, function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var i = null != arguments[t] ? arguments[t] : {};
                        t % 2 ? Hh(Object(i), !0).forEach((function(t) {
                            Uh(e, t, i[t])
                        })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Hh(Object(i)).forEach((function(t) {
                            Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                        }))
                    }
                    return e
                }({
                    childList: !0,
                    subtree: !0
                }, i)), s
            },
            Gh = {
                id: Ha(Co)
            },
            Vh = Dn({
                props: Gh,
                data: function() {
                    return {
                        localId_: null
                    }
                },
                computed: {
                    safeId: function() {
                        var e = this.id || this.localId_;
                        return function(t) {
                            return e ? (t = String(t || "").replace(/\s+/g, "_")) ? e + "_" + t : e : null
                        }
                    }
                },
                mounted: function() {
                    var e = this;
                    this.$nextTick((function() {
                        e.localId_ = "__BVID__".concat(e[En])
                    }))
                }
            }),
            qh = function(e) {
                var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                return (e = Ya(e).filter(Sa)).some((function(e) {
                    return t[e] || i[e]
                }))
            },
            Kh = function(e) {
                var t, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                    r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                    s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : {};
                e = Ya(e).filter(Sa);
                for (var n = 0; n < e.length && !t; n++) {
                    var o = e[n];
                    t = r[o] || s[o]
                }
                return $o(t) ? t(i) : t
            },
            Xh = Dn({
                methods: {
                    hasNormalizedSlot: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ll,
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : this.$scopedSlots,
                            i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.$slots;
                        return qh(e, t, i)
                    },
                    normalizeSlot: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : Ll,
                            t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                            i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : this.$scopedSlots,
                            r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : this.$slots,
                            s = Kh(e, t, i, r);
                        return s ? Ya(s) : s
                    }
                }
            });

        function Jh(e) {
            return On ? new Proxy(e, {
                get: function(e, t) {
                    return t in e ? e[t] : void 0
                }
            }) : e
        }
        var Yh = function(e) {
                return "%" + e.charCodeAt(0).toString(16)
            },
            Zh = function(e) {
                return encodeURIComponent(Ba(e)).replace(Ma, Yh).replace(Da, ",")
            },
            Qh = (decodeURIComponent, function(e) {
                if (!Ho(e)) return "";
                var t = Qo(e).map((function(t) {
                    var i = e[t];
                    return To(i) ? "" : Bo(i) ? Zh(t) : No(i) ? i.reduce((function(e, i) {
                        return Bo(i) ? e.push(Zh(t)) : To(i) || e.push(Zh(t) + "=" + Zh(i)), e
                    }), []).join("&") : Zh(t) + "=" + Zh(i)
                })).filter((function(e) {
                    return e.length > 0
                })).join("&");
                return t ? "?".concat(t) : ""
            }),
            eu = function(e) {
                return !(!e || nh(e, "a"))
            };

        function tu(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var iu = function(e) {
                return !e || 0 === Qo(e).length
            },
            ru = function(e) {
                return {
                    handler: function(t, i) {
                        if (!Th(t, i))
                            if (iu(t) || iu(i)) this[e] = ha(t);
                            else {
                                for (var r in i) ea(t, r) || this.$delete(this.$data[e], r);
                                for (var s in t) this.$set(this.$data[e], s, t[s])
                            }
                    }
                }
            },
            su = function(e, t) {
                return Dn({
                    data: function() {
                        return tu({}, t, ha(this[e]))
                    },
                    watch: tu({}, e, ru(t))
                })
            };

        function nu(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function ou(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var au = su("$attrs", "bvAttrs"),
            cu = Dn({
                computed: {
                    bvAttrs: function() {
                        var e = function(e) {
                            for (var t = 1; t < arguments.length; t++) {
                                var i = null != arguments[t] ? arguments[t] : {};
                                t % 2 ? nu(Object(i), !0).forEach((function(t) {
                                    ou(e, t, i[t])
                                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : nu(Object(i)).forEach((function(t) {
                                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                                }))
                            }
                            return e
                        }({}, this.$attrs);
                        return Object.keys(e).forEach((function(t) {
                            void 0 === e[t] && delete e[t]
                        })), e
                    }
                }
            }),
            lu = On ? cu : au,
            hu = function(e) {
                return e.$root.$options.bvEventRoot || e.$root
            },
            uu = "$_rootListeners",
            du = Dn({
                computed: {
                    bvEventRoot: function() {
                        return hu(this)
                    }
                },
                created: function() {
                    this[uu] = {}
                },
                beforeDestroy: function() {
                    var e = this;
                    Qo(this[uu] || {}).forEach((function(t) {
                        e[uu][t].forEach((function(i) {
                            e.listenOffRoot(t, i)
                        }))
                    })), this[uu] = null
                },
                methods: {
                    registerRootListener: function(e, t) {
                        this[uu] && (this[uu][e] = this[uu][e] || [], Ja(this[uu][e], t) || this[uu][e].push(t))
                    },
                    unregisterRootListener: function(e, t) {
                        this[uu] && this[uu][e] && (this[uu][e] = this[uu][e].filter((function(e) {
                            return e !== t
                        })))
                    },
                    listenOnRoot: function(e, t) {
                        this.bvEventRoot && (this.bvEventRoot.$on(e, t), this.registerRootListener(e, t))
                    },
                    listenOnRootOnce: function(e, t) {
                        var i = this;
                        if (this.bvEventRoot) {
                            var r = function e() {
                                i.unregisterRootListener(e), t.apply(void 0, arguments)
                            };
                            this.bvEventRoot.$once(e, r), this.registerRootListener(e, r)
                        }
                    },
                    listenOffRoot: function(e, t) {
                        this.unregisterRootListener(e, t), this.bvEventRoot && this.bvEventRoot.$off(e, t)
                    },
                    emitOnRoot: function(e) {
                        if (this.bvEventRoot) {
                            for (var t, i = arguments.length, r = new Array(i > 1 ? i - 1 : 0), s = 1; s < i; s++) r[s - 1] = arguments[s];
                            (t = this.bvEventRoot).$emit.apply(t, [e].concat(r))
                        }
                    }
                }
            });

        function fu(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function pu(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? fu(Object(i), !0).forEach((function(t) {
                    _u(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : fu(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function _u(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var gu = su("$listeners", "bvListeners"),
            vu = Dn({
                data: function() {
                    return {
                        bvListeners: {}
                    }
                },
                created: function() {
                    this.bvListeners = pu({}, this.$listeners)
                },
                beforeUpdate: function() {
                    this.bvListeners = pu({}, this.$listeners)
                }
            }),
            mu = On ? vu : gu;

        function bu(e) {
            return function(e) {
                if (Array.isArray(e)) return wu(e)
            }(e) || function(e) {
                if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
            }(e) || function(e, t) {
                if (!e) return;
                if ("string" == typeof e) return wu(e, t);
                var i = Object.prototype.toString.call(e).slice(8, -1);
                "Object" === i && e.constructor && (i = e.constructor.name);
                if ("Map" === i || "Set" === i) return Array.from(e);
                if ("Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)) return wu(e, t)
            }(e) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()
        }

        function wu(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var i = 0, r = new Array(t); i < t; i++) r[i] = e[i];
            return r
        }

        function yu(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Su(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? yu(Object(i), !0).forEach((function(t) {
                    Cu(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : yu(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Cu(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var xu = Rh(lo, "clicked"),
            Eu = {
                activeClass: Ha(Co),
                append: Ha(bo, !1),
                event: Ha(ko),
                exact: Ha(bo, !1),
                exactActiveClass: Ha(Co),
                exactPath: Ha(bo, !1),
                exactPathActiveClass: Ha(Co),
                replace: Ha(bo, !1),
                routerTag: Ha(Co),
                to: Ha(Ao)
            },
            Ou = {
                noPrefetch: Ha(bo, !1),
                prefetch: Ha(bo, null)
            },
            ku = Ga(sa(Su(Su(Su({}, Ou), Eu), {}, {
                active: Ha(bo, !1),
                disabled: Ha(bo, !1),
                href: Ha(Co),
                rel: Ha(Co, null),
                routerComponentName: Ha(Co),
                target: Ha(Co, "_self")
            })), lo),
            Lu = Dn({
                name: lo,
                mixins: [lu, mu, du, Xh],
                inheritAttrs: !1,
                props: ku,
                computed: {
                    computedTag: function() {
                        return function(e, t) {
                            var i = e.to,
                                r = e.disabled,
                                s = e.routerComponentName,
                                n = !!Jh(t).$router,
                                o = !!Jh(t).$nuxt;
                            return !n || n && (r || !i) ? "a" : s || (o ? "nuxt-link" : "router-link")
                        }({
                            to: this.to,
                            disabled: this.disabled,
                            routerComponentName: this.routerComponentName
                        }, this)
                    },
                    isRouterLink: function() {
                        return eu(this.computedTag)
                    },
                    computedRel: function() {
                        return function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                t = e.target,
                                i = e.rel;
                            return "_blank" === t && Bo(i) ? "noopener" : i || null
                        }({
                            target: this.target,
                            rel: this.rel
                        })
                    },
                    computedHref: function() {
                        return function() {
                            var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {},
                                t = e.href,
                                i = e.to,
                                r = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "a",
                                s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "#",
                                n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "/";
                            if (t) return t;
                            if (eu(r)) return null;
                            if (Fo(i)) return i || n;
                            if (Ho(i) && (i.path || i.query || i.hash)) {
                                var o = Ba(i.path),
                                    a = Qh(i.query),
                                    c = Ba(i.hash);
                                return c = c && "#" !== c.charAt(0) ? "#".concat(c) : c, "".concat(o).concat(a).concat(c) || n
                            }
                            return s
                        }({
                            to: this.to,
                            href: this.href
                        }, this.computedTag)
                    },
                    computedProps: function() {
                        var e = this.event,
                            t = this.prefetch,
                            i = this.routerTag;
                        return this.isRouterLink ? Su(Su(Su(Su({}, Ua(ia(Su(Su({}, Eu), "nuxt-link" === this.computedTag ? Ou : {}), ["event", "prefetch", "routerTag"]), this)), e ? {
                            event: e
                        } : {}), jo(t) ? {
                            prefetch: t
                        } : {}), i ? {
                            tag: i
                        } : {}) : {}
                    },
                    computedAttrs: function() {
                        var e = this.bvAttrs,
                            t = this.computedHref,
                            i = this.computedRel,
                            r = this.disabled,
                            s = this.target,
                            n = this.routerTag,
                            o = this.isRouterLink;
                        return Su(Su(Su(Su({}, e), t ? {
                            href: t
                        } : {}), o && n && !nh(n, "a") ? {} : {
                            rel: i,
                            target: s
                        }), {}, {
                            tabindex: r ? "-1" : To(e.tabindex) ? null : e.tabindex,
                            "aria-disabled": r ? "true" : null
                        })
                    },
                    computedListeners: function() {
                        return Su(Su({}, this.bvListeners), {}, {
                            click: this.onClick
                        })
                    }
                },
                methods: {
                    onClick: function(e) {
                        var t = arguments,
                            i = zo(e),
                            r = this.isRouterLink,
                            s = this.bvListeners.click;
                        if (i && this.disabled) Mh(e, {
                            immediatePropagation: !0
                        });
                        else {
                            var n;
                            if (r) null === (n = e.currentTarget.__vue__) || void 0 === n || n.$emit(el, e);
                            Ya(s).filter((function(e) {
                                return $o(e)
                            })).forEach((function(e) {
                                e.apply(void 0, bu(t))
                            })), this.emitOnRoot(xu, e), this.emitOnRoot("clicked::link", e)
                        }
                        i && !r && "#" === this.computedHref && Mh(e, {
                            propagation: !1
                        })
                    },
                    focus: function() {
                        xh(this.$el)
                    },
                    blur: function() {
                        Eh(this.$el)
                    }
                },
                render: function(e) {
                    var t = this.active,
                        i = this.disabled;
                    return e(this.computedTag, Cu({
                        class: {
                            active: t,
                            disabled: i
                        },
                        attrs: this.computedAttrs,
                        props: this.computedProps
                    }, this.isRouterLink ? "nativeOn" : "on", this.computedListeners), this.normalizeSlot())
                }
            });

        function Du(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Mu, Au = Ga({
                align: Ha(Co),
                cardHeader: Ha(bo, !1),
                fill: Ha(bo, !1),
                justified: Ha(bo, !1),
                pills: Ha(bo, !1),
                small: Ha(bo, !1),
                tabs: Ha(bo, !1),
                tag: Ha(Co, "ul"),
                vertical: Ha(bo, !1)
            }, uo),
            Ru = Dn({
                name: uo,
                functional: !0,
                props: Au,
                render: function(e, t) {
                    var i, r, s = t.props,
                        n = t.data,
                        o = t.children,
                        a = s.tabs,
                        c = s.pills,
                        l = s.vertical,
                        h = s.align,
                        u = s.cardHeader;
                    return e(s.tag, bn(n, {
                        staticClass: "nav",
                        class: (i = {
                            "nav-tabs": a,
                            "nav-pills": c && !a,
                            "card-header-tabs": !l && u && a,
                            "card-header-pills": !l && u && c && !a,
                            "flex-column": l,
                            "nav-fill": !l && s.fill,
                            "nav-justified": !l && s.justified
                        }, Du(i, (r = h, "justify-content-".concat(r = "left" === r ? "start" : "right" === r ? "end" : r)), !l && h), Du(i, "small", s.small), i)
                    }), o)
                }
            });

        function Pu(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Tu(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Pu(Object(i), !0).forEach((function(t) {
                    Bu(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Pu(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Bu(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Iu = Fh("value", {
                type: yo
            }),
            $u = Iu.mixin,
            ju = Iu.props,
            Fu = Iu.prop,
            Nu = Iu.event,
            Wu = function(e) {
                return !e.disabled
            },
            Hu = Dn({
                name: "BVTabButton",
                inject: {
                    getBvTabs: {
                        default: function() {
                            return function() {
                                return {}
                            }
                        }
                    }
                },
                props: {
                    controls: Ha(Co),
                    id: Ha(Co),
                    noKeyNav: Ha(bo, !1),
                    posInSet: Ha(yo),
                    setSize: Ha(yo),
                    tab: Ha(),
                    tabIndex: Ha(yo)
                },
                computed: {
                    bvTabs: function() {
                        return this.getBvTabs()
                    }
                },
                methods: {
                    focus: function() {
                        xh(this.$refs.link)
                    },
                    handleEvent: function(e) {
                        if (!this.tab.disabled) {
                            var t = e.type,
                                i = e.keyCode,
                                r = e.shiftKey;
                            "click" === t || "keydown" === t && i === xl ? (Mh(e), this.$emit(el, e)) : "keydown" !== t || this.noKeyNav || (-1 !== [El, Sl, yl].indexOf(i) ? (Mh(e), r || i === yl ? this.$emit(il, e) : this.$emit(cl, e)) : -1 !== [ml, Cl, bl].indexOf(i) && (Mh(e), r || i === bl ? this.$emit(ol, e) : this.$emit(al, e)))
                        }
                    }
                },
                render: function(e) {
                    var t = this.id,
                        i = this.tabIndex,
                        r = this.setSize,
                        s = this.posInSet,
                        n = this.controls,
                        o = this.handleEvent,
                        a = this.tab,
                        c = a.title,
                        l = a.localActive,
                        h = a.disabled,
                        u = a.titleItemClass,
                        d = a.titleLinkClass,
                        f = a.titleLinkAttributes,
                        p = e(Lu, {
                            staticClass: "nav-link",
                            class: [{
                                active: l && !h,
                                disabled: h
                            }, d, l ? this.bvTabs.activeNavItemClass : null],
                            props: {
                                disabled: h
                            },
                            attrs: Tu(Tu({}, f), {}, {
                                id: t,
                                role: "tab",
                                tabindex: i,
                                "aria-selected": l && !h ? "true" : "false",
                                "aria-setsize": r,
                                "aria-posinset": s,
                                "aria-controls": n
                            }),
                            on: {
                                click: o,
                                keydown: o
                            },
                            ref: "link"
                        }, [this.tab.normalizeSlot(Bl) || c]);
                    return e("li", {
                        staticClass: "nav-item",
                        class: [u],
                        attrs: {
                            role: "presentation"
                        }
                    }, [p])
                }
            }),
            Uu = ia(Au, ["tabs", "isNavBar", "cardHeader"]),
            zu = Ga(sa(Tu(Tu(Tu(Tu({}, Gh), ju), Uu), {}, {
                activeNavItemClass: Ha(Oo),
                activeTabClass: Ha(Oo),
                card: Ha(bo, !1),
                contentClass: Ha(Oo),
                end: Ha(bo, !1),
                lazy: Ha(bo, !1),
                navClass: Ha(Oo),
                navWrapperClass: Ha(Oo),
                noFade: Ha(bo, !1),
                noKeyNav: Ha(bo, !1),
                noNavStyle: Ha(bo, !1),
                tag: Ha(Co, "div")
            })), _o),
            Gu = Dn({
                name: _o,
                mixins: [Vh, $u, Xh],
                provide: function() {
                    var e = this;
                    return {
                        getBvTabs: function() {
                            return e
                        }
                    }
                },
                props: zu,
                data: function() {
                    return {
                        currentTab: Nh(this[Fu], -1),
                        tabs: [],
                        registeredTabs: []
                    }
                },
                computed: {
                    fade: function() {
                        return !this.noFade
                    },
                    localNavClass: function() {
                        var e = [];
                        return this.card && this.vertical && e.push("card-header", "h-100", "border-bottom-0", "rounded-0"), [].concat(e, [this.navClass])
                    }
                },
                watch: (Mu = {}, Bu(Mu, Fu, (function(e, t) {
                    if (e !== t) {
                        e = Nh(e, -1), t = Nh(t, 0);
                        var i = this.tabs[e];
                        i && !i.disabled ? this.activateTab(i) : e < t ? this.previousTab() : this.nextTab()
                    }
                })), Bu(Mu, "currentTab", (function(e) {
                    var t = -1;
                    this.tabs.forEach((function(i, r) {
                        r !== e || i.disabled ? i.localActive = !1 : (i.localActive = !0, t = r)
                    })), this.$emit(Nu, t)
                })), Bu(Mu, "tabs", (function(e, t) {
                    var i = this;
                    Th(e.map((function(e) {
                        return e[En]
                    })), t.map((function(e) {
                        return e[En]
                    }))) || this.$nextTick((function() {
                        i.$emit("changed", e.slice(), t.slice())
                    }))
                })), Bu(Mu, "registeredTabs", (function() {
                    this.updateTabs()
                })), Mu),
                created: function() {
                    this.$_observer = null
                },
                mounted: function() {
                    this.setObserver(!0)
                },
                beforeDestroy: function() {
                    this.setObserver(!1), this.tabs = []
                },
                methods: {
                    registerTab: function(e) {
                        Ja(this.registeredTabs, e) || this.registeredTabs.push(e)
                    },
                    unregisterTab: function(e) {
                        this.registeredTabs = this.registeredTabs.slice().filter((function(t) {
                            return t !== e
                        }))
                    },
                    setObserver: function() {
                        var e = this,
                            t = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
                        if (this.$_observer && this.$_observer.disconnect(), this.$_observer = null, t) {
                            var i = function() {
                                e.$nextTick((function() {
                                    th((function() {
                                        e.updateTabs()
                                    }))
                                }))
                            };
                            this.$_observer = zh(this.$refs.content, i, {
                                childList: !0,
                                subtree: !1,
                                attributes: !0,
                                attributeFilter: ["id"]
                            })
                        }
                    },
                    getTabs: function() {
                        var e, t = this.registeredTabs,
                            i = [];
                        if (wc && t.length > 0) {
                            var r = t.map((function(e) {
                                return "#".concat(e.safeId())
                            })).join(", ");
                            i = ch(r, this.$el).map((function(e) {
                                return e.id
                            })).filter(Sa)
                        }
                        return e = function(e, t) {
                            return i.indexOf(e.safeId()) - i.indexOf(t.safeId())
                        }, t.map((function(e, t) {
                            return [t, e]
                        })).sort(function(e, t) {
                            return this(e[1], t[1]) || e[0] - t[0]
                        }.bind(e)).map((function(e) {
                            return e[1]
                        }))
                    },
                    updateTabs: function() {
                        var e = this.getTabs(),
                            t = e.indexOf(e.slice().reverse().find((function(e) {
                                return e.localActive && !e.disabled
                            })));
                        if (t < 0) {
                            var i = this.currentTab;
                            i >= e.length ? t = e.indexOf(e.slice().reverse().find(Wu)) : e[i] && !e[i].disabled && (t = i)
                        }
                        t < 0 && (t = e.indexOf(e.find(Wu))), e.forEach((function(e, i) {
                            e.localActive = i === t
                        })), this.tabs = e, this.currentTab = t
                    },
                    getButtonForTab: function(e) {
                        return (this.$refs.buttons || []).find((function(t) {
                            return t.tab === e
                        }))
                    },
                    updateButton: function(e) {
                        var t = this.getButtonForTab(e);
                        t && t.$forceUpdate && t.$forceUpdate()
                    },
                    activateTab: function(e) {
                        var t = this.currentTab,
                            i = this.tabs,
                            r = !1;
                        if (e) {
                            var s = i.indexOf(e);
                            if (s !== t && s > -1 && !e.disabled) {
                                var n = new jl("activate-tab", {
                                    cancelable: !0,
                                    vueTarget: this,
                                    componentId: this.safeId()
                                });
                                this.$emit(n.type, s, t, n), n.defaultPrevented || (this.currentTab = s, r = !0)
                            }
                        }
                        return r || this[Fu] === t || this.$emit(Nu, t), r
                    },
                    deactivateTab: function(e) {
                        return !!e && this.activateTab(this.tabs.filter((function(t) {
                            return t !== e
                        })).find(Wu))
                    },
                    focusButton: function(e) {
                        var t = this;
                        this.$nextTick((function() {
                            xh(t.getButtonForTab(e))
                        }))
                    },
                    emitTabClick: function(e, t) {
                        zo(t) && e && e.$emit && !e.disabled && e.$emit(el, t)
                    },
                    clickTab: function(e, t) {
                        this.activateTab(e), this.emitTabClick(e, t)
                    },
                    firstTab: function(e) {
                        var t = this.tabs.find(Wu);
                        this.activateTab(t) && e && (this.focusButton(t), this.emitTabClick(t, e))
                    },
                    previousTab: function(e) {
                        var t = Ih(this.currentTab, 0),
                            i = this.tabs.slice(0, t).reverse().find(Wu);
                        this.activateTab(i) && e && (this.focusButton(i), this.emitTabClick(i, e))
                    },
                    nextTab: function(e) {
                        var t = Ih(this.currentTab, -1),
                            i = this.tabs.slice(t + 1).find(Wu);
                        this.activateTab(i) && e && (this.focusButton(i), this.emitTabClick(i, e))
                    },
                    lastTab: function(e) {
                        var t = this.tabs.slice().reverse().find(Wu);
                        this.activateTab(t) && e && (this.focusButton(t), this.emitTabClick(t, e))
                    }
                },
                render: function(e) {
                    var t = this,
                        i = this.align,
                        r = this.card,
                        s = this.end,
                        n = this.fill,
                        o = this.firstTab,
                        a = this.justified,
                        c = this.lastTab,
                        l = this.nextTab,
                        h = this.noKeyNav,
                        u = this.noNavStyle,
                        d = this.pills,
                        f = this.previousTab,
                        p = this.small,
                        _ = this.tabs,
                        g = this.vertical,
                        v = _.find((function(e) {
                            return e.localActive && !e.disabled
                        })),
                        m = _.find((function(e) {
                            return !e.disabled
                        })),
                        b = _.map((function(i, r) {
                            var s, n = i.safeId,
                                a = null;
                            return h || (a = -1, (i === v || !v && i === m) && (a = null)), e(Hu, Bu({
                                props: {
                                    controls: n ? n() : null,
                                    id: i.controlledBy || (n ? n("_BV_tab_button_") : null),
                                    noKeyNav: h,
                                    posInSet: r + 1,
                                    setSize: _.length,
                                    tab: i,
                                    tabIndex: a
                                },
                                on: (s = {}, Bu(s, el, (function(e) {
                                    t.clickTab(i, e)
                                })), Bu(s, il, o), Bu(s, cl, f), Bu(s, al, l), Bu(s, ol, c), s),
                                key: i[En] || r,
                                ref: "buttons"
                            }, kn, !0))
                        })),
                        w = e(Ru, {
                            class: this.localNavClass,
                            attrs: {
                                role: "tablist",
                                id: this.safeId("_BV_tab_controls_")
                            },
                            props: {
                                fill: n,
                                justified: a,
                                align: i,
                                tabs: !u && !d,
                                pills: !u && d,
                                vertical: g,
                                small: p,
                                cardHeader: r && !g
                            },
                            ref: "nav"
                        }, [this.normalizeSlot("tabs-start") || e(), b, this.normalizeSlot("tabs-end") || e()]);
                    w = e("div", {
                        class: [{
                            "card-header": r && !g && !s,
                            "card-footer": r && !g && s,
                            "col-auto": g
                        }, this.navWrapperClass],
                        key: "bv-tabs-nav"
                    }, [w]);
                    var y = this.normalizeSlot() || [],
                        S = e();
                    0 === y.length && (S = e("div", {
                        class: ["tab-pane", "active", {
                            "card-body": r
                        }],
                        key: "bv-empty-tab"
                    }, this.normalizeSlot("empty")));
                    var C = e("div", {
                        staticClass: "tab-content",
                        class: [{
                            col: g
                        }, this.contentClass],
                        attrs: {
                            id: this.safeId("_BV_tab_container_")
                        },
                        key: "bv-content",
                        ref: "content"
                    }, [y, S]);
                    return e(this.tag, {
                        staticClass: "tabs",
                        class: {
                            row: g,
                            "no-gutters": g && r
                        },
                        attrs: {
                            id: this.safeId()
                        }
                    }, [s ? C : e(), w, s ? e() : C])
                }
            });

        function Vu(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function qu(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Vu(Object(i), !0).forEach((function(t) {
                    Ku(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Vu(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Ku(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Xu, Ju, Yu = {
                name: "",
                enterClass: "",
                enterActiveClass: "",
                enterToClass: "show",
                leaveClass: "show",
                leaveActiveClass: "",
                leaveToClass: ""
            },
            Zu = qu(qu({}, Yu), {}, {
                enterActiveClass: "fade",
                leaveActiveClass: "fade"
            }),
            Qu = {
                appear: Ha(bo, !1),
                mode: Ha(Co),
                noFade: Ha(bo, !1),
                transProps: Ha(So)
            },
            ed = Dn({
                name: "BVTransition",
                functional: !0,
                props: Qu,
                render: function(e, t) {
                    var i = t.children,
                        r = t.data,
                        s = t.props,
                        n = s.transProps;
                    Ho(n) || (n = s.noFade ? Yu : Zu, s.appear && (n = qu(qu({}, n), {}, {
                        appear: !0,
                        appearClass: n.enterClass,
                        appearActiveClass: n.enterActiveClass,
                        appearToClass: n.enterToClass
                    }))), n = qu(qu({
                        mode: s.mode
                    }, n), {}, {
                        css: !0
                    });
                    var o = qu({}, r);
                    return delete o.props, e("transition", bn(o, {
                        props: n
                    }), i)
                }
            });

        function td(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function id(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? td(Object(i), !0).forEach((function(t) {
                    rd(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : td(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function rd(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var sd = "active",
            nd = pl + sd,
            od = Ga(sa(id(id({}, Gh), {}, (rd(Xu = {}, sd, Ha(bo, !1)), rd(Xu, "buttonId", Ha(Co)), rd(Xu, "disabled", Ha(bo, !1)), rd(Xu, "lazy", Ha(bo, !1)), rd(Xu, "noBody", Ha(bo, !1)), rd(Xu, "tag", Ha(Co, "div")), rd(Xu, "title", Ha(Co)), rd(Xu, "titleItemClass", Ha(Oo)), rd(Xu, "titleLinkAttributes", Ha(So)), rd(Xu, "titleLinkClass", Ha(Oo)), Xu))), po),
            ad = Dn({
                name: po,
                mixins: [Vh, Xh],
                inject: {
                    getBvTabs: {
                        default: function() {
                            return function() {
                                return {}
                            }
                        }
                    }
                },
                props: od,
                data: function() {
                    return {
                        localActive: this[sd] && !this.disabled
                    }
                },
                computed: {
                    bvTabs: function() {
                        return this.getBvTabs()
                    },
                    _isTab: function() {
                        return !0
                    },
                    tabClasses: function() {
                        var e = this.localActive;
                        return [{
                            active: e,
                            disabled: this.disabled,
                            "card-body": this.bvTabs.card && !this.noBody
                        }, e ? this.bvTabs.activeTabClass : null]
                    },
                    controlledBy: function() {
                        return this.buttonId || this.safeId("__BV_tab_button__")
                    },
                    computedNoFade: function() {
                        return !this.bvTabs.fade
                    },
                    computedLazy: function() {
                        return this.bvTabs.lazy || this.lazy
                    }
                },
                watch: (Ju = {}, rd(Ju, sd, (function(e, t) {
                    e !== t && (e ? this.activate() : this.deactivate() || this.$emit(nd, this.localActive))
                })), rd(Ju, "disabled", (function(e, t) {
                    if (e !== t) {
                        var i = this.bvTabs.firstTab;
                        e && this.localActive && i && (this.localActive = !1, i())
                    }
                })), rd(Ju, "localActive", (function(e) {
                    this.$emit(nd, e)
                })), Ju),
                mounted: function() {
                    this.registerTab()
                },
                updated: function() {
                    var e = this.bvTabs.updateButton;
                    e && this.hasNormalizedSlot(Bl) && e(this)
                },
                beforeDestroy: function() {
                    this.unregisterTab()
                },
                methods: {
                    registerTab: function() {
                        var e = this.bvTabs.registerTab;
                        e && e(this)
                    },
                    unregisterTab: function() {
                        var e = this.bvTabs.unregisterTab;
                        e && e(this)
                    },
                    activate: function() {
                        var e = this.bvTabs.activateTab;
                        return !(!e || this.disabled) && e(this)
                    },
                    deactivate: function() {
                        var e = this.bvTabs.deactivateTab;
                        return !(!e || !this.localActive) && e(this)
                    }
                },
                render: function(e) {
                    var t = this.localActive,
                        i = e(this.tag, {
                            staticClass: "tab-pane",
                            class: this.tabClasses,
                            directives: [{
                                name: "show",
                                value: t
                            }],
                            attrs: {
                                role: "tabpanel",
                                id: this.safeId(),
                                "aria-hidden": t ? "false" : "true",
                                "aria-labelledby": this.controlledBy || null
                            },
                            ref: "panel"
                        }, [t || !this.computedLazy ? this.normalizeSlot() : e()]);
                    return e(ed, {
                        props: {
                            mode: "out-in",
                            noFade: this.computedNoFade
                        }
                    }, [i])
                }
            }),
            cd = Gc({
                components: {
                    BTabs: Gu,
                    BTab: ad
                }
            }),
            ld = "input, textarea, select",
            hd = Ga({
                autofocus: Ha(bo, !1),
                disabled: Ha(bo, !1),
                form: Ha(Co),
                id: Ha(Co),
                name: Ha(Co),
                required: Ha(bo, !1)
            }, "formControls"),
            ud = Dn({
                props: hd,
                mounted: function() {
                    this.handleAutofocus()
                },
                activated: function() {
                    this.handleAutofocus()
                },
                methods: {
                    handleAutofocus: function() {
                        var e = this;
                        this.$nextTick((function() {
                            th((function() {
                                var t = e.$el;
                                e.autofocus && ah(t) && (hh(t, ld) || (t = lh(ld, t)), xh(t))
                            }))
                        }))
                    }
                }
            }),
            dd = Dn({
                computed: {
                    selectionStart: {
                        cache: !1,
                        get: function() {
                            return this.$refs.input.selectionStart
                        },
                        set: function(e) {
                            this.$refs.input.selectionStart = e
                        }
                    },
                    selectionEnd: {
                        cache: !1,
                        get: function() {
                            return this.$refs.input.selectionEnd
                        },
                        set: function(e) {
                            this.$refs.input.selectionEnd = e
                        }
                    },
                    selectionDirection: {
                        cache: !1,
                        get: function() {
                            return this.$refs.input.selectionDirection
                        },
                        set: function(e) {
                            this.$refs.input.selectionDirection = e
                        }
                    }
                },
                methods: {
                    select: function() {
                        var e;
                        (e = this.$refs.input).select.apply(e, arguments)
                    },
                    setSelectionRange: function() {
                        var e;
                        (e = this.$refs.input).setSelectionRange.apply(e, arguments)
                    },
                    setRangeText: function() {
                        var e;
                        (e = this.$refs.input).setRangeText.apply(e, arguments)
                    }
                }
            }),
            fd = Ga({
                size: Ha(Co)
            }, "formControls"),
            pd = Dn({
                props: fd,
                computed: {
                    sizeFormClass: function() {
                        return [this.size ? "form-control-".concat(this.size) : null]
                    }
                }
            }),
            _d = Ga({
                state: Ha(bo, null)
            }, "formState"),
            gd = Dn({
                props: _d,
                computed: {
                    computedState: function() {
                        return jo(this.state) ? this.state : null
                    },
                    stateClass: function() {
                        var e = this.computedState;
                        return !0 === e ? "is-valid" : !1 === e ? "is-invalid" : null
                    },
                    computedAriaInvalid: function() {
                        var e = Jh(this).ariaInvalid;
                        return !0 === e || "true" === e || "" === e || !1 === this.computedState ? "true" : e
                    }
                }
            });

        function vd(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function md(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? vd(Object(i), !0).forEach((function(t) {
                    bd(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : vd(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function bd(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var wd = Fh("value", {
                type: Mo,
                defaultValue: "",
                event: "update"
            }),
            yd = wd.mixin,
            Sd = wd.props,
            Cd = wd.prop,
            xd = wd.event,
            Ed = Ga(sa(md(md({}, Sd), {}, {
                ariaInvalid: Ha(Do, !1),
                autocomplete: Ha(Co),
                debounce: Ha(Mo, 0),
                formatter: Ha(wo),
                lazy: Ha(bo, !1),
                lazyFormatter: Ha(bo, !1),
                number: Ha(bo, !1),
                placeholder: Ha(Co),
                plaintext: Ha(bo, !1),
                readonly: Ha(bo, !1),
                trim: Ha(bo, !1)
            })), "formTextControls"),
            Od = Dn({
                mixins: [yd],
                props: Ed,
                data: function() {
                    var e = this[Cd];
                    return {
                        localValue: Ba(e),
                        vModelValue: this.modifyValue(e)
                    }
                },
                computed: {
                    computedClass: function() {
                        var e = this.plaintext,
                            t = this.type,
                            i = "range" === t,
                            r = "color" === t;
                        return [{
                            "custom-range": i,
                            "form-control-plaintext": e && !i && !r,
                            "form-control": r || !e && !i
                        }, this.sizeFormClass, this.stateClass]
                    },
                    computedDebounce: function() {
                        return Ih(Nh(this.debounce, 0), 0)
                    },
                    hasFormatter: function() {
                        return e = this.formatter, $o(e) && e.name && e.name !== Va;
                        var e
                    }
                },
                watch: bd({}, Cd, (function(e) {
                    var t = Ba(e),
                        i = this.modifyValue(e);
                    t === this.localValue && i === this.vModelValue || (this.clearDebounce(), this.localValue = t, this.vModelValue = i)
                })),
                created: function() {
                    this.$_inputDebounceTimer = null
                },
                beforeDestroy: function() {
                    this.clearDebounce()
                },
                methods: {
                    clearDebounce: function() {
                        clearTimeout(this.$_inputDebounceTimer), this.$_inputDebounceTimer = null
                    },
                    formatValue: function(e, t) {
                        var i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
                        return e = Ba(e), !this.hasFormatter || this.lazyFormatter && !i || (e = this.formatter(e, t)), e
                    },
                    modifyValue: function(e) {
                        return e = Ba(e), this.trim && (e = e.trim()), this.number && (e = Wh(e, e)), e
                    },
                    updateValue: function(e) {
                        var t = this,
                            i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                            r = this.lazy;
                        if (!r || i) {
                            this.clearDebounce();
                            var s = function() {
                                    if ((e = t.modifyValue(e)) !== t.vModelValue) t.vModelValue = e, t.$emit(xd, e);
                                    else if (t.hasFormatter) {
                                        var i = t.$refs.input;
                                        i && e !== i.value && (i.value = e)
                                    }
                                },
                                n = this.computedDebounce;
                            n > 0 && !r && !i ? this.$_inputDebounceTimer = setTimeout(s, n) : s()
                        }
                    },
                    onInput: function(e) {
                        if (!e.target.composing) {
                            var t = e.target.value,
                                i = this.formatValue(t, e);
                            !1 === i || e.defaultPrevented ? Mh(e, {
                                propagation: !1
                            }) : (this.localValue = i, this.updateValue(i), this.$emit(nl, i))
                        }
                    },
                    onChange: function(e) {
                        var t = e.target.value,
                            i = this.formatValue(t, e);
                        !1 === i || e.defaultPrevented ? Mh(e, {
                            propagation: !1
                        }) : (this.localValue = i, this.updateValue(i, !0), this.$emit(Qc, i))
                    },
                    onBlur: function(e) {
                        var t = e.target.value,
                            i = this.formatValue(t, e, !0);
                        !1 !== i && (this.localValue = Ba(this.modifyValue(i)), this.updateValue(i, !0)), this.$emit("blur", e)
                    },
                    focus: function() {
                        this.disabled || xh(this.$el)
                    },
                    blur: function() {
                        this.disabled || Eh(this.$el)
                    }
                }
            }),
            kd = Dn({
                computed: {
                    validity: {
                        cache: !1,
                        get: function() {
                            return this.$refs.input.validity
                        }
                    },
                    validationMessage: {
                        cache: !1,
                        get: function() {
                            return this.$refs.input.validationMessage
                        }
                    },
                    willValidate: {
                        cache: !1,
                        get: function() {
                            return this.$refs.input.willValidate
                        }
                    }
                },
                methods: {
                    setCustomValidity: function() {
                        var e;
                        return (e = this.$refs.input).setCustomValidity.apply(e, arguments)
                    },
                    checkValidity: function() {
                        var e;
                        return (e = this.$refs.input).checkValidity.apply(e, arguments)
                    },
                    reportValidity: function() {
                        var e;
                        return (e = this.$refs.input).reportValidity.apply(e, arguments)
                    }
                }
            });

        function Ld(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Dd(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Ld(Object(i), !0).forEach((function(t) {
                    Md(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Ld(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Md(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Ad = ["text", "password", "email", "number", "url", "tel", "search", "range", "color", "date", "time", "datetime", "datetime-local", "month", "week"],
            Rd = Ga(sa(Dd(Dd(Dd(Dd(Dd(Dd({}, Gh), hd), fd), _d), Ed), {}, {
                list: Ha(Co),
                max: Ha(Mo),
                min: Ha(Mo),
                noWheel: Ha(bo, !1),
                step: Ha(Mo),
                type: Ha(Co, "text", (function(e) {
                    return Ja(Ad, e)
                }))
            })), Jn),
            Pd = Dn({
                name: Jn,
                mixins: [mu, Vh, ud, pd, gd, Od, dd, kd],
                props: Rd,
                computed: {
                    localType: function() {
                        var e = this.type;
                        return Ja(Ad, e) ? e : "text"
                    },
                    computedAttrs: function() {
                        var e = this.localType,
                            t = this.name,
                            i = this.form,
                            r = this.disabled,
                            s = this.placeholder,
                            n = this.required,
                            o = this.min,
                            a = this.max,
                            c = this.step;
                        return {
                            id: this.safeId(),
                            name: t,
                            form: i,
                            type: e,
                            disabled: r,
                            placeholder: s,
                            required: n,
                            autocomplete: this.autocomplete || null,
                            readonly: this.readonly || this.plaintext,
                            min: o,
                            max: a,
                            step: c,
                            list: "password" !== e ? this.list : null,
                            "aria-required": n ? "true" : null,
                            "aria-invalid": this.computedAriaInvalid
                        }
                    },
                    computedListeners: function() {
                        return Dd(Dd({}, this.bvListeners), {}, {
                            input: this.onInput,
                            change: this.onChange,
                            blur: this.onBlur
                        })
                    }
                },
                watch: {
                    noWheel: function(e) {
                        this.setWheelStopper(e)
                    }
                },
                mounted: function() {
                    this.setWheelStopper(this.noWheel)
                },
                deactivated: function() {
                    this.setWheelStopper(!1)
                },
                activated: function() {
                    this.setWheelStopper(this.noWheel)
                },
                beforeDestroy: function() {
                    this.setWheelStopper(!1)
                },
                methods: {
                    setWheelStopper: function(e) {
                        var t = this.$el;
                        Dh(e, t, "focus", this.onWheelFocus), Dh(e, t, "blur", this.onWheelBlur), e || Lh(document, "wheel", this.stopWheel)
                    },
                    onWheelFocus: function() {
                        kh(document, "wheel", this.stopWheel)
                    },
                    onWheelBlur: function() {
                        Lh(document, "wheel", this.stopWheel)
                    },
                    stopWheel: function(e) {
                        Mh(e, {
                            propagation: !1
                        }), Eh(this.$el)
                    }
                },
                render: function(e) {
                    return e("input", {
                        class: this.computedClass,
                        attrs: this.computedAttrs,
                        domProps: {
                            value: this.localValue
                        },
                        on: this.computedListeners,
                        ref: "input"
                    })
                }
            }),
            Td = Gc({
                components: {
                    BFormInput: Pd,
                    BInput: Pd
                }
            }),
            Bd = function() {
                var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                return String(e).replace(Oa, "")
            },
            Id = function(e, t) {
                return e ? {
                    innerHTML: e
                } : t ? {
                    textContent: t
                } : {}
            },
            $d = Ga({
                tag: Ha(Co, "div")
            }, co),
            jd = Dn({
                name: co,
                functional: !0,
                props: $d,
                render: function(e, t) {
                    var i = t.props,
                        r = t.data,
                        s = t.children;
                    return e(i.tag, bn(r, {
                        staticClass: "input-group-text"
                    }), s)
                }
            }),
            Fd = Ga({
                append: Ha(bo, !1),
                id: Ha(Co),
                isText: Ha(bo, !1),
                tag: Ha(Co, "div")
            }, no),
            Nd = Dn({
                name: no,
                functional: !0,
                props: Fd,
                render: function(e, t) {
                    var i = t.props,
                        r = t.data,
                        s = t.children,
                        n = i.append;
                    return e(i.tag, bn(r, {
                        class: {
                            "input-group-append": n,
                            "input-group-prepend": !n
                        },
                        attrs: {
                            id: i.id
                        }
                    }), i.isText ? [e(jd, s)] : s)
                }
            });

        function Wd(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Hd(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Wd(Object(i), !0).forEach((function(t) {
                    Ud(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Wd(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Ud(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var zd = Ga(ia(Fd, ["append"]), oo),
            Gd = Dn({
                name: oo,
                functional: !0,
                props: zd,
                render: function(e, t) {
                    var i = t.props,
                        r = t.data,
                        s = t.children;
                    return e(Nd, bn(r, {
                        props: Hd(Hd({}, i), {}, {
                            append: !0
                        })
                    }), s)
                }
            });

        function Vd(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function qd(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Vd(Object(i), !0).forEach((function(t) {
                    Kd(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Vd(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Kd(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Xd = Ga(ia(Fd, ["append"]), ao),
            Jd = Dn({
                name: ao,
                functional: !0,
                props: Xd,
                render: function(e, t) {
                    var i = t.props,
                        r = t.data,
                        s = t.children;
                    return e(Nd, bn(r, {
                        props: qd(qd({}, i), {}, {
                            append: !1
                        })
                    }), s)
                }
            });
        var Yd = Ga({
                append: Ha(Co),
                appendHtml: Ha(Co),
                id: Ha(Co),
                prepend: Ha(Co),
                prependHtml: Ha(Co),
                size: Ha(Co),
                tag: Ha(Co, "div")
            }, so),
            Zd = Dn({
                name: so,
                functional: !0,
                props: Yd,
                render: function(e, t) {
                    var i = t.props,
                        r = t.data,
                        s = t.slots,
                        n = t.scopedSlots,
                        o = i.prepend,
                        a = i.prependHtml,
                        c = i.append,
                        l = i.appendHtml,
                        h = i.size,
                        u = n || {},
                        d = s(),
                        f = {},
                        p = e(),
                        _ = qh(Tl, u, d);
                    (_ || o || a) && (p = e(Jd, [_ ? Kh(Tl, f, u, d) : e(jd, {
                        domProps: Id(a, o)
                    })]));
                    var g, v, m, b = e(),
                        w = qh(Ol, u, d);
                    return (w || c || l) && (b = e(Gd, [w ? Kh(Ol, f, u, d) : e(jd, {
                        domProps: Id(l, c)
                    })])), e(i.tag, bn(r, {
                        staticClass: "input-group",
                        class: (g = {}, v = "input-group-".concat(h), m = h, v in g ? Object.defineProperty(g, v, {
                            value: m,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }) : g[v] = m, g),
                        attrs: {
                            id: i.id || null,
                            role: "group"
                        }
                    }), [p, Kh(Ll, f, u, d), b])
                }
            }),
            Qd = Gc({
                components: {
                    BInputGroup: Zd,
                    BInputGroupAddon: Nd,
                    BInputGroupPrepend: Jd,
                    BInputGroupAppend: Gd,
                    BInputGroupText: jd
                }
            });

        function ef(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function tf(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ef(Object(i), !0).forEach((function(t) {
                    rf(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : ef(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function rf(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var sf = ia(ku, ["event", "routerTag"]);
        delete sf.href.default, delete sf.to.default;
        var nf = Ga(sa(tf(tf({}, sf), {}, {
                block: Ha(bo, !1),
                disabled: Ha(bo, !1),
                pill: Ha(bo, !1),
                pressed: Ha(bo, null),
                size: Ha(Co),
                squared: Ha(bo, !1),
                tag: Ha(Co, "button"),
                type: Ha(Co, "button"),
                variant: Ha(Co, "secondary")
            })), Bn),
            of = function(e) {
                "focusin" === e.type ? fh(e.target, "focus") : "focusout" === e.type && ph(e.target, "focus")
            },
            af = function(e) {
                return function(e) {
                    return !(!e.href && !e.to)
                }(e) || nh(e.tag, "a")
            },
            cf = function(e) {
                return jo(e.pressed)
            },
            lf = function(e) {
                return !(af(e) || e.tag && !nh(e.tag, "button"))
            },
            hf = function(e) {
                return !af(e) && !lf(e)
            },
            uf = function(e) {
                var t;
                return ["btn-".concat(e.variant || "secondary"), (t = {}, rf(t, "btn-".concat(e.size), e.size), rf(t, "btn-block", e.block), rf(t, "rounded-pill", e.pill), rf(t, "rounded-0", e.squared && !e.pill), rf(t, "disabled", e.disabled), rf(t, "active", e.pressed), t)]
            },
            df = function(e) {
                return af(e) ? Ua(sf, e) : {}
            },
            ff = function(e, t) {
                var i = lf(e),
                    r = af(e),
                    s = cf(e),
                    n = hf(e),
                    o = r && "#" === e.href,
                    a = t.attrs && t.attrs.role ? t.attrs.role : null,
                    c = t.attrs ? t.attrs.tabindex : null;
                return (n || o) && (c = "0"), {
                    type: i && !r ? e.type : null,
                    disabled: i ? e.disabled : null,
                    role: n || o ? "button" : a,
                    "aria-disabled": n ? String(e.disabled) : null,
                    "aria-pressed": s ? String(e.pressed) : null,
                    autocomplete: s ? "off" : null,
                    tabindex: e.disabled && !i ? "-1" : c
                }
            },
            pf = Dn({
                name: Bn,
                functional: !0,
                props: nf,
                render: function(e, t) {
                    var i = t.props,
                        r = t.data,
                        s = t.listeners,
                        n = t.children,
                        o = cf(i),
                        a = af(i),
                        c = hf(i),
                        l = a && "#" === i.href,
                        h = {
                            keydown: function(e) {
                                if (!i.disabled && (c || l)) {
                                    var t = e.keyCode;
                                    if (t === xl || t === wl && c) {
                                        var r = e.currentTarget || e.target;
                                        Mh(e, {
                                            propagation: !1
                                        }), r.click()
                                    }
                                }
                            },
                            click: function(e) {
                                i.disabled && zo(e) ? Mh(e) : o && s && s["update:pressed"] && Ya(s["update:pressed"]).forEach((function(e) {
                                    $o(e) && e(!i.pressed)
                                }))
                            }
                        };
                    o && (h.focusin = of, h.focusout = of);
                    var u = {
                        staticClass: "btn",
                        class: uf(i),
                        props: df(i),
                        attrs: ff(i, r),
                        on: h
                    };
                    return e(a ? Lu : i.tag, bn(tf(tf({}, r), {}, {
                        props: void 0
                    }), u), n)
                }
            });
        var _f = Ga({
                ariaLabel: Ha(Co, "Close"),
                content: Ha(Co, "&times;"),
                disabled: Ha(bo, !1),
                textVariant: Ha(Co)
            }, In),
            gf = Dn({
                name: In,
                functional: !0,
                props: _f,
                render: function(e, t) {
                    var i, r, s, n = t.props,
                        o = t.data,
                        a = t.slots,
                        c = t.scopedSlots,
                        l = a(),
                        h = c || {},
                        u = {
                            staticClass: "close",
                            class: (i = {}, r = "text-".concat(n.textVariant), s = n.textVariant, r in i ? Object.defineProperty(i, r, {
                                value: s,
                                enumerable: !0,
                                configurable: !0,
                                writable: !0
                            }) : i[r] = s, i),
                            attrs: {
                                type: "button",
                                disabled: n.disabled,
                                "aria-label": n.ariaLabel ? String(n.ariaLabel) : null
                            },
                            on: {
                                click: function(e) {
                                    n.disabled && zo(e) && Mh(e)
                                }
                            }
                        };
                    return qh(Ll, h, l) || (u.domProps = {
                        innerHTML: n.content
                    }), e("button", bn(o, u), Kh(Ll, {}, h, l))
                }
            }),
            vf = Gc({
                components: {
                    BButton: pf,
                    BBtn: pf,
                    BButtonClose: gf,
                    BBtnClose: gf
                }
            }),
            mf = "undefined" != typeof window && "undefined" != typeof document && "undefined" != typeof navigator,
            bf = function() {
                for (var e = ["Edge", "Trident", "Firefox"], t = 0; t < e.length; t += 1)
                    if (mf && navigator.userAgent.indexOf(e[t]) >= 0) return 1;
                return 0
            }();
        var wf = mf && window.Promise ? function(e) {
            var t = !1;
            return function() {
                t || (t = !0, window.Promise.resolve().then((function() {
                    t = !1, e()
                })))
            }
        } : function(e) {
            var t = !1;
            return function() {
                t || (t = !0, setTimeout((function() {
                    t = !1, e()
                }), bf))
            }
        };

        function yf(e) {
            return e && "[object Function]" === {}.toString.call(e)
        }

        function Sf(e, t) {
            if (1 !== e.nodeType) return [];
            var i = e.ownerDocument.defaultView.getComputedStyle(e, null);
            return t ? i[t] : i
        }

        function Cf(e) {
            return "HTML" === e.nodeName ? e : e.parentNode || e.host
        }

        function xf(e) {
            if (!e) return document.body;
            switch (e.nodeName) {
                case "HTML":
                case "BODY":
                    return e.ownerDocument.body;
                case "#document":
                    return e.body
            }
            var t = Sf(e),
                i = t.overflow,
                r = t.overflowX,
                s = t.overflowY;
            return /(auto|scroll|overlay)/.test(i + s + r) ? e : xf(Cf(e))
        }

        function Ef(e) {
            return e && e.referenceNode ? e.referenceNode : e
        }
        var Of = mf && !(!window.MSInputMethodContext || !document.documentMode),
            kf = mf && /MSIE 10/.test(navigator.userAgent);

        function Lf(e) {
            return 11 === e ? Of : 10 === e ? kf : Of || kf
        }

        function Df(e) {
            if (!e) return document.documentElement;
            for (var t = Lf(10) ? document.body : null, i = e.offsetParent || null; i === t && e.nextElementSibling;) i = (e = e.nextElementSibling).offsetParent;
            var r = i && i.nodeName;
            return r && "BODY" !== r && "HTML" !== r ? -1 !== ["TH", "TD", "TABLE"].indexOf(i.nodeName) && "static" === Sf(i, "position") ? Df(i) : i : e ? e.ownerDocument.documentElement : document.documentElement
        }

        function Mf(e) {
            return null !== e.parentNode ? Mf(e.parentNode) : e
        }

        function Af(e, t) {
            if (!(e && e.nodeType && t && t.nodeType)) return document.documentElement;
            var i = e.compareDocumentPosition(t) & Node.DOCUMENT_POSITION_FOLLOWING,
                r = i ? e : t,
                s = i ? t : e,
                n = document.createRange();
            n.setStart(r, 0), n.setEnd(s, 0);
            var o, a, c = n.commonAncestorContainer;
            if (e !== c && t !== c || r.contains(s)) return "BODY" === (a = (o = c).nodeName) || "HTML" !== a && Df(o.firstElementChild) !== o ? Df(c) : c;
            var l = Mf(e);
            return l.host ? Af(l.host, t) : Af(e, Mf(t).host)
        }

        function Rf(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "top",
                i = "top" === t ? "scrollTop" : "scrollLeft",
                r = e.nodeName;
            if ("BODY" === r || "HTML" === r) {
                var s = e.ownerDocument.documentElement,
                    n = e.ownerDocument.scrollingElement || s;
                return n[i]
            }
            return e[i]
        }

        function Pf(e, t) {
            var i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                r = Rf(t, "top"),
                s = Rf(t, "left"),
                n = i ? -1 : 1;
            return e.top += r * n, e.bottom += r * n, e.left += s * n, e.right += s * n, e
        }

        function Tf(e, t) {
            var i = "x" === t ? "Left" : "Top",
                r = "Left" === i ? "Right" : "Bottom";
            return parseFloat(e["border" + i + "Width"]) + parseFloat(e["border" + r + "Width"])
        }

        function Bf(e, t, i, r) {
            return Math.max(t["offset" + e], t["scroll" + e], i["client" + e], i["offset" + e], i["scroll" + e], Lf(10) ? parseInt(i["offset" + e]) + parseInt(r["margin" + ("Height" === e ? "Top" : "Left")]) + parseInt(r["margin" + ("Height" === e ? "Bottom" : "Right")]) : 0)
        }

        function If(e) {
            var t = e.body,
                i = e.documentElement,
                r = Lf(10) && getComputedStyle(i);
            return {
                height: Bf("Height", t, i, r),
                width: Bf("Width", t, i, r)
            }
        }
        var $f = function(e, t) {
                if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
            },
            jf = function() {
                function e(e, t) {
                    for (var i = 0; i < t.length; i++) {
                        var r = t[i];
                        r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
                    }
                }
                return function(t, i, r) {
                    return i && e(t.prototype, i), r && e(t, r), t
                }
            }(),
            Ff = function(e, t, i) {
                return t in e ? Object.defineProperty(e, t, {
                    value: i,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = i, e
            },
            Nf = Object.assign || function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var i = arguments[t];
                    for (var r in i) Object.prototype.hasOwnProperty.call(i, r) && (e[r] = i[r])
                }
                return e
            };

        function Wf(e) {
            return Nf({}, e, {
                right: e.left + e.width,
                bottom: e.top + e.height
            })
        }

        function Hf(e) {
            var t = {};
            try {
                if (Lf(10)) {
                    t = e.getBoundingClientRect();
                    var i = Rf(e, "top"),
                        r = Rf(e, "left");
                    t.top += i, t.left += r, t.bottom += i, t.right += r
                } else t = e.getBoundingClientRect()
            } catch (e) {}
            var s = {
                    left: t.left,
                    top: t.top,
                    width: t.right - t.left,
                    height: t.bottom - t.top
                },
                n = "HTML" === e.nodeName ? If(e.ownerDocument) : {},
                o = n.width || e.clientWidth || s.width,
                a = n.height || e.clientHeight || s.height,
                c = e.offsetWidth - o,
                l = e.offsetHeight - a;
            if (c || l) {
                var h = Sf(e);
                c -= Tf(h, "x"), l -= Tf(h, "y"), s.width -= c, s.height -= l
            }
            return Wf(s)
        }

        function Uf(e, t) {
            var i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
                r = Lf(10),
                s = "HTML" === t.nodeName,
                n = Hf(e),
                o = Hf(t),
                a = xf(e),
                c = Sf(t),
                l = parseFloat(c.borderTopWidth),
                h = parseFloat(c.borderLeftWidth);
            i && s && (o.top = Math.max(o.top, 0), o.left = Math.max(o.left, 0));
            var u = Wf({
                top: n.top - o.top - l,
                left: n.left - o.left - h,
                width: n.width,
                height: n.height
            });
            if (u.marginTop = 0, u.marginLeft = 0, !r && s) {
                var d = parseFloat(c.marginTop),
                    f = parseFloat(c.marginLeft);
                u.top -= l - d, u.bottom -= l - d, u.left -= h - f, u.right -= h - f, u.marginTop = d, u.marginLeft = f
            }
            return (r && !i ? t.contains(a) : t === a && "BODY" !== a.nodeName) && (u = Pf(u, t)), u
        }

        function zf(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                i = e.ownerDocument.documentElement,
                r = Uf(e, i),
                s = Math.max(i.clientWidth, window.innerWidth || 0),
                n = Math.max(i.clientHeight, window.innerHeight || 0),
                o = t ? 0 : Rf(i),
                a = t ? 0 : Rf(i, "left"),
                c = {
                    top: o - r.top + r.marginTop,
                    left: a - r.left + r.marginLeft,
                    width: s,
                    height: n
                };
            return Wf(c)
        }

        function Gf(e) {
            var t = e.nodeName;
            if ("BODY" === t || "HTML" === t) return !1;
            if ("fixed" === Sf(e, "position")) return !0;
            var i = Cf(e);
            return !!i && Gf(i)
        }

        function Vf(e) {
            if (!e || !e.parentElement || Lf()) return document.documentElement;
            for (var t = e.parentElement; t && "none" === Sf(t, "transform");) t = t.parentElement;
            return t || document.documentElement
        }

        function qf(e, t, i, r) {
            var s = arguments.length > 4 && void 0 !== arguments[4] && arguments[4],
                n = {
                    top: 0,
                    left: 0
                },
                o = s ? Vf(e) : Af(e, Ef(t));
            if ("viewport" === r) n = zf(o, s);
            else {
                var a = void 0;
                "scrollParent" === r ? "BODY" === (a = xf(Cf(t))).nodeName && (a = e.ownerDocument.documentElement) : a = "window" === r ? e.ownerDocument.documentElement : r;
                var c = Uf(a, o, s);
                if ("HTML" !== a.nodeName || Gf(o)) n = c;
                else {
                    var l = If(e.ownerDocument),
                        h = l.height,
                        u = l.width;
                    n.top += c.top - c.marginTop, n.bottom = h + c.top, n.left += c.left - c.marginLeft, n.right = u + c.left
                }
            }
            var d = "number" == typeof(i = i || 0);
            return n.left += d ? i : i.left || 0, n.top += d ? i : i.top || 0, n.right -= d ? i : i.right || 0, n.bottom -= d ? i : i.bottom || 0, n
        }

        function Kf(e) {
            return e.width * e.height
        }

        function Xf(e, t, i, r, s) {
            var n = arguments.length > 5 && void 0 !== arguments[5] ? arguments[5] : 0;
            if (-1 === e.indexOf("auto")) return e;
            var o = qf(i, r, n, s),
                a = {
                    top: {
                        width: o.width,
                        height: t.top - o.top
                    },
                    right: {
                        width: o.right - t.right,
                        height: o.height
                    },
                    bottom: {
                        width: o.width,
                        height: o.bottom - t.bottom
                    },
                    left: {
                        width: t.left - o.left,
                        height: o.height
                    }
                },
                c = Object.keys(a).map((function(e) {
                    return Nf({
                        key: e
                    }, a[e], {
                        area: Kf(a[e])
                    })
                })).sort((function(e, t) {
                    return t.area - e.area
                })),
                l = c.filter((function(e) {
                    var t = e.width,
                        r = e.height;
                    return t >= i.clientWidth && r >= i.clientHeight
                })),
                h = l.length > 0 ? l[0].key : c[0].key,
                u = e.split("-")[1];
            return h + (u ? "-" + u : "")
        }

        function Jf(e, t, i) {
            var r = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null,
                s = r ? Vf(t) : Af(t, Ef(i));
            return Uf(i, s, r)
        }

        function Yf(e) {
            var t = e.ownerDocument.defaultView.getComputedStyle(e),
                i = parseFloat(t.marginTop || 0) + parseFloat(t.marginBottom || 0),
                r = parseFloat(t.marginLeft || 0) + parseFloat(t.marginRight || 0);
            return {
                width: e.offsetWidth + r,
                height: e.offsetHeight + i
            }
        }

        function Zf(e) {
            var t = {
                left: "right",
                right: "left",
                bottom: "top",
                top: "bottom"
            };
            return e.replace(/left|right|bottom|top/g, (function(e) {
                return t[e]
            }))
        }

        function Qf(e, t, i) {
            i = i.split("-")[0];
            var r = Yf(e),
                s = {
                    width: r.width,
                    height: r.height
                },
                n = -1 !== ["right", "left"].indexOf(i),
                o = n ? "top" : "left",
                a = n ? "left" : "top",
                c = n ? "height" : "width",
                l = n ? "width" : "height";
            return s[o] = t[o] + t[c] / 2 - r[c] / 2, s[a] = i === a ? t[a] - r[l] : t[Zf(a)], s
        }

        function ep(e, t) {
            return Array.prototype.find ? e.find(t) : e.filter(t)[0]
        }

        function tp(e, t, i) {
            var r = void 0 === i ? e : e.slice(0, function(e, t, i) {
                if (Array.prototype.findIndex) return e.findIndex((function(e) {
                    return e[t] === i
                }));
                var r = ep(e, (function(e) {
                    return e[t] === i
                }));
                return e.indexOf(r)
            }(e, "name", i));
            return r.forEach((function(e) {
                e.function && console.warn("`modifier.function` is deprecated, use `modifier.fn`!");
                var i = e.function || e.fn;
                e.enabled && yf(i) && (t.offsets.popper = Wf(t.offsets.popper), t.offsets.reference = Wf(t.offsets.reference), t = i(t, e))
            })), t
        }

        function ip() {
            if (!this.state.isDestroyed) {
                var e = {
                    instance: this,
                    styles: {},
                    arrowStyles: {},
                    attributes: {},
                    flipped: !1,
                    offsets: {}
                };
                e.offsets.reference = Jf(this.state, this.popper, this.reference, this.options.positionFixed), e.placement = Xf(this.options.placement, e.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding), e.originalPlacement = e.placement, e.positionFixed = this.options.positionFixed, e.offsets.popper = Qf(this.popper, e.offsets.reference, e.placement), e.offsets.popper.position = this.options.positionFixed ? "fixed" : "absolute", e = tp(this.modifiers, e), this.state.isCreated ? this.options.onUpdate(e) : (this.state.isCreated = !0, this.options.onCreate(e))
            }
        }

        function rp(e, t) {
            return e.some((function(e) {
                var i = e.name;
                return e.enabled && i === t
            }))
        }

        function sp(e) {
            for (var t = [!1, "ms", "Webkit", "Moz", "O"], i = e.charAt(0).toUpperCase() + e.slice(1), r = 0; r < t.length; r++) {
                var s = t[r],
                    n = s ? "" + s + i : e;
                if (void 0 !== document.body.style[n]) return n
            }
            return null
        }

        function np() {
            return this.state.isDestroyed = !0, rp(this.modifiers, "applyStyle") && (this.popper.removeAttribute("x-placement"), this.popper.style.position = "", this.popper.style.top = "", this.popper.style.left = "", this.popper.style.right = "", this.popper.style.bottom = "", this.popper.style.willChange = "", this.popper.style[sp("transform")] = ""), this.disableEventListeners(), this.options.removeOnDestroy && this.popper.parentNode.removeChild(this.popper), this
        }

        function op(e) {
            var t = e.ownerDocument;
            return t ? t.defaultView : window
        }

        function ap(e, t, i, r) {
            var s = "BODY" === e.nodeName,
                n = s ? e.ownerDocument.defaultView : e;
            n.addEventListener(t, i, {
                passive: !0
            }), s || ap(xf(n.parentNode), t, i, r), r.push(n)
        }

        function cp(e, t, i, r) {
            i.updateBound = r, op(e).addEventListener("resize", i.updateBound, {
                passive: !0
            });
            var s = xf(e);
            return ap(s, "scroll", i.updateBound, i.scrollParents), i.scrollElement = s, i.eventsEnabled = !0, i
        }

        function lp() {
            this.state.eventsEnabled || (this.state = cp(this.reference, this.options, this.state, this.scheduleUpdate))
        }

        function hp() {
            var e, t;
            this.state.eventsEnabled && (cancelAnimationFrame(this.scheduleUpdate), this.state = (e = this.reference, t = this.state, op(e).removeEventListener("resize", t.updateBound), t.scrollParents.forEach((function(e) {
                e.removeEventListener("scroll", t.updateBound)
            })), t.updateBound = null, t.scrollParents = [], t.scrollElement = null, t.eventsEnabled = !1, t))
        }

        function up(e) {
            return "" !== e && !isNaN(parseFloat(e)) && isFinite(e)
        }

        function dp(e, t) {
            Object.keys(t).forEach((function(i) {
                var r = ""; - 1 !== ["width", "height", "top", "right", "bottom", "left"].indexOf(i) && up(t[i]) && (r = "px"), e.style[i] = t[i] + r
            }))
        }
        var fp = mf && /Firefox/i.test(navigator.userAgent);

        function pp(e, t, i) {
            var r = ep(e, (function(e) {
                    return e.name === t
                })),
                s = !!r && e.some((function(e) {
                    return e.name === i && e.enabled && e.order < r.order
                }));
            if (!s) {
                var n = "`" + t + "`",
                    o = "`" + i + "`";
                console.warn(o + " modifier is required by " + n + " modifier in order to work, be sure to include it before " + n + "!")
            }
            return s
        }
        var _p = ["auto-start", "auto", "auto-end", "top-start", "top", "top-end", "right-start", "right", "right-end", "bottom-end", "bottom", "bottom-start", "left-end", "left", "left-start"],
            gp = _p.slice(3);

        function vp(e) {
            var t = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
                i = gp.indexOf(e),
                r = gp.slice(i + 1).concat(gp.slice(0, i));
            return t ? r.reverse() : r
        }
        var mp = "flip",
            bp = "clockwise",
            wp = "counterclockwise";

        function yp(e, t, i, r) {
            var s = [0, 0],
                n = -1 !== ["right", "left"].indexOf(r),
                o = e.split(/(\+|\-)/).map((function(e) {
                    return e.trim()
                })),
                a = o.indexOf(ep(o, (function(e) {
                    return -1 !== e.search(/,|\s/)
                })));
            o[a] && -1 === o[a].indexOf(",") && console.warn("Offsets separated by white space(s) are deprecated, use a comma (,) instead.");
            var c = /\s*,\s*|\s+/,
                l = -1 !== a ? [o.slice(0, a).concat([o[a].split(c)[0]]), [o[a].split(c)[1]].concat(o.slice(a + 1))] : [o];
            return l = l.map((function(e, r) {
                var s = (1 === r ? !n : n) ? "height" : "width",
                    o = !1;
                return e.reduce((function(e, t) {
                    return "" === e[e.length - 1] && -1 !== ["+", "-"].indexOf(t) ? (e[e.length - 1] = t, o = !0, e) : o ? (e[e.length - 1] += t, o = !1, e) : e.concat(t)
                }), []).map((function(e) {
                    return function(e, t, i, r) {
                        var s = e.match(/((?:\-|\+)?\d*\.?\d*)(.*)/),
                            n = +s[1],
                            o = s[2];
                        if (!n) return e;
                        if (0 === o.indexOf("%")) {
                            return Wf("%p" === o ? i : r)[t] / 100 * n
                        }
                        if ("vh" === o || "vw" === o) return ("vh" === o ? Math.max(document.documentElement.clientHeight, window.innerHeight || 0) : Math.max(document.documentElement.clientWidth, window.innerWidth || 0)) / 100 * n;
                        return n
                    }(e, s, t, i)
                }))
            })), l.forEach((function(e, t) {
                e.forEach((function(i, r) {
                    up(i) && (s[t] += i * ("-" === e[r - 1] ? -1 : 1))
                }))
            })), s
        }
        var Sp = {
                shift: {
                    order: 100,
                    enabled: !0,
                    fn: function(e) {
                        var t = e.placement,
                            i = t.split("-")[0],
                            r = t.split("-")[1];
                        if (r) {
                            var s = e.offsets,
                                n = s.reference,
                                o = s.popper,
                                a = -1 !== ["bottom", "top"].indexOf(i),
                                c = a ? "left" : "top",
                                l = a ? "width" : "height",
                                h = {
                                    start: Ff({}, c, n[c]),
                                    end: Ff({}, c, n[c] + n[l] - o[l])
                                };
                            e.offsets.popper = Nf({}, o, h[r])
                        }
                        return e
                    }
                },
                offset: {
                    order: 200,
                    enabled: !0,
                    fn: function(e, t) {
                        var i = t.offset,
                            r = e.placement,
                            s = e.offsets,
                            n = s.popper,
                            o = s.reference,
                            a = r.split("-")[0],
                            c = void 0;
                        return c = up(+i) ? [+i, 0] : yp(i, n, o, a), "left" === a ? (n.top += c[0], n.left -= c[1]) : "right" === a ? (n.top += c[0], n.left += c[1]) : "top" === a ? (n.left += c[0], n.top -= c[1]) : "bottom" === a && (n.left += c[0], n.top += c[1]), e.popper = n, e
                    },
                    offset: 0
                },
                preventOverflow: {
                    order: 300,
                    enabled: !0,
                    fn: function(e, t) {
                        var i = t.boundariesElement || Df(e.instance.popper);
                        e.instance.reference === i && (i = Df(i));
                        var r = sp("transform"),
                            s = e.instance.popper.style,
                            n = s.top,
                            o = s.left,
                            a = s[r];
                        s.top = "", s.left = "", s[r] = "";
                        var c = qf(e.instance.popper, e.instance.reference, t.padding, i, e.positionFixed);
                        s.top = n, s.left = o, s[r] = a, t.boundaries = c;
                        var l = t.priority,
                            h = e.offsets.popper,
                            u = {
                                primary: function(e) {
                                    var i = h[e];
                                    return h[e] < c[e] && !t.escapeWithReference && (i = Math.max(h[e], c[e])), Ff({}, e, i)
                                },
                                secondary: function(e) {
                                    var i = "right" === e ? "left" : "top",
                                        r = h[i];
                                    return h[e] > c[e] && !t.escapeWithReference && (r = Math.min(h[i], c[e] - ("right" === e ? h.width : h.height))), Ff({}, i, r)
                                }
                            };
                        return l.forEach((function(e) {
                            var t = -1 !== ["left", "top"].indexOf(e) ? "primary" : "secondary";
                            h = Nf({}, h, u[t](e))
                        })), e.offsets.popper = h, e
                    },
                    priority: ["left", "right", "top", "bottom"],
                    padding: 5,
                    boundariesElement: "scrollParent"
                },
                keepTogether: {
                    order: 400,
                    enabled: !0,
                    fn: function(e) {
                        var t = e.offsets,
                            i = t.popper,
                            r = t.reference,
                            s = e.placement.split("-")[0],
                            n = Math.floor,
                            o = -1 !== ["top", "bottom"].indexOf(s),
                            a = o ? "right" : "bottom",
                            c = o ? "left" : "top",
                            l = o ? "width" : "height";
                        return i[a] < n(r[c]) && (e.offsets.popper[c] = n(r[c]) - i[l]), i[c] > n(r[a]) && (e.offsets.popper[c] = n(r[a])), e
                    }
                },
                arrow: {
                    order: 500,
                    enabled: !0,
                    fn: function(e, t) {
                        var i;
                        if (!pp(e.instance.modifiers, "arrow", "keepTogether")) return e;
                        var r = t.element;
                        if ("string" == typeof r) {
                            if (!(r = e.instance.popper.querySelector(r))) return e
                        } else if (!e.instance.popper.contains(r)) return console.warn("WARNING: `arrow.element` must be child of its popper element!"), e;
                        var s = e.placement.split("-")[0],
                            n = e.offsets,
                            o = n.popper,
                            a = n.reference,
                            c = -1 !== ["left", "right"].indexOf(s),
                            l = c ? "height" : "width",
                            h = c ? "Top" : "Left",
                            u = h.toLowerCase(),
                            d = c ? "left" : "top",
                            f = c ? "bottom" : "right",
                            p = Yf(r)[l];
                        a[f] - p < o[u] && (e.offsets.popper[u] -= o[u] - (a[f] - p)), a[u] + p > o[f] && (e.offsets.popper[u] += a[u] + p - o[f]), e.offsets.popper = Wf(e.offsets.popper);
                        var _ = a[u] + a[l] / 2 - p / 2,
                            g = Sf(e.instance.popper),
                            v = parseFloat(g["margin" + h]),
                            m = parseFloat(g["border" + h + "Width"]),
                            b = _ - e.offsets.popper[u] - v - m;
                        return b = Math.max(Math.min(o[l] - p, b), 0), e.arrowElement = r, e.offsets.arrow = (Ff(i = {}, u, Math.round(b)), Ff(i, d, ""), i), e
                    },
                    element: "[x-arrow]"
                },
                flip: {
                    order: 600,
                    enabled: !0,
                    fn: function(e, t) {
                        if (rp(e.instance.modifiers, "inner")) return e;
                        if (e.flipped && e.placement === e.originalPlacement) return e;
                        var i = qf(e.instance.popper, e.instance.reference, t.padding, t.boundariesElement, e.positionFixed),
                            r = e.placement.split("-")[0],
                            s = Zf(r),
                            n = e.placement.split("-")[1] || "",
                            o = [];
                        switch (t.behavior) {
                            case mp:
                                o = [r, s];
                                break;
                            case bp:
                                o = vp(r);
                                break;
                            case wp:
                                o = vp(r, !0);
                                break;
                            default:
                                o = t.behavior
                        }
                        return o.forEach((function(a, c) {
                            if (r !== a || o.length === c + 1) return e;
                            r = e.placement.split("-")[0], s = Zf(r);
                            var l = e.offsets.popper,
                                h = e.offsets.reference,
                                u = Math.floor,
                                d = "left" === r && u(l.right) > u(h.left) || "right" === r && u(l.left) < u(h.right) || "top" === r && u(l.bottom) > u(h.top) || "bottom" === r && u(l.top) < u(h.bottom),
                                f = u(l.left) < u(i.left),
                                p = u(l.right) > u(i.right),
                                _ = u(l.top) < u(i.top),
                                g = u(l.bottom) > u(i.bottom),
                                v = "left" === r && f || "right" === r && p || "top" === r && _ || "bottom" === r && g,
                                m = -1 !== ["top", "bottom"].indexOf(r),
                                b = !!t.flipVariations && (m && "start" === n && f || m && "end" === n && p || !m && "start" === n && _ || !m && "end" === n && g),
                                w = !!t.flipVariationsByContent && (m && "start" === n && p || m && "end" === n && f || !m && "start" === n && g || !m && "end" === n && _),
                                y = b || w;
                            (d || v || y) && (e.flipped = !0, (d || v) && (r = o[c + 1]), y && (n = function(e) {
                                return "end" === e ? "start" : "start" === e ? "end" : e
                            }(n)), e.placement = r + (n ? "-" + n : ""), e.offsets.popper = Nf({}, e.offsets.popper, Qf(e.instance.popper, e.offsets.reference, e.placement)), e = tp(e.instance.modifiers, e, "flip"))
                        })), e
                    },
                    behavior: "flip",
                    padding: 5,
                    boundariesElement: "viewport",
                    flipVariations: !1,
                    flipVariationsByContent: !1
                },
                inner: {
                    order: 700,
                    enabled: !1,
                    fn: function(e) {
                        var t = e.placement,
                            i = t.split("-")[0],
                            r = e.offsets,
                            s = r.popper,
                            n = r.reference,
                            o = -1 !== ["left", "right"].indexOf(i),
                            a = -1 === ["top", "left"].indexOf(i);
                        return s[o ? "left" : "top"] = n[i] - (a ? s[o ? "width" : "height"] : 0), e.placement = Zf(t), e.offsets.popper = Wf(s), e
                    }
                },
                hide: {
                    order: 800,
                    enabled: !0,
                    fn: function(e) {
                        if (!pp(e.instance.modifiers, "hide", "preventOverflow")) return e;
                        var t = e.offsets.reference,
                            i = ep(e.instance.modifiers, (function(e) {
                                return "preventOverflow" === e.name
                            })).boundaries;
                        if (t.bottom < i.top || t.left > i.right || t.top > i.bottom || t.right < i.left) {
                            if (!0 === e.hide) return e;
                            e.hide = !0, e.attributes["x-out-of-boundaries"] = ""
                        } else {
                            if (!1 === e.hide) return e;
                            e.hide = !1, e.attributes["x-out-of-boundaries"] = !1
                        }
                        return e
                    }
                },
                computeStyle: {
                    order: 850,
                    enabled: !0,
                    fn: function(e, t) {
                        var i = t.x,
                            r = t.y,
                            s = e.offsets.popper,
                            n = ep(e.instance.modifiers, (function(e) {
                                return "applyStyle" === e.name
                            })).gpuAcceleration;
                        void 0 !== n && console.warn("WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!");
                        var o = void 0 !== n ? n : t.gpuAcceleration,
                            a = Df(e.instance.popper),
                            c = Hf(a),
                            l = {
                                position: s.position
                            },
                            h = function(e, t) {
                                var i = e.offsets,
                                    r = i.popper,
                                    s = i.reference,
                                    n = Math.round,
                                    o = Math.floor,
                                    a = function(e) {
                                        return e
                                    },
                                    c = n(s.width),
                                    l = n(r.width),
                                    h = -1 !== ["left", "right"].indexOf(e.placement),
                                    u = -1 !== e.placement.indexOf("-"),
                                    d = t ? h || u || c % 2 == l % 2 ? n : o : a,
                                    f = t ? n : a;
                                return {
                                    left: d(c % 2 == 1 && l % 2 == 1 && !u && t ? r.left - 1 : r.left),
                                    top: f(r.top),
                                    bottom: f(r.bottom),
                                    right: d(r.right)
                                }
                            }(e, window.devicePixelRatio < 2 || !fp),
                            u = "bottom" === i ? "top" : "bottom",
                            d = "right" === r ? "left" : "right",
                            f = sp("transform"),
                            p = void 0,
                            _ = void 0;
                        if (_ = "bottom" === u ? "HTML" === a.nodeName ? -a.clientHeight + h.bottom : -c.height + h.bottom : h.top, p = "right" === d ? "HTML" === a.nodeName ? -a.clientWidth + h.right : -c.width + h.right : h.left, o && f) l[f] = "translate3d(" + p + "px, " + _ + "px, 0)", l[u] = 0, l[d] = 0, l.willChange = "transform";
                        else {
                            var g = "bottom" === u ? -1 : 1,
                                v = "right" === d ? -1 : 1;
                            l[u] = _ * g, l[d] = p * v, l.willChange = u + ", " + d
                        }
                        var m = {
                            "x-placement": e.placement
                        };
                        return e.attributes = Nf({}, m, e.attributes), e.styles = Nf({}, l, e.styles), e.arrowStyles = Nf({}, e.offsets.arrow, e.arrowStyles), e
                    },
                    gpuAcceleration: !0,
                    x: "bottom",
                    y: "right"
                },
                applyStyle: {
                    order: 900,
                    enabled: !0,
                    fn: function(e) {
                        var t, i;
                        return dp(e.instance.popper, e.styles), t = e.instance.popper, i = e.attributes, Object.keys(i).forEach((function(e) {
                            !1 !== i[e] ? t.setAttribute(e, i[e]) : t.removeAttribute(e)
                        })), e.arrowElement && Object.keys(e.arrowStyles).length && dp(e.arrowElement, e.arrowStyles), e
                    },
                    onLoad: function(e, t, i, r, s) {
                        var n = Jf(s, t, e, i.positionFixed),
                            o = Xf(i.placement, n, t, e, i.modifiers.flip.boundariesElement, i.modifiers.flip.padding);
                        return t.setAttribute("x-placement", o), dp(t, {
                            position: i.positionFixed ? "fixed" : "absolute"
                        }), i
                    },
                    gpuAcceleration: void 0
                }
            },
            Cp = {
                placement: "bottom",
                positionFixed: !1,
                eventsEnabled: !0,
                removeOnDestroy: !1,
                onCreate: function() {},
                onUpdate: function() {},
                modifiers: Sp
            },
            xp = function() {
                function e(t, i) {
                    var r = this,
                        s = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {};
                    $f(this, e), this.scheduleUpdate = function() {
                        return requestAnimationFrame(r.update)
                    }, this.update = wf(this.update.bind(this)), this.options = Nf({}, e.Defaults, s), this.state = {
                        isDestroyed: !1,
                        isCreated: !1,
                        scrollParents: []
                    }, this.reference = t && t.jquery ? t[0] : t, this.popper = i && i.jquery ? i[0] : i, this.options.modifiers = {}, Object.keys(Nf({}, e.Defaults.modifiers, s.modifiers)).forEach((function(t) {
                        r.options.modifiers[t] = Nf({}, e.Defaults.modifiers[t] || {}, s.modifiers ? s.modifiers[t] : {})
                    })), this.modifiers = Object.keys(this.options.modifiers).map((function(e) {
                        return Nf({
                            name: e
                        }, r.options.modifiers[e])
                    })).sort((function(e, t) {
                        return e.order - t.order
                    })), this.modifiers.forEach((function(e) {
                        e.enabled && yf(e.onLoad) && e.onLoad(r.reference, r.popper, r.options, e, r.state)
                    })), this.update();
                    var n = this.options.eventsEnabled;
                    n && this.enableEventListeners(), this.state.eventsEnabled = n
                }
                return jf(e, [{
                    key: "update",
                    value: function() {
                        return ip.call(this)
                    }
                }, {
                    key: "destroy",
                    value: function() {
                        return np.call(this)
                    }
                }, {
                    key: "enableEventListeners",
                    value: function() {
                        return lp.call(this)
                    }
                }, {
                    key: "disableEventListeners",
                    value: function() {
                        return hp.call(this)
                    }
                }]), e
            }();
        xp.Utils = ("undefined" != typeof window ? window : global).PopperUtils, xp.placements = _p, xp.Defaults = Cp;
        const Ep = xp;
        var Op = Dn({
                data: function() {
                    return {
                        listenForClickOut: !1
                    }
                },
                watch: {
                    listenForClickOut: function(e, t) {
                        e !== t && (Lh(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, vl), e && kh(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, vl))
                    }
                },
                beforeCreate: function() {
                    this.clickOutElement = null, this.clickOutEventName = null
                },
                mounted: function() {
                    this.clickOutElement || (this.clickOutElement = document), this.clickOutEventName || (this.clickOutEventName = "click"), this.listenForClickOut && kh(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, vl)
                },
                beforeDestroy: function() {
                    Lh(this.clickOutElement, this.clickOutEventName, this._clickOutHandler, vl)
                },
                methods: {
                    isClickOut: function(e) {
                        return !dh(this.$el, e.target)
                    },
                    _clickOutHandler: function(e) {
                        this.clickOutHandler && this.isClickOut(e) && this.clickOutHandler(e)
                    }
                }
            }),
            kp = Dn({
                data: function() {
                    return {
                        listenForFocusIn: !1
                    }
                },
                watch: {
                    listenForFocusIn: function(e, t) {
                        e !== t && (Lh(this.focusInElement, "focusin", this._focusInHandler, vl), e && kh(this.focusInElement, "focusin", this._focusInHandler, vl))
                    }
                },
                beforeCreate: function() {
                    this.focusInElement = null
                },
                mounted: function() {
                    this.focusInElement || (this.focusInElement = document), this.listenForFocusIn && kh(this.focusInElement, "focusin", this._focusInHandler, vl)
                },
                beforeDestroy: function() {
                    Lh(this.focusInElement, "focusin", this._focusInHandler, vl)
                },
                methods: {
                    _focusInHandler: function(e) {
                        this.focusInHandler && this.focusInHandler(e)
                    }
                }
            }),
            Lp = null;
        On && (Lp = new WeakMap);

        function Dp(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Mp(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Dp(Object(i), !0).forEach((function(t) {
                    Ap(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Dp(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Ap(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Rp = Rh(Fn, hl),
            Pp = Rh(Fn, rl),
            Tp = [".dropdown-item", ".b-dropdown-form"].map((function(e) {
                return "".concat(e, ":not(.disabled):not([disabled])")
            })).join(", "),
            Bp = Ga(sa(Mp(Mp({}, Gh), {}, {
                boundary: Ha([Jl, Co], "scrollParent"),
                disabled: Ha(bo, !1),
                dropleft: Ha(bo, !1),
                dropright: Ha(bo, !1),
                dropup: Ha(bo, !1),
                noFlip: Ha(bo, !1),
                offset: Ha(Mo, 0),
                popperOpts: Ha(So, {}),
                right: Ha(bo, !1)
            })), Fn),
            Ip = Dn({
                mixins: [Vh, du, Op, kp],
                provide: function() {
                    var e = this;
                    return {
                        getBvDropdown: function() {
                            return e
                        }
                    }
                },
                inject: {
                    getBvNavbar: {
                        default: function() {
                            return function() {
                                return null
                            }
                        }
                    }
                },
                props: Bp,
                data: function() {
                    return {
                        visible: !1,
                        visibleChangePrevented: !1
                    }
                },
                computed: {
                    bvNavbar: function() {
                        return this.getBvNavbar()
                    },
                    inNavbar: function() {
                        return !Bo(this.bvNavbar)
                    },
                    toggler: function() {
                        var e = this.$refs.toggle;
                        return e ? e.$el || e : null
                    },
                    directionClass: function() {
                        return this.dropup ? "dropup" : this.dropright ? "dropright" : this.dropleft ? "dropleft" : ""
                    },
                    boundaryClass: function() {
                        return "scrollParent" === this.boundary || this.inNavbar ? "" : "position-static"
                    },
                    hideDelay: function() {
                        return this.inNavbar ? kc ? 300 : 50 : 0
                    }
                },
                watch: {
                    visible: function(e, t) {
                        if (this.visibleChangePrevented) this.visibleChangePrevented = !1;
                        else if (e !== t) {
                            var i = new jl(e ? ll : sl, {
                                cancelable: !0,
                                vueTarget: this,
                                target: this.$refs.menu,
                                relatedTarget: null,
                                componentId: this.safeId ? this.safeId() : this.id || null
                            });
                            if (this.emitEvent(i), i.defaultPrevented) return this.visibleChangePrevented = !0, this.visible = t, void this.$off(rl, this.focusToggler);
                            e ? this.showMenu() : this.hideMenu()
                        }
                    },
                    disabled: function(e, t) {
                        e !== t && e && this.visible && (this.visible = !1)
                    }
                },
                created: function() {
                    this.$_popper = null, this.$_hideTimeout = null
                },
                deactivated: function() {
                    this.visible = !1, this.whileOpenListen(!1), this.destroyPopper()
                },
                mounted: function() {
                    var e, t;
                    e = this.$el, t = this, On && Lp.set(e, t)
                },
                beforeDestroy: function() {
                    var e;
                    this.visible = !1, this.whileOpenListen(!1), this.destroyPopper(), this.clearHideTimeout(), e = this.$el, On && Lp.delete(e)
                },
                methods: {
                    emitEvent: function(e) {
                        var t = e.type;
                        this.emitOnRoot(Rh(Fn, t), e), this.$emit(t, e)
                    },
                    showMenu: function() {
                        var e = this;
                        if (!this.disabled) {
                            if (!this.inNavbar)
                                if (void 0 === Ep) Rc("Popper.js not found. Falling back to CSS positioning", Fn);
                                else {
                                    var t = this.dropup && this.right || this.split ? this.$el : this.$refs.toggle;
                                    t = t.$el || t, this.createPopper(t)
                                } this.emitOnRoot(Rp, this), this.whileOpenListen(!0), this.$nextTick((function() {
                                e.focusMenu(), e.$emit(hl)
                            }))
                        }
                    },
                    hideMenu: function() {
                        this.whileOpenListen(!1), this.emitOnRoot(Pp, this), this.$emit(rl), this.destroyPopper()
                    },
                    createPopper: function(e) {
                        this.destroyPopper(), this.$_popper = new Ep(e, this.$refs.menu, this.getPopperConfig())
                    },
                    destroyPopper: function() {
                        this.$_popper && this.$_popper.destroy(), this.$_popper = null
                    },
                    updatePopper: function() {
                        try {
                            this.$_popper.scheduleUpdate()
                        } catch (e) {}
                    },
                    clearHideTimeout: function() {
                        clearTimeout(this.$_hideTimeout), this.$_hideTimeout = null
                    },
                    getPopperConfig: function() {
                        var e = "bottom-start";
                        this.dropup ? e = this.right ? "top-end" : "top-start" : this.dropright ? e = "right-start" : this.dropleft ? e = "left-start" : this.right && (e = "bottom-end");
                        var t = {
                                placement: e,
                                modifiers: {
                                    offset: {
                                        offset: this.offset || 0
                                    },
                                    flip: {
                                        enabled: !this.noFlip
                                    }
                                }
                            },
                            i = this.boundary;
                        return i && (t.modifiers.preventOverflow = {
                            boundariesElement: i
                        }), ra(t, this.popperOpts || {})
                    },
                    whileOpenListen: function(e) {
                        this.listenForClickOut = e, this.listenForFocusIn = e, this[e ? "listenOnRoot" : "listenOffRoot"](Rp, this.rootCloseListener)
                    },
                    rootCloseListener: function(e) {
                        e !== this && (this.visible = !1)
                    },
                    show: function() {
                        var e = this;
                        this.disabled || th((function() {
                            e.visible = !0
                        }))
                    },
                    hide: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                        this.disabled || (this.visible = !1, e && this.$once(rl, this.focusToggler))
                    },
                    toggle: function(e) {
                        var t = e = e || {},
                            i = t.type,
                            r = t.keyCode;
                        ("click" === i || "keydown" === i && -1 !== [wl, xl, ml].indexOf(r)) && (this.disabled ? this.visible = !1 : (this.$emit(ul, e), Mh(e), this.visible ? this.hide(!0) : this.show()))
                    },
                    onMousedown: function(e) {
                        Mh(e, {
                            propagation: !1
                        })
                    },
                    onKeydown: function(e) {
                        var t = e.keyCode;
                        27 === t ? this.onEsc(e) : t === ml ? this.focusNext(e, !1) : t === El && this.focusNext(e, !0)
                    },
                    onEsc: function(e) {
                        this.visible && (this.visible = !1, Mh(e), this.$once(rl, this.focusToggler))
                    },
                    onSplitClick: function(e) {
                        this.disabled ? this.visible = !1 : this.$emit(el, e)
                    },
                    hideHandler: function(e) {
                        var t = this,
                            i = e.target;
                        !this.visible || dh(this.$refs.menu, i) || dh(this.toggler, i) || (this.clearHideTimeout(), this.$_hideTimeout = setTimeout((function() {
                            return t.hide()
                        }), this.hideDelay))
                    },
                    clickOutHandler: function(e) {
                        this.hideHandler(e)
                    },
                    focusInHandler: function(e) {
                        this.hideHandler(e)
                    },
                    focusNext: function(e, t) {
                        var i = this,
                            r = e.target;
                        !this.visible || e && uh(".dropdown form", r) || (Mh(e), this.$nextTick((function() {
                            var e = i.getItems();
                            if (!(e.length < 1)) {
                                var s = e.indexOf(r);
                                t && s > 0 ? s-- : !t && s < e.length - 1 && s++, s < 0 && (s = 0), i.focusItem(s, e)
                            }
                        })))
                    },
                    focusItem: function(e, t) {
                        var i = t.find((function(t, i) {
                            return i === e
                        }));
                        xh(i)
                    },
                    getItems: function() {
                        return (ch(Tp, this.$refs.menu) || []).filter(ah)
                    },
                    focusMenu: function() {
                        xh(this.$refs.menu)
                    },
                    focusToggler: function() {
                        var e = this;
                        this.$nextTick((function() {
                            xh(e.toggler)
                        }))
                    }
                }
            });

        function $p(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function jp(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? $p(Object(i), !0).forEach((function(t) {
                    Fp(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : $p(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Fp(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Np = Ga(sa(jp(jp(jp({}, Gh), Bp), {}, {
                block: Ha(bo, !1),
                html: Ha(Co),
                lazy: Ha(bo, !1),
                menuClass: Ha(Oo),
                noCaret: Ha(bo, !1),
                role: Ha(Co, "menu"),
                size: Ha(Co),
                split: Ha(bo, !1),
                splitButtonType: Ha(Co, "button", (function(e) {
                    return Ja(["button", "submit", "reset"], e)
                })),
                splitClass: Ha(Oo),
                splitHref: Ha(Co),
                splitTo: Ha(Ao),
                splitVariant: Ha(Co),
                text: Ha(Co),
                toggleAttrs: Ha(So, {}),
                toggleClass: Ha(Oo),
                toggleTag: Ha(Co, "button"),
                toggleText: Ha(Co, "Toggle dropdown"),
                variant: Ha(Co, "secondary")
            })), Fn),
            Wp = Dn({
                name: Fn,
                mixins: [Vh, Ip, Xh],
                props: Np,
                computed: {
                    dropdownClasses: function() {
                        var e = this.block,
                            t = this.split;
                        return [this.directionClass, this.boundaryClass, {
                            show: this.visible,
                            "btn-group": t || !e,
                            "d-flex": e && t
                        }]
                    },
                    menuClasses: function() {
                        return [this.menuClass, {
                            "dropdown-menu-right": this.right,
                            show: this.visible
                        }]
                    },
                    toggleClasses: function() {
                        var e = this.split;
                        return [this.toggleClass, {
                            "dropdown-toggle-split": e,
                            "dropdown-toggle-no-caret": this.noCaret && !e
                        }]
                    }
                },
                render: function(e) {
                    var t = this.visible,
                        i = this.variant,
                        r = this.size,
                        s = this.block,
                        n = this.disabled,
                        o = this.split,
                        a = this.role,
                        c = this.hide,
                        l = this.toggle,
                        h = {
                            variant: i,
                            size: r,
                            block: s,
                            disabled: n
                        },
                        u = this.normalizeSlot(kl),
                        d = this.hasNormalizedSlot(kl) ? {} : Id(this.html, this.text),
                        f = e();
                    if (o) {
                        var p = this.splitTo,
                            _ = this.splitHref,
                            g = this.splitButtonType,
                            v = jp(jp({}, h), {}, {
                                variant: this.splitVariant || i
                            });
                        p ? v.to = p : _ ? v.href = _ : g && (v.type = g), f = e(pf, {
                            class: this.splitClass,
                            attrs: {
                                id: this.safeId("_BV_button_")
                            },
                            props: v,
                            domProps: d,
                            on: {
                                click: this.onSplitClick
                            },
                            ref: "button"
                        }, u), u = [e("span", {
                            class: ["sr-only"]
                        }, [this.toggleText])], d = {}
                    }
                    var m = e(pf, {
                            staticClass: "dropdown-toggle",
                            class: this.toggleClasses,
                            attrs: jp(jp({}, this.toggleAttrs), {}, {
                                id: this.safeId("_BV_toggle_"),
                                "aria-haspopup": ["menu", "listbox", "tree", "grid", "dialog"].includes(a) ? a : "false",
                                "aria-expanded": Ba(t)
                            }),
                            props: jp(jp({}, h), {}, {
                                tag: this.toggleTag,
                                block: s && !o
                            }),
                            domProps: d,
                            on: {
                                mousedown: this.onMousedown,
                                click: l,
                                keydown: l
                            },
                            ref: "toggle"
                        }, u),
                        b = e("ul", {
                            staticClass: "dropdown-menu",
                            class: this.menuClasses,
                            attrs: {
                                role: a,
                                tabindex: "-1",
                                "aria-labelledby": this.safeId(o ? "_BV_button_" : "_BV_toggle_")
                            },
                            on: {
                                keydown: this.onKeydown
                            },
                            ref: "menu"
                        }, [!this.lazy || t ? this.normalizeSlot(Ll, {
                            hide: c
                        }) : e()]);
                    return e("div", {
                        staticClass: "dropdown b-dropdown",
                        class: this.dropdownClasses,
                        attrs: {
                            id: this.safeId()
                        }
                    }, [f, m, b])
                }
            });

        function Hp(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Up(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Hp(Object(i), !0).forEach((function(t) {
                    zp(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Hp(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function zp(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Gp = ia(ku, ["event", "routerTag"]),
            Vp = Ga(sa(Up(Up({}, Gp), {}, {
                linkClass: Ha(Oo),
                variant: Ha(Co)
            })), zn),
            qp = Dn({
                name: zn,
                mixins: [lu, Xh],
                inject: {
                    getBvDropdown: {
                        default: function() {
                            return function() {
                                return null
                            }
                        }
                    }
                },
                inheritAttrs: !1,
                props: Vp,
                computed: {
                    bvDropdown: function() {
                        return this.getBvDropdown()
                    },
                    computedAttrs: function() {
                        return Up(Up({}, this.bvAttrs), {}, {
                            role: "menuitem"
                        })
                    }
                },
                methods: {
                    closeDropdown: function() {
                        var e = this;
                        th((function() {
                            e.bvDropdown && e.bvDropdown.hide(!0)
                        }))
                    },
                    onClick: function(e) {
                        this.$emit(el, e), this.closeDropdown()
                    }
                },
                render: function(e) {
                    var t = this.linkClass,
                        i = this.variant,
                        r = this.active,
                        s = this.disabled,
                        n = this.onClick,
                        o = this.bvAttrs;
                    return e("li", {
                        class: o.class,
                        style: o.style,
                        attrs: {
                            role: "presentation"
                        }
                    }, [e(Lu, {
                        staticClass: "dropdown-item",
                        class: [t, zp({}, "text-".concat(i), i && !(r || s))],
                        props: Ua(Gp, this.$props),
                        attrs: this.computedAttrs,
                        on: {
                            click: n
                        },
                        ref: "item"
                    }, this.normalizeSlot())])
                }
            });

        function Kp(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Xp(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Kp(Object(i), !0).forEach((function(t) {
                    Jp(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Kp(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Jp(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Yp = Ga({
                active: Ha(bo, !1),
                activeClass: Ha(Co, "active"),
                buttonClass: Ha(Oo),
                disabled: Ha(bo, !1),
                variant: Ha(Co)
            }, Gn),
            Zp = Dn({
                name: Gn,
                mixins: [lu, Xh],
                inject: {
                    getBvDropdown: {
                        default: function() {
                            return function() {
                                return null
                            }
                        }
                    }
                },
                inheritAttrs: !1,
                props: Yp,
                computed: {
                    bvDropdown: function() {
                        return this.getBvDropdown()
                    },
                    computedAttrs: function() {
                        return Xp(Xp({}, this.bvAttrs), {}, {
                            role: "menuitem",
                            type: "button",
                            disabled: this.disabled
                        })
                    }
                },
                methods: {
                    closeDropdown: function() {
                        this.bvDropdown && this.bvDropdown.hide(!0)
                    },
                    onClick: function(e) {
                        this.$emit(el, e), this.closeDropdown()
                    }
                },
                render: function(e) {
                    var t, i = this.active,
                        r = this.variant,
                        s = this.bvAttrs;
                    return e("li", {
                        class: s.class,
                        style: s.style,
                        attrs: {
                            role: "presentation"
                        }
                    }, [e("button", {
                        staticClass: "dropdown-item",
                        class: [this.buttonClass, (t = {}, Jp(t, this.activeClass, i), Jp(t, "text-".concat(r), r && !(i || this.disabled)), t)],
                        attrs: this.computedAttrs,
                        on: {
                            click: this.onClick
                        },
                        ref: "button"
                    }, this.normalizeSlot())])
                }
            });

        function Qp(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function e_(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Qp(Object(i), !0).forEach((function(t) {
                    t_(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Qp(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function t_(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var i_ = Ga({
                id: Ha(Co),
                tag: Ha(Co, "header"),
                variant: Ha(Co)
            }, Un),
            r_ = Dn({
                name: Un,
                functional: !0,
                props: i_,
                render: function(e, t) {
                    var i = t.props,
                        r = t.data,
                        s = t.children,
                        n = i.tag,
                        o = i.variant;
                    return e("li", bn(ia(r, ["attrs"]), {
                        attrs: {
                            role: "presentation"
                        }
                    }), [e(n, {
                        staticClass: "dropdown-header",
                        class: t_({}, "text-".concat(o), o),
                        attrs: e_(e_({}, r.attrs || {}), {}, {
                            id: i.id || null,
                            role: nh(n, "header") ? null : "heading"
                        }),
                        ref: "header"
                    }, s)])
                }
            });

        function s_(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function n_(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? s_(Object(i), !0).forEach((function(t) {
                    o_(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : s_(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function o_(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var a_ = Ga({
                tag: Ha(Co, "hr")
            }, Nn),
            c_ = Dn({
                name: Nn,
                functional: !0,
                props: a_,
                render: function(e, t) {
                    var i = t.props,
                        r = t.data;
                    return e("li", bn(ia(r, ["attrs"]), {
                        attrs: {
                            role: "presentation"
                        }
                    }), [e(i.tag, {
                        staticClass: "dropdown-divider",
                        attrs: n_(n_({}, r.attrs || {}), {}, {
                            role: "separator",
                            "aria-orientation": "horizontal"
                        }),
                        ref: "divider"
                    })])
                }
            }),
            l_ = Ga({
                id: Ha(Co),
                inline: Ha(bo, !1),
                novalidate: Ha(bo, !1),
                validated: Ha(bo, !1)
            }, qn),
            h_ = Dn({
                name: qn,
                functional: !0,
                props: l_,
                render: function(e, t) {
                    var i = t.props,
                        r = t.data,
                        s = t.children;
                    return e("form", bn(r, {
                        class: {
                            "form-inline": i.inline,
                            "was-validated": i.validated
                        },
                        attrs: {
                            id: i.id,
                            novalidate: i.novalidate
                        }
                    }), s)
                }
            });

        function u_(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function d_(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? u_(Object(i), !0).forEach((function(t) {
                    f_(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : u_(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function f_(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var p_ = Ga(sa(d_(d_({}, l_), {}, {
                disabled: Ha(bo, !1),
                formClass: Ha(Oo)
            })), Wn),
            __ = Dn({
                name: Wn,
                functional: !0,
                props: p_,
                render: function(e, t) {
                    var i = t.props,
                        r = t.data,
                        s = t.listeners,
                        n = t.children;
                    return e("li", bn(ia(r, ["attrs", "on"]), {
                        attrs: {
                            role: "presentation"
                        }
                    }), [e(h_, {
                        staticClass: "b-dropdown-form",
                        class: [i.formClass, {
                            disabled: i.disabled
                        }],
                        props: i,
                        attrs: d_(d_({}, r.attrs || {}), {}, {
                            disabled: i.disabled,
                            tabindex: i.disabled ? null : "-1"
                        }),
                        on: s,
                        ref: "form"
                    }, n)])
                }
            });
        var g_ = Ga({
                tag: Ha(Co, "p"),
                textClass: Ha(Oo),
                variant: Ha(Co)
            }, Vn),
            v_ = Dn({
                name: Vn,
                functional: !0,
                props: g_,
                render: function(e, t) {
                    var i, r, s, n = t.props,
                        o = t.data,
                        a = t.children,
                        c = n.tag,
                        l = n.textClass,
                        h = n.variant;
                    return e("li", bn(ia(o, ["attrs"]), {
                        attrs: {
                            role: "presentation"
                        }
                    }), [e(c, {
                        staticClass: "b-dropdown-text",
                        class: [l, (i = {}, r = "text-".concat(h), s = h, r in i ? Object.defineProperty(i, r, {
                            value: s,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0
                        }) : i[r] = s, i)],
                        props: n,
                        attrs: o.attrs || {},
                        ref: "text"
                    }, a)])
                }
            });

        function m_(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function b_(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? m_(Object(i), !0).forEach((function(t) {
                    w_(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : m_(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function w_(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var y_ = Ga({
                ariaDescribedby: Ha(Co),
                header: Ha(Co),
                headerClasses: Ha(Oo),
                headerTag: Ha(Co, "header"),
                headerVariant: Ha(Co),
                id: Ha(Co)
            }, Hn),
            S_ = Dn({
                name: Hn,
                functional: !0,
                props: y_,
                render: function(e, t) {
                    var i = t.props,
                        r = t.data,
                        s = t.slots,
                        n = t.scopedSlots,
                        o = i.id,
                        a = i.variant,
                        c = i.header,
                        l = i.headerTag,
                        h = s(),
                        u = n || {},
                        d = {},
                        f = o ? "_bv_".concat(o, "_group_dd_header") : null,
                        p = e();
                    return (qh(Ml, u, h) || c) && (p = e(l, {
                        staticClass: "dropdown-header",
                        class: [i.headerClasses, w_({}, "text-".concat(a), a)],
                        attrs: {
                            id: f,
                            role: nh(l, "header") ? null : "heading"
                        }
                    }, Kh(Ml, d, u, h) || c)), e("li", bn(ia(r, ["attrs"]), {
                        attrs: {
                            role: "presentation"
                        }
                    }), [p, e("ul", {
                        staticClass: "list-unstyled",
                        attrs: b_(b_({}, r.attrs || {}), {}, {
                            id: o,
                            role: "group",
                            "aria-describedby": [f, i.ariaDescribedBy].filter(Sa).join(" ").trim() || null
                        })
                    }, Kh(Ll, d, u, h))])
                }
            }),
            C_ = Gc({
                components: {
                    BDropdown: Wp,
                    BDd: Wp,
                    BDropdownItem: qp,
                    BDdItem: qp,
                    BDropdownItemButton: Zp,
                    BDropdownItemBtn: Zp,
                    BDdItemButton: Zp,
                    BDdItemBtn: Zp,
                    BDropdownHeader: r_,
                    BDdHeader: r_,
                    BDropdownDivider: c_,
                    BDdDivider: c_,
                    BDropdownForm: __,
                    BDdForm: __,
                    BDropdownText: v_,
                    BDdText: v_,
                    BDropdownGroup: S_,
                    BDdGroup: S_
                }
            }),
            x_ = "$_documentListeners",
            E_ = Dn({
                created: function() {
                    this[x_] = {}
                },
                beforeDestroy: function() {
                    var e = this;
                    Qo(this[x_] || {}).forEach((function(t) {
                        e[x_][t].forEach((function(i) {
                            e.listenOffDocument(t, i)
                        }))
                    })), this[x_] = null
                },
                methods: {
                    registerDocumentListener: function(e, t) {
                        this[x_] && (this[x_][e] = this[x_][e] || [], Ja(this[x_][e], t) || this[x_][e].push(t))
                    },
                    unregisterDocumentListener: function(e, t) {
                        this[x_] && this[x_][e] && (this[x_][e] = this[x_][e].filter((function(e) {
                            return e !== t
                        })))
                    },
                    listenDocument: function(e, t, i) {
                        e ? this.listenOnDocument(t, i) : this.listenOffDocument(t, i)
                    },
                    listenOnDocument: function(e, t) {
                        wc && (kh(document, e, t, vl), this.registerDocumentListener(e, t))
                    },
                    listenOffDocument: function(e, t) {
                        wc && Lh(document, e, t, vl), this.unregisterDocumentListener(e, t)
                    }
                }
            }),
            O_ = "$_windowListeners",
            k_ = Dn({
                created: function() {
                    this[O_] = {}
                },
                beforeDestroy: function() {
                    var e = this;
                    Qo(this[O_] || {}).forEach((function(t) {
                        e[O_][t].forEach((function(i) {
                            e.listenOffWindow(t, i)
                        }))
                    })), this[O_] = null
                },
                methods: {
                    registerWindowListener: function(e, t) {
                        this[O_] && (this[O_][e] = this[O_][e] || [], Ja(this[O_][e], t) || this[O_][e].push(t))
                    },
                    unregisterWindowListener: function(e, t) {
                        this[O_] && this[O_][e] && (this[O_][e] = this[O_][e].filter((function(e) {
                            return e !== t
                        })))
                    },
                    listenWindow: function(e, t, i) {
                        e ? this.listenOnWindow(t, i) : this.listenOffWindow(t, i)
                    },
                    listenOnWindow: function(e, t) {
                        wc && (kh(window, e, t, vl), this.registerWindowListener(e, t))
                    },
                    listenOffWindow: function(e, t) {
                        wc && Lh(window, e, t, vl), this.unregisterWindowListener(e, t)
                    }
                }
            }),
            L_ = Dn({
                computed: {
                    bvParent: function() {
                        return this.$parent || this.$root === this && this.$options.bvParent
                    }
                }
            });
        var D_ = Dn({
            mixins: [L_],
            computed: {
                scopedStyleAttrs: function() {
                    var e, t, i, r = function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                        return e && e.$options._scopeId || t
                    }(this.bvParent);
                    return r ? (i = "", (t = r) in(e = {}) ? Object.defineProperty(e, t, {
                        value: i,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }) : e[t] = i, e) : {}
                }
            }
        });

        function M_(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function A_(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? M_(Object(i), !0).forEach((function(t) {
                    R_(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : M_(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function R_(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var P_ = function(e, t) {
                var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                    r = e.$root ? e.$root.$options.bvEventRoot || e.$root : null;
                return new t(A_(A_({}, i), {}, {
                    parent: e,
                    bvParent: e,
                    bvEventRoot: r
                }))
            },
            T_ = Dn({
                abstract: !0,
                name: "BVTransporterTarget",
                props: {
                    nodes: Ha(xo)
                },
                data: function(e) {
                    return {
                        updatedNodes: e.nodes
                    }
                },
                destroyed: function() {
                    var e;
                    (e = this.$el) && e.parentNode && e.parentNode.removeChild(e)
                },
                render: function(e) {
                    var t = this.updatedNodes,
                        i = $o(t) ? t({}) : t;
                    return (i = Ya(i).filter(Sa)) && i.length > 0 && !i[0].text ? i[0] : e()
                }
            }),
            B_ = {
                container: Ha([Jl, Co], "body"),
                disabled: Ha(bo, !1),
                tag: Ha(Co, "div")
            },
            I_ = Dn({
                name: go,
                mixins: [Xh],
                props: B_,
                watch: {
                    disabled: {
                        immediate: !0,
                        handler: function(e) {
                            e ? this.unmountTarget() : this.$nextTick(this.mountTarget)
                        }
                    }
                },
                created: function() {
                    this.$_defaultFn = null, this.$_target = null
                },
                beforeMount: function() {
                    this.mountTarget()
                },
                updated: function() {
                    this.updateTarget()
                },
                beforeDestroy: function() {
                    this.unmountTarget(), this.$_defaultFn = null
                },
                methods: {
                    getContainer: function() {
                        if (wc) {
                            var e = this.container;
                            return Fo(e) ? lh(e) : e
                        }
                        return null
                    },
                    mountTarget: function() {
                        if (!this.$_target) {
                            var e = this.getContainer();
                            if (e) {
                                var t = document.createElement("div");
                                e.appendChild(t), this.$_target = P_(this, T_, {
                                    el: t,
                                    propsData: {
                                        nodes: Ya(this.normalizeSlot())
                                    }
                                })
                            }
                        }
                    },
                    updateTarget: function() {
                        if (wc && this.$_target) {
                            var e = this.$scopedSlots.default;
                            this.disabled || (e && this.$_defaultFn !== e ? this.$_target.updatedNodes = e : e || (this.$_target.updatedNodes = this.$slots.default)), this.$_defaultFn = e
                        }
                    },
                    unmountTarget: function() {
                        this.$_target && this.$_target.$destroy(), this.$_target = null
                    }
                },
                render: function(e) {
                    if (this.disabled) {
                        var t = Ya(this.normalizeSlot()).filter(Sa);
                        if (t.length > 0 && !t[0].text) return t[0]
                    }
                    return e()
                }
            }),
            $_ = Dn({
                name: go,
                mixins: [Xh],
                props: B_,
                render: function(e) {
                    if (this.disabled) {
                        var t = Ya(this.normalizeSlot()).filter(Sa);
                        if (t.length > 0) return t[0]
                    }
                    return e(Ki.Teleport, {
                        to: this.container
                    }, this.normalizeSlot())
                }
            }),
            j_ = On ? $_ : I_;

        function F_(e) {
            return F_ = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
            }, F_(e)
        }

        function N_(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function W_(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? N_(Object(i), !0).forEach((function(t) {
                    H_(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : N_(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function H_(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }

        function U_(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
        }

        function z_(e, t) {
            for (var i = 0; i < t.length; i++) {
                var r = t[i];
                r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
            }
        }

        function G_() {
            return G_ = "undefined" != typeof Reflect && Reflect.get ? Reflect.get : function(e, t, i) {
                var r = V_(e, t);
                if (r) {
                    var s = Object.getOwnPropertyDescriptor(r, t);
                    return s.get ? s.get.call(arguments.length < 3 ? e : i) : s.value
                }
            }, G_.apply(this, arguments)
        }

        function V_(e, t) {
            for (; !Object.prototype.hasOwnProperty.call(e, t) && null !== (e = Y_(e)););
            return e
        }

        function q_(e, t) {
            return q_ = Object.setPrototypeOf || function(e, t) {
                return e.__proto__ = t, e
            }, q_(e, t)
        }

        function K_(e) {
            var t = function() {
                if ("undefined" == typeof Reflect || !Reflect.construct) return !1;
                if (Reflect.construct.sham) return !1;
                if ("function" == typeof Proxy) return !0;
                try {
                    return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {}))), !0
                } catch (e) {
                    return !1
                }
            }();
            return function() {
                var i, r = Y_(e);
                if (t) {
                    var s = Y_(this).constructor;
                    i = Reflect.construct(r, arguments, s)
                } else i = r.apply(this, arguments);
                return X_(this, i)
            }
        }

        function X_(e, t) {
            if (t && ("object" === F_(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            return J_(e)
        }

        function J_(e) {
            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e
        }

        function Y_(e) {
            return Y_ = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e)
            }, Y_(e)
        }
        var Z_ = function(e) {
                ! function(e, t) {
                    if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
                    Object.defineProperty(e, "prototype", {
                        value: Object.create(t && t.prototype, {
                            constructor: {
                                value: e,
                                writable: !0,
                                configurable: !0
                            }
                        }),
                        writable: !1
                    }), t && q_(e, t)
                }(n, e);
                var t, i, r, s = K_(n);

                function n(e) {
                    var t, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                    return U_(this, n), t = s.call(this, e, i), Jo(J_(t), {
                        trigger: {
                            enumerable: !0,
                            configurable: !1,
                            writable: !1
                        }
                    }), t
                }
                return t = n, r = [{
                    key: "Defaults",
                    get: function() {
                        return W_(W_({}, G_(Y_(n), "Defaults", this)), {}, {
                            trigger: null
                        })
                    }
                }], (i = null) && z_(t.prototype, i), r && z_(t, r), Object.defineProperty(t, "prototype", {
                    writable: !1
                }), n
            }(jl),
            Q_ = Dn({
                data: function() {
                    return {
                        modals: [],
                        baseZIndex: null,
                        scrollbarWidth: null,
                        isBodyOverflowing: !1
                    }
                },
                computed: {
                    modalCount: function() {
                        return this.modals.length
                    },
                    modalsAreOpen: function() {
                        return this.modalCount > 0
                    }
                },
                watch: {
                    modalCount: function(e, t) {
                        wc && (this.getScrollbarWidth(), e > 0 && 0 === t ? (this.checkScrollbar(), this.setScrollbar(), fh(document.body, "modal-open")) : 0 === e && t > 0 && (this.resetScrollbar(), ph(document.body, "modal-open")), gh(document.body, "data-modal-open-count", String(e)))
                    },
                    modals: function(e) {
                        var t = this;
                        this.checkScrollbar(), th((function() {
                            t.updateModals(e || [])
                        }))
                    }
                },
                methods: {
                    registerModal: function(e) {
                        e && -1 === this.modals.indexOf(e) && this.modals.push(e)
                    },
                    unregisterModal: function(e) {
                        var t = this.modals.indexOf(e);
                        t > -1 && (this.modals.splice(t, 1), e._isBeingDestroyed || e._isDestroyed || this.resetModal(e))
                    },
                    getBaseZIndex: function() {
                        if (wc && Bo(this.baseZIndex)) {
                            var e = document.createElement("div");
                            fh(e, "modal-backdrop"), fh(e, "d-none"), wh(e, "display", "none"), document.body.appendChild(e), this.baseZIndex = Nh(Ch(e).zIndex, 1040), document.body.removeChild(e)
                        }
                        return this.baseZIndex || 1040
                    },
                    getScrollbarWidth: function() {
                        if (wc && Bo(this.scrollbarWidth)) {
                            var e = document.createElement("div");
                            fh(e, "modal-scrollbar-measure"), document.body.appendChild(e), this.scrollbarWidth = Sh(e).width - e.clientWidth, document.body.removeChild(e)
                        }
                        return this.scrollbarWidth || 0
                    },
                    updateModals: function(e) {
                        var t = this,
                            i = this.getBaseZIndex(),
                            r = this.getScrollbarWidth();
                        e.forEach((function(e, s) {
                            e.zIndex = i + s, e.scrollbarWidth = r, e.isTop = s === t.modals.length - 1, e.isBodyOverflowing = t.isBodyOverflowing
                        }))
                    },
                    resetModal: function(e) {
                        e && (e.zIndex = this.getBaseZIndex(), e.isTop = !0, e.isBodyOverflowing = !1)
                    },
                    checkScrollbar: function() {
                        var e = Sh(document.body),
                            t = e.left,
                            i = e.right;
                        this.isBodyOverflowing = t + i < window.innerWidth
                    },
                    setScrollbar: function() {
                        var e = document.body;
                        if (e._paddingChangedForModal = e._paddingChangedForModal || [], e._marginChangedForModal = e._marginChangedForModal || [], this.isBodyOverflowing) {
                            var t = this.scrollbarWidth;
                            ch(".fixed-top, .fixed-bottom, .is-fixed, .sticky-top").forEach((function(i) {
                                var r = yh(i, "paddingRight") || "";
                                gh(i, "data-padding-right", r), wh(i, "paddingRight", "".concat(Wh(Ch(i).paddingRight, 0) + t, "px")), e._paddingChangedForModal.push(i)
                            })), ch(".sticky-top").forEach((function(i) {
                                var r = yh(i, "marginRight") || "";
                                gh(i, "data-margin-right", r), wh(i, "marginRight", "".concat(Wh(Ch(i).marginRight, 0) - t, "px")), e._marginChangedForModal.push(i)
                            })), ch(".navbar-toggler").forEach((function(i) {
                                var r = yh(i, "marginRight") || "";
                                gh(i, "data-margin-right", r), wh(i, "marginRight", "".concat(Wh(Ch(i).marginRight, 0) + t, "px")), e._marginChangedForModal.push(i)
                            }));
                            var i = yh(e, "paddingRight") || "";
                            gh(e, "data-padding-right", i), wh(e, "paddingRight", "".concat(Wh(Ch(e).paddingRight, 0) + t, "px"))
                        }
                    },
                    resetScrollbar: function() {
                        var e = document.body;
                        e._paddingChangedForModal && e._paddingChangedForModal.forEach((function(e) {
                            bh(e, "data-padding-right") && (wh(e, "paddingRight", mh(e, "data-padding-right") || ""), vh(e, "data-padding-right"))
                        })), e._marginChangedForModal && e._marginChangedForModal.forEach((function(e) {
                            bh(e, "data-margin-right") && (wh(e, "marginRight", mh(e, "data-margin-right") || ""), vh(e, "data-margin-right"))
                        })), e._paddingChangedForModal = null, e._marginChangedForModal = null, bh(e, "data-padding-right") && (wh(e, "paddingRight", mh(e, "data-padding-right") || ""), vh(e, "data-padding-right"))
                    }
                }
            }),
            eg = new Q_;

        function tg(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function ig(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? tg(Object(i), !0).forEach((function(t) {
                    rg(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : tg(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function rg(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var sg = Fh("visible", {
                type: bo,
                defaultValue: !1,
                event: Qc
            }),
            ng = sg.mixin,
            og = sg.props,
            ag = sg.prop,
            cg = sg.event,
            lg = "FORCE",
            hg = "cancel",
            ug = "headerclose",
            dg = "ok",
            fg = [hg, ug, dg],
            pg = {
                subtree: !0,
                childList: !0,
                characterData: !0,
                attributes: !0,
                attributeFilter: ["style", "class"]
            },
            _g = Ga(sa(ig(ig(ig({}, Gh), og), {}, {
                ariaLabel: Ha(Co),
                autoFocusButton: Ha(Co, null, (function(e) {
                    return Io(e) || Ja(fg, e)
                })),
                bodyBgVariant: Ha(Co),
                bodyClass: Ha(Oo),
                bodyTextVariant: Ha(Co),
                busy: Ha(bo, !1),
                buttonSize: Ha(Co),
                cancelDisabled: Ha(bo, !1),
                cancelTitle: Ha(Co, "Cancel"),
                cancelTitleHtml: Ha(Co),
                cancelVariant: Ha(Co, "secondary"),
                centered: Ha(bo, !1),
                contentClass: Ha(Oo),
                dialogClass: Ha(Oo),
                footerBgVariant: Ha(Co),
                footerBorderVariant: Ha(Co),
                footerClass: Ha(Oo),
                footerTag: Ha(Co, "footer"),
                footerTextVariant: Ha(Co),
                headerBgVariant: Ha(Co),
                headerBorderVariant: Ha(Co),
                headerClass: Ha(Oo),
                headerCloseContent: Ha(Co, "&times;"),
                headerCloseLabel: Ha(Co, "Close"),
                headerCloseVariant: Ha(Co),
                headerTag: Ha(Co, "header"),
                headerTextVariant: Ha(Co),
                hideBackdrop: Ha(bo, !1),
                hideFooter: Ha(bo, !1),
                hideHeader: Ha(bo, !1),
                hideHeaderClose: Ha(bo, !1),
                ignoreEnforceFocusSelector: Ha(ko),
                lazy: Ha(bo, !1),
                modalClass: Ha(Oo),
                noCloseOnBackdrop: Ha(bo, !1),
                noCloseOnEsc: Ha(bo, !1),
                noEnforceFocus: Ha(bo, !1),
                noFade: Ha(bo, !1),
                noStacking: Ha(bo, !1),
                okDisabled: Ha(bo, !1),
                okOnly: Ha(bo, !1),
                okTitle: Ha(Co, "OK"),
                okTitleHtml: Ha(Co),
                okVariant: Ha(Co, "primary"),
                returnFocus: Ha([Jl, So, Co]),
                scrollable: Ha(bo, !1),
                size: Ha(Co, "md"),
                static: Ha(bo, !1),
                title: Ha(Co),
                titleClass: Ha(Oo),
                titleHtml: Ha(Co),
                titleSrOnly: Ha(bo, !1),
                titleTag: Ha(Co, "h5")
            })), ho),
            gg = Dn({
                name: ho,
                mixins: [lu, Vh, ng, E_, du, k_, Xh, D_],
                inheritAttrs: !1,
                props: _g,
                data: function() {
                    return {
                        isHidden: !0,
                        isVisible: !1,
                        isTransitioning: !1,
                        isShow: !1,
                        isBlock: !1,
                        isOpening: !1,
                        isClosing: !1,
                        ignoreBackdropClick: !1,
                        isModalOverflowing: !1,
                        scrollbarWidth: 0,
                        zIndex: eg.getBaseZIndex(),
                        isTop: !0,
                        isBodyOverflowing: !1
                    }
                },
                computed: {
                    modalId: function() {
                        return this.safeId()
                    },
                    modalOuterId: function() {
                        return this.safeId("__BV_modal_outer_")
                    },
                    modalHeaderId: function() {
                        return this.safeId("__BV_modal_header_")
                    },
                    modalBodyId: function() {
                        return this.safeId("__BV_modal_body_")
                    },
                    modalTitleId: function() {
                        return this.safeId("__BV_modal_title_")
                    },
                    modalContentId: function() {
                        return this.safeId("__BV_modal_content_")
                    },
                    modalFooterId: function() {
                        return this.safeId("__BV_modal_footer_")
                    },
                    modalBackdropId: function() {
                        return this.safeId("__BV_modal_backdrop_")
                    },
                    modalClasses: function() {
                        return [{
                            fade: !this.noFade,
                            show: this.isShow
                        }, this.modalClass]
                    },
                    modalStyles: function() {
                        var e = "".concat(this.scrollbarWidth, "px");
                        return {
                            paddingLeft: !this.isBodyOverflowing && this.isModalOverflowing ? e : "",
                            paddingRight: this.isBodyOverflowing && !this.isModalOverflowing ? e : "",
                            display: this.isBlock ? "block" : "none"
                        }
                    },
                    dialogClasses: function() {
                        var e;
                        return [(e = {}, rg(e, "modal-".concat(this.size), this.size), rg(e, "modal-dialog-centered", this.centered), rg(e, "modal-dialog-scrollable", this.scrollable), e), this.dialogClass]
                    },
                    headerClasses: function() {
                        var e;
                        return [(e = {}, rg(e, "bg-".concat(this.headerBgVariant), this.headerBgVariant), rg(e, "text-".concat(this.headerTextVariant), this.headerTextVariant), rg(e, "border-".concat(this.headerBorderVariant), this.headerBorderVariant), e), this.headerClass]
                    },
                    titleClasses: function() {
                        return [{
                            "sr-only": this.titleSrOnly
                        }, this.titleClass]
                    },
                    bodyClasses: function() {
                        var e;
                        return [(e = {}, rg(e, "bg-".concat(this.bodyBgVariant), this.bodyBgVariant), rg(e, "text-".concat(this.bodyTextVariant), this.bodyTextVariant), e), this.bodyClass]
                    },
                    footerClasses: function() {
                        var e;
                        return [(e = {}, rg(e, "bg-".concat(this.footerBgVariant), this.footerBgVariant), rg(e, "text-".concat(this.footerTextVariant), this.footerTextVariant), rg(e, "border-".concat(this.footerBorderVariant), this.footerBorderVariant), e), this.footerClass]
                    },
                    modalOuterStyle: function() {
                        return {
                            position: "absolute",
                            zIndex: this.zIndex
                        }
                    },
                    slotScope: function() {
                        return {
                            cancel: this.onCancel,
                            close: this.onClose,
                            hide: this.hide,
                            ok: this.onOk,
                            visible: this.isVisible
                        }
                    },
                    computeIgnoreEnforceFocusSelector: function() {
                        return Ya(this.ignoreEnforceFocusSelector).filter(Sa).join(",").trim()
                    },
                    computedAttrs: function() {
                        return ig(ig(ig({}, this.static ? {} : this.scopedStyleAttrs), this.bvAttrs), {}, {
                            id: this.modalOuterId
                        })
                    },
                    computedModalAttrs: function() {
                        var e = this.isVisible,
                            t = this.ariaLabel;
                        return {
                            id: this.modalId,
                            role: "dialog",
                            "aria-hidden": e ? null : "true",
                            "aria-modal": e ? "true" : null,
                            "aria-label": t,
                            "aria-labelledby": this.hideHeader || t || !(this.hasNormalizedSlot(Pl) || this.titleHtml || this.title) ? null : this.modalTitleId,
                            "aria-describedby": this.modalBodyId
                        }
                    }
                },
                watch: rg({}, ag, (function(e, t) {
                    e !== t && this[e ? "show" : "hide"]()
                })),
                created: function() {
                    this.$_observer = null, this.$_returnFocus = this.returnFocus || null
                },
                mounted: function() {
                    this.zIndex = eg.getBaseZIndex(), this.listenOnRoot(Ph(ho, ll), this.showHandler), this.listenOnRoot(Ph(ho, sl), this.hideHandler), this.listenOnRoot(Ph(ho, ul), this.toggleHandler), this.listenOnRoot(Rh(ho, ll), this.modalListener), !0 === this[ag] && this.$nextTick(this.show)
                },
                beforeDestroy: function() {
                    eg.unregisterModal(this), this.setObserver(!1), this.isVisible && (this.isVisible = !1, this.isShow = !1, this.isTransitioning = !1)
                },
                methods: {
                    setObserver: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
                        this.$_observer && this.$_observer.disconnect(), this.$_observer = null, e && (this.$_observer = zh(this.$refs.content, this.checkModalOverflow.bind(this), pg))
                    },
                    updateModel: function(e) {
                        e !== this[ag] && this.$emit(cg, e)
                    },
                    buildEvent: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {};
                        return new Z_(e, ig(ig({
                            cancelable: !1,
                            target: this.$refs.modal || this.$el || null,
                            relatedTarget: null,
                            trigger: null
                        }, t), {}, {
                            vueTarget: this,
                            componentId: this.modalId
                        }))
                    },
                    show: function() {
                        if (!this.isVisible && !this.isOpening)
                            if (this.isClosing) this.$once(rl, this.show);
                            else {
                                this.isOpening = !0, this.$_returnFocus = this.$_returnFocus || this.getActiveElement();
                                var e = this.buildEvent(ll, {
                                    cancelable: !0
                                });
                                if (this.emitEvent(e), e.defaultPrevented || this.isVisible) return this.isOpening = !1, void this.updateModel(!1);
                                this.doShow()
                            }
                    },
                    hide: function() {
                        var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "";
                        if (this.isVisible && !this.isClosing) {
                            this.isClosing = !0;
                            var t = this.buildEvent(sl, {
                                cancelable: e !== lg,
                                trigger: e || null
                            });
                            if (e === dg ? this.$emit("ok", t) : e === hg ? this.$emit(Zc, t) : e === ug && this.$emit(tl, t), this.emitEvent(t), t.defaultPrevented || !this.isVisible) return this.isClosing = !1, void this.updateModel(!0);
                            this.setObserver(!1), this.isVisible = !1, this.updateModel(!1)
                        }
                    },
                    toggle: function(e) {
                        e && (this.$_returnFocus = e), this.isVisible ? this.hide("toggle") : this.show()
                    },
                    getActiveElement: function() {
                        var e = sh(wc ? [document.body] : []);
                        return e && e.focus ? e : null
                    },
                    doShow: function() {
                        var e = this;
                        eg.modalsAreOpen && this.noStacking ? this.listenOnRootOnce(Rh(ho, rl), this.doShow) : (eg.registerModal(this), this.isHidden = !1, this.$nextTick((function() {
                            e.isVisible = !0, e.isOpening = !1, e.updateModel(!0), e.$nextTick((function() {
                                e.setObserver(!0)
                            }))
                        })))
                    },
                    onBeforeEnter: function() {
                        this.isTransitioning = !0, this.setResizeEvent(!0)
                    },
                    onEnter: function() {
                        var e = this;
                        this.isBlock = !0, th((function() {
                            th((function() {
                                e.isShow = !0
                            }))
                        }))
                    },
                    onAfterEnter: function() {
                        var e = this;
                        this.checkModalOverflow(), this.isTransitioning = !1, th((function() {
                            e.emitEvent(e.buildEvent(hl)), e.setEnforceFocus(!0), e.$nextTick((function() {
                                e.focusFirst()
                            }))
                        }))
                    },
                    onBeforeLeave: function() {
                        this.isTransitioning = !0, this.setResizeEvent(!1), this.setEnforceFocus(!1)
                    },
                    onLeave: function() {
                        this.isShow = !1
                    },
                    onAfterLeave: function() {
                        var e = this;
                        this.isBlock = !1, this.isTransitioning = !1, this.isModalOverflowing = !1, this.isHidden = !0, this.$nextTick((function() {
                            e.isClosing = !1, eg.unregisterModal(e), e.returnFocusTo(), e.emitEvent(e.buildEvent(rl))
                        }))
                    },
                    emitEvent: function(e) {
                        var t = e.type;
                        this.emitOnRoot(Rh(ho, t), e, e.componentId), this.$emit(t, e)
                    },
                    onDialogMousedown: function() {
                        var e = this,
                            t = this.$refs.modal;
                        kh(t, "mouseup", (function i(r) {
                            Lh(t, "mouseup", i, vl), r.target === t && (e.ignoreBackdropClick = !0)
                        }), vl)
                    },
                    onClickOut: function(e) {
                        this.ignoreBackdropClick ? this.ignoreBackdropClick = !1 : this.isVisible && !this.noCloseOnBackdrop && dh(document.body, e.target) && (dh(this.$refs.content, e.target) || this.hide("backdrop"))
                    },
                    onOk: function() {
                        this.hide(dg)
                    },
                    onCancel: function() {
                        this.hide(hg)
                    },
                    onClose: function() {
                        this.hide(ug)
                    },
                    onEsc: function(e) {
                        27 === e.keyCode && this.isVisible && !this.noCloseOnEsc && this.hide("esc")
                    },
                    focusHandler: function(e) {
                        var t = this.$refs.content,
                            i = e.target;
                        if (!(this.noEnforceFocus || !this.isTop || !this.isVisible || !t || document === i || dh(t, i) || this.computeIgnoreEnforceFocusSelector && uh(this.computeIgnoreEnforceFocusSelector, i, !0))) {
                            var r = function() {
                                    var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : document;
                                    return ch(Zl, e).filter(ah).filter((function(e) {
                                        return e.tabIndex > -1 && !e.disabled
                                    }))
                                }(this.$refs.content),
                                s = this.$refs["bottom-trap"],
                                n = this.$refs["top-trap"];
                            if (s && i === s) {
                                if (xh(r[0])) return
                            } else if (n && i === n && xh(r[r.length - 1])) return;
                            xh(t, {
                                preventScroll: !0
                            })
                        }
                    },
                    setEnforceFocus: function(e) {
                        this.listenDocument(e, "focusin", this.focusHandler)
                    },
                    setResizeEvent: function(e) {
                        this.listenWindow(e, "resize", this.checkModalOverflow), this.listenWindow(e, "orientationchange", this.checkModalOverflow)
                    },
                    showHandler: function(e, t) {
                        e === this.modalId && (this.$_returnFocus = t || this.getActiveElement(), this.show())
                    },
                    hideHandler: function(e) {
                        e === this.modalId && this.hide("event")
                    },
                    toggleHandler: function(e, t) {
                        e === this.modalId && this.toggle(t)
                    },
                    modalListener: function(e) {
                        this.noStacking && e.vueTarget !== this && this.hide()
                    },
                    focusFirst: function() {
                        var e = this;
                        wc && th((function() {
                            var t = e.$refs.modal,
                                i = e.$refs.content,
                                r = e.getActiveElement();
                            if (t && i && (!r || !dh(i, r))) {
                                var s = e.$refs["ok-button"],
                                    n = e.$refs["cancel-button"],
                                    o = e.$refs["close-button"],
                                    a = e.autoFocusButton,
                                    c = a === dg && s ? s.$el || s : a === hg && n ? n.$el || n : a === ug && o ? o.$el || o : i;
                                xh(c), c === i && e.$nextTick((function() {
                                    t.scrollTop = 0
                                }))
                            }
                        }))
                    },
                    returnFocusTo: function() {
                        var e = this.returnFocus || this.$_returnFocus || null;
                        this.$_returnFocus = null, this.$nextTick((function() {
                            (e = Fo(e) ? lh(e) : e) && (e = e.$el || e, xh(e))
                        }))
                    },
                    checkModalOverflow: function() {
                        if (this.isVisible) {
                            var e = this.$refs.modal;
                            this.isModalOverflowing = e.scrollHeight > document.documentElement.clientHeight
                        }
                    },
                    makeModal: function(e) {
                        var t = e();
                        if (!this.hideHeader) {
                            var i = this.normalizeSlot("modal-header", this.slotScope);
                            if (!i) {
                                var r = e();
                                this.hideHeaderClose || (r = e(gf, {
                                    props: {
                                        content: this.headerCloseContent,
                                        disabled: this.isTransitioning,
                                        ariaLabel: this.headerCloseLabel,
                                        textVariant: this.headerCloseVariant || this.headerTextVariant
                                    },
                                    on: {
                                        click: this.onClose
                                    },
                                    ref: "close-button"
                                }, [this.normalizeSlot("modal-header-close")])), i = [e(this.titleTag, {
                                    staticClass: "modal-title",
                                    class: this.titleClasses,
                                    attrs: {
                                        id: this.modalTitleId
                                    },
                                    domProps: this.hasNormalizedSlot(Pl) ? {} : Id(this.titleHtml, this.title)
                                }, this.normalizeSlot(Pl, this.slotScope)), r]
                            }
                            t = e(this.headerTag, {
                                staticClass: "modal-header",
                                class: this.headerClasses,
                                attrs: {
                                    id: this.modalHeaderId
                                },
                                ref: "header"
                            }, [i])
                        }
                        var s = e("div", {
                                staticClass: "modal-body",
                                class: this.bodyClasses,
                                attrs: {
                                    id: this.modalBodyId
                                },
                                ref: "body"
                            }, this.normalizeSlot(Ll, this.slotScope)),
                            n = e();
                        if (!this.hideFooter) {
                            var o = this.normalizeSlot("modal-footer", this.slotScope);
                            if (!o) {
                                var a = e();
                                this.okOnly || (a = e(pf, {
                                    props: {
                                        variant: this.cancelVariant,
                                        size: this.buttonSize,
                                        disabled: this.cancelDisabled || this.busy || this.isTransitioning
                                    },
                                    domProps: this.hasNormalizedSlot(Al) ? {} : Id(this.cancelTitleHtml, this.cancelTitle),
                                    on: {
                                        click: this.onCancel
                                    },
                                    ref: "cancel-button"
                                }, this.normalizeSlot(Al))), o = [a, e(pf, {
                                    props: {
                                        variant: this.okVariant,
                                        size: this.buttonSize,
                                        disabled: this.okDisabled || this.busy || this.isTransitioning
                                    },
                                    domProps: this.hasNormalizedSlot(Rl) ? {} : Id(this.okTitleHtml, this.okTitle),
                                    on: {
                                        click: this.onOk
                                    },
                                    ref: "ok-button"
                                }, this.normalizeSlot(Rl))]
                            }
                            n = e(this.footerTag, {
                                staticClass: "modal-footer",
                                class: this.footerClasses,
                                attrs: {
                                    id: this.modalFooterId
                                },
                                ref: "footer"
                            }, [o])
                        }
                        var c = e("div", {
                                staticClass: "modal-content",
                                class: this.contentClass,
                                attrs: {
                                    id: this.modalContentId,
                                    tabindex: "-1"
                                },
                                ref: "content"
                            }, [t, s, n]),
                            l = e(),
                            h = e();
                        this.isVisible && !this.noEnforceFocus && (l = e("span", {
                            attrs: {
                                tabindex: "0"
                            },
                            ref: "top-trap"
                        }), h = e("span", {
                            attrs: {
                                tabindex: "0"
                            },
                            ref: "bottom-trap"
                        }));
                        var u = e("div", {
                                staticClass: "modal-dialog",
                                class: this.dialogClasses,
                                on: {
                                    mousedown: this.onDialogMousedown
                                },
                                ref: "dialog"
                            }, [l, c, h]),
                            d = e("div", {
                                staticClass: "modal",
                                class: this.modalClasses,
                                style: this.modalStyles,
                                attrs: this.computedModalAttrs,
                                on: {
                                    keydown: this.onEsc,
                                    click: this.onClickOut
                                },
                                directives: [{
                                    name: "show",
                                    value: this.isVisible
                                }],
                                ref: "modal"
                            }, [u]);
                        d = e("transition", {
                            props: {
                                enterClass: "",
                                enterToClass: "",
                                enterActiveClass: "",
                                leaveClass: "",
                                leaveActiveClass: "",
                                leaveToClass: ""
                            },
                            on: {
                                beforeEnter: this.onBeforeEnter,
                                enter: this.onEnter,
                                afterEnter: this.onAfterEnter,
                                beforeLeave: this.onBeforeLeave,
                                leave: this.onLeave,
                                afterLeave: this.onAfterLeave
                            }
                        }, [d]);
                        var f = e();
                        return !this.hideBackdrop && this.isVisible && (f = e("div", {
                            staticClass: "modal-backdrop",
                            attrs: {
                                id: this.modalBackdropId
                            }
                        }, this.normalizeSlot("modal-backdrop"))), f = e(ed, {
                            props: {
                                noFade: this.noFade
                            }
                        }, [f]), e("div", {
                            style: this.modalOuterStyle,
                            attrs: this.computedAttrs,
                            key: "modal-outer-".concat(this[En])
                        }, [d, f])
                    }
                },
                render: function(e) {
                    return this.static ? this.lazy && this.isHidden ? e() : this.makeModal(e) : this.isHidden ? e() : e(j_, [this.makeModal(e)])
                }
            }),
            vg = Ph(ho, ll),
            mg = "__bv_modal_directive__",
            bg = function(e) {
                var t = e.modifiers,
                    i = void 0 === t ? {} : t,
                    r = e.arg,
                    s = e.value;
                return Fo(s) ? s : Fo(r) ? r : Qo(i).reverse()[0]
            },
            wg = function(e) {
                return e && hh(e, ".dropdown-menu > li, li.nav-item") && lh("a, button", e) || e
            },
            yg = function(e) {
                e && "BUTTON" !== e.tagName && (bh(e, "role") || gh(e, "role", "button"), "A" === e.tagName || bh(e, "tabindex") || gh(e, "tabindex", "0"))
            },
            Sg = function(e, t, i) {
                var r = bg(t),
                    s = wg(e);
                if (r && s) {
                    var n = function(e) {
                        var s = e.currentTarget;
                        if (! function(e) {
                                return !rh(e) || e.disabled || bh(e, "disabled") || _h(e, "disabled")
                            }(s)) {
                            var n = e.type,
                                o = e.keyCode;
                            "click" !== n && ("keydown" !== n || o !== wl && o !== xl) || hu(function(e, t) {
                                return On ? t.instance : e.context
                            }(i, t)).$emit(vg, r, s)
                        }
                    };
                    e[mg] = {
                        handler: n,
                        target: r,
                        trigger: s
                    }, yg(s), kh(s, "click", n, gl), "BUTTON" !== s.tagName && "button" === mh(s, "role") && kh(s, "keydown", n, gl)
                }
            },
            Cg = function(e) {
                var t = e[mg] || {},
                    i = t.trigger,
                    r = t.handler;
                i && r && (Lh(i, "click", r, gl), Lh(i, "keydown", r, gl), Lh(e, "click", r, gl), Lh(e, "keydown", r, gl)), delete e[mg]
            },
            xg = function(e, t, i) {
                var r = e[mg] || {},
                    s = bg(t),
                    n = wg(e);
                s === r.target && n === r.trigger || (Cg(e), Sg(e, t, i)), yg(n)
            },
            Eg = {
                inserted: xg,
                updated: function() {},
                componentUpdated: xg,
                unbind: Cg
            };

        function Og(e, t) {
            for (var i = 0; i < t.length; i++) {
                var r = t[i];
                r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
            }
        }

        function kg(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Lg(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? kg(Object(i), !0).forEach((function(t) {
                    Dg(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : kg(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Dg(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }

        function Mg(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var i = 0, r = new Array(t); i < t; i++) r[i] = e[i];
            return r
        }
        var Ag, Rg = "$bvModal",
            Pg = "_bv__modal",
            Tg = ["id"].concat(function(e) {
                if (Array.isArray(e)) return Mg(e)
            }(Ag = Qo(ia(_g, ["busy", "lazy", "noStacking", "static", "visible"]))) || function(e) {
                if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e)
            }(Ag) || function(e, t) {
                if (e) {
                    if ("string" == typeof e) return Mg(e, t);
                    var i = Object.prototype.toString.call(e).slice(8, -1);
                    return "Object" === i && e.constructor && (i = e.constructor.name), "Map" === i || "Set" === i ? Array.from(e) : "Arguments" === i || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i) ? Mg(e, t) : void 0
                }
            }(Ag) || function() {
                throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }()),
            Bg = function() {},
            Ig = {
                msgBoxContent: "default",
                title: "modal-title",
                okTitle: "modal-ok",
                cancelTitle: "modal-cancel"
            },
            $g = function(e) {
                return Tg.reduce((function(t, i) {
                    return To(e[i]) || (t[i] = e[i]), t
                }), {})
            },
            jg = Gc({
                plugins: {
                    plugin: function(e) {
                        var t = e.extend({
                                name: "BMsgBox",
                                extends: gg,
                                mixins: [L_],
                                destroyed: function() {
                                    this.$el && this.$el.parentNode && this.$el.parentNode.removeChild(this.$el)
                                },
                                mounted: function() {
                                    var e = this,
                                        t = function() {
                                            e.$nextTick((function() {
                                                th((function() {
                                                    e.$destroy()
                                                }))
                                            }))
                                        };
                                    this.bvParent.$once(fl, t), this.$once(rl, t), this.$router && this.$route && this.$once(dl, this.$watch("$router", t)), this.show()
                                }
                            }),
                            i = function(e, i) {
                                var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : Bg;
                                if (!Pc(Rg) && !Tc(Rg)) {
                                    var s = P_(e, t, {
                                        propsData: Lg(Lg(Lg({}, $g(va(ho))), {}, {
                                            hideHeaderClose: !0,
                                            hideHeader: !(i.title || i.titleHtml)
                                        }, ia(i, Qo(Ig))), {}, {
                                            lazy: !1,
                                            busy: !1,
                                            visible: !1,
                                            noStacking: !1,
                                            noEnforceFocus: !1
                                        })
                                    });
                                    return Qo(Ig).forEach((function(e) {
                                        To(i[e]) || (s.$slots[Ig[e]] = Ya(i[e]))
                                    })), new Promise((function(e, t) {
                                        var i = !1;
                                        s.$once(fl, (function() {
                                            i || t(new Error("BootstrapVue MsgBox destroyed before resolve"))
                                        })), s.$on(sl, (function(t) {
                                            if (!t.defaultPrevented) {
                                                var s = r(t);
                                                t.defaultPrevented || (i = !0, e(s))
                                            }
                                        }));
                                        var n = document.createElement("div");
                                        document.body.appendChild(n), s.$mount(n)
                                    }))
                                }
                            },
                            r = function(e, t) {
                                var r = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : {},
                                    s = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : null;
                                if (t && !Tc(Rg) && !Pc(Rg) && $o(s)) return i(e, Lg(Lg({}, $g(r)), {}, {
                                    msgBoxContent: t
                                }), s)
                            },
                            s = function() {
                                function e(t) {
                                    ! function(e, t) {
                                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                                    }(this, e), Ko(this, {
                                        _vm: t,
                                        _root: hu(t)
                                    }), Jo(this, {
                                        _vm: {
                                            enumerable: !0,
                                            configurable: !1,
                                            writable: !1
                                        },
                                        _root: {
                                            enumerable: !0,
                                            configurable: !1,
                                            writable: !1
                                        }
                                    })
                                }
                                var t, i, s;
                                return t = e, i = [{
                                    key: "show",
                                    value: function(e) {
                                        if (e && this._root) {
                                            for (var t, i = arguments.length, r = new Array(i > 1 ? i - 1 : 0), s = 1; s < i; s++) r[s - 1] = arguments[s];
                                            (t = this._root).$emit.apply(t, [Ph(ho, "show"), e].concat(r))
                                        }
                                    }
                                }, {
                                    key: "hide",
                                    value: function(e) {
                                        if (e && this._root) {
                                            for (var t, i = arguments.length, r = new Array(i > 1 ? i - 1 : 0), s = 1; s < i; s++) r[s - 1] = arguments[s];
                                            (t = this._root).$emit.apply(t, [Ph(ho, "hide"), e].concat(r))
                                        }
                                    }
                                }, {
                                    key: "msgBoxOk",
                                    value: function(e) {
                                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                            i = Lg(Lg({}, t), {}, {
                                                okOnly: !0,
                                                okDisabled: !1,
                                                hideFooter: !1,
                                                msgBoxContent: e
                                            });
                                        return r(this._vm, e, i, (function() {
                                            return !0
                                        }))
                                    }
                                }, {
                                    key: "msgBoxConfirm",
                                    value: function(e) {
                                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
                                            i = Lg(Lg({}, t), {}, {
                                                okOnly: !1,
                                                okDisabled: !1,
                                                cancelDisabled: !1,
                                                hideFooter: !1
                                            });
                                        return r(this._vm, e, i, (function(e) {
                                            var t = e.trigger;
                                            return "ok" === t || "cancel" !== t && null
                                        }))
                                    }
                                }], i && Og(t.prototype, i), s && Og(t, s), Object.defineProperty(t, "prototype", {
                                    writable: !1
                                }), e
                            }();
                        e.mixin({
                            beforeCreate: function() {
                                this[Pg] = new s(this)
                            }
                        }), ea(e.prototype, Rg) || Yo(e.prototype, Rg, {
                            get: function() {
                                return this && this[Pg] || Rc('"'.concat(Rg, '" must be accessed from a Vue instance "this" context.'), ho), this[Pg]
                            }
                        })
                    }
                }
            }),
            Fg = Gc({
                components: {
                    BModal: gg
                },
                directives: {
                    VBModal: Eg
                },
                plugins: {
                    BVModalPlugin: jg
                }
            });

        function Ng(e, t) {
            for (var i = 0; i < t.length; i++) {
                var r = t[i];
                r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), Object.defineProperty(e, r.key, r)
            }
        }
        var Wg = "__bv__visibility_observer",
            Hg = function() {
                function e(t, i) {
                    ! function(e, t) {
                        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function")
                    }(this, e), this.el = t, this.callback = i.callback, this.margin = i.margin || 0, this.once = i.once || !1, this.observer = null, this.visible = void 0, this.doneOnce = !1, this.createObserver()
                }
                var t, i, r;
                return t = e, (i = [{
                    key: "createObserver",
                    value: function() {
                        var e = this;
                        if (this.observer && this.stop(), !this.doneOnce && $o(this.callback)) {
                            try {
                                this.observer = new IntersectionObserver(this.handler.bind(this), {
                                    root: null,
                                    rootMargin: this.margin,
                                    threshold: 0
                                })
                            } catch (e) {
                                return this.doneOnce = !0, this.observer = void 0, void this.callback(null)
                            }
                            Tn((function() {
                                th((function() {
                                    e.observer && e.observer.observe(e.el)
                                }))
                            }))
                        }
                    }
                }, {
                    key: "handler",
                    value: function(e) {
                        var t = e ? e[0] : {},
                            i = Boolean(t.isIntersecting || t.intersectionRatio > 0);
                        i !== this.visible && (this.visible = i, this.callback(i), this.once && this.visible && (this.doneOnce = !0, this.stop()))
                    }
                }, {
                    key: "stop",
                    value: function() {
                        this.observer && this.observer.disconnect(), this.observer = null
                    }
                }]) && Ng(t.prototype, i), r && Ng(t, r), Object.defineProperty(t, "prototype", {
                    writable: !1
                }), e
            }(),
            Ug = function(e) {
                var t = e[Wg];
                t && t.stop && t.stop(), delete e[Wg]
            },
            zg = function(e, t) {
                var i = t.value,
                    r = t.modifiers,
                    s = {
                        margin: "0px",
                        once: !1,
                        callback: i
                    };
                Qo(r).forEach((function(e) {
                    Ea.test(e) ? s.margin = "".concat(e, "px") : "once" === e.toLowerCase() && (s.once = !0)
                })), Ug(e), e[Wg] = new Hg(e, s), e[Wg]._prevModifiers = ta(r)
            },
            Gg = {
                bind: zg,
                componentUpdated: function(e, t, i) {
                    var r = t.value,
                        s = t.oldValue,
                        n = t.modifiers;
                    n = ta(n), !e || r === s && e[Wg] && Th(n, e[Wg]._prevModifiers) || zg(e, {
                        value: r,
                        modifiers: n
                    })
                },
                unbind: function(e) {
                    Ug(e)
                }
            };

        function Vg(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function qg(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Vg(Object(i), !0).forEach((function(t) {
                    Kg(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Vg(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Kg(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Xg, Jg, Yg = Ga(sa(qg(qg(qg(qg(qg(qg({}, Gh), hd), fd), _d), Ed), {}, {
                maxRows: Ha(Mo),
                noAutoShrink: Ha(bo, !1),
                noResize: Ha(bo, !1),
                rows: Ha(Mo, 2),
                wrap: Ha(Co, "soft")
            })), io),
            Zg = Dn({
                name: io,
                directives: {
                    "b-visible": Gg
                },
                mixins: [mu, Vh, du, ud, pd, gd, Od, dd, kd],
                props: Yg,
                data: function() {
                    return {
                        heightInPx: null
                    }
                },
                computed: {
                    type: function() {
                        return null
                    },
                    computedStyle: function() {
                        var e = {
                            resize: !this.computedRows || this.noResize ? "none" : null
                        };
                        return this.computedRows || (e.height = this.heightInPx, e.overflowY = "scroll"), e
                    },
                    computedMinRows: function() {
                        return Ih(Nh(this.rows, 2), 2)
                    },
                    computedMaxRows: function() {
                        return Ih(this.computedMinRows, Nh(this.maxRows, 0))
                    },
                    computedRows: function() {
                        return this.computedMinRows === this.computedMaxRows ? this.computedMinRows : null
                    },
                    computedAttrs: function() {
                        var e = this.disabled,
                            t = this.required;
                        return {
                            id: this.safeId(),
                            name: this.name || null,
                            form: this.form || null,
                            disabled: e,
                            placeholder: this.placeholder || null,
                            required: t,
                            autocomplete: this.autocomplete || null,
                            readonly: this.readonly || this.plaintext,
                            rows: this.computedRows,
                            wrap: this.wrap || null,
                            "aria-required": this.required ? "true" : null,
                            "aria-invalid": this.computedAriaInvalid
                        }
                    },
                    computedListeners: function() {
                        return qg(qg({}, this.bvListeners), {}, {
                            input: this.onInput,
                            change: this.onChange,
                            blur: this.onBlur
                        })
                    }
                },
                watch: {
                    localValue: function() {
                        this.setHeight()
                    }
                },
                mounted: function() {
                    this.setHeight()
                },
                methods: {
                    visibleCallback: function(e) {
                        e && this.$nextTick(this.setHeight)
                    },
                    setHeight: function() {
                        var e = this;
                        this.$nextTick((function() {
                            th((function() {
                                e.heightInPx = e.computeHeight()
                            }))
                        }))
                    },
                    computeHeight: function() {
                        if (this.$isServer || !Bo(this.computedRows)) return null;
                        var e = this.$el;
                        if (!ah(e)) return null;
                        var t = Ch(e),
                            i = Wh(t.lineHeight, 1),
                            r = Wh(t.borderTopWidth, 0) + Wh(t.borderBottomWidth, 0),
                            s = Wh(t.paddingTop, 0) + Wh(t.paddingBottom, 0),
                            n = r + s,
                            o = i * this.computedMinRows + n,
                            a = yh(e, "height") || t.height;
                        wh(e, "height", "auto");
                        var c = e.scrollHeight;
                        wh(e, "height", a);
                        var l = Ih((c - s) / i, 2),
                            h = Bh(Ih(l, this.computedMinRows), this.computedMaxRows),
                            u = Ih($h(h * i + n), o);
                        return this.noAutoShrink && Wh(a, 0) > u ? a : "".concat(u, "px")
                    }
                },
                render: function(e) {
                    return e("textarea", {
                        class: this.computedClass,
                        style: this.computedStyle,
                        directives: [{
                            name: "b-visible",
                            value: this.visibleCallback,
                            modifiers: {
                                640: !0
                            }
                        }],
                        attrs: this.computedAttrs,
                        domProps: {
                            value: this.localValue
                        },
                        on: this.computedListeners,
                        ref: "input"
                    })
                }
            }),
            Qg = Gc({
                components: {
                    BFormTextarea: Zg,
                    BTextarea: Zg
                }
            }),
            ev = function(e, t) {
                for (var i = 0; i < e.length; i++)
                    if (Th(e[i], t)) return i;
                return -1
            },
            tv = Ga({
                plain: Ha(bo, !1)
            }, "formControls"),
            iv = Dn({
                props: tv,
                computed: {
                    custom: function() {
                        return !this.plain
                    }
                }
            });

        function rv(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function sv(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? rv(Object(i), !0).forEach((function(t) {
                    nv(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : rv(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function nv(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var ov, av = Fh("checked", {
                defaultValue: null
            }),
            cv = av.mixin,
            lv = av.props,
            hv = av.prop,
            uv = av.event,
            dv = Ga(sa(sv(sv(sv(sv(sv(sv(sv({}, Gh), lv), hd), fd), _d), tv), {}, {
                ariaLabel: Ha(Co),
                ariaLabelledby: Ha(Co),
                button: Ha(bo, !1),
                buttonVariant: Ha(Co),
                inline: Ha(bo, !1),
                value: Ha(vo)
            })), "formRadioCheckControls"),
            fv = Dn({
                mixins: [lu, Vh, cv, Xh, ud, pd, gd, iv],
                inheritAttrs: !1,
                props: dv,
                data: function() {
                    return {
                        localChecked: this.isGroup ? this.bvGroup[hv] : this[hv],
                        hasFocus: !1
                    }
                },
                computed: {
                    computedLocalChecked: {
                        get: function() {
                            return this.isGroup ? this.bvGroup.localChecked : this.localChecked
                        },
                        set: function(e) {
                            this.isGroup ? this.bvGroup.localChecked = e : this.localChecked = e
                        }
                    },
                    isChecked: function() {
                        return Th(this.value, this.computedLocalChecked)
                    },
                    isRadio: function() {
                        return !0
                    },
                    isGroup: function() {
                        return !!this.bvGroup
                    },
                    isBtnMode: function() {
                        return this.isGroup ? this.bvGroup.buttons : this.button
                    },
                    isPlain: function() {
                        return !this.isBtnMode && (this.isGroup ? this.bvGroup.plain : this.plain)
                    },
                    isCustom: function() {
                        return !this.isBtnMode && !this.isPlain
                    },
                    isSwitch: function() {
                        return !(this.isBtnMode || this.isRadio || this.isPlain) && (this.isGroup ? this.bvGroup.switches : this.switch)
                    },
                    isInline: function() {
                        return this.isGroup ? this.bvGroup.inline : this.inline
                    },
                    isDisabled: function() {
                        return this.isGroup && this.bvGroup.disabled || this.disabled
                    },
                    isRequired: function() {
                        return this.computedName && (this.isGroup ? this.bvGroup.required : this.required)
                    },
                    computedName: function() {
                        return (this.isGroup ? this.bvGroup.groupName : this.name) || null
                    },
                    computedForm: function() {
                        return (this.isGroup ? this.bvGroup.form : this.form) || null
                    },
                    computedSize: function() {
                        return (this.isGroup ? this.bvGroup.size : this.size) || ""
                    },
                    computedState: function() {
                        return this.isGroup ? this.bvGroup.computedState : jo(this.state) ? this.state : null
                    },
                    computedButtonVariant: function() {
                        var e = this.buttonVariant;
                        return e || (this.isGroup && this.bvGroup.buttonVariant ? this.bvGroup.buttonVariant : "secondary")
                    },
                    buttonClasses: function() {
                        var e, t = this.computedSize;
                        return ["btn", "btn-".concat(this.computedButtonVariant), (e = {}, nv(e, "btn-".concat(t), t), nv(e, "disabled", this.isDisabled), nv(e, "active", this.isChecked), nv(e, "focus", this.hasFocus), e)]
                    },
                    computedAttrs: function() {
                        var e = this.isDisabled,
                            t = this.isRequired;
                        return sv(sv({}, this.bvAttrs), {}, {
                            id: this.safeId(),
                            type: this.isRadio ? "radio" : "checkbox",
                            name: this.computedName,
                            form: this.computedForm,
                            disabled: e,
                            required: t,
                            "aria-required": t || null,
                            "aria-label": this.ariaLabel || null,
                            "aria-labelledby": this.ariaLabelledby || null
                        })
                    }
                },
                watch: (Xg = {}, nv(Xg, hv, (function() {
                    this["".concat(hv, "Watcher")].apply(this, arguments)
                })), nv(Xg, "computedLocalChecked", (function() {
                    this.computedLocalCheckedWatcher.apply(this, arguments)
                })), Xg),
                methods: (Jg = {}, nv(Jg, "".concat(hv, "Watcher"), (function(e) {
                    Th(e, this.computedLocalChecked) || (this.computedLocalChecked = e)
                })), nv(Jg, "computedLocalCheckedWatcher", (function(e, t) {
                    Th(e, t) || this.$emit(uv, e)
                })), nv(Jg, "handleChange", (function(e) {
                    var t = this,
                        i = e.target.checked,
                        r = this.value,
                        s = i ? r : null;
                    this.computedLocalChecked = r, this.$nextTick((function() {
                        t.$emit(Qc, s), t.isGroup && t.bvGroup.$emit(Qc, s)
                    }))
                })), nv(Jg, "handleFocus", (function(e) {
                    e.target && ("focus" === e.type ? this.hasFocus = !0 : "blur" === e.type && (this.hasFocus = !1))
                })), nv(Jg, "focus", (function() {
                    this.isDisabled || xh(this.$refs.input)
                })), nv(Jg, "blur", (function() {
                    this.isDisabled || Eh(this.$refs.input)
                })), Jg),
                render: function(e) {
                    var t = this.isRadio,
                        i = this.isBtnMode,
                        r = this.isPlain,
                        s = this.isCustom,
                        n = this.isInline,
                        o = this.isSwitch,
                        a = this.computedSize,
                        c = this.bvAttrs,
                        l = this.normalizeSlot(),
                        h = e("input", {
                            class: [{
                                "form-check-input": r,
                                "custom-control-input": s,
                                "position-static": r && !l
                            }, i ? "" : this.stateClass],
                            directives: [{
                                name: "model",
                                value: this.computedLocalChecked
                            }],
                            attrs: this.computedAttrs,
                            domProps: {
                                value: this.value,
                                checked: this.isChecked
                            },
                            on: sv({
                                change: this.handleChange
                            }, i ? {
                                focus: this.handleFocus,
                                blur: this.handleFocus
                            } : {}),
                            key: "input",
                            ref: "input"
                        });
                    if (i) {
                        var u = e("label", {
                            class: this.buttonClasses
                        }, [h, l]);
                        return this.isGroup || (u = e("div", {
                            class: ["btn-group-toggle", "d-inline-block"]
                        }, [u])), u
                    }
                    var d = e();
                    return r && !l || (d = e("label", {
                        class: {
                            "form-check-label": r,
                            "custom-control-label": s
                        },
                        attrs: {
                            for: this.safeId()
                        }
                    }, l)), e("div", {
                        class: [nv({
                            "form-check": r,
                            "form-check-inline": r && n,
                            "custom-control": s,
                            "custom-control-inline": s && n,
                            "custom-checkbox": s && !t && !o,
                            "custom-switch": o,
                            "custom-radio": s && t
                        }, "b-custom-control-".concat(a), a && !i), c.class],
                        style: c.style
                    }, [h, d])
                }
            });

        function pv(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function _v(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? pv(Object(i), !0).forEach((function(t) {
                    gv(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : pv(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function gv(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var vv, mv = "indeterminate",
            bv = pl + mv,
            wv = Ga(sa(_v(_v({}, dv), {}, (gv(ov = {}, mv, Ha(bo, !1)), gv(ov, "switch", Ha(bo, !1)), gv(ov, "uncheckedValue", Ha(vo, !1)), gv(ov, "value", Ha(vo, !0)), ov))), Kn),
            yv = Dn({
                name: Kn,
                mixins: [fv],
                inject: {
                    getBvGroup: {
                        from: "getBvCheckGroup",
                        default: function() {
                            return function() {
                                return null
                            }
                        }
                    }
                },
                props: wv,
                computed: {
                    bvGroup: function() {
                        return this.getBvGroup()
                    },
                    isChecked: function() {
                        var e = this.value,
                            t = this.computedLocalChecked;
                        return No(t) ? ev(t, e) > -1 : Th(t, e)
                    },
                    isRadio: function() {
                        return !1
                    }
                },
                watch: gv({}, mv, (function(e, t) {
                    Th(e, t) || this.setIndeterminate(e)
                })),
                mounted: function() {
                    this.setIndeterminate(this[mv])
                },
                methods: {
                    computedLocalCheckedWatcher: function(e, t) {
                        if (!Th(e, t)) {
                            this.$emit(uv, e);
                            var i = this.$refs.input;
                            i && this.$emit(bv, i.indeterminate)
                        }
                    },
                    handleChange: function(e) {
                        var t = this,
                            i = e.target,
                            r = i.checked,
                            s = i.indeterminate,
                            n = this.value,
                            o = this.uncheckedValue,
                            a = this.computedLocalChecked;
                        if (No(a)) {
                            var c = ev(a, n);
                            r && c < 0 ? a = a.concat(n) : !r && c > -1 && (a = a.slice(0, c).concat(a.slice(c + 1)))
                        } else a = r ? n : o;
                        this.computedLocalChecked = a, this.$nextTick((function() {
                            t.$emit(Qc, a), t.isGroup && t.bvGroup.$emit(Qc, a), t.$emit(bv, s)
                        }))
                    },
                    setIndeterminate: function(e) {
                        No(this.computedLocalChecked) && (e = !1);
                        var t = this.$refs.input;
                        t && (t.indeterminate = e, this.$emit(bv, e))
                    }
                }
            }),
            Sv = Ga(dv, Yn),
            Cv = Dn({
                name: Yn,
                mixins: [fv],
                inject: {
                    getBvGroup: {
                        from: "getBvRadioGroup",
                        default: function() {
                            return function() {
                                return null
                            }
                        }
                    }
                },
                props: Sv,
                computed: {
                    bvGroup: function() {
                        return this.getBvGroup()
                    }
                }
            }),
            xv = Ga({
                disabledField: Ha(Co, "disabled"),
                htmlField: Ha(Co, "html"),
                options: Ha(Eo, []),
                textField: Ha(Co, "text"),
                valueField: Ha(Co, "value")
            }, "formOptionControls"),
            Ev = Dn({
                props: xv,
                computed: {
                    formOptions: function() {
                        return this.normalizeOptions(this.options)
                    }
                },
                methods: {
                    normalizeOption: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                        if (Ho(e)) {
                            var i = Dc(e, this.valueField),
                                r = Dc(e, this.textField);
                            return {
                                value: To(i) ? t || r : i,
                                text: Bd(String(To(r) ? t : r)),
                                html: Dc(e, this.htmlField),
                                disabled: Boolean(Dc(e, this.disabledField))
                            }
                        }
                        return {
                            value: t || e,
                            text: Bd(String(e)),
                            disabled: !1
                        }
                    },
                    normalizeOptions: function(e) {
                        var t = this;
                        return No(e) ? e.map((function(e) {
                            return t.normalizeOption(e)
                        })) : Ho(e) ? (Rc('Setting prop "options" to an object is deprecated. Use the array format instead.', this.$options.name), Qo(e).map((function(i) {
                            return t.normalizeOption(e[i] || {}, i)
                        }))) : []
                    }
                }
            });

        function Ov(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function kv(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Ov(Object(i), !0).forEach((function(t) {
                    Lv(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Ov(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Lv(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Dv, Mv = ["aria-describedby", "aria-labelledby"],
            Av = Fh("checked"),
            Rv = Av.mixin,
            Pv = Av.props,
            Tv = Av.prop,
            Bv = Av.event,
            Iv = Ga(sa(kv(kv(kv(kv(kv(kv(kv(kv({}, Gh), Pv), hd), xv), fd), _d), tv), {}, {
                ariaInvalid: Ha(Do, !1),
                buttonVariant: Ha(Co),
                buttons: Ha(bo, !1),
                stacked: Ha(bo, !1),
                validated: Ha(bo, !1)
            })), "formRadioCheckGroups"),
            $v = Dn({
                mixins: [Vh, Rv, Xh, ud, Ev, pd, gd, iv],
                inheritAttrs: !1,
                props: Iv,
                data: function() {
                    return {
                        localChecked: this[Tv]
                    }
                },
                computed: {
                    inline: function() {
                        return !this.stacked
                    },
                    groupName: function() {
                        return this.name || this.safeId()
                    },
                    groupClasses: function() {
                        var e = this.inline,
                            t = this.size,
                            i = {
                                "was-validated": this.validated
                            };
                        return this.buttons && (i = [i, "btn-group-toggle", Lv({
                            "btn-group": e,
                            "btn-group-vertical": !e
                        }, "btn-group-".concat(t), t)]), i
                    }
                },
                watch: (vv = {}, Lv(vv, Tv, (function(e) {
                    Th(e, this.localChecked) || (this.localChecked = e)
                })), Lv(vv, "localChecked", (function(e, t) {
                    Th(e, t) || this.$emit(Bv, e)
                })), vv),
                render: function(e) {
                    var t = this,
                        i = this.isRadioGroup,
                        r = function(e, t) {
                            return Qo(e).filter((function(e) {
                                return -1 !== t.indexOf(e)
                            })).reduce((function(t, i) {
                                return Vo(Vo({}, t), {}, qo({}, i, e[i]))
                            }), {})
                        }(this.$attrs, Mv),
                        s = i ? Cv : yv,
                        n = this.formOptions.map((function(i, n) {
                            var o = "BV_option_".concat(n);
                            return e(s, {
                                props: {
                                    disabled: i.disabled || !1,
                                    id: t.safeId(o),
                                    value: i.value
                                },
                                attrs: r,
                                key: o
                            }, [e("span", {
                                domProps: Id(i.html, i.text)
                            })])
                        }));
                    return e("div", {
                        class: [this.groupClasses, "bv-no-focus-ring"],
                        attrs: kv(kv({}, ia(this.$attrs, Mv)), {}, {
                            "aria-invalid": this.computedAriaInvalid,
                            "aria-required": this.required ? "true" : null,
                            id: this.safeId(),
                            role: i ? "radiogroup" : "group",
                            tabindex: "-1"
                        })
                    }, [this.normalizeSlot(Dl), n, this.normalizeSlot()])
                }
            });

        function jv(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Fv(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? jv(Object(i), !0).forEach((function(t) {
                    Nv(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : jv(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Nv(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Wv = Ga(sa(Fv(Fv({}, Iv), {}, (Nv(Dv = {}, Tv, Ha(mo, [])), Nv(Dv, "switches", Ha(bo, !1)), Dv))), Xn),
            Hv = Dn({
                name: Xn,
                mixins: [$v],
                provide: function() {
                    var e = this;
                    return {
                        getBvCheckGroup: function() {
                            return e
                        }
                    }
                },
                props: Wv,
                computed: {
                    isRadioGroup: function() {
                        return !1
                    }
                }
            }),
            Uv = Gc({
                components: {
                    BFormCheckbox: yv,
                    BCheckbox: yv,
                    BCheck: yv,
                    BFormCheckboxGroup: Hv,
                    BCheckboxGroup: Hv,
                    BCheckGroup: Hv
                }
            }),
            zv = Fh("value"),
            Gv = zv.mixin,
            Vv = zv.props,
            qv = zv.prop,
            Kv = zv.event;

        function Xv(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Jv(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Xv(Object(i), !0).forEach((function(t) {
                    Yv(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Xv(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Yv(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Zv = Ga(sa(Jv(Jv({}, xv), {}, {
                labelField: Ha(Co, "label"),
                optionsField: Ha(Co, "options")
            })), "formOptions"),
            Qv = Dn({
                mixins: [Ev],
                props: Zv,
                methods: {
                    normalizeOption: function(e) {
                        var t = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
                        if (Ho(e)) {
                            var i = Dc(e, this.valueField),
                                r = Dc(e, this.textField),
                                s = Dc(e, this.optionsField, null);
                            return Bo(s) ? {
                                value: To(i) ? t || r : i,
                                text: String(To(r) ? t : r),
                                html: Dc(e, this.htmlField),
                                disabled: Boolean(Dc(e, this.disabledField))
                            } : {
                                label: String(Dc(e, this.labelField) || r),
                                options: this.normalizeOptions(s)
                            }
                        }
                        return {
                            value: t || e,
                            text: String(e),
                            disabled: !1
                        }
                    }
                }
            }),
            em = Ga({
                disabled: Ha(bo, !1),
                value: Ha(vo, void 0, !0)
            }, eo),
            tm = Dn({
                name: eo,
                functional: !0,
                props: em,
                render: function(e, t) {
                    var i = t.props,
                        r = t.data,
                        s = t.children,
                        n = i.value;
                    return e("option", bn(r, {
                        attrs: {
                            disabled: i.disabled
                        },
                        domProps: {
                            value: n
                        }
                    }), s)
                }
            });

        function im(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function rm(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? im(Object(i), !0).forEach((function(t) {
                    sm(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : im(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function sm(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var nm = Ga(sa(rm(rm({}, xv), {}, {
                label: Ha(Co, void 0, !0)
            })), to),
            om = Dn({
                name: to,
                mixins: [Xh, Ev],
                props: nm,
                render: function(e) {
                    var t = this.label,
                        i = this.formOptions.map((function(t, i) {
                            var r = t.value,
                                s = t.text,
                                n = t.html,
                                o = t.disabled;
                            return e(tm, {
                                attrs: {
                                    value: r,
                                    disabled: o
                                },
                                domProps: Id(n, s),
                                key: "option_".concat(i)
                            })
                        }));
                    return e("optgroup", {
                        attrs: {
                            label: t
                        }
                    }, [this.normalizeSlot(Dl), i, this.normalizeSlot()])
                }
            });

        function am(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function cm(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? am(Object(i), !0).forEach((function(t) {
                    lm(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : am(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function lm(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var hm = Ga(sa(cm(cm(cm(cm(cm(cm(cm({}, Gh), Vv), hd), tv), fd), _d), {}, {
                ariaInvalid: Ha(Do, !1),
                multiple: Ha(bo, !1),
                selectSize: Ha(yo, 0)
            })), Qn),
            um = Dn({
                name: Qn,
                mixins: [Vh, Gv, ud, pd, gd, iv, Qv, Xh],
                props: hm,
                data: function() {
                    return {
                        localValue: this[qv]
                    }
                },
                computed: {
                    computedSelectSize: function() {
                        return this.plain || 0 !== this.selectSize ? this.selectSize : null
                    },
                    inputClass: function() {
                        return [this.plain ? "form-control" : "custom-select", this.size && this.plain ? "form-control-".concat(this.size) : null, this.size && !this.plain ? "custom-select-".concat(this.size) : null, this.stateClass]
                    }
                },
                watch: {
                    value: function(e) {
                        this.localValue = e
                    },
                    localValue: function() {
                        this.$emit(Kv, this.localValue)
                    }
                },
                methods: {
                    focus: function() {
                        xh(this.$refs.input)
                    },
                    blur: function() {
                        Eh(this.$refs.input)
                    },
                    onChange: function(e) {
                        var t = this,
                            i = e.target,
                            r = Xa(i.options).filter((function(e) {
                                return e.selected
                            })).map((function(e) {
                                return "_value" in e ? e._value : e.value
                            }));
                        this.localValue = i.multiple ? r : r[0], this.$nextTick((function() {
                            t.$emit(Qc, t.localValue)
                        }))
                    }
                },
                render: function(e) {
                    var t = this.name,
                        i = this.disabled,
                        r = this.required,
                        s = this.computedSelectSize,
                        n = this.localValue,
                        o = this.formOptions.map((function(t, i) {
                            var r = t.value,
                                s = t.label,
                                n = t.options,
                                o = t.disabled,
                                a = "option_".concat(i);
                            return No(n) ? e(om, {
                                props: {
                                    label: s,
                                    options: n
                                },
                                key: a
                            }) : e(tm, {
                                props: {
                                    value: r,
                                    disabled: o
                                },
                                domProps: Id(t.html, t.text),
                                key: a
                            })
                        }));
                    return e("select", {
                        class: this.inputClass,
                        attrs: {
                            id: this.safeId(),
                            name: t,
                            form: this.form || null,
                            multiple: this.multiple || null,
                            size: s,
                            disabled: i,
                            required: r,
                            "aria-required": r ? "true" : null,
                            "aria-invalid": this.computedAriaInvalid
                        },
                        on: {
                            change: this.onChange
                        },
                        directives: [{
                            name: "model",
                            value: n
                        }],
                        ref: "input"
                    }, [this.normalizeSlot(Dl), o, this.normalizeSlot()])
                }
            }),
            dm = Gc({
                components: {
                    BFormSelect: um,
                    BFormSelectOption: tm,
                    BFormSelectOptionGroup: om,
                    BSelect: um,
                    BSelectOption: tm,
                    BSelectOptionGroup: om
                }
            });

        function fm(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var pm = {
                viewBox: "0 0 16 16",
                width: "1em",
                height: "1em",
                focusable: "false",
                role: "img",
                "aria-label": "icon"
            },
            _m = {
                width: null,
                height: null,
                focusable: null,
                role: null,
                "aria-label": null
            },
            gm = {
                animation: Ha(Co),
                content: Ha(Co),
                flipH: Ha(bo, !1),
                flipV: Ha(bo, !1),
                fontScale: Ha(Mo, 1),
                rotate: Ha(Mo, 0),
                scale: Ha(Mo, 1),
                shiftH: Ha(Mo, 0),
                shiftV: Ha(Mo, 0),
                stacked: Ha(bo, !1),
                title: Ha(Co),
                variant: Ha(Co)
            },
            vm = Dn({
                name: "BIconBase",
                functional: !0,
                props: gm,
                render: function(e, t) {
                    var i, r = t.data,
                        s = t.props,
                        n = t.children,
                        o = s.animation,
                        a = s.content,
                        c = s.flipH,
                        l = s.flipV,
                        h = s.stacked,
                        u = s.title,
                        d = s.variant,
                        f = Ih(Wh(s.fontScale, 1), 0) || 1,
                        p = Ih(Wh(s.scale, 1), 0) || 1,
                        _ = Wh(s.rotate, 0),
                        g = Wh(s.shiftH, 0),
                        v = Wh(s.shiftV, 0),
                        m = c || l || 1 !== p,
                        b = m || _,
                        w = g || v,
                        y = !Io(a),
                        S = e("g", {
                            attrs: {
                                transform: [b ? "translate(8 8)" : null, m ? "scale(".concat((c ? -1 : 1) * p, " ").concat((l ? -1 : 1) * p, ")") : null, _ ? "rotate(".concat(_, ")") : null, b ? "translate(-8 -8)" : null].filter(Sa).join(" ") || null
                            },
                            domProps: y ? {
                                innerHTML: a || ""
                            } : {}
                        }, n);
                    w && (S = e("g", {
                        attrs: {
                            transform: "translate(".concat(16 * g / 16, " ").concat(-16 * v / 16, ")")
                        }
                    }, [S])), h && (S = e("g", [S]));
                    var C = [u ? e("title", u) : null, S].filter(Sa);
                    return e("svg", bn({
                        staticClass: "b-icon bi",
                        class: (i = {}, fm(i, "text-".concat(d), d), fm(i, "b-icon-animation-".concat(o), o), i),
                        attrs: pm,
                        style: h ? {} : {
                            fontSize: 1 === f ? null : "".concat(100 * f, "%")
                        }
                    }, r, h ? {
                        attrs: _m
                    } : {}, {
                        attrs: {
                            xmlns: h ? null : "http://www.w3.org/2000/svg",
                            fill: "currentColor"
                        }
                    }), C)
                }
            });

        function mm(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function bm(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? mm(Object(i), !0).forEach((function(t) {
                    wm(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : mm(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function wm(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var ym = ia(gm, ["content"]),
            Sm = function(e, t) {
                var i = Pa(e),
                    r = "BIcon".concat(Ta(e)),
                    s = "bi-".concat(i),
                    n = i.replace(/-/g, " "),
                    o = Ia(t || "");
                return Dn({
                    name: r,
                    functional: !0,
                    props: ym,
                    render: function(e, t) {
                        var i = t.data,
                            r = t.props;
                        return e(vm, bn({
                            props: {
                                title: n
                            },
                            attrs: {
                                "aria-label": n
                            }
                        }, i, {
                            staticClass: s,
                            props: bm(bm({}, r), {}, {
                                content: o
                            })
                        }))
                    }
                })
            },
            Cm = Sm("Blank", ""),
            xm = Sm("ArrowClockwise", '<path fill-rule="evenodd" d="M8 3a5 5 0 1 0 4.546 2.914.5.5 0 0 1 .908-.417A6 6 0 1 1 8 2v1z"/><path d="M8 4.466V.534a.25.25 0 0 1 .41-.192l2.36 1.966c.12.1.12.284 0 .384L8.41 4.658A.25.25 0 0 1 8 4.466z"/>'),
            Em = Sm("Code", '<path d="M5.854 4.854a.5.5 0 1 0-.708-.708l-3.5 3.5a.5.5 0 0 0 0 .708l3.5 3.5a.5.5 0 0 0 .708-.708L2.707 8l3.147-3.146zm4.292 0a.5.5 0 0 1 .708-.708l3.5 3.5a.5.5 0 0 1 0 .708l-3.5 3.5a.5.5 0 0 1-.708-.708L13.293 8l-3.147-3.146z"/>'),
            Om = Sm("GearFill", '<path d="M9.405 1.05c-.413-1.4-2.397-1.4-2.81 0l-.1.34a1.464 1.464 0 0 1-2.105.872l-.31-.17c-1.283-.698-2.686.705-1.987 1.987l.169.311c.446.82.023 1.841-.872 2.105l-.34.1c-1.4.413-1.4 2.397 0 2.81l.34.1a1.464 1.464 0 0 1 .872 2.105l-.17.31c-.698 1.283.705 2.686 1.987 1.987l.311-.169a1.464 1.464 0 0 1 2.105.872l.1.34c.413 1.4 2.397 1.4 2.81 0l.1-.34a1.464 1.464 0 0 1 2.105-.872l.31.17c1.283.698 2.686-.705 1.987-1.987l-.169-.311a1.464 1.464 0 0 1 .872-2.105l.34-.1c1.4-.413 1.4-2.397 0-2.81l-.34-.1a1.464 1.464 0 0 1-.872-2.105l.17-.31c.698-1.283-.705-2.686-1.987-1.987l-.311.169a1.464 1.464 0 0 1-2.105-.872l-.1-.34zM8 10.93a2.929 2.929 0 1 1 0-5.86 2.929 2.929 0 0 1 0 5.858z"/>'),
            km = Sm("QuestionCircleFill", '<path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.496 6.033h.825c.138 0 .248-.113.266-.25.09-.656.54-1.134 1.342-1.134.686 0 1.314.343 1.314 1.168 0 .635-.374.927-.965 1.371-.673.489-1.206 1.06-1.168 1.987l.003.217a.25.25 0 0 0 .25.246h.811a.25.25 0 0 0 .25-.25v-.105c0-.718.273-.927 1.01-1.486.609-.463 1.244-.977 1.244-2.056 0-1.511-1.276-2.241-2.673-2.241-1.267 0-2.655.59-2.75 2.286a.237.237 0 0 0 .241.247zm2.325 6.443c.61 0 1.029-.394 1.029-.927 0-.552-.42-.94-1.029-.94-.584 0-1.009.388-1.009.94 0 .533.425.927 1.01.927z"/>'),
            Lm = Sm("TerminalFill", '<path d="M0 3a2 2 0 0 1 2-2h12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V3zm9.5 5.5h-3a.5.5 0 0 0 0 1h3a.5.5 0 0 0 0-1zm-6.354-.354a.5.5 0 1 0 .708.708l2-2a.5.5 0 0 0 0-.708l-2-2a.5.5 0 1 0-.708.708L4.793 6.5 3.146 8.146z"/>');

        function Dm(e, t) {
            var i = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable
                }))), i.push.apply(i, r)
            }
            return i
        }

        function Mm(e) {
            for (var t = 1; t < arguments.length; t++) {
                var i = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Dm(Object(i), !0).forEach((function(t) {
                    Am(e, t, i[t])
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(i)) : Dm(Object(i)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(i, t))
                }))
            }
            return e
        }

        function Am(e, t, i) {
            return t in e ? Object.defineProperty(e, t, {
                value: i,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = i, e
        }
        var Rm = function e(t, i) {
                if (!t) return Ki.component(i);
                var r = (t.$options || {}).components;
                return r && r[i] || e(t.$parent, i)
            },
            Pm = ia(gm, ["content"]),
            Tm = Ga(sa(Mm(Mm({}, Pm), {}, {
                icon: Ha(Co)
            })), ro),
            Bm = Dn({
                name: ro,
                functional: !0,
                props: Tm,
                render: function(e, t) {
                    var i = t.data,
                        r = t.props,
                        s = t.parent,
                        n = Ta(Ia(r.icon || "")).replace(Ra, "");
                    return e(n && Rm(s, "BIcon".concat(n)) || Cm, bn(i, {
                        props: Ua(Pm, r)
                    }))
                }
            }),
            Im = __webpack_require__(9938),
            $m = __webpack_require__.n(Im);
        Ki.config.productionTip = !1, Ki.component("v-select", $m()), Ki.use(Yc), Ki.use(cd), Ki.use(Td), Ki.use(Qd), Ki.use(vf), Ki.use(C_), Ki.use(Fg), Ki.use(Qg), Ki.use(Uv), Ki.use(dm), Ki.component("BIcon", Bm), Ki.component("BIconTerminalFill", Lm), Ki.component("BIconQuestionCircleFill", km), Ki.component("BIconGearFill", Om), Ki.component("BIconCode", Em), Ki.component("BIconArrowClockwise", xm), new Ki({
            render: function(e) {
                return e(dn)
            }
        }).$mount("#app")
    })()
})();